{"nodes":[{"content":"Describes the width, height, and location of a rectangle.","nodes":[{"pos":[0,57],"content":"Describes the width, height, and location of a rectangle.","nodes":[{"content":"Describes the width, height, and location of a rectangle.","pos":[0,57]}]}],"pos":[3075,3133],"yaml":true},{"content":"<a name=\"xamlAttributeUsage_Duration\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"x,y,width,height\"/>  \n```  \n  \n<a name=\"xamlValues_MinWidth\"></a>   \n## XAML Values  \n *x*  \n <xref:System.Double?displayProperty=fullName>  \n  \n The x-coordinate location of the left side of the rectangle.  \n  \n *y*  \n <xref:System.Double?displayProperty=fullName>  \n  \n The y-coordinate location of the top side of the rectangle.  \n  \n *width*  \n <xref:System.Double?displayProperty=fullName>  \n  \n A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.  \n  \n *height*  \n <xref:System.Double?displayProperty=fullName>  \n  \n A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.","nodes":[{"pos":[49,69],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[171,182],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[186,238],"content":"*x*  \n <xref:System.Double?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>","pos":[0,3],"source":"*x*"},{"content":"<ph id=\"ph1\">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>","pos":[7,52],"source":" <xref:System.Double?displayProperty=fullName>"}]},{"pos":[245,305],"content":"The x-coordinate location of the left side of the rectangle.","nodes":[{"content":"The x-coordinate location of the left side of the rectangle.","pos":[0,60]}]},{"pos":[312,364],"content":"*y*  \n <xref:System.Double?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">*</bpt>y<ept id=\"p1\">*</ept>","pos":[0,3],"source":"*y*"},{"content":"<ph id=\"ph1\">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>","pos":[7,52],"source":" <xref:System.Double?displayProperty=fullName>"}]},{"pos":[371,430],"content":"The y-coordinate location of the top side of the rectangle.","nodes":[{"content":"The y-coordinate location of the top side of the rectangle.","pos":[0,59]}]},{"pos":[437,493],"content":"*width*  \n <xref:System.Double?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">*</bpt>width<ept id=\"p1\">*</ept>","pos":[0,7],"source":"*width*"},{"content":"<ph id=\"ph1\">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>","pos":[11,56],"source":" <xref:System.Double?displayProperty=fullName>"}]},{"pos":[500,594],"content":"A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.","nodes":[{"content":"A non-negative value that represents the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the rectangle.","pos":[0,94],"source":"A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle."}]},{"pos":[601,658],"content":"*height*  \n <xref:System.Double?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">*</bpt>height<ept id=\"p1\">*</ept>","pos":[0,8],"source":"*height*"},{"content":"<ph id=\"ph1\">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>","pos":[12,57],"source":" <xref:System.Double?displayProperty=fullName>"}]},{"pos":[665,760],"content":"A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.","nodes":[{"content":"A non-negative value that represents the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the rectangle.","pos":[0,95],"source":"A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle."}]}],"pos":[3144,3940],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is of the specified size and is located at (0,0).","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure that is of the specified size and is located at (0,0).","source":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is of the specified size and is located at (0,0)."}],"pos":[6308,6448],"yaml":true},{"content":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure that specifies the width and height of the rectangle.","source":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle."}],"pos":[6972,7079],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is exactly large enough to contain the two specified points.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure that is exactly large enough to contain the two specified points.","source":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is exactly large enough to contain the two specified points."}],"pos":[8086,8237],"yaml":true},{"content":"The first point that the new rectangle must contain.","nodes":[{"pos":[0,52],"content":"The first point that the new rectangle must contain.","nodes":[{"content":"The first point that the new rectangle must contain.","pos":[0,52]}]}],"pos":[8820,8873],"yaml":true},{"content":"The second point that the new rectangle must contain.","nodes":[{"pos":[0,53],"content":"The second point that the new rectangle must contain.","nodes":[{"content":"The second point that the new rectangle must contain.","pos":[0,53]}]}],"pos":[8942,8996],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that has the specified top-left corner location and the specified width and height.","nodes":[{"pos":[0,168],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure that has the specified top-left corner location and the specified width and height.","source":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that has the specified top-left corner location and the specified width and height."}],"pos":[10019,10188],"yaml":true},{"content":"A point that specifies the location of the top-left corner of the rectangle.","nodes":[{"pos":[0,76],"content":"A point that specifies the location of the top-left corner of the rectangle.","nodes":[{"content":"A point that specifies the location of the top-left corner of the rectangle.","pos":[0,76]}]}],"pos":[10771,10848],"yaml":true},{"content":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure that specifies the width and height of the rectangle.","source":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle."}],"pos":[10914,11021],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.","source":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector."}],"pos":[12056,12262],"yaml":true},{"content":"The first point the rectangle must contain.","nodes":[{"pos":[0,43],"content":"The first point the rectangle must contain.","nodes":[{"content":"The first point the rectangle must contain.","pos":[0,43]}]}],"pos":[12845,12889],"yaml":true},{"content":"The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.","nodes":[{"pos":[0,118],"content":"The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.","nodes":[{"content":"The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.","pos":[0,118],"nodes":[{"content":"The amount to offset the specified point.","pos":[0,41]},{"content":"The resulting rectangle will be exactly large enough to contain both points.","pos":[42,118]}]}]}],"pos":[12959,13078],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that has the specified x-coordinate, y-coordinate, width, and height.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure that has the specified x-coordinate, y-coordinate, width, and height.","source":"Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that has the specified x-coordinate, y-coordinate, width, and height."}],"pos":[14181,14336],"yaml":true},{"content":"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.  \n  \n [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]","nodes":[{"pos":[0,212],"content":"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.","nodes":[{"content":"The following example shows how to create a new <ph id=\"ph1\">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id=\"ph2\">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> constructor.","pos":[0,212],"source":"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor."}]},{"pos":[219,387],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>RectExamples_snip#CreateRectExample6_csharp<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]"}],"pos":[14347,14739],"yaml":true,"extradata":"MT"},{"content":"The x-coordinate of the top-left corner of the rectangle.","nodes":[{"pos":[0,57],"content":"The x-coordinate of the top-left corner of the rectangle.","nodes":[{"content":"The x-coordinate of the top-left corner of the rectangle.","pos":[0,57]}]}],"pos":[14898,14956],"yaml":true},{"content":"The y-coordinate of the top-left corner of the rectangle.","nodes":[{"pos":[0,57],"content":"The y-coordinate of the top-left corner of the rectangle.","nodes":[{"content":"The y-coordinate of the top-left corner of the rectangle.","pos":[0,57]}]}],"pos":[15013,15071],"yaml":true},{"content":"The width of the rectangle.","nodes":[{"pos":[0,27],"content":"The width of the rectangle.","nodes":[{"content":"The width of the rectangle.","pos":[0,27]}]}],"pos":[15132,15160],"yaml":true},{"content":"The height of the rectangle.","nodes":[{"pos":[0,28],"content":"The height of the rectangle.","nodes":[{"content":"The height of the rectangle.","pos":[0,28]}]}],"pos":[15222,15251],"yaml":true},{"content":"<code>width</code> is a negative value.  \n  \n -or-  \n  \n <code>height</code> is a negative value.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;width&lt;/code&gt;</ph> is a negative value.","source":"<code>width</code> is a negative value."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,97],"content":"<ph id=\"ph1\">&lt;code&gt;height&lt;/code&gt;</ph> is a negative value.","source":"<code>height</code> is a negative value."}],"pos":[15398,15502],"yaml":true},{"content":"Gets the y-axis value of the bottom of the rectangle.","nodes":[{"pos":[0,53],"content":"Gets the y-axis value of the bottom of the rectangle.","nodes":[{"content":"Gets the y-axis value of the bottom of the rectangle.","pos":[0,53]}]}],"pos":[16286,16340],"yaml":true},{"content":"The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.","nodes":[{"pos":[0,159],"content":"The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.","nodes":[{"content":"The y-axis value of the bottom of the rectangle is equal to the sum of the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties.","pos":[0,159],"source":"The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties."}]}],"pos":[16351,16511],"yaml":true,"extradata":"MT"},{"content":"The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is <xref href=\"System.Double.NegativeInfinity\"></xref> .","nodes":[{"pos":[0,142],"content":"The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is <xref href=\"System.Double.NegativeInfinity\"></xref> .","nodes":[{"content":"The y-axis value of the bottom of the rectangle.","pos":[0,48]},{"content":"If the rectangle is empty, the value is <ph id=\"ph1\">&lt;xref href=\"System.Double.NegativeInfinity\"&gt;&lt;/xref&gt;</ph> .","pos":[49,142],"source":" If the rectangle is empty, the value is <xref href=\"System.Double.NegativeInfinity\"></xref> ."}]}],"pos":[17094,17237],"yaml":true},{"content":"Gets the position of the bottom-left corner of the rectangle","nodes":[{"pos":[0,60],"content":"Gets the position of the bottom-left corner of the rectangle","nodes":[{"content":"Gets the position of the bottom-left corner of the rectangle","pos":[0,60]}]}],"pos":[18102,18163],"yaml":true},{"content":"The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).","nodes":[{"pos":[0,174],"content":"The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).","nodes":[{"content":"The position of the bottom-left corner of the rectangle is equal to (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id=\"ph3\"> + </ph><ph id=\"ph4\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).","pos":[0,174],"source":"The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>)."}]}],"pos":[18174,18349],"yaml":true,"extradata":"MT"},{"content":"The position of the bottom-left corner of the rectangle.","nodes":[{"pos":[0,56],"content":"The position of the bottom-left corner of the rectangle.","nodes":[{"content":"The position of the bottom-left corner of the rectangle.","pos":[0,56]}]}],"pos":[18957,19014],"yaml":true},{"content":"Gets the position of the bottom-right corner of the rectangle.","nodes":[{"pos":[0,62],"content":"Gets the position of the bottom-right corner of the rectangle.","nodes":[{"content":"Gets the position of the bottom-right corner of the rectangle.","pos":[0,62]}]}],"pos":[19889,19952],"yaml":true},{"content":"The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).","nodes":[{"pos":[0,213],"content":"The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).","nodes":[{"content":"The position of the bottom-right corner of the rectangle is equal to (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id=\"ph5\"> + </ph><ph id=\"ph6\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).","pos":[0,213],"source":"The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>)."}]}],"pos":[19963,20177],"yaml":true,"extradata":"MT"},{"content":"The position of the bottom-right corner of the rectangle.","nodes":[{"pos":[0,57],"content":"The position of the bottom-right corner of the rectangle.","nodes":[{"content":"The position of the bottom-right corner of the rectangle.","pos":[0,57]}]}],"pos":[20786,20844],"yaml":true},{"content":"Indicates whether the rectangle contains the specified point.","nodes":[{"pos":[0,61],"content":"Indicates whether the rectangle contains the specified point.","nodes":[{"content":"Indicates whether the rectangle contains the specified point.","pos":[0,61]}]}],"pos":[21809,21871],"yaml":true},{"content":"The point to check.","nodes":[{"pos":[0,19],"content":"The point to check.","nodes":[{"content":"The point to check.","pos":[0,19]}]}],"pos":[22427,22447],"yaml":true},{"content":"`true` if the rectangle contains the specified point; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the rectangle contains the specified point; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the rectangle contains the specified point; otherwise, `false`."}],"pos":[22505,22581],"yaml":true},{"content":"Indicates whether the rectangle contains the specified rectangle.","nodes":[{"pos":[0,65],"content":"Indicates whether the rectangle contains the specified rectangle.","nodes":[{"content":"Indicates whether the rectangle contains the specified rectangle.","pos":[0,65]}]}],"pos":[23537,23603],"yaml":true},{"content":"The rectangle to check.","nodes":[{"pos":[0,23],"content":"The rectangle to check.","nodes":[{"content":"The rectangle to check.","pos":[0,23]}]}],"pos":[24137,24161],"yaml":true},{"content":"`true` if <code>rect</code> is entirely contained by the rectangle; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">rect</ph><ept id=\"p1\">&lt;/code&gt;</ept> is entirely contained by the rectangle; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>rect</code> is entirely contained by the rectangle; otherwise, `false`."}],"pos":[24219,24309],"yaml":true},{"content":"Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.","nodes":[{"pos":[0,85],"content":"Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.","nodes":[{"content":"Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.","pos":[0,85]}]}],"pos":[25319,25405],"yaml":true},{"content":"The x-coordinate of the point to check.","nodes":[{"pos":[0,39],"content":"The x-coordinate of the point to check.","nodes":[{"content":"The x-coordinate of the point to check.","pos":[0,39]}]}],"pos":[25972,26012],"yaml":true},{"content":"The y-coordinate of the point to check.","nodes":[{"pos":[0,39],"content":"The y-coordinate of the point to check.","nodes":[{"content":"The y-coordinate of the point to check.","pos":[0,39]}]}],"pos":[26069,26109],"yaml":true},{"content":"`true` if (<code>x</code>, <code>y</code>) is contained by the rectangle; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if (<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept>) is contained by the rectangle; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if (<code>x</code>, <code>y</code>) is contained by the rectangle; otherwise, `false`."}],"pos":[26167,26263],"yaml":true},{"content":"Gets a special value that represents a rectangle with no position or area.","nodes":[{"pos":[0,74],"content":"Gets a special value that represents a rectangle with no position or area.","nodes":[{"content":"Gets a special value that represents a rectangle with no position or area.","pos":[0,74]}]}],"pos":[27122,27197],"yaml":true},{"content":"Avoid mathematical computations involving empty rectangles. Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations. Comparisons involving these values will not affect application performance.","nodes":[{"pos":[0,301],"content":"Avoid mathematical computations involving empty rectangles. Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations. Comparisons involving these values will not affect application performance.","nodes":[{"content":"Avoid mathematical computations involving empty rectangles. Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations. Comparisons involving these values will not affect application performance.","pos":[0,301],"nodes":[{"content":"Avoid mathematical computations involving empty rectangles.","pos":[0,59]},{"content":"Because both <ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> are infinite values, processor operations are severely impaired by these operations.","pos":[60,225],"source":" Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations."},{"content":"Comparisons involving these values will not affect application performance.","pos":[226,301]}]}]}],"pos":[27208,27510],"yaml":true,"extradata":"MT"},{"content":"The empty rectangle, which has <xref href=\"System.Windows.Rect.X\"></xref> and <xref href=\"System.Windows.Rect.Y\"></xref> property values of <xref href=\"System.Double.PositiveInfinity\"></xref>, and has <xref href=\"System.Windows.Rect.Width\"></xref> and <xref href=\"System.Windows.Rect.Height\"></xref> property values of <xref href=\"System.Double.NegativeInfinity\"></xref>.","nodes":[{"pos":[0,371],"content":"The empty rectangle, which has <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.X\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Y\"&gt;&lt;/xref&gt;</ph> property values of <ph id=\"ph3\">&lt;xref href=\"System.Double.PositiveInfinity\"&gt;&lt;/xref&gt;</ph>, and has <ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Width\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph5\">&lt;xref href=\"System.Windows.Rect.Height\"&gt;&lt;/xref&gt;</ph> property values of <ph id=\"ph6\">&lt;xref href=\"System.Double.NegativeInfinity\"&gt;&lt;/xref&gt;</ph>.","source":"The empty rectangle, which has <xref href=\"System.Windows.Rect.X\"></xref> and <xref href=\"System.Windows.Rect.Y\"></xref> property values of <xref href=\"System.Double.PositiveInfinity\"></xref>, and has <xref href=\"System.Windows.Rect.Width\"></xref> and <xref href=\"System.Windows.Rect.Height\"></xref> property values of <xref href=\"System.Double.NegativeInfinity\"></xref>."}],"pos":[27645,28017],"yaml":true},{"content":"Indicates whether the specified rectangles are equal.","nodes":[{"pos":[0,53],"content":"Indicates whether the specified rectangles are equal.","nodes":[{"content":"Indicates whether the specified rectangles are equal.","pos":[0,53]}]}],"pos":[29014,29068],"yaml":true},{"content":"This operation tests for object equality.  \n  \n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \n  \n> [!NOTE]\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","nodes":[{"pos":[0,41],"content":"This operation tests for object equality.","nodes":[{"content":"This operation tests for object equality.","pos":[0,41]}]},{"pos":[48,156],"content":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.","nodes":[{"content":"In this comparison, two instances of <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.","pos":[0,108],"source":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal."}]},{"pos":[164,402],"content":"[!NOTE]\n A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","leadings":["","> "],"nodes":[{"content":" A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[8,236],"nodes":[{"content":"A rectangle's position and dimensions are described by <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values.","pos":[1,84],"source":" A rectangle's position and dimensions are described by <xref:System.Double> values."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[85,228],"source":" Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail."}]}]}],"pos":[29079,29489],"yaml":true,"extradata":"MT"},{"content":"The first rectangle to compare.","nodes":[{"pos":[0,31],"content":"The first rectangle to compare.","nodes":[{"content":"The first rectangle to compare.","pos":[0,31]}]}],"pos":[30045,30077],"yaml":true},{"content":"The second rectangle to compare.","nodes":[{"pos":[0,32],"content":"The second rectangle to compare.","nodes":[{"content":"The second rectangle to compare.","pos":[0,32]}]}],"pos":[30144,30177],"yaml":true},{"content":"`true` if the rectangles have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">`true`</ph> if the rectangles have the same <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Location\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Size\"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the rectangles have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`."}],"pos":[30235,30404],"yaml":true},{"content":"Indicates whether the specified object is equal to the current rectangle.","nodes":[{"pos":[0,73],"content":"Indicates whether the specified object is equal to the current rectangle.","nodes":[{"content":"Indicates whether the specified object is equal to the current rectangle.","pos":[0,73]}]}],"pos":[31334,31408],"yaml":true},{"content":"This operation tests for object equality.  \n  \n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \n  \n> [!NOTE]\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","nodes":[{"pos":[0,41],"content":"This operation tests for object equality.","nodes":[{"content":"This operation tests for object equality.","pos":[0,41]}]},{"pos":[48,156],"content":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.","nodes":[{"content":"In this comparison, two instances of <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.","pos":[0,108],"source":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal."}]},{"pos":[164,402],"content":"[!NOTE]\n A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","leadings":["","> "],"nodes":[{"content":" A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[8,236],"nodes":[{"content":"A rectangle's position and dimensions are described by <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values.","pos":[1,84],"source":" A rectangle's position and dimensions are described by <xref:System.Double> values."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[85,228],"source":" Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail."}]}]}],"pos":[31419,31829],"yaml":true,"extradata":"MT"},{"content":"The object to compare to the current rectangle.","nodes":[{"pos":[0,47],"content":"The object to compare to the current rectangle.","nodes":[{"content":"The object to compare to the current rectangle.","pos":[0,47]}]}],"pos":[32314,32362],"yaml":true},{"content":"`true` if <code>o</code> is a <xref href=\"System.Windows.Rect\"></xref> and has the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values as the current rectangle; otherwise, `false`.","nodes":[{"pos":[0,240],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> and has the same <ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Location\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph5\">&lt;xref href=\"System.Windows.Rect.Size\"&gt;&lt;/xref&gt;</ph> values as the current rectangle; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if <code>o</code> is a <xref href=\"System.Windows.Rect\"></xref> and has the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values as the current rectangle; otherwise, `false`."}],"pos":[32420,32663],"yaml":true},{"content":"Indicates whether the specified rectangle is equal to the current rectangle.","nodes":[{"pos":[0,76],"content":"Indicates whether the specified rectangle is equal to the current rectangle.","nodes":[{"content":"Indicates whether the specified rectangle is equal to the current rectangle.","pos":[0,76]}]}],"pos":[33605,33682],"yaml":true},{"content":"This operation tests for object equality.  \n  \n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \n  \n> [!NOTE]\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","nodes":[{"pos":[0,41],"content":"This operation tests for object equality.","nodes":[{"content":"This operation tests for object equality.","pos":[0,41]}]},{"pos":[48,156],"content":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.","nodes":[{"content":"In this comparison, two instances of <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.","pos":[0,108],"source":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal."}]},{"pos":[164,402],"content":"[!NOTE]\n A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","leadings":["","> "],"nodes":[{"content":" A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[8,236],"nodes":[{"content":"A rectangle's position and dimensions are described by <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values.","pos":[1,84],"source":" A rectangle's position and dimensions are described by <xref:System.Double> values."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[85,228],"source":" Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail."}]}]}],"pos":[33693,34103],"yaml":true,"extradata":"MT"},{"content":"The rectangle to compare to the current rectangle.","nodes":[{"pos":[0,50],"content":"The rectangle to compare to the current rectangle.","nodes":[{"content":"The rectangle to compare to the current rectangle.","pos":[0,50]}]}],"pos":[34615,34666],"yaml":true},{"content":"`true` if the specified rectangle has the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values as the current rectangle; otherwise, `false`.","nodes":[{"pos":[0,199],"content":"<ph id=\"ph1\">`true`</ph> if the specified rectangle has the same <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Location\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Size\"&gt;&lt;/xref&gt;</ph> values as the current rectangle; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified rectangle has the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values as the current rectangle; otherwise, `false`."}],"pos":[34724,34926],"yaml":true},{"content":"Creates a hash code for the rectangle.","nodes":[{"pos":[0,38],"content":"Creates a hash code for the rectangle.","nodes":[{"content":"Creates a hash code for the rectangle.","pos":[0,38]}]}],"pos":[35823,35862],"yaml":true},{"content":"This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.","nodes":[{"pos":[0,205],"content":"This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.","nodes":[{"content":"This method creates a hash code by using the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> property values.","pos":[0,205],"source":"This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values."}]}],"pos":[35873,36079],"yaml":true,"extradata":"MT"},{"content":"A hash code for the current <xref href=\"System.Windows.Rect\"></xref> structure.","nodes":[{"pos":[0,79],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure.","source":"A hash code for the current <xref href=\"System.Windows.Rect\"></xref> structure."}],"pos":[36553,36633],"yaml":true},{"content":"Gets or sets the height of the rectangle.","nodes":[{"pos":[0,41],"content":"Gets or sets the height of the rectangle.","nodes":[{"content":"Gets or sets the height of the rectangle.","pos":[0,41]}]}],"pos":[37501,37543],"yaml":true},{"content":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.","nodes":[{"pos":[0,262],"content":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.","nodes":[{"content":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.","pos":[0,262],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.","pos":[0,134],"source":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> cannot not be changed.","pos":[135,262],"source":" The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed."}]}]}],"pos":[37554,37817],"yaml":true,"extradata":"MT"},{"content":"A positive number that represents the height of the rectangle. The default is 0.","nodes":[{"pos":[0,80],"content":"A positive number that represents the height of the rectangle. The default is 0.","nodes":[{"content":"A positive number that represents the height of the rectangle. The default is 0.","pos":[0,80],"nodes":[{"content":"A positive number that represents the height of the rectangle.","pos":[0,62]},{"content":"The default is 0.","pos":[63,80]}]}]}],"pos":[39107,39188],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Height\"></xref> is set to a negative value.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Height\"&gt;&lt;/xref&gt;</ph> is set to a negative value.","source":"<xref href=\"System.Windows.Rect.Height\"></xref> is set to a negative value."}],"pos":[39336,39412],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Height\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Height\"&gt;&lt;/xref&gt;</ph> is set on an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<xref href=\"System.Windows.Rect.Height\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[39522,39641],"yaml":true},{"content":"Expands the rectangle by using the specified <xref href=\"System.Windows.Size\"></xref>, in all directions.","nodes":[{"pos":[0,105],"content":"Expands the rectangle by using the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph>, in all directions.","source":"Expands the rectangle by using the specified <xref href=\"System.Windows.Size\"></xref>, in all directions."}],"pos":[40532,40638],"yaml":true},{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.","nodes":[{"pos":[0,448],"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.","nodes":[{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.","pos":[0,448],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id=\"ph2\">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id=\"ph3\">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.","pos":[0,252],"source":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated."},{"content":"Likewise, the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id=\"ph2\">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id=\"ph3\">&lt;xref:System.Windows.Size&gt;</ph> structure.","pos":[253,448],"source":" Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure."}]}]}],"pos":[40649,41098],"yaml":true,"extradata":"MT"},{"content":"Specifies the amount to expand the rectangle. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties.","nodes":[{"pos":[0,588],"content":"Specifies the amount to expand the rectangle. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties.","nodes":[{"content":"Specifies the amount to expand the rectangle.","pos":[0,45]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Size.Width\"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Left\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Right\"&gt;&lt;/xref&gt;</ph> properties.","pos":[46,316],"source":" The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Size.Height\"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Top\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Bottom\"&gt;&lt;/xref&gt;</ph> properties.","pos":[317,588],"source":" The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties."}]}],"pos":[41586,42175],"yaml":true},{"content":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,86],"content":"This method is called on the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[42340,42427],"yaml":true},{"content":"Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.","nodes":[{"pos":[0,100],"content":"Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.","nodes":[{"content":"Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.","pos":[0,100]}]}],"pos":[43372,43473],"yaml":true},{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.  \n  \n If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.","nodes":[{"pos":[0,337],"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.","nodes":[{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.","pos":[0,337],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.","pos":[0,202],"source":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle."},{"content":"Likewise, the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.","pos":[203,337],"source":" Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height."}]}]},{"pos":[344,608],"content":"If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.","nodes":[{"content":"If the specified width or height shrink the rectangle by more than its current <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—the rectangle becomes the <ph id=\"ph3\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.","pos":[0,264],"source":"If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle."}]}],"pos":[43484,44097],"yaml":true,"extradata":"MT"},{"content":"The amount by which to expand or shrink the left and right sides of the rectangle.","nodes":[{"pos":[0,82],"content":"The amount by which to expand or shrink the left and right sides of the rectangle.","nodes":[{"content":"The amount by which to expand or shrink the left and right sides of the rectangle.","pos":[0,82]}]}],"pos":[44591,44674],"yaml":true},{"content":"The amount by which to expand or shrink the top and bottom sides of the rectangle.","nodes":[{"pos":[0,82],"content":"The amount by which to expand or shrink the top and bottom sides of the rectangle.","nodes":[{"content":"The amount by which to expand or shrink the top and bottom sides of the rectangle.","pos":[0,82]}]}],"pos":[44736,44819],"yaml":true},{"content":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,86],"content":"This method is called on the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[44984,45071],"yaml":true},{"content":"Returns the rectangle that results from expanding the specified rectangle by the specified <xref href=\"System.Windows.Size\"></xref>, in all directions.","nodes":[{"pos":[0,151],"content":"Returns the rectangle that results from expanding the specified rectangle by the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph>, in all directions.","source":"Returns the rectangle that results from expanding the specified rectangle by the specified <xref href=\"System.Windows.Size\"></xref>, in all directions."}],"pos":[46040,46192],"yaml":true},{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.","nodes":[{"pos":[0,448],"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.","nodes":[{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.","pos":[0,448],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id=\"ph2\">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id=\"ph3\">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.","pos":[0,252],"source":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated."},{"content":"Likewise, the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id=\"ph2\">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id=\"ph3\">&lt;xref:System.Windows.Size&gt;</ph> structure.","pos":[253,448],"source":" Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure."}]}]}],"pos":[46203,46652],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Rect\"></xref> structure to modify.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure to modify.","source":"The <xref href=\"System.Windows.Rect\"></xref> structure to modify."}],"pos":[47208,47274],"yaml":true},{"content":"Specifies the amount to expand the rectangle. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties.","nodes":[{"pos":[0,588],"content":"Specifies the amount to expand the rectangle. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties.","nodes":[{"content":"Specifies the amount to expand the rectangle.","pos":[0,45]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Size.Width\"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Left\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Right\"&gt;&lt;/xref&gt;</ph> properties.","pos":[46,316],"source":" The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Size.Height\"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Top\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Bottom\"&gt;&lt;/xref&gt;</ph> properties.","pos":[317,588],"source":" The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties."}]}],"pos":[47340,47929],"yaml":true},{"content":"The resulting rectangle.","nodes":[{"pos":[0,24],"content":"The resulting rectangle.","nodes":[{"content":"The resulting rectangle.","pos":[0,24]}]}],"pos":[47992,48017],"yaml":true},{"content":"<code>rect</code> is an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;rect&lt;/code&gt;</ph> is an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<code>rect</code> is an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[48182,48264],"yaml":true},{"content":"Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.","nodes":[{"pos":[0,146],"content":"Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.","nodes":[{"content":"Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.","pos":[0,146]}]}],"pos":[49265,49412],"yaml":true},{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.  \n  \n If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>.","nodes":[{"pos":[0,337],"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.","nodes":[{"content":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.","pos":[0,337],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.","pos":[0,202],"source":"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle."},{"content":"Likewise, the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.","pos":[203,337],"source":" Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height."}]}]},{"pos":[344,627],"content":"If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>.","nodes":[{"content":"If the specified width or height modifiers shrink the rectangle by more than its current <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—this method returns <ph id=\"ph3\">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>.","pos":[0,283],"source":"If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>."}]}],"pos":[49423,50055],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Rect\"></xref> structure to modify.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> structure to modify.","source":"The <xref href=\"System.Windows.Rect\"></xref> structure to modify."}],"pos":[50624,50690],"yaml":true},{"content":"The amount by which to expand or shrink the left and right sides of the rectangle.","nodes":[{"pos":[0,82],"content":"The amount by which to expand or shrink the left and right sides of the rectangle.","nodes":[{"content":"The amount by which to expand or shrink the left and right sides of the rectangle.","pos":[0,82]}]}],"pos":[50751,50834],"yaml":true},{"content":"The amount by which to expand or shrink the top and bottom sides of the rectangle.","nodes":[{"pos":[0,82],"content":"The amount by which to expand or shrink the top and bottom sides of the rectangle.","nodes":[{"content":"The amount by which to expand or shrink the top and bottom sides of the rectangle.","pos":[0,82]}]}],"pos":[50896,50979],"yaml":true},{"content":"The resulting rectangle.","nodes":[{"pos":[0,24],"content":"The resulting rectangle.","nodes":[{"content":"The resulting rectangle.","pos":[0,24]}]}],"pos":[51042,51067],"yaml":true},{"content":"<code>rect</code> is an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;rect&lt;/code&gt;</ph> is an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<code>rect</code> is an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[51232,51314],"yaml":true},{"content":"Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.","nodes":[{"pos":[0,124],"content":"Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.","nodes":[{"content":"Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.","pos":[0,124]}]}],"pos":[52217,52342],"yaml":true},{"content":"If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>.","nodes":[{"pos":[0,118],"content":"If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>.","nodes":[{"content":"If no intersection exists, the current rectangle becomes <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>.","pos":[0,118],"source":"If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>."}]}],"pos":[52353,52472],"yaml":true,"extradata":"MT"},{"content":"The rectangle to intersect with the current rectangle.","nodes":[{"pos":[0,54],"content":"The rectangle to intersect with the current rectangle.","nodes":[{"content":"The rectangle to intersect with the current rectangle.","pos":[0,54]}]}],"pos":[53011,53066],"yaml":true},{"content":"Returns the intersection of the specified rectangles.","nodes":[{"pos":[0,53],"content":"Returns the intersection of the specified rectangles.","nodes":[{"content":"Returns the intersection of the specified rectangles.","pos":[0,53]}]}],"pos":[54107,54161],"yaml":true},{"content":"The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.  \n  \n [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]","nodes":[{"pos":[0,177],"content":"The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.","nodes":[{"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles.","pos":[0,177],"source":"The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles."}]},{"pos":[184,350],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>RectExamples_snip#IntersectExample2_csharp<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]"}],"pos":[54172,54527],"yaml":true,"extradata":"MT"},{"content":"The first rectangle to compare.","nodes":[{"pos":[0,31],"content":"The first rectangle to compare.","nodes":[{"content":"The first rectangle to compare.","pos":[0,31]}]}],"pos":[54733,54765],"yaml":true},{"content":"The second rectangle to compare.","nodes":[{"pos":[0,32],"content":"The second rectangle to compare.","nodes":[{"content":"The second rectangle to compare.","pos":[0,32]}]}],"pos":[54832,54865],"yaml":true},{"content":"The intersection of the two rectangles, or <xref href=\"System.Windows.Rect.Empty\"></xref> if no intersection exists.","nodes":[{"pos":[0,116],"content":"The intersection of the two rectangles, or <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> if no intersection exists.","source":"The intersection of the two rectangles, or <xref href=\"System.Windows.Rect.Empty\"></xref> if no intersection exists."}],"pos":[54928,55045],"yaml":true},{"content":"Indicates whether the specified rectangle intersects with the current rectangle.","nodes":[{"pos":[0,80],"content":"Indicates whether the specified rectangle intersects with the current rectangle.","nodes":[{"content":"Indicates whether the specified rectangle intersects with the current rectangle.","pos":[0,80]}]}],"pos":[56038,56119],"yaml":true},{"content":"The rectangle to check.","nodes":[{"pos":[0,23],"content":"The rectangle to check.","nodes":[{"content":"The rectangle to check.","pos":[0,23]}]}],"pos":[56630,56654],"yaml":true},{"content":"`true` if the specified rectangle intersects with the current rectangle; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the specified rectangle intersects with the current rectangle; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified rectangle intersects with the current rectangle; otherwise, `false`."}],"pos":[56712,56807],"yaml":true},{"content":"Gets a value that indicates whether the rectangle is the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,114],"content":"Gets a value that indicates whether the rectangle is the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"Gets a value that indicates whether the rectangle is the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[57684,57799],"yaml":true},{"content":"Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle. For more information, see the <xref:System.Windows.Rect.Empty%2A> property.","nodes":[{"pos":[0,220],"content":"Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle. For more information, see the <xref:System.Windows.Rect.Empty%2A> property.","nodes":[{"content":"Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle. For more information, see the <xref:System.Windows.Rect.Empty%2A> property.","pos":[0,220],"nodes":[{"content":"Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.","pos":[0,144],"source":"Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> property.","pos":[145,220],"source":" For more information, see the <xref:System.Windows.Rect.Empty%2A> property."}]}]}],"pos":[57810,58031],"yaml":true,"extradata":"MT"},{"content":"`true` if the rectangle is the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the rectangle is the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the rectangle is the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle; otherwise, `false`."}],"pos":[58141,58252],"yaml":true},{"content":"Gets the x-axis value of the left side of the rectangle.","nodes":[{"pos":[0,56],"content":"Gets the x-axis value of the left side of the rectangle.","nodes":[{"content":"Gets the x-axis value of the left side of the rectangle.","pos":[0,56]}]}],"pos":[59104,59161],"yaml":true},{"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.","nodes":[{"pos":[0,92],"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.","nodes":[{"content":"Getting this property is equivalent to getting the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> property.","pos":[0,92],"source":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property."}]}],"pos":[59172,59265],"yaml":true,"extradata":"MT"},{"content":"The x-axis value of the left side of the rectangle.","nodes":[{"pos":[0,51],"content":"The x-axis value of the left side of the rectangle.","nodes":[{"content":"The x-axis value of the left side of the rectangle.","pos":[0,51]}]}],"pos":[59846,59898],"yaml":true},{"content":"Gets or sets the position of the top-left corner of the rectangle.","nodes":[{"pos":[0,66],"content":"Gets or sets the position of the top-left corner of the rectangle.","nodes":[{"content":"Gets or sets the position of the top-left corner of the rectangle.","pos":[0,66]}]}],"pos":[60771,60838],"yaml":true},{"content":"The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).","nodes":[{"pos":[0,132],"content":"The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).","nodes":[{"content":"The position of the top-left corner of the rectangle is equal to (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).","pos":[0,132],"source":"The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>)."}]}],"pos":[60849,60982],"yaml":true,"extradata":"MT"},{"content":"The position of the top-left corner of the rectangle. The default is (0, 0).","nodes":[{"pos":[0,76],"content":"The position of the top-left corner of the rectangle. The default is (0, 0).","nodes":[{"content":"The position of the top-left corner of the rectangle. The default is (0, 0).","pos":[0,76],"nodes":[{"content":"The position of the top-left corner of the rectangle.","pos":[0,53]},{"content":"The default is (0, 0).","pos":[54,76]}]}]}],"pos":[62295,62372],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Location\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Location\"&gt;&lt;/xref&gt;</ph> is set on an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<xref href=\"System.Windows.Rect.Location\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[62538,62659],"yaml":true},{"content":"Moves the rectangle by the specified vector.","nodes":[{"pos":[0,44],"content":"Moves the rectangle by the specified vector.","nodes":[{"content":"Moves the rectangle by the specified vector.","pos":[0,44]}]}],"pos":[63534,63579],"yaml":true},{"content":"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.  \n  \n Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.","nodes":[{"pos":[0,120],"content":"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.","nodes":[{"content":"Calling this method on an empty rectangle (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.","pos":[0,120],"source":"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed."}]},{"pos":[127,1051],"content":"Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.","nodes":[{"content":"Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.","pos":[0,924],"nodes":[{"content":"Note that calling the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id=\"ph2\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.","pos":[0,201],"source":"Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id=\"ph2\">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.","pos":[202,399],"source":" Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object."},{"content":"If you attempt to change <ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.","pos":[400,552],"source":" If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs."},{"content":"Similarly, calling <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.","pos":[553,674],"source":" Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object."},{"content":"If you want to change the value of a <ph id=\"ph1\">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id=\"ph2\">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id=\"ph3\">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.","pos":[676,924],"source":"  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer."}]}]}],"pos":[63590,64646],"yaml":true,"extradata":"MT"},{"content":"A vector that specifies the horizontal and vertical amounts to move the rectangle.","nodes":[{"pos":[0,82],"content":"A vector that specifies the horizontal and vertical amounts to move the rectangle.","nodes":[{"content":"A vector that specifies the horizontal and vertical amounts to move the rectangle.","pos":[0,82]}]}],"pos":[65154,65237],"yaml":true},{"content":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,86],"content":"This method is called on the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[65401,65488],"yaml":true},{"content":"Moves the rectangle by the specified horizontal and vertical amounts.","nodes":[{"pos":[0,69],"content":"Moves the rectangle by the specified horizontal and vertical amounts.","nodes":[{"content":"Moves the rectangle by the specified horizontal and vertical amounts.","pos":[0,69]}]}],"pos":[66427,66497],"yaml":true},{"content":"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.  \n  \n Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.","nodes":[{"pos":[0,120],"content":"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.","nodes":[{"content":"Calling this method on an empty rectangle (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.","pos":[0,120],"source":"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed."}]},{"pos":[127,1051],"content":"Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.","nodes":[{"content":"Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.","pos":[0,924],"nodes":[{"content":"Note that calling the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id=\"ph2\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.","pos":[0,201],"source":"Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id=\"ph2\">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.","pos":[202,399],"source":" Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object."},{"content":"If you attempt to change <ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.","pos":[400,552],"source":" If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs."},{"content":"Similarly, calling <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.","pos":[553,674],"source":" Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object."},{"content":"If you want to change the value of a <ph id=\"ph1\">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id=\"ph2\">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id=\"ph3\">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.","pos":[676,924],"source":"  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer."}]}]}],"pos":[66508,67564],"yaml":true,"extradata":"MT"},{"content":"The amount to move the rectangle horizontally.","nodes":[{"pos":[0,46],"content":"The amount to move the rectangle horizontally.","nodes":[{"content":"The amount to move the rectangle horizontally.","pos":[0,46]}]}],"pos":[68063,68110],"yaml":true},{"content":"The amount to move the rectangle vertically.","nodes":[{"pos":[0,44],"content":"The amount to move the rectangle vertically.","nodes":[{"content":"The amount to move the rectangle vertically.","pos":[0,44]}]}],"pos":[68173,68218],"yaml":true},{"content":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,86],"content":"This method is called on the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[68382,68469],"yaml":true},{"content":"Returns a rectangle that is offset from the specified rectangle by using the specified vector.","nodes":[{"pos":[0,94],"content":"Returns a rectangle that is offset from the specified rectangle by using the specified vector.","nodes":[{"content":"Returns a rectangle that is offset from the specified rectangle by using the specified vector.","pos":[0,94]}]}],"pos":[69422,69517],"yaml":true},{"content":"Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.","nodes":[{"pos":[0,122],"content":"Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.","nodes":[{"content":"Calling this method with an empty rectangle (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.","pos":[0,122],"source":"Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed."}]}],"pos":[69528,69651],"yaml":true,"extradata":"MT"},{"content":"The original rectangle.","nodes":[{"pos":[0,23],"content":"The original rectangle.","nodes":[{"content":"The original rectangle.","pos":[0,23]}]}],"pos":[70219,70243],"yaml":true},{"content":"A vector that specifies the horizontal and vertical offsets for the new rectangle.","nodes":[{"pos":[0,82],"content":"A vector that specifies the horizontal and vertical offsets for the new rectangle.","nodes":[{"content":"A vector that specifies the horizontal and vertical offsets for the new rectangle.","pos":[0,82]}]}],"pos":[70319,70402],"yaml":true},{"content":"The resulting rectangle.","nodes":[{"pos":[0,24],"content":"The resulting rectangle.","nodes":[{"content":"The resulting rectangle.","pos":[0,24]}]}],"pos":[70465,70490],"yaml":true},{"content":"<code>rect</code> is <xref href=\"System.Windows.Rect.Empty\"></xref>.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;rect&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph>.","source":"<code>rect</code> is <xref href=\"System.Windows.Rect.Empty\"></xref>."}],"pos":[70654,70723],"yaml":true},{"content":"Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.","nodes":[{"pos":[0,119],"content":"Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.","nodes":[{"content":"Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.","pos":[0,119]}]}],"pos":[71740,71860],"yaml":true},{"content":"Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.","nodes":[{"pos":[0,122],"content":"Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.","nodes":[{"content":"Calling this method with an empty rectangle (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.","pos":[0,122],"source":"Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed."}]}],"pos":[71871,71994],"yaml":true,"extradata":"MT"},{"content":"The rectangle to move.","nodes":[{"pos":[0,22],"content":"The rectangle to move.","nodes":[{"content":"The rectangle to move.","pos":[0,22]}]}],"pos":[72566,72589],"yaml":true},{"content":"The horizontal offset for the new rectangle.","nodes":[{"pos":[0,44],"content":"The horizontal offset for the new rectangle.","nodes":[{"content":"The horizontal offset for the new rectangle.","pos":[0,44]}]}],"pos":[72652,72697],"yaml":true},{"content":"The vertical offset for the new rectangle.","nodes":[{"pos":[0,42],"content":"The vertical offset for the new rectangle.","nodes":[{"content":"The vertical offset for the new rectangle.","pos":[0,42]}]}],"pos":[72760,72803],"yaml":true},{"content":"The resulting rectangle.","nodes":[{"pos":[0,24],"content":"The resulting rectangle.","nodes":[{"content":"The resulting rectangle.","pos":[0,24]}]}],"pos":[72866,72891],"yaml":true},{"content":"<code>rect</code> is <xref href=\"System.Windows.Rect.Empty\"></xref>.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;rect&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph>.","source":"<code>rect</code> is <xref href=\"System.Windows.Rect.Empty\"></xref>."}],"pos":[73055,73124],"yaml":true},{"content":"Compares two rectangles for exact equality.","nodes":[{"pos":[0,43],"content":"Compares two rectangles for exact equality.","nodes":[{"content":"Compares two rectangles for exact equality.","pos":[0,43]}]}],"pos":[74119,74163],"yaml":true},{"content":"This operation tests for object equality.  \n  \n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \n  \n> [!NOTE]\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.  \n  \n The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>","nodes":[{"pos":[0,41],"content":"This operation tests for object equality.","nodes":[{"content":"This operation tests for object equality.","pos":[0,41]}]},{"pos":[48,156],"content":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.","nodes":[{"content":"In this comparison, two instances of <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.","pos":[0,108],"source":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal."}]},{"pos":[164,402],"content":"[!NOTE]\n A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","leadings":["","> "],"nodes":[{"content":" A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[8,236],"nodes":[{"content":"A rectangle's position and dimensions are described by <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values.","pos":[1,84],"source":" A rectangle's position and dimensions are described by <xref:System.Double> values."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[85,228],"source":" Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail."}]}]},{"pos":[409,557],"content":"The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName&gt;</ph>","pos":[0,148],"source":"The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>"}]}],"pos":[74174,74741],"yaml":true,"extradata":"MT"},{"content":"The first rectangle to compare.","nodes":[{"pos":[0,31],"content":"The first rectangle to compare.","nodes":[{"content":"The first rectangle to compare.","pos":[0,31]}]}],"pos":[75481,75513],"yaml":true},{"content":"The second rectangle to compare.","nodes":[{"pos":[0,32],"content":"The second rectangle to compare.","nodes":[{"content":"The second rectangle to compare.","pos":[0,32]}]}],"pos":[75580,75613],"yaml":true},{"content":"`true` if the rectangles have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">`true`</ph> if the rectangles have the same <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Location\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Size\"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the rectangles have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`."}],"pos":[75671,75840],"yaml":true},{"content":"Compares two rectangles for inequality.","nodes":[{"pos":[0,39],"content":"Compares two rectangles for inequality.","nodes":[{"content":"Compares two rectangles for inequality.","pos":[0,39]}]}],"pos":[76909,76949],"yaml":true},{"content":"This operation tests for object inequality.  \n  \n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \n  \n> [!NOTE]\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.  \n  \n The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>","nodes":[{"pos":[0,43],"content":"This operation tests for object inequality.","nodes":[{"content":"This operation tests for object inequality.","pos":[0,43]}]},{"pos":[50,158],"content":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.","nodes":[{"content":"In this comparison, two instances of <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.","pos":[0,108],"source":"In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal."}]},{"pos":[166,404],"content":"[!NOTE]\n A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","leadings":["","> "],"nodes":[{"content":" A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[8,236],"nodes":[{"content":"A rectangle's position and dimensions are described by <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values.","pos":[1,84],"source":" A rectangle's position and dimensions are described by <xref:System.Double> values."},{"content":"Because <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.","pos":[85,228],"source":" Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail."}]}]},{"pos":[411,559],"content":"The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName&gt;</ph>","pos":[0,148],"source":"The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>"}]}],"pos":[76960,77529],"yaml":true,"extradata":"MT"},{"content":"The first rectangle to compare.","nodes":[{"pos":[0,31],"content":"The first rectangle to compare.","nodes":[{"content":"The first rectangle to compare.","pos":[0,31]}]}],"pos":[78285,78317],"yaml":true},{"content":"The second rectangle to compare.","nodes":[{"pos":[0,32],"content":"The second rectangle to compare.","nodes":[{"content":"The second rectangle to compare.","pos":[0,32]}]}],"pos":[78384,78417],"yaml":true},{"content":"`true` if the rectangles do not have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`.","nodes":[{"pos":[0,173],"content":"<ph id=\"ph1\">`true`</ph> if the rectangles do not have the same <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Location\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Size\"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the rectangles do not have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`."}],"pos":[78475,78651],"yaml":true},{"content":"Creates a new rectangle from the specified string representation.","nodes":[{"pos":[0,65],"content":"Creates a new rectangle from the specified string representation.","nodes":[{"content":"Creates a new rectangle from the specified string representation.","pos":[0,65]}]}],"pos":[79582,79648],"yaml":true},{"content":"The string representation of the rectangle, in the form \"x, y, width, height\".","nodes":[{"pos":[0,78],"content":"The string representation of the rectangle, in the form \"x, y, width, height\".","nodes":[{"content":"The string representation of the rectangle, in the form \"x, y, width, height\".","pos":[0,78]}]}],"pos":[80320,80399],"yaml":true},{"content":"The resulting rectangle.","nodes":[{"pos":[0,24],"content":"The resulting rectangle.","nodes":[{"content":"The resulting rectangle.","pos":[0,24]}]}],"pos":[80462,80487],"yaml":true},{"content":"Gets the x-axis value of the right side of the rectangle.","nodes":[{"pos":[0,57],"content":"Gets the x-axis value of the right side of the rectangle.","nodes":[{"content":"Gets the x-axis value of the right side of the rectangle.","pos":[0,57]}]}],"pos":[81321,81379],"yaml":true},{"content":"The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.","nodes":[{"pos":[0,162],"content":"The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.","nodes":[{"content":"The x-axis value of the right side of the rectangle is equal to the sum of the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> properties.","pos":[0,162],"source":"The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties."}]}],"pos":[81390,81553],"yaml":true,"extradata":"MT"},{"content":"The x-axis value of the right side of the rectangle.","nodes":[{"pos":[0,52],"content":"The x-axis value of the right side of the rectangle.","nodes":[{"content":"The x-axis value of the right side of the rectangle.","pos":[0,52]}]}],"pos":[82135,82188],"yaml":true},{"content":"Multiplies the size of the current rectangle by the specified x and y values.","nodes":[{"pos":[0,77],"content":"Multiplies the size of the current rectangle by the specified x and y values.","nodes":[{"content":"Multiplies the size of the current rectangle by the specified x and y values.","pos":[0,77]}]}],"pos":[83177,83255],"yaml":true},{"content":"The scale factor in the x-direction.","nodes":[{"pos":[0,36],"content":"The scale factor in the x-direction.","nodes":[{"content":"The scale factor in the x-direction.","pos":[0,36]}]}],"pos":[83761,83798],"yaml":true},{"content":"The scale factor in the y-direction.","nodes":[{"pos":[0,36],"content":"The scale factor in the y-direction.","nodes":[{"content":"The scale factor in the y-direction.","pos":[0,36]}]}],"pos":[83860,83897],"yaml":true},{"content":"Gets or sets the width and height of the rectangle.","nodes":[{"pos":[0,51],"content":"Gets or sets the width and height of the rectangle.","nodes":[{"content":"Gets or sets the width and height of the rectangle.","pos":[0,51]}]}],"pos":[84747,84799],"yaml":true},{"content":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Size\"&gt;&lt;/xref&gt;</ph> structure that specifies the width and height of the rectangle.","source":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle."}],"pos":[86120,86227],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Size\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Size\"&gt;&lt;/xref&gt;</ph> is set on an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<xref href=\"System.Windows.Rect.Size\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[86389,86506],"yaml":true},{"content":"Gets the y-axis position of the top of the rectangle.","nodes":[{"pos":[0,53],"content":"Gets the y-axis position of the top of the rectangle.","nodes":[{"content":"Gets the y-axis position of the top of the rectangle.","pos":[0,53]}]}],"pos":[87294,87348],"yaml":true},{"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.","nodes":[{"pos":[0,92],"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.","nodes":[{"content":"Getting this property is equivalent to getting the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> property.","pos":[0,92],"source":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property."}]}],"pos":[87359,87452],"yaml":true,"extradata":"MT"},{"content":"The y-axis position of the top of the rectangle.","nodes":[{"pos":[0,48],"content":"The y-axis position of the top of the rectangle.","nodes":[{"content":"The y-axis position of the top of the rectangle.","pos":[0,48]}]}],"pos":[88032,88081],"yaml":true},{"content":"Gets the position of the top-left corner of the rectangle.","nodes":[{"pos":[0,58],"content":"Gets the position of the top-left corner of the rectangle.","nodes":[{"content":"Gets the position of the top-left corner of the rectangle.","pos":[0,58]}]}],"pos":[88925,88984],"yaml":true},{"content":"The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).","nodes":[{"pos":[0,132],"content":"The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).","nodes":[{"content":"The position of the top-left corner of the rectangle is equal to (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).","pos":[0,132],"source":"The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>)."}]}],"pos":[88995,89128],"yaml":true,"extradata":"MT"},{"content":"The position of the top-left corner of the rectangle.","nodes":[{"pos":[0,53],"content":"The position of the top-left corner of the rectangle.","nodes":[{"content":"The position of the top-left corner of the rectangle.","pos":[0,53]}]}],"pos":[89733,89787],"yaml":true},{"content":"Gets the position of the top-right corner of the rectangle.","nodes":[{"pos":[0,59],"content":"Gets the position of the top-right corner of the rectangle.","nodes":[{"content":"Gets the position of the top-right corner of the rectangle.","pos":[0,59]}]}],"pos":[90663,90723],"yaml":true},{"content":"The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).","nodes":[{"pos":[0,171],"content":"The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).","nodes":[{"content":"The position of the top-right corner of the rectangle is equal to (<ph id=\"ph1\">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).","pos":[0,171],"source":"The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>)."}]}],"pos":[90734,90906],"yaml":true,"extradata":"MT"},{"content":"The position of the top-right corner of the rectangle.","nodes":[{"pos":[0,54],"content":"The position of the top-right corner of the rectangle.","nodes":[{"content":"The position of the top-right corner of the rectangle.","pos":[0,54]}]}],"pos":[91512,91567],"yaml":true},{"content":"Returns a string representation of the rectangle.","nodes":[{"pos":[0,49],"content":"Returns a string representation of the rectangle.","nodes":[{"content":"Returns a string representation of the rectangle.","pos":[0,49]}]}],"pos":[92448,92498],"yaml":true},{"content":"A string representation of the current rectangle. The string has the following form: \"<xref href=\"System.Windows.Rect.X\"></xref>,<xref href=\"System.Windows.Rect.Y\"></xref>,<xref href=\"System.Windows.Rect.Width\"></xref>,<xref href=\"System.Windows.Rect.Height\"></xref>\".","nodes":[{"pos":[0,268],"content":"A string representation of the current rectangle. The string has the following form: \"<xref href=\"System.Windows.Rect.X\"></xref>,<xref href=\"System.Windows.Rect.Y\"></xref>,<xref href=\"System.Windows.Rect.Width\"></xref>,<xref href=\"System.Windows.Rect.Height\"></xref>\".","nodes":[{"content":"A string representation of the current rectangle.","pos":[0,49]},{"content":"The string has the following form: \"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.X\"&gt;&lt;/xref&gt;</ph>,<ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Y\"&gt;&lt;/xref&gt;</ph>,<ph id=\"ph3\">&lt;xref href=\"System.Windows.Rect.Width\"&gt;&lt;/xref&gt;</ph>,<ph id=\"ph4\">&lt;xref href=\"System.Windows.Rect.Height\"&gt;&lt;/xref&gt;</ph>\".","pos":[50,268],"source":" The string has the following form: \"<xref href=\"System.Windows.Rect.X\"></xref>,<xref href=\"System.Windows.Rect.Y\"></xref>,<xref href=\"System.Windows.Rect.Width\"></xref>,<xref href=\"System.Windows.Rect.Height\"></xref>\"."}]}],"pos":[92995,93266],"yaml":true},{"content":"Returns a string representation of the rectangle by using the specified format provider.","nodes":[{"pos":[0,88],"content":"Returns a string representation of the rectangle by using the specified format provider.","nodes":[{"content":"Returns a string representation of the rectangle by using the specified format provider.","pos":[0,88]}]}],"pos":[94264,94353],"yaml":true},{"content":"Culture-specific formatting information.","nodes":[{"pos":[0,40],"content":"Culture-specific formatting information.","nodes":[{"content":"Culture-specific formatting information.","pos":[0,40]}]}],"pos":[94516,94557],"yaml":true},{"content":"A string representation of the current rectangle that is determined by the specified format provider.","nodes":[{"pos":[0,101],"content":"A string representation of the current rectangle that is determined by the specified format provider.","nodes":[{"content":"A string representation of the current rectangle that is determined by the specified format provider.","pos":[0,101]}]}],"pos":[94614,94716],"yaml":true},{"content":"Transforms the rectangle by applying the specified matrix.","nodes":[{"pos":[0,58],"content":"Transforms the rectangle by applying the specified matrix.","nodes":[{"content":"Transforms the rectangle by applying the specified matrix.","pos":[0,58]}]}],"pos":[95686,95745],"yaml":true},{"content":"A matrix that specifies the transformation to apply.","nodes":[{"pos":[0,52],"content":"A matrix that specifies the transformation to apply.","nodes":[{"content":"A matrix that specifies the transformation to apply.","pos":[0,52]}]}],"pos":[96345,96398],"yaml":true},{"content":"Returns the rectangle that results from applying the specified matrix to the specified rectangle.","nodes":[{"pos":[0,97],"content":"Returns the rectangle that results from applying the specified matrix to the specified rectangle.","nodes":[{"content":"Returns the rectangle that results from applying the specified matrix to the specified rectangle.","pos":[0,97]}]}],"pos":[97469,97567],"yaml":true},{"content":"A rectangle that is the basis for the transformation.","nodes":[{"pos":[0,53],"content":"A rectangle that is the basis for the transformation.","nodes":[{"content":"A rectangle that is the basis for the transformation.","pos":[0,53]}]}],"pos":[98271,98325],"yaml":true},{"content":"A matrix that specifies the transformation to apply.","nodes":[{"pos":[0,52],"content":"A matrix that specifies the transformation to apply.","nodes":[{"content":"A matrix that specifies the transformation to apply.","pos":[0,52]}]}],"pos":[98401,98454],"yaml":true},{"content":"The rectangle that results from the operation.","nodes":[{"pos":[0,46],"content":"The rectangle that results from the operation.","nodes":[{"content":"The rectangle that results from the operation.","pos":[0,46]}]}],"pos":[98517,98564],"yaml":true},{"content":"Expands the current rectangle exactly enough to contain the specified point.","nodes":[{"pos":[0,76],"content":"Expands the current rectangle exactly enough to contain the specified point.","nodes":[{"content":"Expands the current rectangle exactly enough to contain the specified point.","pos":[0,76]}]}],"pos":[99509,99586],"yaml":true},{"content":"The point to include.","nodes":[{"pos":[0,21],"content":"The point to include.","nodes":[{"content":"The point to include.","pos":[0,21]}]}],"pos":[100143,100165],"yaml":true},{"content":"Expands the current rectangle exactly enough to contain the specified rectangle.","nodes":[{"pos":[0,80],"content":"Expands the current rectangle exactly enough to contain the specified rectangle.","nodes":[{"content":"Expands the current rectangle exactly enough to contain the specified rectangle.","pos":[0,80]}]}],"pos":[101100,101181],"yaml":true},{"content":"The rectangle to include.","nodes":[{"pos":[0,25],"content":"The rectangle to include.","nodes":[{"content":"The rectangle to include.","pos":[0,25]}]}],"pos":[101721,101747],"yaml":true},{"content":"Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.","nodes":[{"pos":[0,108],"content":"Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.","nodes":[{"content":"Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.","pos":[0,108]}]}],"pos":[102766,102875],"yaml":true},{"content":"The rectangle to include.","nodes":[{"pos":[0,25],"content":"The rectangle to include.","nodes":[{"content":"The rectangle to include.","pos":[0,25]}]}],"pos":[103526,103552],"yaml":true},{"content":"The point to include.","nodes":[{"pos":[0,21],"content":"The point to include.","nodes":[{"content":"The point to include.","pos":[0,21]}]}],"pos":[103620,103642],"yaml":true},{"content":"A rectangle that is exactly large enough to contain the specified rectangle and the specified point.","nodes":[{"pos":[0,100],"content":"A rectangle that is exactly large enough to contain the specified rectangle and the specified point.","nodes":[{"content":"A rectangle that is exactly large enough to contain the specified rectangle and the specified point.","pos":[0,100]}]}],"pos":[103705,103806],"yaml":true},{"content":"Creates a rectangle that is exactly large enough to contain the two specified rectangles.","nodes":[{"pos":[0,89],"content":"Creates a rectangle that is exactly large enough to contain the two specified rectangles.","nodes":[{"content":"Creates a rectangle that is exactly large enough to contain the two specified rectangles.","pos":[0,89]}]}],"pos":[104819,104909],"yaml":true},{"content":"The first rectangle to include.","nodes":[{"pos":[0,31],"content":"The first rectangle to include.","nodes":[{"content":"The first rectangle to include.","pos":[0,31]}]}],"pos":[105523,105555],"yaml":true},{"content":"The second rectangle to include.","nodes":[{"pos":[0,32],"content":"The second rectangle to include.","nodes":[{"content":"The second rectangle to include.","pos":[0,32]}]}],"pos":[105622,105655],"yaml":true},{"content":"The resulting rectangle.","nodes":[{"pos":[0,24],"content":"The resulting rectangle.","nodes":[{"content":"The resulting rectangle.","pos":[0,24]}]}],"pos":[105718,105743],"yaml":true},{"content":"Gets or sets the width of the rectangle.","nodes":[{"pos":[0,40],"content":"Gets or sets the width of the rectangle.","nodes":[{"content":"Gets or sets the width of the rectangle.","pos":[0,40]}]}],"pos":[106599,106640],"yaml":true},{"content":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.","nodes":[{"pos":[0,260],"content":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.","nodes":[{"content":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.","pos":[0,260],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.","pos":[0,133],"source":"The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> cannot not be changed.","pos":[134,260],"source":" The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed."}]}]}],"pos":[106651,106912],"yaml":true,"extradata":"MT"},{"content":"A positive number that represents the width of the rectangle. The default is 0.","nodes":[{"pos":[0,79],"content":"A positive number that represents the width of the rectangle. The default is 0.","nodes":[{"content":"A positive number that represents the width of the rectangle. The default is 0.","pos":[0,79],"nodes":[{"content":"A positive number that represents the width of the rectangle.","pos":[0,61]},{"content":"The default is 0.","pos":[62,79]}]}]}],"pos":[108201,108281],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Width\"></xref> is set to a negative value.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Width\"&gt;&lt;/xref&gt;</ph> is set to a negative value.","source":"<xref href=\"System.Windows.Rect.Width\"></xref> is set to a negative value."}],"pos":[108428,108503],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Width\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Width\"&gt;&lt;/xref&gt;</ph> is set on an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<xref href=\"System.Windows.Rect.Width\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[108613,108731],"yaml":true},{"content":"Gets or sets the x-axis value of the left side of the rectangle.","nodes":[{"pos":[0,64],"content":"Gets or sets the x-axis value of the left side of the rectangle.","nodes":[{"content":"Gets or sets the x-axis value of the left side of the rectangle.","pos":[0,64]}]}],"pos":[109507,109572],"yaml":true},{"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.","nodes":[{"pos":[0,95],"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.","nodes":[{"content":"Getting this property is equivalent to getting the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> property.","pos":[0,95],"source":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property."}]}],"pos":[109583,109679],"yaml":true,"extradata":"MT"},{"content":"The x-axis value of the left side of the rectangle.","nodes":[{"pos":[0,51],"content":"The x-axis value of the left side of the rectangle.","nodes":[{"content":"The x-axis value of the left side of the rectangle.","pos":[0,51]}]}],"pos":[110964,111016],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.X\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.X\"&gt;&lt;/xref&gt;</ph> is set on an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<xref href=\"System.Windows.Rect.X\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[111175,111289],"yaml":true},{"content":"Gets or sets the y-axis value of the top side of the rectangle.","nodes":[{"pos":[0,63],"content":"Gets or sets the y-axis value of the top side of the rectangle.","nodes":[{"content":"Gets or sets the y-axis value of the top side of the rectangle.","pos":[0,63]}]}],"pos":[112065,112129],"yaml":true},{"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.","nodes":[{"pos":[0,94],"content":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.","nodes":[{"content":"Getting this property is equivalent to getting the <ph id=\"ph1\">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> property.","pos":[0,94],"source":"Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property."}]}],"pos":[112140,112235],"yaml":true,"extradata":"MT"},{"content":"The y-axis value of the top side of the rectangle.","nodes":[{"pos":[0,50],"content":"The y-axis value of the top side of the rectangle.","nodes":[{"content":"The y-axis value of the top side of the rectangle.","pos":[0,50]}]}],"pos":[113520,113571],"yaml":true},{"content":"<xref href=\"System.Windows.Rect.Y\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect.Y\"&gt;&lt;/xref&gt;</ph> is set on an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect.Empty\"&gt;&lt;/xref&gt;</ph> rectangle.","source":"<xref href=\"System.Windows.Rect.Y\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle."}],"pos":[113730,113844],"yaml":true},{"content":"Formats the value of the current instance using the specified format.","nodes":[{"pos":[0,69],"content":"Formats the value of the current instance using the specified format.","nodes":[{"content":"Formats the value of the current instance using the specified format.","pos":[0,69]}]}],"pos":[114962,115032],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.","nodes":[{"pos":[0,176],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.","pos":[0,176],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.Rect&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IFormattable&gt;</ph> interface.","pos":[60,176],"source":" It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface."}]}]}],"pos":[115043,115220],"yaml":true,"extradata":"MT"},{"content":"The format to use.  \n  \n -or-  \n  \n A null reference (`Nothing` in Visual Basic) to use the default format defined for the type of the <xref href=\"System.IFormattable\"></xref> implementation.","nodes":[{"pos":[0,18],"content":"The format to use.","nodes":[{"content":"The format to use.","pos":[0,18]}]},{"pos":[25,29],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[36,191],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) to use the default format defined for the type of the <ph id=\"ph2\">&lt;xref href=\"System.IFormattable\"&gt;&lt;/xref&gt;</ph> implementation.","source":"A null reference (`Nothing` in Visual Basic) to use the default format defined for the type of the <xref href=\"System.IFormattable\"></xref> implementation."}],"pos":[115393,115593],"yaml":true},{"content":"The provider to use to format the value.  \n  \n -or-  \n  \n A null reference (`Nothing` in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.","nodes":[{"pos":[0,40],"content":"The provider to use to format the value.","nodes":[{"content":"The provider to use to format the value.","pos":[0,40]}]},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,200],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.","source":"A null reference (`Nothing` in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system."}],"pos":[115666,115873],"yaml":true},{"content":"A string representation of the rectangle.","nodes":[{"pos":[0,41],"content":"A string representation of the rectangle.","nodes":[{"content":"A string representation of the rectangle.","pos":[0,41]}]}],"pos":[115930,115972],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Rect\n  commentId: T:System.Windows.Rect\n  id: Rect\n  children:\n  - System.Windows.Rect.#ctor(System.Windows.Size)\n  - System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)\n  - System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)\n  - System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - System.Windows.Rect.Bottom\n  - System.Windows.Rect.BottomLeft\n  - System.Windows.Rect.BottomRight\n  - System.Windows.Rect.Contains(System.Windows.Point)\n  - System.Windows.Rect.Contains(System.Windows.Rect)\n  - System.Windows.Rect.Contains(System.Double,System.Double)\n  - System.Windows.Rect.Empty\n  - System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)\n  - System.Windows.Rect.Equals(System.Object)\n  - System.Windows.Rect.Equals(System.Windows.Rect)\n  - System.Windows.Rect.GetHashCode\n  - System.Windows.Rect.Height\n  - System.Windows.Rect.Inflate(System.Windows.Size)\n  - System.Windows.Rect.Inflate(System.Double,System.Double)\n  - System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)\n  - System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)\n  - System.Windows.Rect.Intersect(System.Windows.Rect)\n  - System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)\n  - System.Windows.Rect.IntersectsWith(System.Windows.Rect)\n  - System.Windows.Rect.IsEmpty\n  - System.Windows.Rect.Left\n  - System.Windows.Rect.Location\n  - System.Windows.Rect.Offset(System.Windows.Vector)\n  - System.Windows.Rect.Offset(System.Double,System.Double)\n  - System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)\n  - System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)\n  - System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)\n  - System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)\n  - System.Windows.Rect.Parse(System.String)\n  - System.Windows.Rect.Right\n  - System.Windows.Rect.Scale(System.Double,System.Double)\n  - System.Windows.Rect.Size\n  - System.Windows.Rect.Top\n  - System.Windows.Rect.TopLeft\n  - System.Windows.Rect.TopRight\n  - System.Windows.Rect.ToString\n  - System.Windows.Rect.ToString(System.IFormatProvider)\n  - System.Windows.Rect.Transform(System.Windows.Media.Matrix)\n  - System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)\n  - System.Windows.Rect.Union(System.Windows.Point)\n  - System.Windows.Rect.Union(System.Windows.Rect)\n  - System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)\n  - System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)\n  - System.Windows.Rect.Width\n  - System.Windows.Rect.X\n  - System.Windows.Rect.Y\n  - System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  langs:\n  - csharp\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n  type: Struct\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Describes the width, height, and location of a rectangle.\n  remarks: \"<a name=\\\"xamlAttributeUsage_Duration\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"x,y,width,height\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_MinWidth\\\"></a>   \\n## XAML Values  \\n *x*  \\n <xref:System.Double?displayProperty=fullName>  \\n  \\n The x-coordinate location of the left side of the rectangle.  \\n  \\n *y*  \\n <xref:System.Double?displayProperty=fullName>  \\n  \\n The y-coordinate location of the top side of the rectangle.  \\n  \\n *width*  \\n <xref:System.Double?displayProperty=fullName>  \\n  \\n A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.  \\n  \\n *height*  \\n <xref:System.Double?displayProperty=fullName>  \\n  \\n A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.\"\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))]\n\n      public struct Rect : IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.#ctor(System.Windows.Size)\n  commentId: M:System.Windows.Rect.#ctor(System.Windows.Size)\n  id: '#ctor(System.Windows.Size)'\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Rect(Size)\n  nameWithType: Rect.Rect(Size)\n  fullName: Rect.Rect(Size)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is of the specified size and is located at (0,0).\n  remarks: ''\n  example:\n  - \"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]\"\n  syntax:\n    content: public Rect (System.Windows.Size size);\n    parameters:\n    - id: size\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle.\n  overload: System.Windows.Rect.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)\n  commentId: M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)\n  id: '#ctor(System.Windows.Point,System.Windows.Point)'\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Rect(Point, Point)\n  nameWithType: Rect.Rect(Point, Point)\n  fullName: Rect.Rect(Point, Point)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is exactly large enough to contain the two specified points.\n  remarks: ''\n  example:\n  - \"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]\"\n  syntax:\n    content: public Rect (System.Windows.Point point1, System.Windows.Point point2);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The first point that the new rectangle must contain.\n    - id: point2\n      type: System.Windows.Point\n      description: The second point that the new rectangle must contain.\n  overload: System.Windows.Rect.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)\n  commentId: M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)\n  id: '#ctor(System.Windows.Point,System.Windows.Size)'\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Rect(Point, Size)\n  nameWithType: Rect.Rect(Point, Size)\n  fullName: Rect.Rect(Point, Size)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that has the specified top-left corner location and the specified width and height.\n  remarks: ''\n  example:\n  - \"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]\"\n  syntax:\n    content: public Rect (System.Windows.Point location, System.Windows.Size size);\n    parameters:\n    - id: location\n      type: System.Windows.Point\n      description: A point that specifies the location of the top-left corner of the rectangle.\n    - id: size\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle.\n  overload: System.Windows.Rect.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)\n  commentId: M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)\n  id: '#ctor(System.Windows.Point,System.Windows.Vector)'\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Rect(Point, Vector)\n  nameWithType: Rect.Rect(Point, Vector)\n  fullName: Rect.Rect(Point, Vector)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.\n  remarks: ''\n  example:\n  - \"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]\"\n  syntax:\n    content: public Rect (System.Windows.Point point, System.Windows.Vector vector);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The first point the rectangle must contain.\n    - id: vector\n      type: System.Windows.Vector\n      description: The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.\n  overload: System.Windows.Rect.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  commentId: M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Rect(Double, Double, Double, Double)\n  nameWithType: Rect.Rect(Double, Double, Double, Double)\n  fullName: Rect.Rect(Double, Double, Double, Double)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Rect\"></xref> structure that has the specified x-coordinate, y-coordinate, width, and height.\n  remarks: \"The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]\"\n  syntax:\n    content: public Rect (double x, double y, double width, double height);\n    parameters:\n    - id: x\n      type: System.Double\n      description: The x-coordinate of the top-left corner of the rectangle.\n    - id: y\n      type: System.Double\n      description: The y-coordinate of the top-left corner of the rectangle.\n    - id: width\n      type: System.Double\n      description: The width of the rectangle.\n    - id: height\n      type: System.Double\n      description: The height of the rectangle.\n  overload: System.Windows.Rect.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>width</code> is a negative value.  \\n  \\n -or-  \\n  \\n <code>height</code> is a negative value.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Bottom\n  commentId: P:System.Windows.Rect.Bottom\n  id: Bottom\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Bottom\n  nameWithType: Rect.Bottom\n  fullName: Rect.Bottom\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the y-axis value of the bottom of the rectangle.\n  remarks: The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Bottom { get; }\n    return:\n      type: System.Double\n      description: The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is <xref href=\"System.Double.NegativeInfinity\"></xref> .\n  overload: System.Windows.Rect.Bottom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.BottomLeft\n  commentId: P:System.Windows.Rect.BottomLeft\n  id: BottomLeft\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: BottomLeft\n  nameWithType: Rect.BottomLeft\n  fullName: Rect.BottomLeft\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the position of the bottom-left corner of the rectangle\n  remarks: The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public System.Windows.Point BottomLeft { get; }\n    return:\n      type: System.Windows.Point\n      description: The position of the bottom-left corner of the rectangle.\n  overload: System.Windows.Rect.BottomLeft*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.BottomRight\n  commentId: P:System.Windows.Rect.BottomRight\n  id: BottomRight\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: BottomRight\n  nameWithType: Rect.BottomRight\n  fullName: Rect.BottomRight\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the position of the bottom-right corner of the rectangle.\n  remarks: The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public System.Windows.Point BottomRight { get; }\n    return:\n      type: System.Windows.Point\n      description: The position of the bottom-right corner of the rectangle.\n  overload: System.Windows.Rect.BottomRight*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Contains(System.Windows.Point)\n  commentId: M:System.Windows.Rect.Contains(System.Windows.Point)\n  id: Contains(System.Windows.Point)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Contains(Point)\n  nameWithType: Rect.Contains(Point)\n  fullName: Rect.Contains(Point)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the rectangle contains the specified point.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.  \\n  \\n [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]\"\n  syntax:\n    content: public bool Contains (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the rectangle contains the specified point; otherwise, `false`.'\n  overload: System.Windows.Rect.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Contains(System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Contains(System.Windows.Rect)\n  id: Contains(System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Contains(Rect)\n  nameWithType: Rect.Contains(Rect)\n  fullName: Rect.Contains(Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the rectangle contains the specified rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]\"\n  syntax:\n    content: public bool Contains (System.Windows.Rect rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The rectangle to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>rect</code> is entirely contained by the rectangle; otherwise, `false`.'\n  overload: System.Windows.Rect.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Contains(System.Double,System.Double)\n  commentId: M:System.Windows.Rect.Contains(System.Double,System.Double)\n  id: Contains(System.Double,System.Double)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Contains(Double, Double)\n  nameWithType: Rect.Contains(Double, Double)\n  fullName: Rect.Contains(Double, Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.  \\n  \\n [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]\"\n  syntax:\n    content: public bool Contains (double x, double y);\n    parameters:\n    - id: x\n      type: System.Double\n      description: The x-coordinate of the point to check.\n    - id: y\n      type: System.Double\n      description: The y-coordinate of the point to check.\n    return:\n      type: System.Boolean\n      description: '`true` if (<code>x</code>, <code>y</code>) is contained by the rectangle; otherwise, `false`.'\n  overload: System.Windows.Rect.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Empty\n  commentId: P:System.Windows.Rect.Empty\n  id: Empty\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Rect.Empty\n  fullName: Rect.Empty\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a special value that represents a rectangle with no position or area.\n  remarks: Avoid mathematical computations involving empty rectangles. Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations. Comparisons involving these values will not affect application performance.\n  syntax:\n    content: public static System.Windows.Rect Empty { get; }\n    return:\n      type: System.Windows.Rect\n      description: The empty rectangle, which has <xref href=\"System.Windows.Rect.X\"></xref> and <xref href=\"System.Windows.Rect.Y\"></xref> property values of <xref href=\"System.Double.PositiveInfinity\"></xref>, and has <xref href=\"System.Windows.Rect.Width\"></xref> and <xref href=\"System.Windows.Rect.Height\"></xref> property values of <xref href=\"System.Double.NegativeInfinity\"></xref>.\n  overload: System.Windows.Rect.Empty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)\n  id: Equals(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Equals(Rect, Rect)\n  nameWithType: Rect.Equals(Rect, Rect)\n  fullName: Rect.Equals(Rect, Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the specified rectangles are equal.\n  remarks: \"This operation tests for object equality.  \\n  \\n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \\n  \\n> [!NOTE]\\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.  \\n  \\n [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]\"\n  syntax:\n    content: public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Rect\n      description: The first rectangle to compare.\n    - id: rect2\n      type: System.Windows.Rect\n      description: The second rectangle to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the rectangles have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`.'\n  overload: System.Windows.Rect.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Equals(System.Object)\n  commentId: M:System.Windows.Rect.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Rect.Equals(Object)\n  fullName: Rect.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the specified object is equal to the current rectangle.\n  remarks: \"This operation tests for object equality.  \\n  \\n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \\n  \\n> [!NOTE]\\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.  \\n  \\n [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]\"\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare to the current rectangle.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>o</code> is a <xref href=\"System.Windows.Rect\"></xref> and has the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values as the current rectangle; otherwise, `false`.'\n  overload: System.Windows.Rect.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Equals(System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Equals(System.Windows.Rect)\n  id: Equals(System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Equals(Rect)\n  nameWithType: Rect.Equals(Rect)\n  fullName: Rect.Equals(Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the specified rectangle is equal to the current rectangle.\n  remarks: \"This operation tests for object equality.  \\n  \\n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \\n  \\n> [!NOTE]\\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]\"\n  syntax:\n    content: public bool Equals (System.Windows.Rect value);\n    parameters:\n    - id: value\n      type: System.Windows.Rect\n      description: The rectangle to compare to the current rectangle.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified rectangle has the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values as the current rectangle; otherwise, `false`.'\n  overload: System.Windows.Rect.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.GetHashCode\n  commentId: M:System.Windows.Rect.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Rect.GetHashCode()\n  fullName: Rect.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a hash code for the rectangle.\n  remarks: This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.  \\n  \\n [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Windows.Rect\"></xref> structure.\n  overload: System.Windows.Rect.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Height\n  commentId: P:System.Windows.Rect.Height\n  id: Height\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Height\n  nameWithType: Rect.Height\n  fullName: Rect.Height\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the height of the rectangle.\n  remarks: The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Height { get; set; }\n    return:\n      type: System.Double\n      description: A positive number that represents the height of the rectangle. The default is 0.\n  overload: System.Windows.Rect.Height*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <xref href=\"System.Windows.Rect.Height\"></xref> is set to a negative value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Windows.Rect.Height\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Inflate(System.Windows.Size)\n  commentId: M:System.Windows.Rect.Inflate(System.Windows.Size)\n  id: Inflate(System.Windows.Size)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Inflate(Size)\n  nameWithType: Rect.Inflate(Size)\n  fullName: Rect.Inflate(Size)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Expands the rectangle by using the specified <xref href=\"System.Windows.Size\"></xref>, in all directions.\n  remarks: The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]\"\n  syntax:\n    content: public void Inflate (System.Windows.Size size);\n    parameters:\n    - id: size\n      type: System.Windows.Size\n      description: Specifies the amount to expand the rectangle. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties.\n  overload: System.Windows.Rect.Inflate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Inflate(System.Double,System.Double)\n  commentId: M:System.Windows.Rect.Inflate(System.Double,System.Double)\n  id: Inflate(System.Double,System.Double)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Inflate(Double, Double)\n  nameWithType: Rect.Inflate(Double, Double)\n  fullName: Rect.Inflate(Double, Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.\n  remarks: \"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.  \\n  \\n If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]\"\n  syntax:\n    content: public void Inflate (double width, double height);\n    parameters:\n    - id: width\n      type: System.Double\n      description: The amount by which to expand or shrink the left and right sides of the rectangle.\n    - id: height\n      type: System.Double\n      description: The amount by which to expand or shrink the top and bottom sides of the rectangle.\n  overload: System.Windows.Rect.Inflate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)\n  commentId: M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)\n  id: Inflate(System.Windows.Rect,System.Windows.Size)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Inflate(Rect, Size)\n  nameWithType: Rect.Inflate(Rect, Size)\n  fullName: Rect.Inflate(Rect, Size)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns the rectangle that results from expanding the specified rectangle by the specified <xref href=\"System.Windows.Size\"></xref>, in all directions.\n  remarks: The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The <xref href=\"System.Windows.Rect\"></xref> structure to modify.\n    - id: size\n      type: System.Windows.Size\n      description: Specifies the amount to expand the rectangle. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Width\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Left\"></xref> and <xref href=\"System.Windows.Rect.Right\"></xref> properties. The <xref href=\"System.Windows.Size\"></xref> structure's <xref href=\"System.Windows.Size.Height\"></xref> property specifies the amount to increase the rectangle's <xref href=\"System.Windows.Rect.Top\"></xref> and <xref href=\"System.Windows.Rect.Bottom\"></xref> properties.\n    return:\n      type: System.Windows.Rect\n      description: The resulting rectangle.\n  overload: System.Windows.Rect.Inflate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>rect</code> is an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)\n  commentId: M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)\n  id: Inflate(System.Windows.Rect,System.Double,System.Double)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Inflate(Rect, Double, Double)\n  nameWithType: Rect.Inflate(Rect, Double, Double)\n  fullName: Rect.Inflate(Rect, Double, Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.\n  remarks: \"The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle. Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.  \\n  \\n If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The <xref href=\"System.Windows.Rect\"></xref> structure to modify.\n    - id: width\n      type: System.Double\n      description: The amount by which to expand or shrink the left and right sides of the rectangle.\n    - id: height\n      type: System.Double\n      description: The amount by which to expand or shrink the top and bottom sides of the rectangle.\n    return:\n      type: System.Windows.Rect\n      description: The resulting rectangle.\n  overload: System.Windows.Rect.Inflate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>rect</code> is an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Intersect(System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Intersect(System.Windows.Rect)\n  id: Intersect(System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Intersect(Rect)\n  nameWithType: Rect.Intersect(Rect)\n  fullName: Rect.Intersect(Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.\n  remarks: If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]\"\n  syntax:\n    content: public void Intersect (System.Windows.Rect rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The rectangle to intersect with the current rectangle.\n  overload: System.Windows.Rect.Intersect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)\n  id: Intersect(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Intersect(Rect, Rect)\n  nameWithType: Rect.Intersect(Rect, Rect)\n  fullName: Rect.Intersect(Rect, Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns the intersection of the specified rectangles.\n  remarks: \"The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.  \\n  \\n [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Rect\n      description: The first rectangle to compare.\n    - id: rect2\n      type: System.Windows.Rect\n      description: The second rectangle to compare.\n    return:\n      type: System.Windows.Rect\n      description: The intersection of the two rectangles, or <xref href=\"System.Windows.Rect.Empty\"></xref> if no intersection exists.\n  overload: System.Windows.Rect.Intersect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.IntersectsWith(System.Windows.Rect)\n  commentId: M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)\n  id: IntersectsWith(System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: IntersectsWith(Rect)\n  nameWithType: Rect.IntersectsWith(Rect)\n  fullName: Rect.IntersectsWith(Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Indicates whether the specified rectangle intersects with the current rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.  \\n  \\n [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]\"\n  syntax:\n    content: public bool IntersectsWith (System.Windows.Rect rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The rectangle to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified rectangle intersects with the current rectangle; otherwise, `false`.'\n  overload: System.Windows.Rect.IntersectsWith*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.IsEmpty\n  commentId: P:System.Windows.Rect.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: Rect.IsEmpty\n  fullName: Rect.IsEmpty\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the rectangle is the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  remarks: Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle. For more information, see the <xref:System.Windows.Rect.Empty%2A> property.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the rectangle is the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle; otherwise, `false`.'\n  overload: System.Windows.Rect.IsEmpty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Left\n  commentId: P:System.Windows.Rect.Left\n  id: Left\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Left\n  nameWithType: Rect.Left\n  fullName: Rect.Left\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the x-axis value of the left side of the rectangle.\n  remarks: Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Left { get; }\n    return:\n      type: System.Double\n      description: The x-axis value of the left side of the rectangle.\n  overload: System.Windows.Rect.Left*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Location\n  commentId: P:System.Windows.Rect.Location\n  id: Location\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Location\n  nameWithType: Rect.Location\n  fullName: Rect.Location\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the position of the top-left corner of the rectangle.\n  remarks: The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public System.Windows.Point Location { get; set; }\n    return:\n      type: System.Windows.Point\n      description: The position of the top-left corner of the rectangle. The default is (0, 0).\n  overload: System.Windows.Rect.Location*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Windows.Rect.Location\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Offset(System.Windows.Vector)\n  commentId: M:System.Windows.Rect.Offset(System.Windows.Vector)\n  id: Offset(System.Windows.Vector)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Offset(Vector)\n  nameWithType: Rect.Offset(Vector)\n  fullName: Rect.Offset(Vector)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Moves the rectangle by the specified vector.\n  remarks: \"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.  \\n  \\n Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]\"\n  syntax:\n    content: public void Offset (System.Windows.Vector offsetVector);\n    parameters:\n    - id: offsetVector\n      type: System.Windows.Vector\n      description: A vector that specifies the horizontal and vertical amounts to move the rectangle.\n  overload: System.Windows.Rect.Offset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Offset(System.Double,System.Double)\n  commentId: M:System.Windows.Rect.Offset(System.Double,System.Double)\n  id: Offset(System.Double,System.Double)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Offset(Double, Double)\n  nameWithType: Rect.Offset(Double, Double)\n  fullName: Rect.Offset(Double, Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Moves the rectangle by the specified horizontal and vertical amounts.\n  remarks: \"Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.  \\n  \\n Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly. Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]\"\n  syntax:\n    content: public void Offset (double offsetX, double offsetY);\n    parameters:\n    - id: offsetX\n      type: System.Double\n      description: The amount to move the rectangle horizontally.\n    - id: offsetY\n      type: System.Double\n      description: The amount to move the rectangle vertically.\n  overload: System.Windows.Rect.Offset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is called on the <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)\n  commentId: M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)\n  id: Offset(System.Windows.Rect,System.Windows.Vector)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Offset(Rect, Vector)\n  nameWithType: Rect.Offset(Rect, Vector)\n  fullName: Rect.Offset(Rect, Vector)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a rectangle that is offset from the specified rectangle by using the specified vector.\n  remarks: Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The original rectangle.\n    - id: offsetVector\n      type: System.Windows.Vector\n      description: A vector that specifies the horizontal and vertical offsets for the new rectangle.\n    return:\n      type: System.Windows.Rect\n      description: The resulting rectangle.\n  overload: System.Windows.Rect.Offset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>rect</code> is <xref href=\"System.Windows.Rect.Empty\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)\n  commentId: M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)\n  id: Offset(System.Windows.Rect,System.Double,System.Double)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Offset(Rect, Double, Double)\n  nameWithType: Rect.Offset(Rect, Double, Double)\n  fullName: Rect.Offset(Rect, Double, Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.\n  remarks: Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=fullName>) is not allowed.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The rectangle to move.\n    - id: offsetX\n      type: System.Double\n      description: The horizontal offset for the new rectangle.\n    - id: offsetY\n      type: System.Double\n      description: The vertical offset for the new rectangle.\n    return:\n      type: System.Windows.Rect\n      description: The resulting rectangle.\n  overload: System.Windows.Rect.Offset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>rect</code> is <xref href=\"System.Windows.Rect.Empty\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)\n  commentId: M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)\n  id: op_Equality(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: op_Equality(Rect, Rect)\n  nameWithType: Rect.op_Equality(Rect, Rect)\n  fullName: Rect.op_Equality(Rect, Rect)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two rectangles for exact equality.\n  remarks: \"This operation tests for object equality.  \\n  \\n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \\n  \\n> [!NOTE]\\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.  \\n  \\n The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.  \\n  \\n [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]\\n [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]\"\n  syntax:\n    content: public static bool op_Equality (System.Windows.Rect rect1, System.Windows.Rect rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Rect\n      description: The first rectangle to compare.\n    - id: rect2\n      type: System.Windows.Rect\n      description: The second rectangle to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the rectangles have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`.'\n  overload: System.Windows.Rect.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)\n  commentId: M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)\n  id: op_Inequality(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: op_Inequality(Rect, Rect)\n  nameWithType: Rect.op_Inequality(Rect, Rect)\n  fullName: Rect.op_Inequality(Rect, Rect)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two rectangles for inequality.\n  remarks: \"This operation tests for object inequality.  \\n  \\n In this comparison, two instances of <xref:System.Double.NaN?displayProperty=fullName> are considered equal.  \\n  \\n> [!NOTE]\\n>  A rectangle's position and dimensions are described by <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.  \\n  \\n The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName>\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.  \\n  \\n [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]\\n [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]\"\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Rect rect1, System.Windows.Rect rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Rect\n      description: The first rectangle to compare.\n    - id: rect2\n      type: System.Windows.Rect\n      description: The second rectangle to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the rectangles do not have the same <xref href=\"System.Windows.Rect.Location\"></xref> and <xref href=\"System.Windows.Rect.Size\"></xref> values; otherwise, `false`.'\n  overload: System.Windows.Rect.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Parse(System.String)\n  commentId: M:System.Windows.Rect.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Rect.Parse(String)\n  fullName: Rect.Parse(String)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a new rectangle from the specified string representation.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.  \\n  \\n [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]\\n [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]\"\n  syntax:\n    content: public static System.Windows.Rect Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: The string representation of the rectangle, in the form \"x, y, width, height\".\n    return:\n      type: System.Windows.Rect\n      description: The resulting rectangle.\n  overload: System.Windows.Rect.Parse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Right\n  commentId: P:System.Windows.Rect.Right\n  id: Right\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Right\n  nameWithType: Rect.Right\n  fullName: Rect.Right\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the x-axis value of the right side of the rectangle.\n  remarks: The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Right { get; }\n    return:\n      type: System.Double\n      description: The x-axis value of the right side of the rectangle.\n  overload: System.Windows.Rect.Right*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Scale(System.Double,System.Double)\n  commentId: M:System.Windows.Rect.Scale(System.Double,System.Double)\n  id: Scale(System.Double,System.Double)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Scale(Double, Double)\n  nameWithType: Rect.Scale(Double, Double)\n  fullName: Rect.Scale(Double, Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Multiplies the size of the current rectangle by the specified x and y values.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.  \\n  \\n [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]\"\n  syntax:\n    content: public void Scale (double scaleX, double scaleY);\n    parameters:\n    - id: scaleX\n      type: System.Double\n      description: The scale factor in the x-direction.\n    - id: scaleY\n      type: System.Double\n      description: The scale factor in the y-direction.\n  overload: System.Windows.Rect.Scale*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Size\n  commentId: P:System.Windows.Rect.Size\n  id: Size\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Rect.Size\n  fullName: Rect.Size\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the width and height of the rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public System.Windows.Size Size { get; set; }\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure that specifies the width and height of the rectangle.\n  overload: System.Windows.Rect.Size*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Windows.Rect.Size\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Top\n  commentId: P:System.Windows.Rect.Top\n  id: Top\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Top\n  nameWithType: Rect.Top\n  fullName: Rect.Top\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the y-axis position of the top of the rectangle.\n  remarks: Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Top { get; }\n    return:\n      type: System.Double\n      description: The y-axis position of the top of the rectangle.\n  overload: System.Windows.Rect.Top*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.TopLeft\n  commentId: P:System.Windows.Rect.TopLeft\n  id: TopLeft\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: TopLeft\n  nameWithType: Rect.TopLeft\n  fullName: Rect.TopLeft\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the position of the top-left corner of the rectangle.\n  remarks: The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public System.Windows.Point TopLeft { get; }\n    return:\n      type: System.Windows.Point\n      description: The position of the top-left corner of the rectangle.\n  overload: System.Windows.Rect.TopLeft*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.TopRight\n  commentId: P:System.Windows.Rect.TopRight\n  id: TopRight\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: TopRight\n  nameWithType: Rect.TopRight\n  fullName: Rect.TopRight\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the position of the top-right corner of the rectangle.\n  remarks: The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).\n  example:\n  - \"The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public System.Windows.Point TopRight { get; }\n    return:\n      type: System.Windows.Point\n      description: The position of the top-right corner of the rectangle.\n  overload: System.Windows.Rect.TopRight*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.ToString\n  commentId: M:System.Windows.Rect.ToString\n  id: ToString\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Rect.ToString()\n  fullName: Rect.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a string representation of the rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.  \\n  \\n [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: 'A string representation of the current rectangle. The string has the following form: \"<xref href=\"System.Windows.Rect.X\"></xref>,<xref href=\"System.Windows.Rect.Y\"></xref>,<xref href=\"System.Windows.Rect.Width\"></xref>,<xref href=\"System.Windows.Rect.Height\"></xref>\".'\n  overload: System.Windows.Rect.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.ToString(System.IFormatProvider)\n  commentId: M:System.Windows.Rect.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Rect.ToString(IFormatProvider)\n  fullName: Rect.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a string representation of the rectangle by using the specified format provider.\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Culture-specific formatting information.\n    return:\n      type: System.String\n      description: A string representation of the current rectangle that is determined by the specified format provider.\n  overload: System.Windows.Rect.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Rect.Transform(System.Windows.Media.Matrix)\n  commentId: M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)\n  id: Transform(System.Windows.Media.Matrix)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Transform(Matrix)\n  nameWithType: Rect.Transform(Matrix)\n  fullName: Rect.Transform(Matrix)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Transforms the rectangle by applying the specified matrix.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.  \\n  \\n [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]\"\n  syntax:\n    content: public void Transform (System.Windows.Media.Matrix matrix);\n    parameters:\n    - id: matrix\n      type: System.Windows.Media.Matrix\n      description: A matrix that specifies the transformation to apply.\n  overload: System.Windows.Rect.Transform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)\n  commentId: M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)\n  id: Transform(System.Windows.Rect,System.Windows.Media.Matrix)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Transform(Rect, Matrix)\n  nameWithType: Rect.Transform(Rect, Matrix)\n  fullName: Rect.Transform(Rect, Matrix)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns the rectangle that results from applying the specified matrix to the specified rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: A rectangle that is the basis for the transformation.\n    - id: matrix\n      type: System.Windows.Media.Matrix\n      description: A matrix that specifies the transformation to apply.\n    return:\n      type: System.Windows.Rect\n      description: The rectangle that results from the operation.\n  overload: System.Windows.Rect.Transform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Union(System.Windows.Point)\n  commentId: M:System.Windows.Rect.Union(System.Windows.Point)\n  id: Union(System.Windows.Point)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Union(Point)\n  nameWithType: Rect.Union(Point)\n  fullName: Rect.Union(Point)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Expands the current rectangle exactly enough to contain the specified point.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.  \\n  \\n [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]\"\n  syntax:\n    content: public void Union (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to include.\n  overload: System.Windows.Rect.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Union(System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Union(System.Windows.Rect)\n  id: Union(System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Union(Rect)\n  nameWithType: Rect.Union(Rect)\n  fullName: Rect.Union(Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Expands the current rectangle exactly enough to contain the specified rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]\"\n  syntax:\n    content: public void Union (System.Windows.Rect rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The rectangle to include.\n  overload: System.Windows.Rect.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)\n  commentId: M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)\n  id: Union(System.Windows.Rect,System.Windows.Point)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Union(Rect, Point)\n  nameWithType: Rect.Union(Rect, Point)\n  fullName: Rect.Union(Rect, Point)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.  \\n  \\n [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The rectangle to include.\n    - id: point\n      type: System.Windows.Point\n      description: The point to include.\n    return:\n      type: System.Windows.Rect\n      description: A rectangle that is exactly large enough to contain the specified rectangle and the specified point.\n  overload: System.Windows.Rect.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)\n  commentId: M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)\n  id: Union(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Union(Rect, Rect)\n  nameWithType: Rect.Union(Rect, Rect)\n  fullName: Rect.Union(Rect, Rect)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a rectangle that is exactly large enough to contain the two specified rectangles.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.  \\n  \\n [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]\"\n  syntax:\n    content: public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Rect\n      description: The first rectangle to include.\n    - id: rect2\n      type: System.Windows.Rect\n      description: The second rectangle to include.\n    return:\n      type: System.Windows.Rect\n      description: The resulting rectangle.\n  overload: System.Windows.Rect.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Width\n  commentId: P:System.Windows.Rect.Width\n  id: Width\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Width\n  nameWithType: Rect.Width\n  fullName: Rect.Width\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the width of the rectangle.\n  remarks: The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>. The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Width { get; set; }\n    return:\n      type: System.Double\n      description: A positive number that represents the width of the rectangle. The default is 0.\n  overload: System.Windows.Rect.Width*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <xref href=\"System.Windows.Rect.Width\"></xref> is set to a negative value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Windows.Rect.Width\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.X\n  commentId: P:System.Windows.Rect.X\n  id: X\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: X\n  nameWithType: Rect.X\n  fullName: Rect.X\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the x-axis value of the left side of the rectangle.\n  remarks: Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double X { get; set; }\n    return:\n      type: System.Double\n      description: The x-axis value of the left side of the rectangle.\n  overload: System.Windows.Rect.X*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Windows.Rect.X\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.Y\n  commentId: P:System.Windows.Rect.Y\n  id: Y\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Rect.Y\n  fullName: Rect.Y\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the y-axis value of the top side of the rectangle.\n  remarks: Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.  \\n  \\n [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]\\n [!code-xml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  \\n  \\n The following example shows how to use code to create a rectangle and add it to the page. The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.  \\n  \\n [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]\"\n  syntax:\n    content: public double Y { get; set; }\n    return:\n      type: System.Double\n      description: The y-axis value of the top side of the rectangle.\n  overload: System.Windows.Rect.Y*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Windows.Rect.Y\"></xref> is set on an <xref href=\"System.Windows.Rect.Empty\"></xref> rectangle.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Rect\n  langs:\n  - csharp\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Rect.IFormattable.ToString(String, IFormatProvider)\n  fullName: Rect.IFormattable.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Formats the value of the current instance using the specified format.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: \"The format to use.  \\n  \\n -or-  \\n  \\n A null reference (`Nothing` in Visual Basic) to use the default format defined for the type of the <xref href=\\\"System.IFormattable\\\"></xref> implementation.\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"The provider to use to format the value.  \\n  \\n -or-  \\n  \\n A null reference (`Nothing` in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.\"\n    return:\n      type: System.String\n      description: A string representation of the rectangle.\n  overload: System.Windows.Rect.System#IFormattable#ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Rect.#ctor(System.Windows.Size)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Rect(Size)\n  nameWithType: Rect.Rect(Size)\n  fullName: Rect.Rect(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Rect(Point, Point)\n  nameWithType: Rect.Rect(Point, Point)\n  fullName: Rect.Rect(Point, Point)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Rect(Point, Size)\n  nameWithType: Rect.Rect(Point, Size)\n  fullName: Rect.Rect(Point, Size)\n- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Rect(Point, Vector)\n  nameWithType: Rect.Rect(Point, Vector)\n  fullName: Rect.Rect(Point, Vector)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Rect(Double, Double, Double, Double)\n  nameWithType: Rect.Rect(Double, Double, Double, Double)\n  fullName: Rect.Rect(Double, Double, Double, Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Rect.Bottom\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Bottom\n  nameWithType: Rect.Bottom\n  fullName: Rect.Bottom\n- uid: System.Windows.Rect.BottomLeft\n  parent: System.Windows.Rect\n  isExternal: false\n  name: BottomLeft\n  nameWithType: Rect.BottomLeft\n  fullName: Rect.BottomLeft\n- uid: System.Windows.Rect.BottomRight\n  parent: System.Windows.Rect\n  isExternal: false\n  name: BottomRight\n  nameWithType: Rect.BottomRight\n  fullName: Rect.BottomRight\n- uid: System.Windows.Rect.Contains(System.Windows.Point)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Contains(Point)\n  nameWithType: Rect.Contains(Point)\n  fullName: Rect.Contains(Point)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Rect.Contains(System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Contains(Rect)\n  nameWithType: Rect.Contains(Rect)\n  fullName: Rect.Contains(Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Rect.Contains(System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Contains(Double, Double)\n  nameWithType: Rect.Contains(Double, Double)\n  fullName: Rect.Contains(Double, Double)\n- uid: System.Windows.Rect.Empty\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Empty\n  nameWithType: Rect.Empty\n  fullName: Rect.Empty\n- uid: System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Equals(Rect, Rect)\n  nameWithType: Rect.Equals(Rect, Rect)\n  fullName: Rect.Equals(Rect, Rect)\n- uid: System.Windows.Rect.Equals(System.Object)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Rect.Equals(Object)\n  fullName: Rect.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Rect.Equals(System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Equals(Rect)\n  nameWithType: Rect.Equals(Rect)\n  fullName: Rect.Equals(Rect)\n- uid: System.Windows.Rect.GetHashCode\n  parent: System.Windows.Rect\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Rect.GetHashCode()\n  fullName: Rect.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Rect.Height\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Height\n  nameWithType: Rect.Height\n  fullName: Rect.Height\n- uid: System.Windows.Rect.Inflate(System.Windows.Size)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Inflate(Size)\n  nameWithType: Rect.Inflate(Size)\n  fullName: Rect.Inflate(Size)\n- uid: System.Windows.Rect.Inflate(System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Inflate(Double, Double)\n  nameWithType: Rect.Inflate(Double, Double)\n  fullName: Rect.Inflate(Double, Double)\n- uid: System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Inflate(Rect, Size)\n  nameWithType: Rect.Inflate(Rect, Size)\n  fullName: Rect.Inflate(Rect, Size)\n- uid: System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Inflate(Rect, Double, Double)\n  nameWithType: Rect.Inflate(Rect, Double, Double)\n  fullName: Rect.Inflate(Rect, Double, Double)\n- uid: System.Windows.Rect.Intersect(System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Intersect(Rect)\n  nameWithType: Rect.Intersect(Rect)\n  fullName: Rect.Intersect(Rect)\n- uid: System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Intersect(Rect, Rect)\n  nameWithType: Rect.Intersect(Rect, Rect)\n  fullName: Rect.Intersect(Rect, Rect)\n- uid: System.Windows.Rect.IntersectsWith(System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: IntersectsWith(Rect)\n  nameWithType: Rect.IntersectsWith(Rect)\n  fullName: Rect.IntersectsWith(Rect)\n- uid: System.Windows.Rect.IsEmpty\n  parent: System.Windows.Rect\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Rect.IsEmpty\n  fullName: Rect.IsEmpty\n- uid: System.Windows.Rect.Left\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Left\n  nameWithType: Rect.Left\n  fullName: Rect.Left\n- uid: System.Windows.Rect.Location\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Location\n  nameWithType: Rect.Location\n  fullName: Rect.Location\n- uid: System.Windows.Rect.Offset(System.Windows.Vector)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Offset(Vector)\n  nameWithType: Rect.Offset(Vector)\n  fullName: Rect.Offset(Vector)\n- uid: System.Windows.Rect.Offset(System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Offset(Double, Double)\n  nameWithType: Rect.Offset(Double, Double)\n  fullName: Rect.Offset(Double, Double)\n- uid: System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Offset(Rect, Vector)\n  nameWithType: Rect.Offset(Rect, Vector)\n  fullName: Rect.Offset(Rect, Vector)\n- uid: System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Offset(Rect, Double, Double)\n  nameWithType: Rect.Offset(Rect, Double, Double)\n  fullName: Rect.Offset(Rect, Double, Double)\n- uid: System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: op_Equality(Rect, Rect)\n  nameWithType: Rect.op_Equality(Rect, Rect)\n  fullName: Rect.op_Equality(Rect, Rect)\n- uid: System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: op_Inequality(Rect, Rect)\n  nameWithType: Rect.op_Inequality(Rect, Rect)\n  fullName: Rect.op_Inequality(Rect, Rect)\n- uid: System.Windows.Rect.Parse(System.String)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Rect.Parse(String)\n  fullName: Rect.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Rect.Right\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Right\n  nameWithType: Rect.Right\n  fullName: Rect.Right\n- uid: System.Windows.Rect.Scale(System.Double,System.Double)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Scale(Double, Double)\n  nameWithType: Rect.Scale(Double, Double)\n  fullName: Rect.Scale(Double, Double)\n- uid: System.Windows.Rect.Size\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Size\n  nameWithType: Rect.Size\n  fullName: Rect.Size\n- uid: System.Windows.Rect.Top\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Top\n  nameWithType: Rect.Top\n  fullName: Rect.Top\n- uid: System.Windows.Rect.TopLeft\n  parent: System.Windows.Rect\n  isExternal: false\n  name: TopLeft\n  nameWithType: Rect.TopLeft\n  fullName: Rect.TopLeft\n- uid: System.Windows.Rect.TopRight\n  parent: System.Windows.Rect\n  isExternal: false\n  name: TopRight\n  nameWithType: Rect.TopRight\n  fullName: Rect.TopRight\n- uid: System.Windows.Rect.ToString\n  parent: System.Windows.Rect\n  isExternal: false\n  name: ToString()\n  nameWithType: Rect.ToString()\n  fullName: Rect.ToString()\n- uid: System.Windows.Rect.ToString(System.IFormatProvider)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Rect.ToString(IFormatProvider)\n  fullName: Rect.ToString(IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Rect.Transform(System.Windows.Media.Matrix)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Transform(Matrix)\n  nameWithType: Rect.Transform(Matrix)\n  fullName: Rect.Transform(Matrix)\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Transform(Rect, Matrix)\n  nameWithType: Rect.Transform(Rect, Matrix)\n  fullName: Rect.Transform(Rect, Matrix)\n- uid: System.Windows.Rect.Union(System.Windows.Point)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Union(Point)\n  nameWithType: Rect.Union(Point)\n  fullName: Rect.Union(Point)\n- uid: System.Windows.Rect.Union(System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Union(Rect)\n  nameWithType: Rect.Union(Rect)\n  fullName: Rect.Union(Rect)\n- uid: System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Union(Rect, Point)\n  nameWithType: Rect.Union(Rect, Point)\n  fullName: Rect.Union(Rect, Point)\n- uid: System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Union(Rect, Rect)\n  nameWithType: Rect.Union(Rect, Rect)\n  fullName: Rect.Union(Rect, Rect)\n- uid: System.Windows.Rect.Width\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Width\n  nameWithType: Rect.Width\n  fullName: Rect.Width\n- uid: System.Windows.Rect.X\n  parent: System.Windows.Rect\n  isExternal: false\n  name: X\n  nameWithType: Rect.X\n  fullName: Rect.X\n- uid: System.Windows.Rect.Y\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Y\n  nameWithType: Rect.Y\n  fullName: Rect.Y\n- uid: System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Rect\n  isExternal: false\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Rect.IFormattable.ToString(String, IFormatProvider)\n  fullName: Rect.IFormattable.ToString(String, IFormatProvider)\n- uid: System.Windows.Rect.#ctor*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Rect\n  nameWithType: Rect.Rect\n  fullName: Rect.Rect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Bottom*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Bottom\n  nameWithType: Rect.Bottom\n  fullName: Rect.Bottom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.BottomLeft*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: BottomLeft\n  nameWithType: Rect.BottomLeft\n  fullName: Rect.BottomLeft\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.BottomRight*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: BottomRight\n  nameWithType: Rect.BottomRight\n  fullName: Rect.BottomRight\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Contains*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Contains\n  nameWithType: Rect.Contains\n  fullName: Rect.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Empty*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Empty\n  nameWithType: Rect.Empty\n  fullName: Rect.Empty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Equals*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Equals\n  nameWithType: Rect.Equals\n  fullName: Rect.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.GetHashCode*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Rect.GetHashCode\n  fullName: Rect.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Height*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Height\n  nameWithType: Rect.Height\n  fullName: Rect.Height\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Inflate*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Inflate\n  nameWithType: Rect.Inflate\n  fullName: Rect.Inflate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Intersect*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Intersect\n  nameWithType: Rect.Intersect\n  fullName: Rect.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.IntersectsWith*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: IntersectsWith\n  nameWithType: Rect.IntersectsWith\n  fullName: Rect.IntersectsWith\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.IsEmpty*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Rect.IsEmpty\n  fullName: Rect.IsEmpty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Left*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Left\n  nameWithType: Rect.Left\n  fullName: Rect.Left\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Location*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Location\n  nameWithType: Rect.Location\n  fullName: Rect.Location\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Offset*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Offset\n  nameWithType: Rect.Offset\n  fullName: Rect.Offset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.op_Equality*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: op_Equality\n  nameWithType: Rect.op_Equality\n  fullName: Rect.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.op_Inequality*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Rect.op_Inequality\n  fullName: Rect.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Parse*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Parse\n  nameWithType: Rect.Parse\n  fullName: Rect.Parse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Right*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Right\n  nameWithType: Rect.Right\n  fullName: Rect.Right\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Scale*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Scale\n  nameWithType: Rect.Scale\n  fullName: Rect.Scale\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Size*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Size\n  nameWithType: Rect.Size\n  fullName: Rect.Size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Top*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Top\n  nameWithType: Rect.Top\n  fullName: Rect.Top\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.TopLeft*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: TopLeft\n  nameWithType: Rect.TopLeft\n  fullName: Rect.TopLeft\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.TopRight*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: TopRight\n  nameWithType: Rect.TopRight\n  fullName: Rect.TopRight\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.ToString*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: ToString\n  nameWithType: Rect.ToString\n  fullName: Rect.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Transform*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Transform\n  nameWithType: Rect.Transform\n  fullName: Rect.Transform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Union*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Union\n  nameWithType: Rect.Union\n  fullName: Rect.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Width*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Width\n  nameWithType: Rect.Width\n  fullName: Rect.Width\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.X*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: X\n  nameWithType: Rect.X\n  fullName: Rect.X\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.Y*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: Y\n  nameWithType: Rect.Y\n  fullName: Rect.Y\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.Windows.Rect.System#IFormattable#ToString*\n  parent: System.Windows.Rect\n  isExternal: false\n  name: System.IFormattable.ToString\n  nameWithType: Rect.System.IFormattable.ToString\n  fullName: Rect.System.IFormattable.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Rect.xml\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n"}