{"nodes":[{"content":"An activity that demarcates a transaction boundary.","nodes":[{"pos":[0,51],"content":"An activity that demarcates a transaction boundary.","nodes":[{"content":"An activity that demarcates a transaction boundary.","pos":[0,51]}]}],"pos":[1164,1216],"yaml":true},{"content":"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.  \n  \n> [!NOTE]\n>  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.","nodes":[{"pos":[0,240],"content":"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.","nodes":[{"content":"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.","pos":[0,240],"nodes":[{"content":"When this activity begins executing, a new <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> is started if one does not already exist.","pos":[0,123],"source":"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist."},{"content":"The transaction commits when the activity and all other participants in the transaction have completed successfully.","pos":[124,240]}]}]},{"pos":[248,595],"content":"[!NOTE]\n The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.TryCatch.Finally%2A&gt;</ph> activity member of a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity that is the child of a <ph id=\"ph3\">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph> will not execute if an unhandled exception propagates past the <ph id=\"ph4\">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph> boundary.","pos":[9,345],"source":" The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary."}]}],"pos":[1227,1828],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> class."}],"pos":[4879,4987],"yaml":true},{"content":"Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.","nodes":[{"pos":[0,103],"content":"Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.","nodes":[{"content":"Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.","pos":[0,103]}]}],"pos":[6677,6781],"yaml":true},{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,123],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[6792,6916],"yaml":true,"extradata":"MT"},{"content":"`true` if the workflow should be aborted.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">`true`</ph> if the workflow should be aborted.","source":"`true` if the workflow should be aborted."}],"pos":[7057,7101],"yaml":true},{"content":"Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes.","nodes":[{"pos":[0,129],"content":"Gets or sets the activity that is scheduled when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph> executes.","source":"Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes."}],"pos":[8171,8301],"yaml":true},{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,123],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[8312,8436],"yaml":true,"extradata":"MT"},{"content":"The activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes.","nodes":[{"pos":[0,116],"content":"The activity that is scheduled when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph> executes.","source":"The activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes."}],"pos":[8582,8699],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.","nodes":[{"pos":[0,149],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Transactions.IsolationLevel\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."}],"pos":[13665,13815],"yaml":true},{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,123],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[13826,13950],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.","nodes":[{"pos":[0,136],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Transactions.IsolationLevel\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."}],"pos":[14122,14259],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized.","nodes":[{"pos":[0,201],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph> should be serialized.","source":"Indicates whether the <xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized."}],"pos":[15447,15649],"yaml":true},{"content":"`true` if the <xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,152],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[15795,15950],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Activities.Statements.TransactionScope.Timeout\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized.","nodes":[{"pos":[0,194],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TransactionScope.Timeout\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph> should be serialized.","source":"Indicates whether the <xref href=\"System.Activities.Statements.TransactionScope.Timeout\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized."}],"pos":[17128,17323],"yaml":true},{"content":"`true` if the <xref href=\"System.Activities.Statements.TransactionScope.Timeout\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,145],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope.Timeout\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Activities.Statements.TransactionScope.Timeout\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[17462,17610],"yaml":true},{"content":"Gets or sets the <xref href=\"System.TimeSpan\"></xref> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.","nodes":[{"pos":[0,189],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that indicates the timeout period for the transaction used for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.TimeSpan\"></xref> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."}],"pos":[18687,18877],"yaml":true},{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,123],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[18888,19012],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.","nodes":[{"pos":[0,176],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that indicates the timeout period for the transaction used for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.TimeSpan\"></xref> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."}],"pos":[19622,19799],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TransactionScope\n  commentId: T:System.Activities.Statements.TransactionScope\n  id: TransactionScope\n  children:\n  - System.Activities.Statements.TransactionScope.#ctor\n  - System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  - System.Activities.Statements.TransactionScope.Body\n  - System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TransactionScope.CanInduceIdle\n  - System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TransactionScope.IsolationLevel\n  - System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  - System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  - System.Activities.Statements.TransactionScope.Timeout\n  langs:\n  - csharp\n  name: TransactionScope\n  nameWithType: TransactionScope\n  fullName: System.Activities.Statements.TransactionScope\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: An activity that demarcates a transaction boundary.\n  remarks: \"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.\"\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/docs/framework/windows-workflow-foundation/samples/basic-transactionscope.md) sample.  \\n  \\n [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class TransactionScope : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.#ctor\n  commentId: M:System.Activities.Statements.TransactionScope.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: TransactionScope()\n  nameWithType: TransactionScope.TransactionScope()\n  fullName: TransactionScope.TransactionScope()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/docs/framework/windows-workflow-foundation/samples/basic-transactionscope.md) sample.  \\n  \\n [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]\"\n  syntax:\n    content: public TransactionScope ();\n    parameters: []\n  overload: System.Activities.Statements.TransactionScope.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  commentId: P:System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  id: AbortInstanceOnTransactionFailure\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure\n  fullName: TransactionScope.AbortInstanceOnTransactionFailure\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public bool AbortInstanceOnTransactionFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the workflow should be aborted.'\n  overload: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.Body\n  commentId: P:System.Activities.Statements.TransactionScope.Body\n  id: Body\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: Body\n  nameWithType: TransactionScope.Body\n  fullName: TransactionScope.Body\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes.\n  overload: System.Activities.Statements.TransactionScope.Body*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TransactionScope.CacheMetadata(NativeActivityMetadata)\n  fullName: TransactionScope.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.TransactionScope.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.CanInduceIdle\n  commentId: P:System.Activities.Statements.TransactionScope.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: TransactionScope.CanInduceIdle\n  fullName: TransactionScope.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Activities.Statements.TransactionScope.CanInduceIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TransactionScope.Execute(NativeActivityContext)\n  fullName: TransactionScope.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.TransactionScope.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.IsolationLevel\n  commentId: P:System.Activities.Statements.TransactionScope.IsolationLevel\n  id: IsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: IsolationLevel\n  nameWithType: TransactionScope.IsolationLevel\n  fullName: TransactionScope.IsolationLevel\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Transactions.IsolationLevel IsolationLevel { get; set; }\n    return:\n      type: System.Transactions.IsolationLevel\n      description: The <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  overload: System.Activities.Statements.TransactionScope.IsolationLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  commentId: M:System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  id: ShouldSerializeIsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: ShouldSerializeIsolationLevel()\n  nameWithType: TransactionScope.ShouldSerializeIsolationLevel()\n  fullName: TransactionScope.ShouldSerializeIsolationLevel()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Indicates whether the <xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized.\n  syntax:\n    content: public bool ShouldSerializeIsolationLevel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Activities.Statements.TransactionScope.IsolationLevel\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  commentId: M:System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  id: ShouldSerializeTimeout\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: ShouldSerializeTimeout()\n  nameWithType: TransactionScope.ShouldSerializeTimeout()\n  fullName: TransactionScope.ShouldSerializeTimeout()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Indicates whether the <xref href=\"System.Activities.Statements.TransactionScope.Timeout\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized.\n  syntax:\n    content: public bool ShouldSerializeTimeout ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Activities.Statements.TransactionScope.Timeout\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TransactionScope.Timeout\n  commentId: P:System.Activities.Statements.TransactionScope.Timeout\n  id: Timeout\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: TransactionScope.Timeout\n  fullName: TransactionScope.Timeout\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.TimeSpan\"></xref> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  example:\n  - \"The following code sample demonstrates setting the Timeout property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/docs/framework/windows-workflow-foundation/samples/basic-transactionscope.md) sample.  \\n  \\n [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]\"\n  syntax:\n    content: public System.Activities.InArgument<TimeSpan> Timeout { get; set; }\n    return:\n      type: System.Activities.InArgument{System.TimeSpan}\n      description: The <xref href=\"System.TimeSpan\"></xref> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  overload: System.Activities.Statements.TransactionScope.Timeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TransactionScope.#ctor\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: TransactionScope()\n  nameWithType: TransactionScope.TransactionScope()\n  fullName: TransactionScope.TransactionScope()\n- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure\n  fullName: TransactionScope.AbortInstanceOnTransactionFailure\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.TransactionScope.Body\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Body\n  nameWithType: TransactionScope.Body\n  fullName: TransactionScope.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TransactionScope.CacheMetadata(NativeActivityMetadata)\n  fullName: TransactionScope.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TransactionScope.CanInduceIdle\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: TransactionScope.CanInduceIdle\n  fullName: TransactionScope.CanInduceIdle\n- uid: System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TransactionScope.Execute(NativeActivityContext)\n  fullName: TransactionScope.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TransactionScope.IsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: TransactionScope.IsolationLevel\n  fullName: TransactionScope.IsolationLevel\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeIsolationLevel()\n  nameWithType: TransactionScope.ShouldSerializeIsolationLevel()\n  fullName: TransactionScope.ShouldSerializeIsolationLevel()\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeTimeout()\n  nameWithType: TransactionScope.ShouldSerializeTimeout()\n  fullName: TransactionScope.ShouldSerializeTimeout()\n- uid: System.Activities.Statements.TransactionScope.Timeout\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Timeout\n  nameWithType: TransactionScope.Timeout\n  fullName: TransactionScope.Timeout\n- uid: System.Activities.InArgument`1\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.TimeSpan\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Activities.InArgument{System.TimeSpan}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TimeSpan>\n  nameWithType: InArgument<TimeSpan>\n  fullName: System.Activities.InArgument<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: System.Activities.InArgument\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TransactionScope.#ctor*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: TransactionScope\n  nameWithType: TransactionScope.TransactionScope\n  fullName: TransactionScope.TransactionScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure\n  fullName: TransactionScope.AbortInstanceOnTransactionFailure\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.Body*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Body\n  nameWithType: TransactionScope.Body\n  fullName: TransactionScope.Body\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.CacheMetadata*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TransactionScope.CacheMetadata\n  fullName: TransactionScope.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.CanInduceIdle*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: TransactionScope.CanInduceIdle\n  fullName: TransactionScope.CanInduceIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.Execute*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Execute\n  nameWithType: TransactionScope.Execute\n  fullName: TransactionScope.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.IsolationLevel*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: TransactionScope.IsolationLevel\n  fullName: TransactionScope.IsolationLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeIsolationLevel\n  nameWithType: TransactionScope.ShouldSerializeIsolationLevel\n  fullName: TransactionScope.ShouldSerializeIsolationLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeTimeout\n  nameWithType: TransactionScope.ShouldSerializeTimeout\n  fullName: TransactionScope.ShouldSerializeTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Activities.Statements.TransactionScope.Timeout*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Timeout\n  nameWithType: TransactionScope.Timeout\n  fullName: TransactionScope.Timeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}