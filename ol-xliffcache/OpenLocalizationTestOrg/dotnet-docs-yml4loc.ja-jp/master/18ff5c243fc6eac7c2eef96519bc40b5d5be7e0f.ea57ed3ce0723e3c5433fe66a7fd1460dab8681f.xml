{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event, which occurs during a drag operation.","nodes":[{"pos":[0,129],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GiveFeedback\"&gt;&lt;/xref&gt;</ph> event, which occurs during a drag operation.","source":"Provides data for the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event, which occurs during a drag operation."}],"pos":[650,780],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation. It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.  \n  \n For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,392],"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation. It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation. It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.","pos":[0,392],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event occurs during a drag operation.","pos":[0,90],"source":"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation."},{"content":"It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","pos":[91,249]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> object specifies the type of drag-and-drop operation and whether default cursors are used.","pos":[250,392],"source":" A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used."}]}]},{"pos":[399,523],"content":"For information about the event model, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[791,1319],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> class."}],"pos":[5969,6074],"yaml":true},{"content":"The type of drag-and-drop operation. Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>.","nodes":[{"pos":[0,197],"content":"The type of drag-and-drop operation. Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>.","nodes":[{"content":"The type of drag-and-drop operation.","pos":[0,36]},{"content":"Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragDropEffects\"&gt;&lt;/xref&gt;</ph>.","pos":[37,197],"source":" Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>."}]}],"pos":[6298,6496],"yaml":true},{"content":"`true` if default pointers are used; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if default pointers are used; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if default pointers are used; otherwise, `false`."}],"pos":[6570,6629],"yaml":true},{"content":"Gets the drag-and-drop operation feedback that is displayed.","nodes":[{"pos":[0,60],"content":"Gets the drag-and-drop operation feedback that is displayed.","nodes":[{"content":"Gets the drag-and-drop operation feedback that is displayed.","pos":[0,60]}]}],"pos":[7660,7721],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values.","nodes":[{"pos":[0,76],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragDropEffects\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values."}],"pos":[10709,10786],"yaml":true},{"content":"Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.","nodes":[{"pos":[0,110],"content":"Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.","nodes":[{"content":"Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.","pos":[0,110]}]}],"pos":[11884,11995],"yaml":true},{"content":"The system provides default drag-drop cursors for different drag-drop operations such as move or copy. If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.","nodes":[{"pos":[0,271],"content":"The system provides default drag-drop cursors for different drag-drop operations such as move or copy. If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.","nodes":[{"content":"The system provides default drag-drop cursors for different drag-drop operations such as move or copy.","pos":[0,102]},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A&gt;</ph> is set to <ph id=\"ph2\">`false`</ph>, it is the responsibility of the event source to set the appropriate cursor.","pos":[103,271],"source":" If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor."}]}],"pos":[12006,12278],"yaml":true,"extradata":"MT"},{"content":"`true` if the default pointers are used; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the default pointers are used; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the default pointers are used; otherwise, `false`."}],"pos":[15214,15277],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.GiveFeedbackEventArgs\n  commentId: T:System.Windows.Forms.GiveFeedbackEventArgs\n  id: GiveFeedbackEventArgs\n  children:\n  - System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  - System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  - System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  langs:\n  - csharp\n  name: GiveFeedbackEventArgs\n  nameWithType: GiveFeedbackEventArgs\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides data for the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event, which occurs during a drag operation.\n  remarks: \"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation. It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.  \\n  \\n For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class GiveFeedbackEventArgs : EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  commentId: M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  id: '#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)'\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  langs:\n  - csharp\n  name: GiveFeedbackEventArgs(DragDropEffects, Boolean)\n  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects, Boolean)\n  fullName: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> class.\n  syntax:\n    content: public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);\n    parameters:\n    - id: effect\n      type: System.Windows.Forms.DragDropEffects\n      description: The type of drag-and-drop operation. Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>.\n    - id: useDefaultCursors\n      type: System.Boolean\n      description: '`true` if default pointers are used; otherwise, `false`.'\n  overload: System.Windows.Forms.GiveFeedbackEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  commentId: P:System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  id: Effect\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  langs:\n  - csharp\n  name: Effect\n  nameWithType: GiveFeedbackEventArgs.Effect\n  fullName: GiveFeedbackEventArgs.Effect\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the drag-and-drop operation feedback that is displayed.\n  remarks: ''\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]\"\n  syntax:\n    content: public System.Windows.Forms.DragDropEffects Effect { get; }\n    return:\n      type: System.Windows.Forms.DragDropEffects\n      description: One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values.\n  overload: System.Windows.Forms.GiveFeedbackEventArgs.Effect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  commentId: P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  id: UseDefaultCursors\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  langs:\n  - csharp\n  name: UseDefaultCursors\n  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors\n  fullName: GiveFeedbackEventArgs.UseDefaultCursors\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.\n  remarks: The system provides default drag-drop cursors for different drag-drop operations such as move or copy. If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]\"\n  syntax:\n    content: public bool UseDefaultCursors { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the default pointers are used; otherwise, `false`.'\n  overload: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: GiveFeedbackEventArgs(DragDropEffects, Boolean)\n  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects, Boolean)\n  fullName: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects, Boolean)\n- uid: System.Windows.Forms.DragDropEffects\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragDropEffects\n  nameWithType: DragDropEffects\n  fullName: System.Windows.Forms.DragDropEffects\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: Effect\n  nameWithType: GiveFeedbackEventArgs.Effect\n  fullName: GiveFeedbackEventArgs.Effect\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: UseDefaultCursors\n  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors\n  fullName: GiveFeedbackEventArgs.UseDefaultCursors\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor*\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: GiveFeedbackEventArgs\n  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs\n  fullName: GiveFeedbackEventArgs.GiveFeedbackEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect*\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: Effect\n  nameWithType: GiveFeedbackEventArgs.Effect\n  fullName: GiveFeedbackEventArgs.Effect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors*\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: UseDefaultCursors\n  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors\n  fullName: GiveFeedbackEventArgs.UseDefaultCursors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/GiveFeedbackEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}