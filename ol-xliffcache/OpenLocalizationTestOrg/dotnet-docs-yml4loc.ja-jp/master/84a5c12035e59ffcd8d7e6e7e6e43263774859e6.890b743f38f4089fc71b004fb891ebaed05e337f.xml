{"nodes":[{"content":"Provides data for the <xref href=\"System.Diagnostics.Process.OutputDataReceived\"></xref> and <xref href=\"System.Diagnostics.Process.ErrorDataReceived\"></xref> events.","nodes":[{"pos":[0,166],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Process.OutputDataReceived\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Process.ErrorDataReceived\"&gt;&lt;/xref&gt;</ph> events.","source":"Provides data for the <xref href=\"System.Diagnostics.Process.OutputDataReceived\"></xref> and <xref href=\"System.Diagnostics.Process.ErrorDataReceived\"></xref> events."}],"pos":[500,667],"yaml":true},{"content":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.","nodes":[{"pos":[0,588],"content":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.","nodes":[{"content":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.","pos":[0,588],"nodes":[{"content":"To asynchronously collect the redirected <ph id=\"ph1\">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream output of a process, you must create a method that handles the redirected stream output events.","pos":[0,249],"source":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events."},{"content":"The event-handler method is called when the process writes to the redirected stream.","pos":[250,334]},{"content":"The event delegate calls your event handler with an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DataReceivedEventArgs&gt;</ph>.","pos":[335,447],"source":" The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property contains the text line that the process wrote to the redirected stream.","pos":[448,588],"source":" The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream."}]}]}],"pos":[678,1267],"yaml":true,"extradata":"MT"},{"content":"Gets the line of characters that was written to a redirected <xref href=\"System.Diagnostics.Process\"></xref> output stream.","nodes":[{"pos":[0,123],"content":"Gets the line of characters that was written to a redirected <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Process\"&gt;&lt;/xref&gt;</ph> output stream.","source":"Gets the line of characters that was written to a redirected <xref href=\"System.Diagnostics.Process\"></xref> output stream."}],"pos":[3950,4074],"yaml":true},{"content":"When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream. Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location. For example, you might create an event handler that stores all error output lines into a designated error log file.  \n  \n A line is defined as a sequence of characters followed by a line feed (\"\\n\") or a carriage return immediately followed by a line feed (\"\\r\\n\"). The line characters are encoded using the default system ANSI code page. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.  \n  \n When the redirected stream is closed, a null line is sent to the event handler. Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it. For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.","nodes":[{"pos":[0,719],"content":"When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream. Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location. For example, you might create an event handler that stores all error output lines into a designated error log file.","nodes":[{"content":"When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream. Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location. For example, you might create an event handler that stores all error output lines into a designated error log file.","pos":[0,719],"nodes":[{"content":"When you redirect the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream of a <ph id=\"ph3\">&lt;xref:System.Diagnostics.Process&gt;</ph> to your event handler, an event is raised each time the process writes a line to the redirected stream.","pos":[0,277],"source":"When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property is the line that the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Process&gt;</ph> wrote to the redirected output stream.","pos":[278,440],"source":" The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream."},{"content":"Your event handler can use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property to filter process output or write output to an alternate location.","pos":[441,603],"source":" Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location."},{"content":"For example, you might create an event handler that stores all error output lines into a designated error log file.","pos":[604,719]}]}]},{"pos":[726,1074],"content":"A line is defined as a sequence of characters followed by a line feed (\"\\n\") or a carriage return immediately followed by a line feed (\"\\r\\n\"). The line characters are encoded using the default system ANSI code page. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.","nodes":[{"content":"A line is defined as a sequence of characters followed by a line feed (\"\\n\") or a carriage return immediately followed by a line feed (\"\\r\\n\"). The line characters are encoded using the default system ANSI code page. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.","pos":[0,348],"nodes":[{"content":"A line is defined as a sequence of characters followed by a line feed (\"\\n\") or a carriage return immediately followed by a line feed (\"\\r\\n\").","pos":[0,143]},{"content":"The line characters are encoded using the default system ANSI code page.","pos":[144,216]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property does not include the terminating carriage return or line feed.","pos":[217,348],"source":" The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed."}]}]},{"pos":[1081,1507],"content":"When the redirected stream is closed, a null line is sent to the event handler. Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it. For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.","nodes":[{"content":"When the redirected stream is closed, a null line is sent to the event handler. Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it. For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.","pos":[0,426],"nodes":[{"content":"When the redirected stream is closed, a null line is sent to the event handler.","pos":[0,79]},{"content":"Ensure your event handler checks the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property appropriately before accessing it.","pos":[80,216],"source":" Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it."},{"content":"For example, you can use the static method <ph id=\"ph1\">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName&gt;</ph> to validate the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property in your event handler.","pos":[217,426],"source":" For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler."}]}]}],"pos":[4085,5606],"yaml":true,"extradata":"MT"},{"content":"The line that was written by an associated <xref href=\"System.Diagnostics.Process\"></xref> to its redirected <xref href=\"System.Diagnostics.Process.StandardOutput\"></xref> or <xref href=\"System.Diagnostics.Process.StandardError\"></xref> stream.","nodes":[{"pos":[0,244],"content":"The line that was written by an associated <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Process\"&gt;&lt;/xref&gt;</ph> to its redirected <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Process.StandardOutput\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.Process.StandardError\"&gt;&lt;/xref&gt;</ph> stream.","source":"The line that was written by an associated <xref href=\"System.Diagnostics.Process\"></xref> to its redirected <xref href=\"System.Diagnostics.Process.StandardOutput\"></xref> or <xref href=\"System.Diagnostics.Process.StandardError\"></xref> stream."}],"pos":[6440,6685],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DataReceivedEventArgs\n  commentId: T:System.Diagnostics.DataReceivedEventArgs\n  id: DataReceivedEventArgs\n  children:\n  - System.Diagnostics.DataReceivedEventArgs.Data\n  langs:\n  - csharp\n  name: DataReceivedEventArgs\n  nameWithType: DataReceivedEventArgs\n  fullName: System.Diagnostics.DataReceivedEventArgs\n  type: Class\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Provides data for the <xref href=\"System.Diagnostics.Process.OutputDataReceived\"></xref> and <xref href=\"System.Diagnostics.Process.ErrorDataReceived\"></xref> events.\n  remarks: To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.\n  example:\n  - \"The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command. The `sort` command is a console application that reads and sorts text input.  \\n  \\n The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \\n  \\n [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]\\n [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]\\n [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]\"\n  syntax:\n    content: 'public class DataReceivedEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DataReceivedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DataReceivedEventArgs.Data\n  commentId: P:System.Diagnostics.DataReceivedEventArgs.Data\n  id: Data\n  parent: System.Diagnostics.DataReceivedEventArgs\n  langs:\n  - csharp\n  name: Data\n  nameWithType: DataReceivedEventArgs.Data\n  fullName: DataReceivedEventArgs.Data\n  type: Property\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the line of characters that was written to a redirected <xref href=\"System.Diagnostics.Process\"></xref> output stream.\n  remarks: \"When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream. Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location. For example, you might create an event handler that stores all error output lines into a designated error log file.  \\n  \\n A line is defined as a sequence of characters followed by a line feed (\\\"\\\\n\\\") or a carriage return immediately followed by a line feed (\\\"\\\\r\\\\n\\\"). The line characters are encoded using the default system ANSI code page. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.  \\n  \\n When the redirected stream is closed, a null line is sent to the event handler. Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it. For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.\"\n  example:\n  - \"The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \\n  \\n [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]\\n [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]\\n [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]\"\n  syntax:\n    content: public string Data { get; }\n    return:\n      type: System.String\n      description: The line that was written by an associated <xref href=\"System.Diagnostics.Process\"></xref> to its redirected <xref href=\"System.Diagnostics.Process.StandardOutput\"></xref> or <xref href=\"System.Diagnostics.Process.StandardError\"></xref> stream.\n  overload: System.Diagnostics.DataReceivedEventArgs.Data*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DataReceivedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Diagnostics.DataReceivedEventArgs.Data\n  parent: System.Diagnostics.DataReceivedEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DataReceivedEventArgs.Data\n  fullName: DataReceivedEventArgs.Data\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.DataReceivedEventArgs.Data*\n  parent: System.Diagnostics.DataReceivedEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DataReceivedEventArgs.Data\n  fullName: DataReceivedEventArgs.Data\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DataReceivedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}