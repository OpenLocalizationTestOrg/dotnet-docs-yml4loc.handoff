{"nodes":[{"content":"Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be inherited.","nodes":[{"pos":[0,157],"content":"Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be inherited.","nodes":[{"content":"Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be inherited.","pos":[0,157],"nodes":[{"content":"Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to.","pos":[0,125]},{"content":"This class cannot be inherited.","pos":[126,157]}]}]}],"pos":[1189,1347],"yaml":true},{"content":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object. This allows you to specify a serializer that is capable of serializing a custom type, for instance. Place this attribute on a class to indicate the serialization object to use when serializing the class.","nodes":[{"pos":[0,438],"content":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object. This allows you to specify a serializer that is capable of serializing a custom type, for instance. Place this attribute on a class to indicate the serialization object to use when serializing the class.","nodes":[{"content":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object. This allows you to specify a serializer that is capable of serializing a custom type, for instance. Place this attribute on a class to indicate the serialization object to use when serializing the class.","pos":[0,438],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt;</ph> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object.","pos":[0,234],"source":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object."},{"content":"This allows you to specify a serializer that is capable of serializing a custom type, for instance.","pos":[235,334]},{"content":"Place this attribute on a class to indicate the serialization object to use when serializing the class.","pos":[335,438]}]}]}],"pos":[1358,1797],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class."}],"pos":[7900,8033],"yaml":true},{"content":"The fully qualified name of the data type of the serializer.","nodes":[{"pos":[0,60],"content":"The fully qualified name of the data type of the serializer.","nodes":[{"content":"The fully qualified name of the data type of the serializer.","pos":[0,60]}]}],"pos":[8241,8302],"yaml":true},{"content":"The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","nodes":[{"pos":[0,168],"content":"The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","nodes":[{"content":"The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","pos":[0,168],"nodes":[{"content":"The fully qualified name of the base data type of the serializer.","pos":[0,65]},{"content":"Multiple serializers can be supplied for a class as long as the serializers have different base types.","pos":[66,168]}]}]}],"pos":[8380,8549],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class."}],"pos":[10180,10313],"yaml":true},{"content":"The fully qualified name of the data type of the serializer.","nodes":[{"pos":[0,60],"content":"The fully qualified name of the data type of the serializer.","nodes":[{"content":"The fully qualified name of the data type of the serializer.","pos":[0,60]}]}],"pos":[10515,10576],"yaml":true},{"content":"The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","nodes":[{"pos":[0,140],"content":"The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","nodes":[{"content":"The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","pos":[0,140],"nodes":[{"content":"The base data type of the serializer.","pos":[0,37]},{"content":"Multiple serializers can be supplied for a class as long as the serializers have different base types.","pos":[38,140]}]}]}],"pos":[10648,10789],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class."}],"pos":[12408,12541],"yaml":true},{"content":"The data type of the serializer.","nodes":[{"pos":[0,32],"content":"The data type of the serializer.","nodes":[{"content":"The data type of the serializer.","pos":[0,32]}]}],"pos":[12731,12764],"yaml":true},{"content":"The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","nodes":[{"pos":[0,140],"content":"The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","nodes":[{"content":"The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.","pos":[0,140],"nodes":[{"content":"The base data type of the serializer.","pos":[0,37]},{"content":"Multiple serializers can be supplied for a class as long as the serializers have different base types.","pos":[38,140]}]}]}],"pos":[12836,12977],"yaml":true},{"content":"Gets the fully qualified type name of the serializer base type.","nodes":[{"pos":[0,63],"content":"Gets the fully qualified type name of the serializer base type.","nodes":[{"content":"Gets the fully qualified type name of the serializer base type.","pos":[0,63]}]}],"pos":[14516,14580],"yaml":true},{"content":"The fully qualified type name of the serializer base type.","nodes":[{"pos":[0,58],"content":"The fully qualified type name of the serializer base type.","nodes":[{"content":"The fully qualified type name of the serializer base type.","pos":[0,58]}]}],"pos":[14706,14765],"yaml":true},{"content":"Gets the fully qualified type name of the serializer.","nodes":[{"pos":[0,53],"content":"Gets the fully qualified type name of the serializer.","nodes":[{"content":"Gets the fully qualified type name of the serializer.","pos":[0,53]}]}],"pos":[16297,16351],"yaml":true},{"content":"The fully qualified type name of the serializer.","nodes":[{"pos":[0,48],"content":"The fully qualified type name of the serializer.","nodes":[{"content":"The fully qualified type name of the serializer.","pos":[0,48]}]}],"pos":[16473,16522],"yaml":true},{"content":"Indicates a unique ID for this attribute type.","nodes":[{"pos":[0,46],"content":"Indicates a unique ID for this attribute type.","nodes":[{"content":"Indicates a unique ID for this attribute type.","pos":[0,46]}]}],"pos":[17978,18025],"yaml":true},{"content":"This ID is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","nodes":[{"pos":[0,285],"content":"This ID is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","nodes":[{"content":"This ID is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","pos":[0,285],"nodes":[{"content":"This ID is used by filtering algorithms to identify two attributes that are the same type.","pos":[0,90]},{"content":"For most attributes, this just returns the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> instance for the attribute.","pos":[91,180],"source":" For most attributes, this just returns the <xref:System.Type> instance for the attribute."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> overrides this to include the type of the editor base type.","pos":[181,285],"source":" <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type."}]}]}],"pos":[18036,18322],"yaml":true,"extradata":"MT"},{"content":"A unique ID for this attribute type.","nodes":[{"pos":[0,36],"content":"A unique ID for this attribute type.","nodes":[{"content":"A unique ID for this attribute type.","pos":[0,36]}]}],"pos":[18441,18478],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  commentId: T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  id: DesignerSerializerAttribute\n  children:\n  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)\n  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName\n  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName\n  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId\n  langs:\n  - csharp\n  name: DesignerSerializerAttribute\n  nameWithType: DesignerSerializerAttribute\n  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be inherited.\n  remarks: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object. This allows you to specify a serializer that is capable of serializing a custom type, for instance. Place this attribute on a class to indicate the serialization object to use when serializing the class.\n  example:\n  - \"The following code uses a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> to associate an example serializer with an example component.  \\n  \\n [!code-cpp[DesignerSerializerAttribute#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerSerializerAttribute/CPP/source.cpp#1)]\\n [!code-csharp[DesignerSerializerAttribute#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerSerializerAttribute/CS/source.cs#1)]\\n [!code-vb[DesignerSerializerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerSerializerAttribute/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]\n\n      public sealed class DesignerSerializerAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  langs:\n  - csharp\n  name: DesignerSerializerAttribute(String, String)\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String, String)\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class.\n  syntax:\n    content: public DesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName);\n    parameters:\n    - id: serializerTypeName\n      type: System.String\n      description: The fully qualified name of the data type of the serializer.\n    - id: baseSerializerTypeName\n      type: System.String\n      description: The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  langs:\n  - csharp\n  name: DesignerSerializerAttribute(String, Type)\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String, Type)\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute(String, Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class.\n  syntax:\n    content: public DesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType);\n    parameters:\n    - id: serializerTypeName\n      type: System.String\n      description: The fully qualified name of the data type of the serializer.\n    - id: baseSerializerType\n      type: System.Type\n      description: The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)\n  id: '#ctor(System.Type,System.Type)'\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  langs:\n  - csharp\n  name: DesignerSerializerAttribute(Type, Type)\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(Type, Type)\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute(Type, Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\"></xref> class.\n  syntax:\n    content: public DesignerSerializerAttribute (Type serializerType, Type baseSerializerType);\n    parameters:\n    - id: serializerType\n      type: System.Type\n      description: The data type of the serializer.\n    - id: baseSerializerType\n      type: System.Type\n      description: The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName\n  id: SerializerBaseTypeName\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  langs:\n  - csharp\n  name: SerializerBaseTypeName\n  nameWithType: DesignerSerializerAttribute.SerializerBaseTypeName\n  fullName: DesignerSerializerAttribute.SerializerBaseTypeName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the fully qualified type name of the serializer base type.\n  syntax:\n    content: public string SerializerBaseTypeName { get; }\n    return:\n      type: System.String\n      description: The fully qualified type name of the serializer base type.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName\n  id: SerializerTypeName\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  langs:\n  - csharp\n  name: SerializerTypeName\n  nameWithType: DesignerSerializerAttribute.SerializerTypeName\n  fullName: DesignerSerializerAttribute.SerializerTypeName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the fully qualified type name of the serializer.\n  syntax:\n    content: public string SerializerTypeName { get; }\n    return:\n      type: System.String\n      description: The fully qualified type name of the serializer.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: DesignerSerializerAttribute.TypeId\n  fullName: DesignerSerializerAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Indicates a unique ID for this attribute type.\n  remarks: This ID is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique ID for this attribute type.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: DesignerSerializerAttribute(String, String)\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String, String)\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: DesignerSerializerAttribute(String, Type)\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String, Type)\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute(String, Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: DesignerSerializerAttribute(Type, Type)\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(Type, Type)\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute(Type, Type)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: SerializerBaseTypeName\n  nameWithType: DesignerSerializerAttribute.SerializerBaseTypeName\n  fullName: DesignerSerializerAttribute.SerializerBaseTypeName\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: SerializerTypeName\n  nameWithType: DesignerSerializerAttribute.SerializerTypeName\n  fullName: DesignerSerializerAttribute.SerializerTypeName\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DesignerSerializerAttribute.TypeId\n  fullName: DesignerSerializerAttribute.TypeId\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: DesignerSerializerAttribute\n  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute\n  fullName: DesignerSerializerAttribute.DesignerSerializerAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: SerializerBaseTypeName\n  nameWithType: DesignerSerializerAttribute.SerializerBaseTypeName\n  fullName: DesignerSerializerAttribute.SerializerBaseTypeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: SerializerTypeName\n  nameWithType: DesignerSerializerAttribute.SerializerTypeName\n  fullName: DesignerSerializerAttribute.SerializerTypeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DesignerSerializerAttribute.TypeId\n  fullName: DesignerSerializerAttribute.TypeId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializerAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}