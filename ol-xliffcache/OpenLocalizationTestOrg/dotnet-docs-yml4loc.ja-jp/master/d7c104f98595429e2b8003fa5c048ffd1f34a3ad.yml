### YamlMime:ManagedReference
items:
- uid: System.UriTemplate
  commentId: T:System.UriTemplate
  id: UriTemplate
  children:
  - System.UriTemplate.#ctor(System.String)
  - System.UriTemplate.#ctor(System.String,System.Boolean)
  - System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)
  - System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)
  - System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)
  - System.UriTemplate.BindByPosition(System.Uri,System.String[])
  - System.UriTemplate.Defaults
  - System.UriTemplate.IgnoreTrailingSlash
  - System.UriTemplate.IsEquivalentTo(System.UriTemplate)
  - System.UriTemplate.Match(System.Uri,System.Uri)
  - System.UriTemplate.PathSegmentVariableNames
  - System.UriTemplate.QueryValueVariableNames
  - System.UriTemplate.ToString
  langs:
  - csharp
  name: UriTemplate
  nameWithType: UriTemplate
  fullName: System.UriTemplate
  type: Class
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: A class that represents a Uniform Resource Identifier (URI) template.
  remarks: "A URI template allows you to define a set of structurally similar URIs. Templates are composed of two parts, a path and a query. A path consists of a series of segments delimited by a slash (/). Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [*], which matches \"the rest of the path\"), which must appear at the end of the path. The query expression can be omitted entirely. If present, it specifies an unordered series of name/value pairs. Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}). Unpaired values are not permitted. The following examples show valid template strings:  \n  \n-   \"weather/WA/Seattle\"  \n  \n-   \"weather/{state}/{city}\"  \n  \n-   \"weather/*\"  \n  \n-   \"weather/{state}/{city}?forecast=today  \n  \n-   \"weather/{state}/{city}?forecast={day}  \n  \n The preceding URI templates might be used for organizing weather reports. Segments enclosed in curly braces are variables, everything else is a literal. You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values. For example, taking the template \"weather/{state}/{city}\" and putting in values for the variables \"{state}\" and \"{city}\" gives you \"weather/WA/Seattle\". Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>. You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>."
  example:
  - "The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.  \n  \n [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]\n [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]"
  syntax:
    content: public class UriTemplate
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.#ctor(System.String)
  commentId: M:System.UriTemplate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.UriTemplate
  langs:
  - csharp
  name: UriTemplate(String)
  nameWithType: UriTemplate.UriTemplate(String)
  fullName: UriTemplate.UriTemplate(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Initializes a new instance of the <xref href="System.UriTemplate"></xref> class with the specified template string.
  remarks: ''
  example:
  - "The following example shows how to call the constructor.  \n  \n [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]\n [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]"
  syntax:
    content: public UriTemplate (string template);
    parameters:
    - id: template
      type: System.String
      description: The template.
  overload: System.UriTemplate.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.#ctor(System.String,System.Boolean)
  commentId: M:System.UriTemplate.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.UriTemplate
  langs:
  - csharp
  name: UriTemplate(String, Boolean)
  nameWithType: UriTemplate.UriTemplate(String, Boolean)
  fullName: UriTemplate.UriTemplate(String, Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Initializes a new instance of the <xref href="System.UriTemplate"></xref> class.
  remarks: "When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI. For example, a template such as \"http://www.microsoft.com/customer/\" would match the following candidate URIs:  \n  \n-   \"http://www.microsoft.com/customer/\"  \n  \n-   \"http://www.microsoft.com/customer\"  \n  \n-   \"http://www.microsoft.com/customer/?wsdl\"  \n  \n-   \"http://www.microsoft.com/customer?wsdl\""
  syntax:
    content: public UriTemplate (string template, bool ignoreTrailingSlash);
    parameters:
    - id: template
      type: System.String
      description: The template string.
    - id: ignoreTrailingSlash
      type: System.Boolean
      description: A value that specifies whether trailing slash "/" characters should be ignored.
  overload: System.UriTemplate.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.UriTemplate
  langs:
  - csharp
  name: UriTemplate(String, IDictionary<String,String>)
  nameWithType: UriTemplate.UriTemplate(String, IDictionary<String,String>)
  fullName: UriTemplate.UriTemplate(String, IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Initializes a new instance of the <xref href="System.UriTemplate"></xref> class.
  syntax:
    content: public UriTemplate (string template, System.Collections.Generic.IDictionary<string,string> additionalDefaults);
    parameters:
    - id: template
      type: System.String
      description: The template string.
    - id: additionalDefaults
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A dictionary that contains a list of default values for the template parameters.
  overload: System.UriTemplate.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.UriTemplate
  langs:
  - csharp
  name: UriTemplate(String, Boolean, IDictionary<String,String>)
  nameWithType: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)
  fullName: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Initializes a new instance of the <xref href="System.UriTemplate"></xref> class.
  syntax:
    content: public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary<string,string> additionalDefaults);
    parameters:
    - id: template
      type: System.String
      description: The template string.
    - id: ignoreTrailingSlash
      type: System.Boolean
      description: '`true` if the trailing slash "/" characters are ignored; otherwise `false`.'
    - id: additionalDefaults
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A dictionary that contains a list of default values for the template parameters.
  overload: System.UriTemplate.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  id: BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.UriTemplate
  langs:
  - csharp
  name: BindByName(Uri, IDictionary<String,String>)
  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>)
  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>)
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Creates a new URI from the template and the collection of parameters.
  remarks: "The <xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D> parameter contains a collection of parameter name and value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison.  \n  \n> [!NOTE]\n>  The name/value collection passed to this method must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.  \n  \n> [!IMPORTANT]\n>  It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'."
  syntax:
    content: public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary<string,string> parameters);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: The base address.
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A dictionary that contains a collection of parameter name/value pairs.
    return:
      type: System.Uri
      description: A URI.
  overload: System.UriTemplate.BindByName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)
  id: BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)
  parent: System.UriTemplate
  langs:
  - csharp
  name: BindByName(Uri, NameValueCollection)
  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection)
  fullName: UriTemplate.BindByName(Uri, NameValueCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Creates a new URI from the template and the collection of parameters.
  remarks: "The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison. Values passed in this collection are escaped.  \n  \n> [!NOTE]\n>  The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.  \n  \n> [!NOTE]\n>  It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'."
  example:
  - "The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.  \n  \n [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]\n [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]"
  syntax:
    content: public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: The base address.
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: The parameter values.
    return:
      type: System.Uri
      description: A new instance.
  overload: System.UriTemplate.BindByName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)
  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)
  id: BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)
  parent: System.UriTemplate
  langs:
  - csharp
  name: BindByName(Uri, IDictionary<String,String>, Boolean)
  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)
  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Creates a new URI from the template and the collection of parameters.
  syntax:
    content: public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary<string,string> parameters, bool omitDefaults);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: A URI that contains the base address.
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A dictionary that contains a collection of parameter name/value pairs.
    - id: omitDefaults
      type: System.Boolean
      description: '`true` is the default values are ignored; otherwise `false`.'
    return:
      type: System.Uri
      description: A URI.
  overload: System.UriTemplate.BindByName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)
  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)
  id: BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.UriTemplate
  langs:
  - csharp
  name: BindByName(Uri, NameValueCollection, Boolean)
  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)
  fullName: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Creates a new URI from the template and the collection of parameters.
  syntax:
    content: public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: The base address.
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: A collection of parameter name/value pairs.
    - id: omitDefaults
      type: System.Boolean
      description: '`true` if the default values are ignored; otherwise `false`.'
    return:
      type: System.Uri
      description: A URI.
  overload: System.UriTemplate.BindByName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.BindByPosition(System.Uri,System.String[])
  commentId: M:System.UriTemplate.BindByPosition(System.Uri,System.String[])
  id: BindByPosition(System.Uri,System.String[])
  parent: System.UriTemplate
  langs:
  - csharp
  name: BindByPosition(Uri, String[])
  nameWithType: UriTemplate.BindByPosition(Uri, String[])
  fullName: UriTemplate.BindByPosition(Uri, String[])
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Creates a new URI from the template and an array of parameter values.
  remarks: "The parameter values are bound by position left to right. The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on. Variables passed to this method are escaped.  \n  \n> [!NOTE]\n>  The number of parameters passed in the values parameter must match the number of variables in the template. If not, a <xref:System.FormatException> is thrown.  \n  \n> [!NOTE]\n>  It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '.','..', '*', '{', and '}'. The following code demonstrates this.  \n  \n `UriTemplate template = new UriTemplate(\"far/{bat}/baz\");`  \n  \n `Uri uri = new Uri(\"http://localhost/Base\");`  \n  \n `Uri result = template.BindByPosition(uri, \".\");   // returns Base/form/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"..\");  // returns Base/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"x/y\");  // returns Base/form/x/y/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"{x}\");  // returns Base/form/{x}/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"*\");  // returns Base/form/*/baz`"
  example:
  - "The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.  \n  \n [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]\n [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]"
  syntax:
    content: public Uri BindByPosition (Uri baseAddress, string[] values);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: A <xref href="System.Uri"></xref> that contains the base address.
    - id: values
      type: System.String[]
      description: The parameter values.
    return:
      type: System.Uri
      description: A new <xref href="System.Uri"></xref> instance.
  overload: System.UriTemplate.BindByPosition*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.Defaults
  commentId: P:System.UriTemplate.Defaults
  id: Defaults
  parent: System.UriTemplate
  langs:
  - csharp
  name: Defaults
  nameWithType: UriTemplate.Defaults
  fullName: UriTemplate.Defaults
  type: Property
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Gets a collection of name/value pairs for any default parameter values.
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Defaults { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A generic dictionary.
  overload: System.UriTemplate.Defaults*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.IgnoreTrailingSlash
  commentId: P:System.UriTemplate.IgnoreTrailingSlash
  id: IgnoreTrailingSlash
  parent: System.UriTemplate
  langs:
  - csharp
  name: IgnoreTrailingSlash
  nameWithType: UriTemplate.IgnoreTrailingSlash
  fullName: UriTemplate.IgnoreTrailingSlash
  type: Property
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.
  syntax:
    content: public bool IgnoreTrailingSlash { get; }
    return:
      type: System.Boolean
      description: '`true` if trailing slashes "/" should be ignored, otherwise `false`.'
  overload: System.UriTemplate.IgnoreTrailingSlash*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.IsEquivalentTo(System.UriTemplate)
  commentId: M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)
  id: IsEquivalentTo(System.UriTemplate)
  parent: System.UriTemplate
  langs:
  - csharp
  name: IsEquivalentTo(UriTemplate)
  nameWithType: UriTemplate.IsEquivalentTo(UriTemplate)
  fullName: UriTemplate.IsEquivalentTo(UriTemplate)
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Indicates whether a <xref href="System.UriTemplate"></xref> is structurally equivalent to another.
  remarks: Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments. For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".
  example:
  - "The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.  \n  \n [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]\n [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]"
  syntax:
    content: public bool IsEquivalentTo (UriTemplate other);
    parameters:
    - id: other
      type: System.UriTemplate
      description: The <xref href="System.UriTemplate"></xref> to compare.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.UriTemplate"></xref> is structurally equivalent to another; otherwise `false`.'
  overload: System.UriTemplate.IsEquivalentTo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.Match(System.Uri,System.Uri)
  commentId: M:System.UriTemplate.Match(System.Uri,System.Uri)
  id: Match(System.Uri,System.Uri)
  parent: System.UriTemplate
  langs:
  - csharp
  name: Match(Uri, Uri)
  nameWithType: UriTemplate.Match(Uri, Uri)
  fullName: UriTemplate.Match(Uri, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Attempts to match a <xref href="System.URI"></xref> to a <xref href="System.UriTemplate"></xref>.
  remarks: If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI. If the match is unsuccessful, `null` is returned.
  example:
  - "The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.  \n  \n [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]\n [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]"
  syntax:
    content: public UriTemplateMatch Match (Uri baseAddress, Uri candidate);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: The base address.
    - id: candidate
      type: System.Uri
      description: The <xref href="System.Uri"></xref> to match against the template.
    return:
      type: System.UriTemplateMatch
      description: An instance.
  overload: System.UriTemplate.Match*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.PathSegmentVariableNames
  commentId: P:System.UriTemplate.PathSegmentVariableNames
  id: PathSegmentVariableNames
  parent: System.UriTemplate
  langs:
  - csharp
  name: PathSegmentVariableNames
  nameWithType: UriTemplate.PathSegmentVariableNames
  fullName: UriTemplate.PathSegmentVariableNames
  type: Property
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Gets a collection of variable names used within path segments in the template.
  remarks: The collection excludes the names of variables that appear in the query portion of the template.
  example:
  - "The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.  \n  \n [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]\n [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> PathSegmentVariableNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: A collection of variable names that appear within the template's path segment.
  overload: System.UriTemplate.PathSegmentVariableNames*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.QueryValueVariableNames
  commentId: P:System.UriTemplate.QueryValueVariableNames
  id: QueryValueVariableNames
  parent: System.UriTemplate
  langs:
  - csharp
  name: QueryValueVariableNames
  nameWithType: UriTemplate.QueryValueVariableNames
  fullName: UriTemplate.QueryValueVariableNames
  type: Property
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Gets a collection of variable names used within the query string in the template.
  remarks: This collection excludes variable names that appear in the path section of the template string.
  example:
  - "The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.  \n  \n [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]\n [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> QueryValueVariableNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: A collection of template variable names that appear in the query portion of the template string.
  overload: System.UriTemplate.QueryValueVariableNames*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.UriTemplate.ToString
  commentId: M:System.UriTemplate.ToString
  id: ToString
  parent: System.UriTemplate
  langs:
  - csharp
  name: ToString()
  nameWithType: UriTemplate.ToString()
  fullName: UriTemplate.ToString()
  type: Method
  assemblies:
  - System.ServiceModel
  - System.ServiceModel.Web
  namespace: System
  summary: Returns a string representation of the <xref href="System.UriTemplate"></xref> instance.
  remarks: ''
  example:
  - "The following example shows how to call the <xref:System.UriTemplate.ToString> method.  \n  \n [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]\n [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The representation of the <xref href="System.UriTemplate"></xref> instance.
  overload: System.UriTemplate.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.UriTemplate.#ctor(System.String)
  parent: System.UriTemplate
  isExternal: false
  name: UriTemplate(String)
  nameWithType: UriTemplate.UriTemplate(String)
  fullName: UriTemplate.UriTemplate(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UriTemplate.#ctor(System.String,System.Boolean)
  parent: System.UriTemplate
  isExternal: false
  name: UriTemplate(String, Boolean)
  nameWithType: UriTemplate.UriTemplate(String, Boolean)
  fullName: UriTemplate.UriTemplate(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.UriTemplate
  isExternal: false
  name: UriTemplate(String, IDictionary<String,String>)
  nameWithType: UriTemplate.UriTemplate(String, IDictionary<String,String>)
  fullName: UriTemplate.UriTemplate(String, IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.UriTemplate
  isExternal: false
  name: UriTemplate(String, Boolean, IDictionary<String,String>)
  nameWithType: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)
  fullName: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.UriTemplate
  isExternal: false
  name: BindByName(Uri, IDictionary<String,String>)
  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>)
  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)
  parent: System.UriTemplate
  isExternal: false
  name: BindByName(Uri, NameValueCollection)
  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection)
  fullName: UriTemplate.BindByName(Uri, NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)
  parent: System.UriTemplate
  isExternal: false
  name: BindByName(Uri, IDictionary<String,String>, Boolean)
  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)
  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)
- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.UriTemplate
  isExternal: false
  name: BindByName(Uri, NameValueCollection, Boolean)
  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)
  fullName: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)
- uid: System.UriTemplate.BindByPosition(System.Uri,System.String[])
  parent: System.UriTemplate
  isExternal: false
  name: BindByPosition(Uri, String[])
  nameWithType: UriTemplate.BindByPosition(Uri, String[])
  fullName: UriTemplate.BindByPosition(Uri, String[])
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.UriTemplate.Defaults
  parent: System.UriTemplate
  isExternal: false
  name: Defaults
  nameWithType: UriTemplate.Defaults
  fullName: UriTemplate.Defaults
- uid: System.UriTemplate.IgnoreTrailingSlash
  parent: System.UriTemplate
  isExternal: false
  name: IgnoreTrailingSlash
  nameWithType: UriTemplate.IgnoreTrailingSlash
  fullName: UriTemplate.IgnoreTrailingSlash
- uid: System.UriTemplate.IsEquivalentTo(System.UriTemplate)
  parent: System.UriTemplate
  isExternal: false
  name: IsEquivalentTo(UriTemplate)
  nameWithType: UriTemplate.IsEquivalentTo(UriTemplate)
  fullName: UriTemplate.IsEquivalentTo(UriTemplate)
- uid: System.UriTemplate
  parent: System
  isExternal: false
  name: UriTemplate
  nameWithType: UriTemplate
  fullName: System.UriTemplate
- uid: System.UriTemplate.Match(System.Uri,System.Uri)
  parent: System.UriTemplate
  isExternal: false
  name: Match(Uri, Uri)
  nameWithType: UriTemplate.Match(Uri, Uri)
  fullName: UriTemplate.Match(Uri, Uri)
- uid: System.UriTemplateMatch
  parent: System
  isExternal: false
  name: UriTemplateMatch
  nameWithType: UriTemplateMatch
  fullName: System.UriTemplateMatch
- uid: System.UriTemplate.PathSegmentVariableNames
  parent: System.UriTemplate
  isExternal: false
  name: PathSegmentVariableNames
  nameWithType: UriTemplate.PathSegmentVariableNames
  fullName: UriTemplate.PathSegmentVariableNames
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.UriTemplate.QueryValueVariableNames
  parent: System.UriTemplate
  isExternal: false
  name: QueryValueVariableNames
  nameWithType: UriTemplate.QueryValueVariableNames
  fullName: UriTemplate.QueryValueVariableNames
- uid: System.UriTemplate.ToString
  parent: System.UriTemplate
  isExternal: false
  name: ToString()
  nameWithType: UriTemplate.ToString()
  fullName: UriTemplate.ToString()
- uid: System.UriTemplate.#ctor*
  parent: System.UriTemplate
  isExternal: false
  name: UriTemplate
  nameWithType: UriTemplate.UriTemplate
  fullName: UriTemplate.UriTemplate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.BindByName*
  parent: System.UriTemplate
  isExternal: false
  name: BindByName
  nameWithType: UriTemplate.BindByName
  fullName: UriTemplate.BindByName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.BindByPosition*
  parent: System.UriTemplate
  isExternal: false
  name: BindByPosition
  nameWithType: UriTemplate.BindByPosition
  fullName: UriTemplate.BindByPosition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.Defaults*
  parent: System.UriTemplate
  isExternal: false
  name: Defaults
  nameWithType: UriTemplate.Defaults
  fullName: UriTemplate.Defaults
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.IgnoreTrailingSlash*
  parent: System.UriTemplate
  isExternal: false
  name: IgnoreTrailingSlash
  nameWithType: UriTemplate.IgnoreTrailingSlash
  fullName: UriTemplate.IgnoreTrailingSlash
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.IsEquivalentTo*
  parent: System.UriTemplate
  isExternal: false
  name: IsEquivalentTo
  nameWithType: UriTemplate.IsEquivalentTo
  fullName: UriTemplate.IsEquivalentTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.Match*
  parent: System.UriTemplate
  isExternal: false
  name: Match
  nameWithType: UriTemplate.Match
  fullName: UriTemplate.Match
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.PathSegmentVariableNames*
  parent: System.UriTemplate
  isExternal: false
  name: PathSegmentVariableNames
  nameWithType: UriTemplate.PathSegmentVariableNames
  fullName: UriTemplate.PathSegmentVariableNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.QueryValueVariableNames*
  parent: System.UriTemplate
  isExternal: false
  name: QueryValueVariableNames
  nameWithType: UriTemplate.QueryValueVariableNames
  fullName: UriTemplate.QueryValueVariableNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.UriTemplate.ToString*
  parent: System.UriTemplate
  isExternal: false
  name: ToString
  nameWithType: UriTemplate.ToString
  fullName: UriTemplate.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
