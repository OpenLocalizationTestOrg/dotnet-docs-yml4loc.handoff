{"nodes":[{"content":"Represents an Access Control List (ACL).","nodes":[{"pos":[0,40],"content":"Represents an Access Control List (ACL).","nodes":[{"content":"Represents an Access Control List (ACL).","pos":[0,40]}]}],"pos":[1006,1047],"yaml":true},{"content":"The <xref:System.Security.AccessControl.RawAcl> class allows full manipulation of Access Control Entries (ACEs). It does not enforce ordering rules for ACEs and does not provide validation logic. Any ACE can be inserted, modified, or removed at any location in the ACL.","nodes":[{"pos":[0,269],"content":"The <xref:System.Security.AccessControl.RawAcl> class allows full manipulation of Access Control Entries (ACEs). It does not enforce ordering rules for ACEs and does not provide validation logic. Any ACE can be inserted, modified, or removed at any location in the ACL.","nodes":[{"content":"The <xref:System.Security.AccessControl.RawAcl> class allows full manipulation of Access Control Entries (ACEs). It does not enforce ordering rules for ACEs and does not provide validation logic. Any ACE can be inserted, modified, or removed at any location in the ACL.","pos":[0,269],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.RawAcl&gt;</ph> class allows full manipulation of Access Control Entries (ACEs).","pos":[0,112],"source":"The <xref:System.Security.AccessControl.RawAcl> class allows full manipulation of Access Control Entries (ACEs)."},{"content":"It does not enforce ordering rules for ACEs and does not provide validation logic.","pos":[113,195]},{"content":"Any ACE can be inserted, modified, or removed at any location in the ACL.","pos":[196,269]}]}]}],"pos":[1058,1328],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> class with the specified revision level.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> class with the specified revision level.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> class with the specified revision level."}],"pos":[4041,4174],"yaml":true},{"content":"The revision level of the new Access Control List (ACL).","nodes":[{"pos":[0,56],"content":"The revision level of the new Access Control List (ACL).","nodes":[{"content":"The revision level of the new Access Control List (ACL).","pos":[0,56]}]}],"pos":[4320,4377],"yaml":true},{"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object can contain. This number is to be used only as a hint.","nodes":[{"pos":[0,168],"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object can contain. This number is to be used only as a hint.","nodes":[{"content":"The number of Access Control Entries (ACEs) this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object can contain.","pos":[0,126],"source":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object can contain."},{"content":"This number is to be used only as a hint.","pos":[127,168]}]}],"pos":[4440,4609],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> class from the specified binary form.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> class from the specified binary form.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> class from the specified binary form."}],"pos":[5960,6090],"yaml":true},{"content":"An array of byte values that represent an Access Control List (ACL).","nodes":[{"pos":[0,68],"content":"An array of byte values that represent an Access Control List (ACL).","nodes":[{"content":"An array of byte values that represent an Access Control List (ACL).","pos":[0,68]}]}],"pos":[6242,6311],"yaml":true},{"content":"The offset in the <code>binaryForm</code> parameter at which to begin unmarshaling data.","nodes":[{"pos":[0,88],"content":"The offset in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binaryForm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter at which to begin unmarshaling data.","source":"The offset in the <code>binaryForm</code> parameter at which to begin unmarshaling data."}],"pos":[6372,6461],"yaml":true},{"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"pos":[0,326],"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"content":"Gets the length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,136],"source":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."},{"content":"This length should be used before marshaling the ACL into a binary array with the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\"&gt;&lt;/xref&gt;</ph> method.","pos":[137,326],"source":" This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method."}]}],"pos":[7717,8044],"yaml":true},{"content":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.","nodes":[{"pos":[0,131],"content":"The length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."}],"pos":[8165,8297],"yaml":true},{"content":"Gets the number of access control entries (ACEs) in the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.","nodes":[{"pos":[0,129],"content":"Gets the number of access control entries (ACEs) in the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the number of access control entries (ACEs) in the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."}],"pos":[9518,9648],"yaml":true},{"content":"The number of ACEs in the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.","nodes":[{"pos":[0,99],"content":"The number of ACEs in the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"The number of ACEs in the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."}],"pos":[9762,9862],"yaml":true},{"content":"Marshals the contents of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object into the specified byte array beginning at the specified offset.","nodes":[{"pos":[0,158],"content":"Marshals the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object into the specified byte array beginning at the specified offset.","source":"Marshals the contents of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object into the specified byte array beginning at the specified offset."}],"pos":[11251,11410],"yaml":true},{"content":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> is marshaled.","nodes":[{"pos":[0,117],"content":"The byte array into which the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> is marshaled.","source":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> is marshaled."}],"pos":[11583,11701],"yaml":true},{"content":"The offset at which to start marshaling.","nodes":[{"pos":[0,40],"content":"The offset at which to start marshaling.","nodes":[{"content":"The offset at which to start marshaling.","pos":[0,40]}]}],"pos":[11762,11803],"yaml":true},{"content":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.RawAcl\"></xref> to be copied into <code>array</code>.","nodes":[{"pos":[0,159],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is negative or too high to allow the entire <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> to be copied into <ph id=\"ph3\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.RawAcl\"></xref> to be copied into <code>array</code>."}],"pos":[11995,12155],"yaml":true},{"content":"Inserts the specified Access Control Entry (ACE) at the specified index.","nodes":[{"pos":[0,72],"content":"Inserts the specified Access Control Entry (ACE) at the specified index.","nodes":[{"content":"Inserts the specified Access Control Entry (ACE) at the specified index.","pos":[0,72]}]}],"pos":[13540,13613],"yaml":true},{"content":"The inserted ACE is not cloned before insertion, so any modifications to the ACE after it has been inserted are reflected in the Access Control List (ACL).","nodes":[{"pos":[0,155],"content":"The inserted ACE is not cloned before insertion, so any modifications to the ACE after it has been inserted are reflected in the Access Control List (ACL).","nodes":[{"content":"The inserted ACE is not cloned before insertion, so any modifications to the ACE after it has been inserted are reflected in the Access Control List (ACL).","pos":[0,155]}]}],"pos":[13624,13780],"yaml":true,"extradata":"MT"},{"content":"The position at which to add the new ACE. Specify the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property to insert an ACE at the end of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.","nodes":[{"pos":[0,240],"content":"The position at which to add the new ACE. Specify the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property to insert an ACE at the end of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.","nodes":[{"content":"The position at which to add the new ACE.","pos":[0,41]},{"content":"Specify the value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl.Count\"&gt;&lt;/xref&gt;</ph> property to insert an ACE at the end of the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object.","pos":[42,240],"source":" Specify the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property to insert an ACE at the end of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."}]}],"pos":[13960,14201],"yaml":true},{"content":"The ACE to insert.","nodes":[{"pos":[0,18],"content":"The ACE to insert.","nodes":[{"content":"The ACE to insert.","pos":[0,18]}]}],"pos":[14287,14306],"yaml":true},{"content":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericAcl\"></xref> to be copied into <code>array</code>.","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is negative or too high to allow the entire <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAcl\"&gt;&lt;/xref&gt;</ph> to be copied into <ph id=\"ph3\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericAcl\"></xref> to be copied into <code>array</code>."}],"pos":[14494,14658],"yaml":true},{"content":"Gets or sets the Access Control Entry (ACE) at the specified index.","nodes":[{"pos":[0,67],"content":"Gets or sets the Access Control Entry (ACE) at the specified index.","nodes":[{"content":"Gets or sets the Access Control Entry (ACE) at the specified index.","pos":[0,67]}]}],"pos":[15856,15924],"yaml":true},{"content":"The zero-based index of the ACE to get or set.","nodes":[{"pos":[0,46],"content":"The zero-based index of the ACE to get or set.","nodes":[{"content":"The zero-based index of the ACE to get or set.","pos":[0,46]}]}],"pos":[16110,16157],"yaml":true},{"content":"The ACE at the specified index.","nodes":[{"pos":[0,31],"content":"The ACE at the specified index.","nodes":[{"content":"The ACE at the specified index.","pos":[0,31]}]}],"pos":[16241,16273],"yaml":true},{"content":"Removes the Access Control Entry (ACE) at the specified location.","nodes":[{"pos":[0,65],"content":"Removes the Access Control Entry (ACE) at the specified location.","nodes":[{"content":"Removes the Access Control Entry (ACE) at the specified location.","pos":[0,65]}]}],"pos":[17571,17637],"yaml":true},{"content":"The zero-based index of the ACE to remove.","nodes":[{"pos":[0,42],"content":"The zero-based index of the ACE to remove.","nodes":[{"content":"The zero-based index of the ACE to remove.","pos":[0,42]}]}],"pos":[17771,17814],"yaml":true},{"content":"The value of the <code>index</code> parameter is higher than the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property minus one or is negative.","nodes":[{"pos":[0,176],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is higher than the value of the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.RawAcl.Count\"&gt;&lt;/xref&gt;</ph> property minus one or is negative.","source":"The value of the <code>index</code> parameter is higher than the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property minus one or is negative."}],"pos":[18002,18179],"yaml":true},{"content":"Gets the revision level of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref>.","nodes":[{"pos":[0,89],"content":"Gets the revision level of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the revision level of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref>."}],"pos":[19338,19428],"yaml":true},{"content":"A byte value that specifies the revision level of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref>.","nodes":[{"pos":[0,112],"content":"A byte value that specifies the revision level of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph>.","source":"A byte value that specifies the revision level of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref>."}],"pos":[19545,19658],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.RawAcl\n  commentId: T:System.Security.AccessControl.RawAcl\n  id: RawAcl\n  children:\n  - System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)\n  - System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)\n  - System.Security.AccessControl.RawAcl.BinaryLength\n  - System.Security.AccessControl.RawAcl.Count\n  - System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.RawAcl.Item(System.Int32)\n  - System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)\n  - System.Security.AccessControl.RawAcl.Revision\n  langs:\n  - csharp\n  name: RawAcl\n  nameWithType: RawAcl\n  fullName: System.Security.AccessControl.RawAcl\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents an Access Control List (ACL).\n  remarks: The <xref:System.Security.AccessControl.RawAcl> class allows full manipulation of Access Control Entries (ACEs). It does not enforce ordering rules for ACEs and does not provide validation logic. Any ACE can be inserted, modified, or removed at any location in the ACL.\n  syntax:\n    content: 'public sealed class RawAcl : System.Security.AccessControl.GenericAcl'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAcl\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAcl.AclRevision\n  - System.Security.AccessControl.GenericAcl.AclRevisionDS\n  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  - System.Security.AccessControl.GenericAcl.GetEnumerator\n  - System.Security.AccessControl.GenericAcl.IsSynchronized\n  - System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  - System.Security.AccessControl.GenericAcl.SyncRoot\n  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)\n  commentId: M:System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)\n  id: '#ctor(System.Byte,System.Int32)'\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: RawAcl(Byte, Int32)\n  nameWithType: RawAcl.RawAcl(Byte, Int32)\n  fullName: RawAcl.RawAcl(Byte, Int32)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> class with the specified revision level.\n  syntax:\n    content: public RawAcl (byte revision, int capacity);\n    parameters:\n    - id: revision\n      type: System.Byte\n      description: The revision level of the new Access Control List (ACL).\n    - id: capacity\n      type: System.Int32\n      description: The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object can contain. This number is to be used only as a hint.\n  overload: System.Security.AccessControl.RawAcl.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)\n  commentId: M:System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)\n  id: '#ctor(System.Byte[],System.Int32)'\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: RawAcl(Byte[], Int32)\n  nameWithType: RawAcl.RawAcl(Byte[], Int32)\n  fullName: RawAcl.RawAcl(Byte[], Int32)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> class from the specified binary form.\n  syntax:\n    content: public RawAcl (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: An array of byte values that represent an Access Control List (ACL).\n    - id: offset\n      type: System.Int32\n      description: The offset in the <code>binaryForm</code> parameter at which to begin unmarshaling data.\n  overload: System.Security.AccessControl.RawAcl.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.BinaryLength\n  commentId: P:System.Security.AccessControl.RawAcl.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: RawAcl.BinaryLength\n  fullName: RawAcl.BinaryLength\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.\n  overload: System.Security.AccessControl.RawAcl.BinaryLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.Count\n  commentId: P:System.Security.AccessControl.RawAcl.Count\n  id: Count\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: Count\n  nameWithType: RawAcl.Count\n  fullName: RawAcl.Count\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the number of access control entries (ACEs) in the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.\n  syntax:\n    content: public override int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of ACEs in the current <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.\n  overload: System.Security.AccessControl.RawAcl.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\n  commentId: M:System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: RawAcl.GetBinaryForm(Byte[], Int32)\n  fullName: RawAcl.GetBinaryForm(Byte[], Int32)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Marshals the contents of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object into the specified byte array beginning at the specified offset.\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array into which the contents of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> is marshaled.\n    - id: offset\n      type: System.Int32\n      description: The offset at which to start marshaling.\n  overload: System.Security.AccessControl.RawAcl.GetBinaryForm*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.RawAcl\"></xref> to be copied into <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)\n  commentId: M:System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)\n  id: InsertAce(System.Int32,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: InsertAce(Int32, GenericAce)\n  nameWithType: RawAcl.InsertAce(Int32, GenericAce)\n  fullName: RawAcl.InsertAce(Int32, GenericAce)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Inserts the specified Access Control Entry (ACE) at the specified index.\n  remarks: The inserted ACE is not cloned before insertion, so any modifications to the ACE after it has been inserted are reflected in the Access Control List (ACL).\n  syntax:\n    content: public void InsertAce (int index, System.Security.AccessControl.GenericAce ace);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position at which to add the new ACE. Specify the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property to insert an ACE at the end of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.\n    - id: ace\n      type: System.Security.AccessControl.GenericAce\n      description: The ACE to insert.\n  overload: System.Security.AccessControl.RawAcl.InsertAce*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericAcl\"></xref> to be copied into <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.Item(System.Int32)\n  commentId: P:System.Security.AccessControl.RawAcl.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: RawAcl.Item(Int32)\n  fullName: RawAcl.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the Access Control Entry (ACE) at the specified index.\n  syntax:\n    content: public override System.Security.AccessControl.GenericAce this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the ACE to get or set.\n    return:\n      type: System.Security.AccessControl.GenericAce\n      description: The ACE at the specified index.\n  overload: System.Security.AccessControl.RawAcl.Item*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)\n  commentId: M:System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)\n  id: RemoveAce(System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: RemoveAce(Int32)\n  nameWithType: RawAcl.RemoveAce(Int32)\n  fullName: RawAcl.RemoveAce(Int32)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the Access Control Entry (ACE) at the specified location.\n  syntax:\n    content: public void RemoveAce (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the ACE to remove.\n  overload: System.Security.AccessControl.RawAcl.RemoveAce*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>index</code> parameter is higher than the value of the <xref href=\"System.Security.AccessControl.RawAcl.Count\"></xref> property minus one or is negative.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.RawAcl.Revision\n  commentId: P:System.Security.AccessControl.RawAcl.Revision\n  id: Revision\n  parent: System.Security.AccessControl.RawAcl\n  langs:\n  - csharp\n  name: Revision\n  nameWithType: RawAcl.Revision\n  fullName: RawAcl.Revision\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the revision level of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref>.\n  syntax:\n    content: public override byte Revision { get; }\n    return:\n      type: System.Byte\n      description: A byte value that specifies the revision level of the <xref href=\"System.Security.AccessControl.RawAcl\"></xref>.\n  overload: System.Security.AccessControl.RawAcl.Revision*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.GenericAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAcl\n  nameWithType: GenericAcl\n  fullName: System.Security.AccessControl.GenericAcl\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: RawAcl(Byte, Int32)\n  nameWithType: RawAcl.RawAcl(Byte, Int32)\n  fullName: RawAcl.RawAcl(Byte, Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: RawAcl(Byte[], Int32)\n  nameWithType: RawAcl.RawAcl(Byte[], Int32)\n  fullName: RawAcl.RawAcl(Byte[], Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.RawAcl.BinaryLength\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: BinaryLength\n  nameWithType: RawAcl.BinaryLength\n  fullName: RawAcl.BinaryLength\n- uid: System.Security.AccessControl.RawAcl.Count\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: Count\n  nameWithType: RawAcl.Count\n  fullName: RawAcl.Count\n- uid: System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: RawAcl.GetBinaryForm(Byte[], Int32)\n  fullName: RawAcl.GetBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: InsertAce(Int32, GenericAce)\n  nameWithType: RawAcl.InsertAce(Int32, GenericAce)\n  fullName: RawAcl.InsertAce(Int32, GenericAce)\n- uid: System.Security.AccessControl.GenericAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAce\n  nameWithType: GenericAce\n  fullName: System.Security.AccessControl.GenericAce\n- uid: System.Security.AccessControl.RawAcl.Item(System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: RawAcl.Item(Int32)\n  fullName: RawAcl.Item(Int32)\n- uid: System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: RemoveAce(Int32)\n  nameWithType: RawAcl.RemoveAce(Int32)\n  fullName: RawAcl.RemoveAce(Int32)\n- uid: System.Security.AccessControl.RawAcl.Revision\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: Revision\n  nameWithType: RawAcl.Revision\n  fullName: RawAcl.Revision\n- uid: System.Security.AccessControl.RawAcl.#ctor*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: RawAcl\n  nameWithType: RawAcl.RawAcl\n  fullName: RawAcl.RawAcl\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.BinaryLength*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: BinaryLength\n  nameWithType: RawAcl.BinaryLength\n  fullName: RawAcl.BinaryLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.Count*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: Count\n  nameWithType: RawAcl.Count\n  fullName: RawAcl.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.GetBinaryForm*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: GetBinaryForm\n  nameWithType: RawAcl.GetBinaryForm\n  fullName: RawAcl.GetBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.InsertAce*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: InsertAce\n  nameWithType: RawAcl.InsertAce\n  fullName: RawAcl.InsertAce\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.Item*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: Item\n  nameWithType: RawAcl.Item\n  fullName: RawAcl.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.RemoveAce*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: RemoveAce\n  nameWithType: RawAcl.RemoveAce\n  fullName: RawAcl.RemoveAce\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Security.AccessControl.RawAcl.Revision*\n  parent: System.Security.AccessControl.RawAcl\n  isExternal: false\n  name: Revision\n  nameWithType: RawAcl.Revision\n  fullName: RawAcl.Revision\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/RawAcl.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.GenericAcl.AclRevision\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevision\n  nameWithType: GenericAcl.AclRevision\n  fullName: GenericAcl.AclRevision\n- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevisionDS\n  nameWithType: GenericAcl.AclRevisionDS\n  fullName: GenericAcl.AclRevisionDS\n- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: CopyTo(GenericAce[], Int32)\n  nameWithType: GenericAcl.CopyTo(GenericAce[], Int32)\n  fullName: GenericAcl.CopyTo(GenericAce[], Int32)\n- uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: GenericAcl.GetEnumerator()\n  fullName: GenericAcl.GetEnumerator()\n- uid: System.Security.AccessControl.GenericAcl.IsSynchronized\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: GenericAcl.IsSynchronized\n  fullName: GenericAcl.IsSynchronized\n- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: MaxBinaryLength\n  nameWithType: GenericAcl.MaxBinaryLength\n  fullName: GenericAcl.MaxBinaryLength\n- uid: System.Security.AccessControl.GenericAcl.SyncRoot\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: SyncRoot\n  nameWithType: GenericAcl.SyncRoot\n  fullName: GenericAcl.SyncRoot\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: GenericAcl.ICollection.CopyTo(Array, Int32)\n  fullName: GenericAcl.ICollection.CopyTo(Array, Int32)\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: GenericAcl.IEnumerable.GetEnumerator()\n  fullName: GenericAcl.IEnumerable.GetEnumerator()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}