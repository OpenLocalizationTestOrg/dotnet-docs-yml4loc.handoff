{"nodes":[{"content":"Exposes a <xref href=\"System.IO.Stream\"></xref> around a named pipe, which supports both synchronous and asynchronous read and write operations.","nodes":[{"pos":[0,144],"content":"Exposes a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> around a named pipe, which supports both synchronous and asynchronous read and write operations.","source":"Exposes a <xref href=\"System.IO.Stream\"></xref> around a named pipe, which supports both synchronous and asynchronous read and write operations."}],"pos":[2206,2351],"yaml":true},{"content":"Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects.  \n  \n Any process can act as either a named pipe server or client, or both.  \n  \n> [!NOTE]\n>  For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.","nodes":[{"pos":[0,294],"content":"Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects.","nodes":[{"content":"Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects.","pos":[0,294],"nodes":[{"content":"Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients.","pos":[0,113]},{"content":"Named pipes can be used for interprocess communication locally or over a network.","pos":[114,195]},{"content":"A single pipe name can be shared by multiple <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> objects.","pos":[196,294],"source":" A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects."}]}]},{"pos":[301,370],"content":"Any process can act as either a named pipe server or client, or both.","nodes":[{"content":"Any process can act as either a named pipe server or client, or both.","pos":[0,69]}]},{"pos":[378,566],"content":"[!NOTE]\n For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.","leadings":["","> "],"nodes":[{"content":"For <ph id=\"ph1\">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.","pos":[9,186],"source":" For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network."}]}],"pos":[2362,2936],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe name.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe name.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe name."}],"pos":[9435,9564],"yaml":true},{"content":"This constructor uses the following default values:  \n  \n-   A default server name of \".\".  \n  \n-   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"pos":[0,51],"content":"This constructor uses the following default values:","nodes":[{"content":"This constructor uses the following default values:","pos":[0,51]}]},{"pos":[61,90],"content":"A default server name of \".\".","nodes":[{"content":"A default server name of \".\".","pos":[0,29]}]},{"pos":[100,199],"content":"A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>.","pos":[0,99],"source":"A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>."}]},{"pos":[209,303],"content":"A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>.","pos":[0,94],"source":"A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>."}]},{"pos":[313,451],"content":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.","pos":[0,138],"source":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>."}]},{"pos":[461,561],"content":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.","pos":[0,100],"source":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."}]}],"pos":[9575,10151],"yaml":true,"extradata":"MT"},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[10302,10324],"yaml":true},{"content":"<code>pipeName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>pipeName</code> is `null`."}],"pos":[10497,10530],"yaml":true},{"content":"<code>pipeName</code> is a zero-length string.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> is a zero-length string."}],"pos":[10624,10671],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."}],"pos":[10785,10830],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe and server names.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names."}],"pos":[12224,12365],"yaml":true},{"content":"This constructor uses the following default values:  \n  \n-   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"pos":[0,51],"content":"This constructor uses the following default values:","nodes":[{"content":"This constructor uses the following default values:","pos":[0,51]}]},{"pos":[61,160],"content":"A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>.","pos":[0,99],"source":"A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>."}]},{"pos":[170,264],"content":"A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>.","pos":[0,94],"source":"A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>."}]},{"pos":[274,412],"content":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.","pos":[0,138],"source":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>."}]},{"pos":[422,522],"content":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.","pos":[0,100],"source":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."}]}],"pos":[12376,12909],"yaml":true,"extradata":"MT"},{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"pos":[0,84],"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","pos":[0,84]}]}],"pos":[13081,13166],"yaml":true},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[13230,13252],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>pipeName</code> or <code>serverName</code> is `null`."}],"pos":[13425,13485],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is a zero-length string.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> or <code>serverName</code> is a zero-length string."}],"pos":[13579,13653],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."}],"pos":[13767,13812],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe and server names, and the specified pipe direction.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction."}],"pos":[15341,15516],"yaml":true},{"content":"This constructor uses the following default values:  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"pos":[0,51],"content":"This constructor uses the following default values:","nodes":[{"content":"This constructor uses the following default values:","pos":[0,51]}]},{"pos":[61,155],"content":"A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>.","pos":[0,94],"source":"A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>."}]},{"pos":[165,303],"content":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.","pos":[0,138],"source":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>."}]},{"pos":[313,413],"content":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.","pos":[0,100],"source":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."}]}],"pos":[15527,15949],"yaml":true,"extradata":"MT"},{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"pos":[0,84],"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","pos":[0,84]}]}],"pos":[17066,17151],"yaml":true},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[17215,17237],"yaml":true},{"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"pos":[0,72],"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"content":"One of the enumeration values that determines the direction of the pipe.","pos":[0,72]}]}],"pos":[17318,17391],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>pipeName</code> or <code>serverName</code> is `null`."}],"pos":[17564,17624],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is a zero-length string.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> or <code>serverName</code> is a zero-length string."}],"pos":[17718,17792],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,157],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."}],"pos":[17906,18074],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class for the specified pipe handle with the specified pipe direction.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class for the specified pipe handle with the specified pipe direction.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class for the specified pipe handle with the specified pipe direction."}],"pos":[19792,19956],"yaml":true},{"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"pos":[0,72],"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"content":"One of the enumeration values that determines the direction of the pipe.","pos":[0,72]}]}],"pos":[20239,20312],"yaml":true},{"content":"`true` to indicate that the handle was opened asynchronously; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the handle was opened asynchronously; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the handle was opened asynchronously; otherwise, `false`."}],"pos":[20376,20460],"yaml":true},{"content":"`true` to indicate that the pipe is connected; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the pipe is connected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the pipe is connected; otherwise, `false`."}],"pos":[20528,20597],"yaml":true},{"content":"A safe handle for the pipe that this <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> object will encapsulate.","nodes":[{"pos":[0,120],"content":"A safe handle for the pipe that this <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> object will encapsulate.","source":"A safe handle for the pipe that this <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> object will encapsulate."}],"pos":[20696,20817],"yaml":true},{"content":"The stream has been closed.","nodes":[{"pos":[0,27],"content":"The stream has been closed.","nodes":[{"content":"The stream has been closed.","pos":[0,27]}]}],"pos":[20976,21004],"yaml":true},{"content":"<code>safePipeHandle</code> is not a valid handle.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;safePipeHandle&lt;/code&gt;</ph> is not a valid handle.","source":"<code>safePipeHandle</code> is not a valid handle."}],"pos":[21098,21149],"yaml":true},{"content":"<code>safePipeHandle</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;safePipeHandle&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>safePipeHandle</code> is `null`."}],"pos":[21251,21290],"yaml":true},{"content":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."}],"pos":[21404,21500],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction and pipe options.","nodes":[{"pos":[0,191],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe and server names, and the specified pipe direction and pipe options.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction and pipe options."}],"pos":[23152,23344],"yaml":true},{"content":"This constructor uses the following default values:  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"pos":[0,51],"content":"This constructor uses the following default values:","nodes":[{"content":"This constructor uses the following default values:","pos":[0,51]}]},{"pos":[61,199],"content":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.","pos":[0,138],"source":"A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>."}]},{"pos":[209,309],"content":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.","pos":[0,100],"source":"A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."}]}],"pos":[23355,23671],"yaml":true,"extradata":"MT"},{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"pos":[0,84],"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","pos":[0,84]}]}],"pos":[23921,24006],"yaml":true},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[24070,24092],"yaml":true},{"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"pos":[0,72],"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"content":"One of the enumeration values that determines the direction of the pipe.","pos":[0,72]}]}],"pos":[24173,24246],"yaml":true},{"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"pos":[0,77],"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"content":"One of the enumeration values that determines how to open or create the pipe.","pos":[0,77]}]}],"pos":[24323,24401],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>pipeName</code> or <code>serverName</code> is `null`."}],"pos":[24574,24634],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is a zero-length string.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> or <code>serverName</code> is a zero-length string."}],"pos":[24728,24802],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,157],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."},{"pos":[164,168],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[175,266],"content":"<ph id=\"ph1\">&lt;code&gt;options&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeOptions\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value."}],"pos":[24916,25199],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.","nodes":[{"pos":[0,222],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level."}],"pos":[27076,27299],"yaml":true},{"content":"This constructor uses a default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"pos":[0,122],"content":"This constructor uses a default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.","nodes":[{"content":"This constructor uses a default <ph id=\"ph1\">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.","pos":[0,122],"source":"This constructor uses a default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."}]}],"pos":[27310,27433],"yaml":true,"extradata":"MT"},{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"pos":[0,84],"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","pos":[0,84]}]}],"pos":[27753,27838],"yaml":true},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[27902,27924],"yaml":true},{"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"pos":[0,72],"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"content":"One of the enumeration values that determines the direction of the pipe.","pos":[0,72]}]}],"pos":[28005,28078],"yaml":true},{"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"pos":[0,77],"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"content":"One of the enumeration values that determines how to open or create the pipe.","pos":[0,77]}]}],"pos":[28155,28233],"yaml":true},{"content":"One of the enumeration values that determines the security impersonation level.","nodes":[{"pos":[0,79],"content":"One of the enumeration values that determines the security impersonation level.","nodes":[{"content":"One of the enumeration values that determines the security impersonation level.","pos":[0,79]}]}],"pos":[28343,28423],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>pipeName</code> or <code>serverName</code> is `null`."}],"pos":[28596,28656],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is a zero-length string.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> or <code>serverName</code> is a zero-length string."}],"pos":[28750,28824],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,157],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."},{"pos":[164,168],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[175,266],"content":"<ph id=\"ph1\">&lt;code&gt;options&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeOptions\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value."},{"pos":[273,277],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[284,408],"content":"<ph id=\"ph1\">&lt;code&gt;impersonationLevel&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.TokenImpersonationLevel\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value."}],"pos":[28938,29369],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode.","nodes":[{"pos":[0,227],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode."}],"pos":[31387,31615],"yaml":true},{"content":"The pipe direction for this constructor is determined by the `desiredAccessRights` parameter. If the `desiredAccessRights` value is <xref:System.IO.Pipes.PipeAccessRights.ReadData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.In>. If the value of `desiredAccessRights` is <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.Out>. If the value of `desiredAccessRights` includes both <xref:System.IO.Pipes.PipeAccessRights.ReadData> and <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.InOut>.","nodes":[{"pos":[0,637],"content":"The pipe direction for this constructor is determined by the `desiredAccessRights` parameter. If the `desiredAccessRights` value is <xref:System.IO.Pipes.PipeAccessRights.ReadData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.In>. If the value of `desiredAccessRights` is <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.Out>. If the value of `desiredAccessRights` includes both <xref:System.IO.Pipes.PipeAccessRights.ReadData> and <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.InOut>.","nodes":[{"content":"The pipe direction for this constructor is determined by the <ph id=\"ph1\">`desiredAccessRights`</ph> parameter.","pos":[0,93],"source":"The pipe direction for this constructor is determined by the `desiredAccessRights` parameter."},{"content":"If the <ph id=\"ph1\">`desiredAccessRights`</ph> value is <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.ReadData&gt;</ph>, the pipe direction will be <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.","pos":[94,249],"source":" If the `desiredAccessRights` value is <xref:System.IO.Pipes.PipeAccessRights.ReadData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.In>."},{"content":"If the value of <ph id=\"ph1\">`desiredAccessRights`</ph> is <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.WriteData&gt;</ph>, the pipe direction will be <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.","pos":[250,410],"source":" If the value of `desiredAccessRights` is <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.Out>."},{"content":"If the value of <ph id=\"ph1\">`desiredAccessRights`</ph> includes both <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.ReadData&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeAccessRights.WriteData&gt;</ph>, the pipe direction will be <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>.","pos":[411,637],"source":" If the value of `desiredAccessRights` includes both <xref:System.IO.Pipes.PipeAccessRights.ReadData> and <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.InOut>."}]}],"pos":[31626,32264],"yaml":true,"extradata":"MT"},{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"pos":[0,84],"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","pos":[0,84]}]}],"pos":[32644,32729],"yaml":true},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[32793,32815],"yaml":true},{"content":"One of the enumeration values that specifies the desired access rights of the pipe.","nodes":[{"pos":[0,83],"content":"One of the enumeration values that specifies the desired access rights of the pipe.","nodes":[{"content":"One of the enumeration values that specifies the desired access rights of the pipe.","pos":[0,83]}]}],"pos":[32909,32993],"yaml":true},{"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"pos":[0,77],"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"content":"One of the enumeration values that determines how to open or create the pipe.","pos":[0,77]}]}],"pos":[33070,33148],"yaml":true},{"content":"One of the enumeration values that determines the security impersonation level.","nodes":[{"pos":[0,79],"content":"One of the enumeration values that determines the security impersonation level.","nodes":[{"content":"One of the enumeration values that determines the security impersonation level.","pos":[0,79]}]}],"pos":[33258,33338],"yaml":true},{"content":"One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.","nodes":[{"pos":[0,115],"content":"One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.","nodes":[{"content":"One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.","pos":[0,115]}]}],"pos":[33425,33541],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>pipeName</code> or <code>serverName</code> is `null`."}],"pos":[33714,33774],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is a zero-length string.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> or <code>serverName</code> is a zero-length string."}],"pos":[33868,33942],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value.  \n  \n -or-  \n  \n <code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,153],"content":"<ph id=\"ph1\">&lt;code&gt;options&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeOptions\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value."},{"pos":[160,164],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[171,295],"content":"<ph id=\"ph1\">&lt;code&gt;impersonationLevel&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.TokenImpersonationLevel\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value."},{"pos":[302,306],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[313,414],"content":"<ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.HandleInheritability\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value."}],"pos":[34056,34493],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.","nodes":[{"pos":[0,243],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode."}],"pos":[36393,36637],"yaml":true},{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"pos":[0,84],"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","nodes":[{"content":"The name of the remote computer to connect to, or \".\" to specify the local computer.","pos":[0,84]}]}],"pos":[37004,37089],"yaml":true},{"content":"The name of the pipe.","nodes":[{"pos":[0,21],"content":"The name of the pipe.","nodes":[{"content":"The name of the pipe.","pos":[0,21]}]}],"pos":[37153,37175],"yaml":true},{"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"pos":[0,72],"content":"One of the enumeration values that determines the direction of the pipe.","nodes":[{"content":"One of the enumeration values that determines the direction of the pipe.","pos":[0,72]}]}],"pos":[37256,37329],"yaml":true},{"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"pos":[0,77],"content":"One of the enumeration values that determines how to open or create the pipe.","nodes":[{"content":"One of the enumeration values that determines how to open or create the pipe.","pos":[0,77]}]}],"pos":[37406,37484],"yaml":true},{"content":"One of the enumeration values that determines the security impersonation level.","nodes":[{"pos":[0,79],"content":"One of the enumeration values that determines the security impersonation level.","nodes":[{"content":"One of the enumeration values that determines the security impersonation level.","pos":[0,79]}]}],"pos":[37594,37674],"yaml":true},{"content":"One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.","nodes":[{"pos":[0,115],"content":"One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.","nodes":[{"content":"One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.","pos":[0,115]}]}],"pos":[37761,37877],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>pipeName</code> or <code>serverName</code> is `null`."}],"pos":[38050,38110],"yaml":true},{"content":"<code>pipeName</code> or <code>serverName</code> is a zero-length string.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serverName&lt;/code&gt;</ph> is a zero-length string.","source":"<code>pipeName</code> or <code>serverName</code> is a zero-length string."}],"pos":[38204,38278],"yaml":true},{"content":"<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value.  \n  \n -or-  \n  \n <code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;pipeName&lt;/code&gt;</ph> is set to \"anonymous\".","source":"<code>pipeName</code> is set to \"anonymous\"."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,157],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."},{"pos":[164,168],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[175,266],"content":"<ph id=\"ph1\">&lt;code&gt;options&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeOptions\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value."},{"pos":[273,277],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[284,408],"content":"<ph id=\"ph1\">&lt;code&gt;impersonationLevel&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.TokenImpersonationLevel\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value."},{"pos":[415,419],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[426,527],"content":"<ph id=\"ph1\">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.HandleInheritability\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value."}],"pos":[38392,38948],"yaml":true},{"content":"Connects to a waiting server with an infinite time-out value.","nodes":[{"pos":[0,61],"content":"Connects to a waiting server with an infinite time-out value.","nodes":[{"content":"Connects to a waiting server with an infinite time-out value.","pos":[0,61]}]}],"pos":[41473,41535],"yaml":true},{"content":"This method calls the <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> method with an infinite time-out value.  \n  \n This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned.  \n  \n Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.","nodes":[{"pos":[0,132],"content":"This method calls the <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> method with an infinite time-out value.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29&gt;</ph> method with an infinite time-out value.","pos":[0,132],"source":"This method calls the <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> method with an infinite time-out value."}]},{"pos":[139,573],"content":"This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned.","nodes":[{"content":"This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned.","pos":[0,434],"nodes":[{"content":"This method waits for a pipe instance to become available.","pos":[0,58]},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> might return before <ph id=\"ph2\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> is called from the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> object, but <ph id=\"ph4\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> will not return until <ph id=\"ph5\">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> has returned.","pos":[59,434],"source":" <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned."}]}]},{"pos":[580,904],"content":"Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.","nodes":[{"content":"Any data written to the pipe after a <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has connected, but before the server has called <ph id=\"ph2\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>, will be available to the server following the call to <ph id=\"ph3\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>.","pos":[0,324],"source":"Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>."}]}],"pos":[41546,42457],"yaml":true,"extradata":"MT"},{"content":"The client is already connected.","nodes":[{"pos":[0,32],"content":"The client is already connected.","nodes":[{"content":"The client is already connected.","pos":[0,32]}]}],"pos":[43610,43643],"yaml":true},{"content":"Connects to a waiting server within the specified time-out period.","nodes":[{"pos":[0,66],"content":"Connects to a waiting server within the specified time-out period.","nodes":[{"content":"Connects to a waiting server within the specified time-out period.","pos":[0,66]}]}],"pos":[44922,44989],"yaml":true},{"content":"This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream>, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned. You set the `timeout` parameter to <xref:System.Threading.Timeout.Infinite> to specify an infinite time-out value.  \n  \n Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.","nodes":[{"pos":[0,542],"content":"This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream>, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned. You set the `timeout` parameter to <xref:System.Threading.Timeout.Infinite> to specify an infinite time-out value.","nodes":[{"content":"This method waits for a pipe instance to become available.","pos":[0,58]},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> might return before <ph id=\"ph2\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> is called from the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph>, but <ph id=\"ph4\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> will not return until <ph id=\"ph5\">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> has returned.","pos":[59,427],"source":" <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream>, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned."},{"content":"You set the <ph id=\"ph1\">`timeout`</ph> parameter to <ph id=\"ph2\">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> to specify an infinite time-out value.","pos":[428,542],"source":" You set the `timeout` parameter to <xref:System.Threading.Timeout.Infinite> to specify an infinite time-out value."}]},{"pos":[549,873],"content":"Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.","nodes":[{"content":"Any data written to the pipe after a <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has connected, but before the server has called <ph id=\"ph2\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>, will be available to the server following the call to <ph id=\"ph3\">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>.","pos":[0,324],"source":"Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>."}]}],"pos":[45000,45878],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds to wait for the server to respond before the connection times out.","nodes":[{"pos":[0,93],"content":"The number of milliseconds to wait for the server to respond before the connection times out.","nodes":[{"content":"The number of milliseconds to wait for the server to respond before the connection times out.","pos":[0,93]}]}],"pos":[46014,46108],"yaml":true},{"content":"Could not connect to the server within the specified <code>timeout</code> period.","nodes":[{"pos":[0,81],"content":"Could not connect to the server within the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> period.","source":"Could not connect to the server within the specified <code>timeout</code> period."}],"pos":[46273,46355],"yaml":true},{"content":"<code>timeout</code> is less than 0 and not set to <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">&lt;code&gt;timeout&lt;/code&gt;</ph> is less than 0 and not set to <ph id=\"ph2\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>.","source":"<code>timeout</code> is less than 0 and not set to <xref href=\"System.Threading.Timeout.Infinite\"></xref>."}],"pos":[46469,46576],"yaml":true},{"content":"The client is already connected.","nodes":[{"pos":[0,32],"content":"The client is already connected.","nodes":[{"content":"The client is already connected.","pos":[0,32]}]}],"pos":[46686,46719],"yaml":true},{"content":"The server is connected to another client and the time-out period has expired.","nodes":[{"pos":[0,78],"content":"The server is connected to another client and the time-out period has expired.","nodes":[{"content":"The server is connected to another client and the time-out period has expired.","pos":[0,78]}]}],"pos":[46807,46886],"yaml":true},{"content":"Asynchronously connects to a waiting server with an infinite timeout period.","nodes":[{"pos":[0,76],"content":"Asynchronously connects to a waiting server with an infinite timeout period.","nodes":[{"content":"Asynchronously connects to a waiting server with an infinite timeout period.","pos":[0,76]}]}],"pos":[48138,48215],"yaml":true},{"content":"A task that represents the asynchronous connect operation.","nodes":[{"pos":[0,58],"content":"A task that represents the asynchronous connect operation.","nodes":[{"content":"A task that represents the asynchronous connect operation.","pos":[0,58]}]}],"pos":[48380,48439],"yaml":true},{"content":"Asynchronously connects to a waiting server within the specified timeout period.","nodes":[{"pos":[0,80],"content":"Asynchronously connects to a waiting server within the specified timeout period.","nodes":[{"content":"Asynchronously connects to a waiting server within the specified timeout period.","pos":[0,80]}]}],"pos":[49695,49776],"yaml":true},{"content":"The number of milliseconds to wait for the server to respond before the connection times out.","nodes":[{"pos":[0,93],"content":"The number of milliseconds to wait for the server to respond before the connection times out.","nodes":[{"content":"The number of milliseconds to wait for the server to respond before the connection times out.","pos":[0,93]}]}],"pos":[49940,50034],"yaml":true},{"content":"A task that represents the asynchronous connect operation.","nodes":[{"pos":[0,58],"content":"A task that represents the asynchronous connect operation.","nodes":[{"content":"A task that represents the asynchronous connect operation.","pos":[0,58]}]}],"pos":[50105,50164],"yaml":true},{"content":"Asynchronously connects to a waiting server and monitors cancellation requests.","nodes":[{"pos":[0,79],"content":"Asynchronously connects to a waiting server and monitors cancellation requests.","nodes":[{"content":"Asynchronously connects to a waiting server and monitors cancellation requests.","pos":[0,79]}]}],"pos":[51522,51602],"yaml":true},{"content":"The token to monitor for cancellation requests. The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>.","nodes":[{"pos":[0,130],"content":"The token to monitor for cancellation requests. The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>.","nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken.None\"&gt;&lt;/xref&gt;</ph>.","pos":[48,130],"source":" The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>."}]}],"pos":[51839,51970],"yaml":true},{"content":"A task that represents the asynchronous connect operation.","nodes":[{"pos":[0,58],"content":"A task that represents the asynchronous connect operation.","nodes":[{"content":"A task that represents the asynchronous connect operation.","pos":[0,58]}]}],"pos":[52041,52100],"yaml":true},{"content":"Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.","nodes":[{"pos":[0,115],"content":"Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.","nodes":[{"content":"Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.","pos":[0,115]}]}],"pos":[53518,53634],"yaml":true},{"content":"The number of milliseconds to wait for the server to respond before the connection times out.","nodes":[{"pos":[0,93],"content":"The number of milliseconds to wait for the server to respond before the connection times out.","nodes":[{"content":"The number of milliseconds to wait for the server to respond before the connection times out.","pos":[0,93]}]}],"pos":[53852,53946],"yaml":true},{"content":"The token to monitor for cancellation requests. The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>.","nodes":[{"pos":[0,130],"content":"The token to monitor for cancellation requests. The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>.","nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken.None\"&gt;&lt;/xref&gt;</ph>.","pos":[48,130],"source":" The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>."}]}],"pos":[54040,54171],"yaml":true},{"content":"A task that represents the asynchronous connect operation.","nodes":[{"pos":[0,58],"content":"A task that represents the asynchronous connect operation.","nodes":[{"content":"A task that represents the asynchronous connect operation.","pos":[0,58]}]}],"pos":[54242,54301],"yaml":true},{"content":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> instance is reclaimed by garbage collection.","nodes":[{"pos":[0,181],"content":"Releases unmanaged resources and performs other cleanup operations before the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> instance is reclaimed by garbage collection.","source":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> instance is reclaimed by garbage collection."}],"pos":[55460,55642],"yaml":true},{"content":"Gets the number of server instances that share the same pipe name.","nodes":[{"pos":[0,66],"content":"Gets the number of server instances that share the same pipe name.","nodes":[{"content":"Gets the number of server instances that share the same pipe name.","pos":[0,66]}]}],"pos":[57062,57129],"yaml":true},{"content":"This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to. If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>.","nodes":[{"pos":[0,447],"content":"This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to. If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>.","nodes":[{"content":"This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to. If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>.","pos":[0,447],"nodes":[{"content":"This property returns the number of server instances for the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> object that the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has a handle to or is connected to.","pos":[0,217],"source":"This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to."},{"content":"If the current <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[218,447],"source":" If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>."}]}]}],"pos":[57140,57588],"yaml":true,"extradata":"MT"},{"content":"The number of server instances that share the same pipe name.","nodes":[{"pos":[0,61],"content":"The number of server instances that share the same pipe name.","nodes":[{"content":"The number of server instances that share the same pipe name.","pos":[0,61]}]}],"pos":[58622,58684],"yaml":true},{"content":"The pipe handle has not been set.  \n  \n -or-  \n  \n The current <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> object has not yet connected to a <xref href=\"System.IO.Pipes.NamedPipeServerStream\"></xref> object.","nodes":[{"pos":[0,33],"content":"The pipe handle has not been set.","nodes":[{"content":"The pipe handle has not been set.","pos":[0,33]}]},{"pos":[40,44],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[51,222],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.NamedPipeClientStream\"&gt;&lt;/xref&gt;</ph> object has not yet connected to a <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.NamedPipeServerStream\"&gt;&lt;/xref&gt;</ph> object.","source":"The current <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> object has not yet connected to a <xref href=\"System.IO.Pipes.NamedPipeServerStream\"></xref> object."}],"pos":[58883,59116],"yaml":true},{"content":"The pipe is broken or an I/O error occurred.","nodes":[{"pos":[0,44],"content":"The pipe is broken or an I/O error occurred.","nodes":[{"content":"The pipe is broken or an I/O error occurred.","pos":[0,44]}]}],"pos":[59204,59249],"yaml":true},{"content":"The underlying pipe handle is closed.","nodes":[{"pos":[0,37],"content":"The underlying pipe handle is closed.","nodes":[{"content":"The underlying pipe handle is closed.","pos":[0,37]}]}],"pos":[59355,59393],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.NamedPipeClientStream\n  commentId: T:System.IO.Pipes.NamedPipeClientStream\n  id: NamedPipeClientStream\n  children:\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  - System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations\n  - System.IO.Pipes.NamedPipeClientStream.Connect\n  - System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)\n  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync\n  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)\n  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)\n  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.NamedPipeClientStream.Finalize\n  - System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances\n  langs:\n  - csharp\n  name: NamedPipeClientStream\n  nameWithType: NamedPipeClientStream\n  fullName: System.IO.Pipes.NamedPipeClientStream\n  type: Class\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Exposes a <xref href=\"System.IO.Stream\"></xref> around a named pipe, which supports both synchronous and asynchronous read and write operations.\n  remarks: \"Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects.  \\n  \\n Any process can act as either a named pipe server or client, or both.  \\n  \\n> [!NOTE]\\n>  For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.\"\n  example:\n  - \"The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>. The server then waits for a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process to connect to it. In this example, both processes are on the same computer and the <xref:System.IO.Pipes.NamedPipeClientStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \\n  \\n This example is for the client process, which connects to the server process. For the entire code sample, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).  \\n  \\n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]\"\n  syntax:\n    content: 'public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  - System.IO.Pipes.PipeStream\n  implements: []\n  inheritedMembers:\n  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Pipes.PipeStream.CanRead\n  - System.IO.Pipes.PipeStream.CanSeek\n  - System.IO.Pipes.PipeStream.CanWrite\n  - System.IO.Pipes.PipeStream.CheckReadOperations\n  - System.IO.Pipes.PipeStream.CheckWriteOperations\n  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)\n  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)\n  - System.IO.Pipes.PipeStream.Flush\n  - System.IO.Pipes.PipeStream.GetAccessControl\n  - System.IO.Pipes.PipeStream.InBufferSize\n  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  - System.IO.Pipes.PipeStream.IsAsync\n  - System.IO.Pipes.PipeStream.IsConnected\n  - System.IO.Pipes.PipeStream.IsHandleExposed\n  - System.IO.Pipes.PipeStream.IsMessageComplete\n  - System.IO.Pipes.PipeStream.Length\n  - System.IO.Pipes.PipeStream.OutBufferSize\n  - System.IO.Pipes.PipeStream.Position\n  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.PipeStream.ReadByte\n  - System.IO.Pipes.PipeStream.ReadMode\n  - System.IO.Pipes.PipeStream.SafePipeHandle\n  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)\n  - System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  - System.IO.Pipes.PipeStream.TransmissionMode\n  - System.IO.Pipes.PipeStream.WaitForPipeDrain\n  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteTimeout\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  - System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe name.\n  remarks: \"This constructor uses the following default values:  \\n  \\n-   A default server name of \\\".\\\".  \\n  \\n-   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.  \\n  \\n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \\n  \\n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \\n  \\n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.\"\n  syntax:\n    content: public NamedPipeClientStream (string pipeName);\n    parameters:\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>pipeName</code> is set to \"anonymous\".\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String, String)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names.\n  remarks: \"This constructor uses the following default values:  \\n  \\n-   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.  \\n  \\n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \\n  \\n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \\n  \\n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.\"\n  syntax:\n    content: public NamedPipeClientStream (string serverName, string pipeName);\n    parameters:\n    - id: serverName\n      type: System.String\n      description: The name of the remote computer to connect to, or \".\" to specify the local computer.\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> or <code>serverName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>pipeName</code> is set to \"anonymous\".\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)\n  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String, String, PipeDirection)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction.\n  remarks: \"This constructor uses the following default values:  \\n  \\n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \\n  \\n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \\n  \\n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.\"\n  example:\n  - \"The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \\n  \\n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]\"\n  syntax:\n    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);\n    parameters:\n    - id: serverName\n      type: System.String\n      description: The name of the remote computer to connect to, or \".\" to specify the local computer.\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the enumeration values that determines the direction of the pipe.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> or <code>serverName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>pipeName</code> is set to \\\"anonymous\\\".  \\n  \\n -or-  \\n  \\n <code>direction</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\"></xref> value.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)\n  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class for the specified pipe handle with the specified pipe direction.\n  syntax:\n    content: public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);\n    parameters:\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the enumeration values that determines the direction of the pipe.\n    - id: isAsync\n      type: System.Boolean\n      description: '`true` to indicate that the handle was opened asynchronously; otherwise, `false`.'\n    - id: isConnected\n      type: System.Boolean\n      description: '`true` to indicate that the pipe is connected; otherwise, `false`.'\n    - id: safePipeHandle\n      type: Microsoft.Win32.SafeHandles.SafePipeHandle\n      description: A safe handle for the pipe that this <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> object will encapsulate.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The stream has been closed.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>safePipeHandle</code> is not a valid handle.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>safePipeHandle</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)\n  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction and pipe options.\n  remarks: \"This constructor uses the following default values:  \\n  \\n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \\n  \\n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.\"\n  syntax:\n    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);\n    parameters:\n    - id: serverName\n      type: System.String\n      description: The name of the remote computer to connect to, or \".\" to specify the local computer.\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the enumeration values that determines the direction of the pipe.\n    - id: options\n      type: System.IO.Pipes.PipeOptions\n      description: One of the enumeration values that determines how to open or create the pipe.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> or <code>serverName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>pipeName</code> is set to \\\"anonymous\\\".  \\n  \\n -or-  \\n  \\n <code>direction</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>options</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeOptions\\\"></xref> value.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)\n  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.\n  remarks: This constructor uses a default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.\n  syntax:\n    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);\n    parameters:\n    - id: serverName\n      type: System.String\n      description: The name of the remote computer to connect to, or \".\" to specify the local computer.\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the enumeration values that determines the direction of the pipe.\n    - id: options\n      type: System.IO.Pipes.PipeOptions\n      description: One of the enumeration values that determines how to open or create the pipe.\n    - id: impersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the enumeration values that determines the security impersonation level.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> or <code>serverName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>pipeName</code> is set to \\\"anonymous\\\".  \\n  \\n -or-  \\n  \\n <code>direction</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>options</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeOptions\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>impersonationLevel</code> is not a valid <xref href=\\\"System.Security.Principal.TokenImpersonationLevel\\\"></xref> value.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode.\n  remarks: The pipe direction for this constructor is determined by the `desiredAccessRights` parameter. If the `desiredAccessRights` value is <xref:System.IO.Pipes.PipeAccessRights.ReadData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.In>. If the value of `desiredAccessRights` is <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.Out>. If the value of `desiredAccessRights` includes both <xref:System.IO.Pipes.PipeAccessRights.ReadData> and <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.InOut>.\n  syntax:\n    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: serverName\n      type: System.String\n      description: The name of the remote computer to connect to, or \".\" to specify the local computer.\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n    - id: desiredAccessRights\n      type: System.IO.Pipes.PipeAccessRights\n      description: One of the enumeration values that specifies the desired access rights of the pipe.\n    - id: options\n      type: System.IO.Pipes.PipeOptions\n      description: One of the enumeration values that determines how to open or create the pipe.\n    - id: impersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the enumeration values that determines the security impersonation level.\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> or <code>serverName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>pipeName</code> is set to \\\"anonymous\\\".  \\n  \\n -or-  \\n  \\n <code>options</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeOptions\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>impersonationLevel</code> is not a valid <xref href=\\\"System.Security.Principal.TokenImpersonationLevel\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref href=\\\"System.IO.HandleInheritability\\\"></xref> value.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  type: Constructor\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.\n  syntax:\n    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);\n    parameters:\n    - id: serverName\n      type: System.String\n      description: The name of the remote computer to connect to, or \".\" to specify the local computer.\n    - id: pipeName\n      type: System.String\n      description: The name of the pipe.\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the enumeration values that determines the direction of the pipe.\n    - id: options\n      type: System.IO.Pipes.PipeOptions\n      description: One of the enumeration values that determines how to open or create the pipe.\n    - id: impersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the enumeration values that determines the security impersonation level.\n    - id: inheritability\n      type: System.IO.HandleInheritability\n      description: One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.\n  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeName</code> or <code>serverName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>pipeName</code> is set to \\\"anonymous\\\".  \\n  \\n -or-  \\n  \\n <code>direction</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>options</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeOptions\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>impersonationLevel</code> is not a valid <xref href=\\\"System.Security.Principal.TokenImpersonationLevel\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>inheritability</code> is not a valid <xref href=\\\"System.IO.HandleInheritability\\\"></xref> value.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations\n  id: CheckPipePropertyOperations\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: CheckPipePropertyOperations()\n  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()\n  fullName: NamedPipeClientStream.CheckPipePropertyOperations()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  syntax:\n    content: protected override void CheckPipePropertyOperations ();\n    parameters: []\n  overload: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.IO.Pipes.NamedPipeClientStream.Connect\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.Connect\n  id: Connect\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: Connect()\n  nameWithType: NamedPipeClientStream.Connect()\n  fullName: NamedPipeClientStream.Connect()\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Connects to a waiting server with an infinite time-out value.\n  remarks: \"This method calls the <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> method with an infinite time-out value.  \\n  \\n This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned.  \\n  \\n Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.\"\n  example:\n  - \"The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \\n  \\n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]\"\n  syntax:\n    content: public void Connect ();\n    parameters: []\n  overload: System.IO.Pipes.NamedPipeClientStream.Connect*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The client is already connected.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)\n  id: Connect(System.Int32)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: Connect(Int32)\n  nameWithType: NamedPipeClientStream.Connect(Int32)\n  fullName: NamedPipeClientStream.Connect(Int32)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Connects to a waiting server within the specified time-out period.\n  remarks: \"This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream>, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned. You set the `timeout` parameter to <xref:System.Threading.Timeout.Infinite> to specify an infinite time-out value.  \\n  \\n Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.\"\n  syntax:\n    content: public void Connect (int timeout);\n    parameters:\n    - id: timeout\n      type: System.Int32\n      description: The number of milliseconds to wait for the server to respond before the connection times out.\n  overload: System.IO.Pipes.NamedPipeClientStream.Connect*\n  exceptions:\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: Could not connect to the server within the specified <code>timeout</code> period.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>timeout</code> is less than 0 and not set to <xref href=\"System.Threading.Timeout.Infinite\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The client is already connected.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The server is connected to another client and the time-out period has expired.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync\n  id: ConnectAsync\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: ConnectAsync()\n  nameWithType: NamedPipeClientStream.ConnectAsync()\n  fullName: NamedPipeClientStream.ConnectAsync()\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Asynchronously connects to a waiting server with an infinite timeout period.\n  syntax:\n    content: public System.Threading.Tasks.Task ConnectAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous connect operation.\n  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)\n  id: ConnectAsync(System.Int32)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: ConnectAsync(Int32)\n  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)\n  fullName: NamedPipeClientStream.ConnectAsync(Int32)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Asynchronously connects to a waiting server within the specified timeout period.\n  syntax:\n    content: public System.Threading.Tasks.Task ConnectAsync (int timeout);\n    parameters:\n    - id: timeout\n      type: System.Int32\n      description: The number of milliseconds to wait for the server to respond before the connection times out.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous connect operation.\n  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)\n  id: ConnectAsync(System.Threading.CancellationToken)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: ConnectAsync(CancellationToken)\n  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)\n  fullName: NamedPipeClientStream.ConnectAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Asynchronously connects to a waiting server and monitors cancellation requests.\n  syntax:\n    content: public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests. The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous connect operation.\n  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)\n  id: ConnectAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: ConnectAsync(Int32, CancellationToken)\n  nameWithType: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)\n  fullName: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.\n  syntax:\n    content: public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: timeout\n      type: System.Int32\n      description: The number of milliseconds to wait for the server to respond before the connection times out.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests. The default value is <xref href=\"System.Threading.CancellationToken.None\"></xref>.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous connect operation.\n  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.Finalize\n  commentId: M:System.IO.Pipes.NamedPipeClientStream.Finalize\n  id: Finalize\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: NamedPipeClientStream.Finalize()\n  fullName: NamedPipeClientStream.Finalize()\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> instance is reclaimed by garbage collection.\n  syntax:\n    content: ~NamedPipeClientStream ();\n    parameters: []\n  overload: System.IO.Pipes.NamedPipeClientStream.Finalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances\n  commentId: P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances\n  id: NumberOfServerInstances\n  parent: System.IO.Pipes.NamedPipeClientStream\n  langs:\n  - csharp\n  name: NumberOfServerInstances\n  nameWithType: NamedPipeClientStream.NumberOfServerInstances\n  fullName: NamedPipeClientStream.NumberOfServerInstances\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets the number of server instances that share the same pipe name.\n  remarks: This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to. If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>.\n  example:\n  - \"The following example demonstrates a method to send a string from a parent process to a child process using named pipes. In this example, a <xref:System.IO.Pipes.NamedPipeClientStream> object is created in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \\n  \\n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]\"\n  syntax:\n    content: public int NumberOfServerInstances { get; }\n    return:\n      type: System.Int32\n      description: The number of server instances that share the same pipe name.\n  overload: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The pipe handle has not been set.  \\n  \\n -or-  \\n  \\n The current <xref href=\\\"System.IO.Pipes.NamedPipeClientStream\\\"></xref> object has not yet connected to a <xref href=\\\"System.IO.Pipes.NamedPipeServerStream\\\"></xref> object.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or an I/O error occurred.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The underlying pipe handle is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.Pipes.PipeStream\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeStream\n  nameWithType: PipeStream\n  fullName: System.IO.Pipes.PipeStream\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.TimeoutException\n  parent: System\n  isExternal: false\n  name: TimeoutException\n  nameWithType: TimeoutException\n  fullName: System.TimeoutException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String, String)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String)\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String, String, PipeDirection)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)\n- uid: System.IO.Pipes.PipeDirection\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeDirection\n  nameWithType: PipeDirection\n  fullName: System.IO.Pipes.PipeDirection\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.SafeHandles.SafePipeHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafePipeHandle\n  nameWithType: SafePipeHandle\n  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)\n- uid: System.IO.Pipes.PipeOptions\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeOptions\n  nameWithType: PipeOptions\n  fullName: System.IO.Pipes.PipeOptions\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n- uid: System.IO.HandleInheritability\n  parent: System.IO\n  isExternal: false\n  name: HandleInheritability\n  nameWithType: HandleInheritability\n  fullName: System.IO.HandleInheritability\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)\n- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: CheckPipePropertyOperations()\n  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()\n  fullName: NamedPipeClientStream.CheckPipePropertyOperations()\n- uid: System.IO.Pipes.NamedPipeClientStream.Connect\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: Connect()\n  nameWithType: NamedPipeClientStream.Connect()\n  fullName: NamedPipeClientStream.Connect()\n- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: Connect(Int32)\n  nameWithType: NamedPipeClientStream.Connect(Int32)\n  fullName: NamedPipeClientStream.Connect(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: ConnectAsync()\n  nameWithType: NamedPipeClientStream.ConnectAsync()\n  fullName: NamedPipeClientStream.ConnectAsync()\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: ConnectAsync(Int32)\n  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)\n  fullName: NamedPipeClientStream.ConnectAsync(Int32)\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: ConnectAsync(CancellationToken)\n  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)\n  fullName: NamedPipeClientStream.ConnectAsync(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: ConnectAsync(Int32, CancellationToken)\n  nameWithType: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)\n  fullName: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)\n- uid: System.IO.Pipes.NamedPipeClientStream.Finalize\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: Finalize()\n  nameWithType: NamedPipeClientStream.Finalize()\n  fullName: NamedPipeClientStream.Finalize()\n- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NumberOfServerInstances\n  nameWithType: NamedPipeClientStream.NumberOfServerInstances\n  fullName: NamedPipeClientStream.NumberOfServerInstances\n- uid: System.IO.Pipes.NamedPipeClientStream.#ctor*\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NamedPipeClientStream\n  nameWithType: NamedPipeClientStream.NamedPipeClientStream\n  fullName: NamedPipeClientStream.NamedPipeClientStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: CheckPipePropertyOperations\n  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations\n  fullName: NamedPipeClientStream.CheckPipePropertyOperations\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.IO.Pipes.NamedPipeClientStream.Connect*\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: Connect\n  nameWithType: NamedPipeClientStream.Connect\n  fullName: NamedPipeClientStream.Connect\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: ConnectAsync\n  nameWithType: NamedPipeClientStream.ConnectAsync\n  fullName: NamedPipeClientStream.ConnectAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.IO.Pipes.NamedPipeClientStream.Finalize*\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: Finalize\n  nameWithType: NamedPipeClientStream.Finalize\n  fullName: NamedPipeClientStream.Finalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*\n  parent: System.IO.Pipes.NamedPipeClientStream\n  isExternal: false\n  name: NumberOfServerInstances\n  nameWithType: NamedPipeClientStream.NumberOfServerInstances\n  fullName: NamedPipeClientStream.NumberOfServerInstances\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Pipes.PipeStream.CanRead\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PipeStream.CanRead\n  fullName: PipeStream.CanRead\n- uid: System.IO.Pipes.PipeStream.CanSeek\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PipeStream.CanSeek\n  fullName: PipeStream.CanSeek\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.Pipes.PipeStream.CanWrite\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PipeStream.CanWrite\n  fullName: PipeStream.CanWrite\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: PipeStream.Dispose(Boolean)\n  fullName: PipeStream.Dispose(Boolean)\n- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: PipeStream.EndRead(IAsyncResult)\n  fullName: PipeStream.EndRead(IAsyncResult)\n- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: PipeStream.EndWrite(IAsyncResult)\n  fullName: PipeStream.EndWrite(IAsyncResult)\n- uid: System.IO.Pipes.PipeStream.Flush\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Flush()\n  nameWithType: PipeStream.Flush()\n  fullName: PipeStream.Flush()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Pipes.PipeStream.Length\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Length\n  nameWithType: PipeStream.Length\n  fullName: PipeStream.Length\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Pipes.PipeStream.Position\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Position\n  nameWithType: PipeStream.Position\n  fullName: PipeStream.Position\n- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: PipeStream.Read(Byte[], Int32, Int32)\n  fullName: PipeStream.Read(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Pipes.PipeStream.ReadByte\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: PipeStream.ReadByte()\n  fullName: PipeStream.ReadByte()\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: PipeStream.Seek(Int64, SeekOrigin)\n  fullName: PipeStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: PipeStream.SetLength(Int64)\n  fullName: PipeStream.SetLength(Int64)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: PipeStream.Write(Byte[], Int32, Int32)\n  fullName: PipeStream.Write(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: PipeStream.WriteByte(Byte)\n  fullName: PipeStream.WriteByte(Byte)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n- uid: System.IO.Pipes.PipeStream.CheckReadOperations\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckReadOperations()\n  nameWithType: PipeStream.CheckReadOperations()\n  fullName: PipeStream.CheckReadOperations()\n- uid: System.IO.Pipes.PipeStream.CheckWriteOperations\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckWriteOperations()\n  nameWithType: PipeStream.CheckWriteOperations()\n  fullName: PipeStream.CheckWriteOperations()\n- uid: System.IO.Pipes.PipeStream.GetAccessControl\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: GetAccessControl()\n  nameWithType: PipeStream.GetAccessControl()\n  fullName: PipeStream.GetAccessControl()\n- uid: System.IO.Pipes.PipeStream.InBufferSize\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: InBufferSize\n  nameWithType: PipeStream.InBufferSize\n  fullName: PipeStream.InBufferSize\n- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)\n- uid: System.IO.Pipes.PipeStream.IsAsync\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsAsync\n  nameWithType: PipeStream.IsAsync\n  fullName: PipeStream.IsAsync\n- uid: System.IO.Pipes.PipeStream.IsConnected\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsConnected\n  nameWithType: PipeStream.IsConnected\n  fullName: PipeStream.IsConnected\n- uid: System.IO.Pipes.PipeStream.IsHandleExposed\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsHandleExposed\n  nameWithType: PipeStream.IsHandleExposed\n  fullName: PipeStream.IsHandleExposed\n- uid: System.IO.Pipes.PipeStream.IsMessageComplete\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsMessageComplete\n  nameWithType: PipeStream.IsMessageComplete\n  fullName: PipeStream.IsMessageComplete\n- uid: System.IO.Pipes.PipeStream.OutBufferSize\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: OutBufferSize\n  nameWithType: PipeStream.OutBufferSize\n  fullName: PipeStream.OutBufferSize\n- uid: System.IO.Pipes.PipeStream.ReadMode\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadMode\n  nameWithType: PipeStream.ReadMode\n  fullName: PipeStream.ReadMode\n- uid: System.IO.Pipes.PipeStream.SafePipeHandle\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SafePipeHandle\n  nameWithType: PipeStream.SafePipeHandle\n  fullName: PipeStream.SafePipeHandle\n- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SetAccessControl(PipeSecurity)\n  nameWithType: PipeStream.SetAccessControl(PipeSecurity)\n  fullName: PipeStream.SetAccessControl(PipeSecurity)\n- uid: System.IO.Pipes.PipeStream.TransmissionMode\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: TransmissionMode\n  nameWithType: PipeStream.TransmissionMode\n  fullName: PipeStream.TransmissionMode\n- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WaitForPipeDrain()\n  nameWithType: PipeStream.WaitForPipeDrain()\n  fullName: PipeStream.WaitForPipeDrain()\n- uid: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  parent: System.IO.Pipes.PipesAclExtensions\n  isExternal: false\n  name: GetAccessControl(PipeStream)\n  nameWithType: PipesAclExtensions.GetAccessControl(PipeStream)\n  fullName: PipesAclExtensions.GetAccessControl(PipeStream)\n- uid: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  parent: System.IO.Pipes.PipesAclExtensions\n  isExternal: false\n  name: SetAccessControl(PipeStream, PipeSecurity)\n  nameWithType: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)\n  fullName: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)\n"}