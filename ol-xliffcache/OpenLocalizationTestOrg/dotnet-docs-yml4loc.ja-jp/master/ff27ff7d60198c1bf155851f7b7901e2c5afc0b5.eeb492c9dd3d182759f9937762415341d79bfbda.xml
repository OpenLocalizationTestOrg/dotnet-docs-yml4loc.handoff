{"nodes":[{"content":"Exposes a method that compares two objects.","nodes":[{"pos":[0,43],"content":"Exposes a method that compares two objects.","nodes":[{"content":"Exposes a method that compares two objects.","pos":[0,43]}]}],"pos":[442,486],"yaml":true},{"content":"This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=fullName> and <xref:System.Array.BinarySearch%2A?displayProperty=fullName> methods. It provides a way to customize the sort order of a collection. See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value.  \n  \n The default implementation of this interface is the <xref:System.Collections.Comparer> class. For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=fullName>.","nodes":[{"pos":[0,340],"content":"This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=fullName> and <xref:System.Array.BinarySearch%2A?displayProperty=fullName> methods. It provides a way to customize the sort order of a collection. See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value.","nodes":[{"content":"This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=fullName> and <xref:System.Array.BinarySearch%2A?displayProperty=fullName> methods. It provides a way to customize the sort order of a collection. See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value.","pos":[0,340],"nodes":[{"content":"This interface is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Array.BinarySearch%2A?displayProperty=fullName&gt;</ph> methods.","pos":[0,173],"source":"This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=fullName> and <xref:System.Array.BinarySearch%2A?displayProperty=fullName> methods."},{"content":"It provides a way to customize the sort order of a collection.","pos":[174,236]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Collections.IComparer.Compare%2A&gt;</ph> method for notes on parameters and return value.","pos":[237,340],"source":" See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value."}]}]},{"pos":[347,561],"content":"The default implementation of this interface is the <xref:System.Collections.Comparer> class. For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=fullName>.","nodes":[{"content":"The default implementation of this interface is the <xref:System.Collections.Comparer> class. For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=fullName>.","pos":[0,214],"nodes":[{"content":"The default implementation of this interface is the <ph id=\"ph1\">&lt;xref:System.Collections.Comparer&gt;</ph> class.","pos":[0,93],"source":"The default implementation of this interface is the <xref:System.Collections.Comparer> class."},{"content":"For the generic version of this interface, see <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=fullName&gt;</ph>.","pos":[94,214],"source":" For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=fullName>."}]}]}],"pos":[497,1063],"yaml":true,"extradata":"MT"},{"content":"Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.","nodes":[{"pos":[0,114],"content":"Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.","nodes":[{"content":"Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.","pos":[0,114]}]}],"pos":[4160,4275],"yaml":true},{"content":"The preferred implementation is to use the <xref:System.IComparable.CompareTo%2A> method of one of the parameters.  \n  \n Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object.","nodes":[{"pos":[0,114],"content":"The preferred implementation is to use the <xref:System.IComparable.CompareTo%2A> method of one of the parameters.","nodes":[{"content":"The preferred implementation is to use the <ph id=\"ph1\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method of one of the parameters.","pos":[0,114],"source":"The preferred implementation is to use the <xref:System.IComparable.CompareTo%2A> method of one of the parameters."}]},{"pos":[121,304],"content":"Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object.","nodes":[{"content":"Comparing <ph id=\"ph1\">`null`</ph> with any type is allowed and does not generate an exception when using <ph id=\"ph2\">&lt;xref:System.IComparable&gt;</ph>.","pos":[0,114],"source":"Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>."},{"content":"When sorting, <ph id=\"ph1\">`null`</ph> is considered to be less than any other object.","pos":[115,183],"source":" When sorting, `null` is considered to be less than any other object."}]}],"pos":[4286,4595],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[5634,5663],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[5720,5750],"yaml":true},{"content":"A signed integer that indicates the relative values of <code>x</code> and <code>y</code>, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>x</code> is less than <code>y</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>x</code> equals <code>y</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>x</code> is greater than <code>y</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,122],"content":"A signed integer that indicates the relative values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept>, as shown in the following table.","source":"A signed integer that indicates the relative values of <code>x</code> and <code>y</code>, as shown in the following table."},{"pos":[129,517],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>x</code> is less than <code>y</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>x</code> equals <code>y</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>x</code> is greater than <code>y</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Meaning","pos":[45,57],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[93,112],"source":" Less than zero  \n  \n "},{"content":"<code>x</code> is less than <code>y</code>.  \n  \n ","pos":[123,173],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;x&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;code&gt;y&lt;/code&gt;</ph>.","pos":[0,43],"source":"<code>x</code> is less than <code>y</code>."}]},{"content":"Zero","pos":[192,201],"source":" Zero  \n  \n "},{"content":"<code>x</code> equals <code>y</code>.  \n  \n ","pos":[212,256],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;x&lt;/code&gt;</ph> equals <ph id=\"ph2\">&lt;code&gt;y&lt;/code&gt;</ph>.","pos":[0,37],"source":"<code>x</code> equals <code>y</code>."}]},{"content":"Greater than zero","pos":[275,297],"source":" Greater than zero  \n  \n "},{"content":"<code>x</code> is greater than <code>y</code>.  \n  \n ","pos":[308,361],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;x&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;y&lt;/code&gt;</ph>.","pos":[0,46],"source":"<code>x</code> is greater than <code>y</code>."}]}]}],"pos":[5806,6343],"yaml":true},{"content":"Neither <code>x</code> nor <code>y</code> implements the <xref href=\"System.IComparable\"></xref> interface.  \n  \n -or-  \n  \n <code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other.","nodes":[{"pos":[0,107],"content":"Neither <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> nor <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept> implements the <ph id=\"ph3\">&lt;xref href=\"System.IComparable\"&gt;&lt;/xref&gt;</ph> interface.","source":"Neither <code>x</code> nor <code>y</code> implements the <xref href=\"System.IComparable\"></xref> interface."},{"pos":[114,118],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[125,236],"content":"<ph id=\"ph1\">&lt;code&gt;x&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;y&lt;/code&gt;</ph> are of different types and neither one can handle comparisons with the other.","source":"<code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other."}],"pos":[6501,6746],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.IComparer\n  commentId: T:System.Collections.IComparer\n  id: IComparer\n  children:\n  - System.Collections.IComparer.Compare(System.Object,System.Object)\n  langs:\n  - csharp\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n  type: Interface\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Exposes a method that compares two objects.\n  remarks: \"This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=fullName> and <xref:System.Array.BinarySearch%2A?displayProperty=fullName> methods. It provides a way to customize the sort order of a collection. See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value.  \\n  \\n The default implementation of this interface is the <xref:System.Collections.Comparer> class. For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=fullName>.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Collections.IComparer> interface to sort an <xref:System.Collections.ArrayList> object. In this example, the <xref:System.Collections.IComparer> interface is implemented using the <xref:System.Collections.CaseInsensitiveComparer> class to reverse the order of the contents of the <xref:System.Collections.ArrayList>.  \\n  \\n [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]\\n [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]\\n [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IComparer\n  derivedClasses:\n  - System.StringComparer\n  - System.Collections.CaseInsensitiveComparer\n  - System.Collections.Comparer\n  - System.Collections.Generic.Comparer`1\n  - System.ServiceModel.Configuration.XPathMessageFilterElementComparer\n  - System.Windows.Data.BindingListCollectionView\n  - System.Windows.Data.ListCollectionView\n  - System.Windows.Forms.KeysConverter\n  - System.Xml.Linq.XNodeDocumentOrderComparer\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IComparer.Compare(System.Object,System.Object)\n  commentId: M:System.Collections.IComparer.Compare(System.Object,System.Object)\n  id: Compare(System.Object,System.Object)\n  parent: System.Collections.IComparer\n  langs:\n  - csharp\n  name: Compare(Object, Object)\n  nameWithType: IComparer.Compare(Object, Object)\n  fullName: IComparer.Compare(Object, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.\n  remarks: \"The preferred implementation is to use the <xref:System.IComparable.CompareTo%2A> method of one of the parameters.  \\n  \\n Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Collections.IComparer> interface to sort an <xref:System.Collections.ArrayList> object. In this example, the <xref:System.Collections.IComparer> interface is implemented using the <xref:System.Collections.CaseInsensitiveComparer>class to reverse the order of the contents of the <xref:System.Collections.ArrayList>.  \\n  \\n [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]\\n [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]\\n [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]\"\n  syntax:\n    content: public int Compare (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: The first object to compare.\n    - id: y\n      type: System.Object\n      description: The second object to compare.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative values of <code>x</code> and <code>y</code>, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td><code>x</code> is less than <code>y</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td><code>x</code> equals <code>y</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td><code>x</code> is greater than <code>y</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Collections.IComparer.Compare*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"Neither <code>x</code> nor <code>y</code> implements the <xref href=\\\"System.IComparable\\\"></xref> interface.  \\n  \\n -or-  \\n  \\n <code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Collections.IComparer.Compare(System.Object,System.Object)\n  parent: System.Collections.IComparer\n  isExternal: false\n  name: Compare(Object, Object)\n  nameWithType: IComparer.Compare(Object, Object)\n  fullName: IComparer.Compare(Object, Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer.Compare*\n  parent: System.Collections.IComparer\n  isExternal: false\n  name: Compare\n  nameWithType: IComparer.Compare\n  fullName: IComparer.Compare\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IComparer.xml\n"}