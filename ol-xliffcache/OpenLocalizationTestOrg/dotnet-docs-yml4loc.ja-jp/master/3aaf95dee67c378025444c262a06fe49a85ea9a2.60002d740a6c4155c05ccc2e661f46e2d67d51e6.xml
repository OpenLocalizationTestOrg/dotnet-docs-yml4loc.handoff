{"nodes":[{"content":"This class has been deprecated as of Visual Basic 2005.","nodes":[{"pos":[0,55],"content":"This class has been deprecated as of Visual Basic 2005.","nodes":[{"content":"This class has been deprecated as of Visual Basic 2005.","pos":[0,55]}]}],"pos":[2204,2260],"yaml":true},{"content":"This class provides methods for manipulating data that potentially represents a `String` value.","nodes":[{"pos":[0,95],"content":"This class provides methods for manipulating data that potentially represents a <ph id=\"ph1\">`String`</ph> value.","source":"This class provides methods for manipulating data that potentially represents a `String` value."}],"pos":[2271,2367],"yaml":true,"extradata":"MT"},{"content":"Returns a `String` value that corresponds to the specified `Boolean`.","nodes":[{"pos":[0,69],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to the specified <ph id=\"ph2\">`Boolean`</ph>.","source":"Returns a `String` value that corresponds to the specified `Boolean`."}],"pos":[3851,3921],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[3932,4034],"yaml":true,"extradata":"MT"},{"content":"Required. `Boolean` to convert to a `String` value.","nodes":[{"pos":[0,51],"content":"Required. `Boolean` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Boolean`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,51],"source":"`Boolean` to convert to a `String` value."}]}],"pos":[4182,4234],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[4291,4347],"yaml":true},{"content":"Returns a `String` value that corresponds to the specified `Byte`.","nodes":[{"pos":[0,66],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to the specified <ph id=\"ph2\">`Byte`</ph>.","source":"Returns a `String` value that corresponds to the specified `Byte`."}],"pos":[5472,5539],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[5550,5652],"yaml":true,"extradata":"MT"},{"content":"Required. `Byte` to convert to a `String` value.","nodes":[{"pos":[0,48],"content":"Required. `Byte` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Byte`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,48],"source":"`Byte` to convert to a `String` value."}]}],"pos":[5794,5843],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[5900,5956],"yaml":true},{"content":"Returns a `String` value that corresponds to the specified `Char`.","nodes":[{"pos":[0,66],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to the specified <ph id=\"ph2\">`Char`</ph>.","source":"Returns a `String` value that corresponds to the specified `Char`."}],"pos":[7078,7145],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[7156,7258],"yaml":true,"extradata":"MT"},{"content":"Required. `Char` to convert to a `String` value.","nodes":[{"pos":[0,48],"content":"Required. `Char` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Char`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,48],"source":"`Char` to convert to a `String` value."}]}],"pos":[7400,7449],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[7506,7562],"yaml":true},{"content":"Returns a `String` value that corresponds to the specified date.","nodes":[{"pos":[0,64],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to the specified date.","source":"Returns a `String` value that corresponds to the specified date."}],"pos":[8708,8773],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[8784,8886],"yaml":true,"extradata":"MT"},{"content":"Required. Date to convert to a `String` value.","nodes":[{"pos":[0,46],"content":"Required. Date to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Date to convert to a <ph id=\"ph1\">`String`</ph> value.","pos":[10,46],"source":" Date to convert to a `String` value."}]}],"pos":[9036,9083],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[9140,9196],"yaml":true},{"content":"Returns a `String` value that corresponds to the specified `Decimal`.","nodes":[{"pos":[0,69],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to the specified <ph id=\"ph2\">`Decimal`</ph>.","source":"Returns a `String` value that corresponds to the specified `Decimal`."}],"pos":[10354,10424],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[10435,10537],"yaml":true,"extradata":"MT"},{"content":"Required. `Decimal` to convert to a `String` value.","nodes":[{"pos":[0,51],"content":"Required. `Decimal` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Decimal`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,51],"source":"`Decimal` to convert to a `String` value."}]}],"pos":[10688,10740],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[10797,10853],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Decimal` and number format information.","nodes":[{"pos":[0,97],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Decimal`</ph> and number format information.","source":"Returns a `String` value that corresponds to a specified `Decimal` and number format information."}],"pos":[12182,12280],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[12291,12393],"yaml":true,"extradata":"MT"},{"content":"Required. `Decimal` to convert to a `String` value.","nodes":[{"pos":[0,51],"content":"Required. `Decimal` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Decimal`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,51],"source":"`Decimal` to convert to a `String` value."}]}],"pos":[12596,12648],"yaml":true},{"content":"A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture.","nodes":[{"pos":[0,154],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberFormatInfo\"&gt;&lt;/xref&gt;</ph> object that defines how numeric values are formatted and displayed, depending on the culture.","source":"A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture."}],"pos":[12740,12895],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[12952,13008],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Double`.","nodes":[{"pos":[0,66],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Double`</ph>.","source":"Returns a `String` value that corresponds to a specified `Double`."}],"pos":[14157,14224],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[14235,14337],"yaml":true,"extradata":"MT"},{"content":"Required. `Double` to convert to a `String` value.","nodes":[{"pos":[0,50],"content":"Required. `Double` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Double`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,50],"source":"`Double` to convert to a `String` value."}]}],"pos":[14485,14536],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[14593,14649],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Double` and number format information.","nodes":[{"pos":[0,96],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Double`</ph> and number format information.","source":"Returns a `String` value that corresponds to a specified `Double` and number format information."}],"pos":[15965,16062],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[16073,16175],"yaml":true,"extradata":"MT"},{"content":"Required. `Double` to convert to a `String` value.","nodes":[{"pos":[0,50],"content":"Required. `Double` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Double`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,50],"source":"`Double` to convert to a `String` value."}]}],"pos":[16375,16426],"yaml":true},{"content":"A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture.","nodes":[{"pos":[0,154],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberFormatInfo\"&gt;&lt;/xref&gt;</ph> object that defines how numeric values are formatted and displayed, depending on the culture.","source":"A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture."}],"pos":[16518,16673],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[16730,16786],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Integer`.","nodes":[{"pos":[0,67],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Integer`</ph>.","source":"Returns a `String` value that corresponds to a specified `Integer`."}],"pos":[17934,18002],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[18013,18115],"yaml":true,"extradata":"MT"},{"content":"Required. `Integer` to convert to a `String` value.","nodes":[{"pos":[0,51],"content":"Required. `Integer` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Integer`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,51],"source":"`Integer` to convert to a `String` value."}]}],"pos":[18260,18312],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[18369,18425],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Int64` (64-bit integer).","nodes":[{"pos":[0,82],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Int64`</ph> (64-bit integer).","source":"Returns a `String` value that corresponds to a specified `Int64` (64-bit integer)."}],"pos":[19556,19639],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[19650,19752],"yaml":true,"extradata":"MT"},{"content":"Required. `Int64` to convert to a `String` value.","nodes":[{"pos":[0,49],"content":"Required. `Int64` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Int64`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,49],"source":"`Int64` to convert to a `String` value."}]}],"pos":[19895,19945],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[20002,20058],"yaml":true},{"content":"Returns a `String` value that corresponds to the specified object.","nodes":[{"pos":[0,66],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to the specified object.","source":"Returns a `String` value that corresponds to the specified object."}],"pos":[21204,21271],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[21282,21384],"yaml":true,"extradata":"MT"},{"content":"Required. Object to convert to a `String` value.","nodes":[{"pos":[0,48],"content":"Required. Object to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Object to convert to a <ph id=\"ph1\">`String`</ph> value.","pos":[10,48],"source":" Object to convert to a `String` value."}]}],"pos":[21532,21581],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[21638,21694],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Int16` (16-bit integer).","nodes":[{"pos":[0,82],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Int16`</ph> (16-bit integer).","source":"Returns a `String` value that corresponds to a specified `Int16` (16-bit integer)."}],"pos":[22830,22913],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[22924,23026],"yaml":true,"extradata":"MT"},{"content":"Required. `Int616` to convert to a `String` value.","nodes":[{"pos":[0,50],"content":"Required. `Int616` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Int616`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,50],"source":"`Int616` to convert to a `String` value."}]}],"pos":[23171,23222],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[23279,23335],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Single`.","nodes":[{"pos":[0,66],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Single`</ph>.","source":"Returns a `String` value that corresponds to a specified `Single`."}],"pos":[24482,24549],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[24560,24662],"yaml":true,"extradata":"MT"},{"content":"Required. `Single` to convert to a `String` value.","nodes":[{"pos":[0,50],"content":"Required. `Single` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Single`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,50],"source":"`Single` to convert to a `String` value."}]}],"pos":[24809,24860],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[24917,24973],"yaml":true},{"content":"Returns a `String` value that corresponds to a specified `Single` and number format information.","nodes":[{"pos":[0,96],"content":"Returns a <ph id=\"ph1\">`String`</ph> value that corresponds to a specified <ph id=\"ph2\">`Single`</ph> and number format information.","source":"Returns a `String` value that corresponds to a specified `Single` and number format information."}],"pos":[26289,26386],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[26397,26499],"yaml":true,"extradata":"MT"},{"content":"Required. `Sinble` to convert to a `String` value.","nodes":[{"pos":[0,50],"content":"Required. `Sinble` to convert to a `String` value.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`Sinble`</ph> to convert to a <ph id=\"ph2\">`String`</ph> value.","pos":[10,50],"source":"`Sinble` to convert to a `String` value."}]}],"pos":[26698,26749],"yaml":true},{"content":"A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture.","nodes":[{"pos":[0,154],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberFormatInfo\"&gt;&lt;/xref&gt;</ph> object that defines how numeric values are formatted and displayed, depending on the culture.","source":"A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture."}],"pos":[26841,26996],"yaml":true},{"content":"The `String` value corresponding to <code>Value</code>.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">`String`</ph> value corresponding to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The `String` value corresponding to <code>Value</code>."}],"pos":[27053,27109],"yaml":true},{"content":"Overwrites the <code>sDest</code> parameter with the contents of the <code>sInsert</code> parameter.","nodes":[{"pos":[0,100],"content":"Overwrites the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sDest</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter with the contents of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sInsert</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"Overwrites the <code>sDest</code> parameter with the contents of the <code>sInsert</code> parameter."}],"pos":[28446,28547],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[28558,28660],"yaml":true,"extradata":"MT"},{"content":"Required. String variable to modify.","nodes":[{"pos":[0,36],"content":"Required. String variable to modify.","nodes":[{"content":"Required. String variable to modify.","pos":[0,36],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"String variable to modify.","pos":[10,36]}]}]}],"pos":[28866,28903],"yaml":true},{"content":"Required. Location in the <code>sDest</code> parameter to begin overwriting from. The index is 1-based.","nodes":[{"pos":[0,103],"content":"Required. Location in the <code>sDest</code> parameter to begin overwriting from. The index is 1-based.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Location in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sDest</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to begin overwriting from.","pos":[10,81],"source":" Location in the <code>sDest</code> parameter to begin overwriting from."},{"content":"The index is 1-based.","pos":[82,103]}]}],"pos":[28971,29075],"yaml":true},{"content":"Required. Maximum number of characters from the <code>sInsert</code> parameter to use, starting from the first character.","nodes":[{"pos":[0,121],"content":"Required. Maximum number of characters from the <code>sInsert</code> parameter to use, starting from the first character.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Maximum number of characters from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sInsert</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to use, starting from the first character.","pos":[10,121],"source":" Maximum number of characters from the <code>sInsert</code> parameter to use, starting from the first character."}]}],"pos":[29145,29267],"yaml":true},{"content":"Required. String value to overwrite the <code>sDest</code> parameter with.","nodes":[{"pos":[0,74],"content":"Required. String value to overwrite the <code>sDest</code> parameter with.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"String value to overwrite the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sDest</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter with.","pos":[10,74],"source":" String value to overwrite the <code>sDest</code> parameter with."}]}],"pos":[29330,29405],"yaml":true},{"content":"Compares two strings.","nodes":[{"pos":[0,21],"content":"Compares two strings.","nodes":[{"content":"Compares two strings.","pos":[0,21]}]}],"pos":[30667,30689],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[30700,30802],"yaml":true,"extradata":"MT"},{"content":"Required. String to compare with <code>sRight</code>.","nodes":[{"pos":[0,53],"content":"Required. String to compare with <code>sRight</code>.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"String to compare with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sRight</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[10,53],"source":" String to compare with <code>sRight</code>."}]}],"pos":[30976,31030],"yaml":true},{"content":"Required. String to compare with <code>sLeft</code>.","nodes":[{"pos":[0,52],"content":"Required. String to compare with <code>sLeft</code>.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"String to compare with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sLeft</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[10,52],"source":" String to compare with <code>sLeft</code>."}]}],"pos":[31092,31145],"yaml":true},{"content":"Required. `True` to perform a case-insensitive comparison; otherwise `False`.","nodes":[{"pos":[0,77],"content":"Required. `True` to perform a case-insensitive comparison; otherwise `False`.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`True`</ph> to perform a case-insensitive comparison; otherwise <ph id=\"ph2\">`False`</ph>.","pos":[10,77],"source":"`True` to perform a case-insensitive comparison; otherwise `False`."}]}],"pos":[31213,31291],"yaml":true},{"content":"<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> zero  \n  \n </td><td> The two strings are equal.  \n  \n </td></tr><tr><td> less than zero  \n  \n </td><td>\n          <code>sLeft</code> is less than <code>sRight</code>.  \n  \n </td></tr><tr><td> greater than zero  \n  \n </td><td>\n          <code>sLeft</code> is greater than <code>sRight</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,420],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> zero  \n  \n </td><td> The two strings are equal.  \n  \n </td></tr><tr><td> less than zero  \n  \n </td><td>\n          <code>sLeft</code> is less than <code>sRight</code>.  \n  \n </td></tr><tr><td> greater than zero  \n  \n </td><td>\n          <code>sLeft</code> is greater than <code>sRight</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Condition","pos":[45,59],"source":" Condition  \n  \n "},{"content":"zero","pos":[95,104],"source":" zero  \n  \n "},{"content":" The two strings are equal.  \n  \n ","pos":[115,149],"nodes":[{"content":"The two strings are equal.","pos":[1,27]}]},{"content":"less than zero","pos":[168,187],"source":" less than zero  \n  \n "},{"content":"\n          <code>sLeft</code> is less than <code>sRight</code>.  \n  \n ","pos":[198,268],"nodes":[{"content":"<ph id=\"ph1\">\n          &lt;code&gt;sLeft&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;code&gt;sRight&lt;/code&gt;</ph>.","pos":[0,63],"source":"\n          <code>sLeft</code> is less than <code>sRight</code>."}]},{"content":"greater than zero","pos":[287,309],"source":" greater than zero  \n  \n "},{"content":"\n          <code>sLeft</code> is greater than <code>sRight</code>.  \n  \n ","pos":[320,393],"nodes":[{"content":"<ph id=\"ph1\">\n          &lt;code&gt;sLeft&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;sRight&lt;/code&gt;</ph>.","pos":[0,66],"source":"\n          <code>sLeft</code> is greater than <code>sRight</code>."}]}]}],"pos":[31347,31787],"yaml":true},{"content":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator.","nodes":[{"pos":[0,121],"content":"Compares the parameters <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Source</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Pattern</ph><ept id=\"p2\">&lt;/code&gt;</ept> and returns the same results as the <ph id=\"ph3\">`Like`</ph> operator.","source":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator."}],"pos":[33132,33254],"yaml":true},{"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.","nodes":[{"pos":[0,268],"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.","nodes":[{"content":"This method compares the parameters <ph id=\"ph1\">`Source`</ph> and <ph id=\"ph2\">`Pattern`</ph> and returns the same results as the <bpt id=\"p1\">[</bpt>Like Operator<ept id=\"p1\">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.","pos":[0,178],"source":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md)."},{"content":"The result is a Boolean value indicating whether or not the string satisfies the pattern.","pos":[179,268]}]}],"pos":[33265,33534],"yaml":true,"extradata":"MT"},{"content":"Required. Any `String` expression.","nodes":[{"pos":[0,34],"content":"Required. Any `String` expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`String`</ph> expression.","pos":[10,34],"source":" Any `String` expression."}]}],"pos":[33746,33781],"yaml":true},{"content":"Any `String` expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"pos":[0,98],"content":"Any <ph id=\"ph1\">`String`</ph> expression conforming to the pattern-matching conventions described in Like Operator.","source":"Any `String` expression conforming to the pattern-matching conventions described in Like Operator."}],"pos":[33844,33943],"yaml":true},{"content":"Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>. Can be `vbBinaryCompare` for binary comparison or `vbTextCompare` for comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.","nodes":[{"pos":[0,291],"content":"Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>. Can be `vbBinaryCompare` for binary comparison or `vbTextCompare` for comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.","nodes":[{"content":"Specifies how to compare strings to patterns, according to the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.CompareMethod\"&gt;&lt;/xref&gt;</ph>.","pos":[0,120],"source":"Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>."},{"content":"Can be <ph id=\"ph1\">`vbBinaryCompare`</ph> for binary comparison or <ph id=\"ph2\">`vbTextCompare`</ph> for comparison based on a case-insensitive text sort order determined by your system's <ph id=\"ph3\">`LocaleID`</ph> value.","pos":[121,291],"source":" Can be `vbBinaryCompare` for binary comparison or `vbTextCompare` for comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value."}]}],"pos":[34034,34326],"yaml":true},{"content":"A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.","nodes":[{"pos":[0,293],"content":"A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value indicating whether or not the string satisfies the pattern.","pos":[0,77],"source":"A `Boolean` value indicating whether or not the string satisfies the pattern."},{"content":"If the value in string satisfies the pattern contained in pattern, result is <ph id=\"ph1\">`True`</ph>.","pos":[78,162],"source":" If the value in string satisfies the pattern contained in pattern, result is `True`."},{"content":"If the string does not satisfy the pattern, result is <ph id=\"ph1\">`False`</ph>.","pos":[163,225],"source":" If the string does not satisfy the pattern, result is `False`."},{"content":"If both string and pattern are empty strings, the result is <ph id=\"ph1\">`True`</ph>.","pos":[226,293],"source":" If both string and pattern are empty strings, the result is `True`."}]}],"pos":[34384,34678],"yaml":true},{"content":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator, using binary comparison.","nodes":[{"pos":[0,146],"content":"Compares the parameters <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Source</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Pattern</ph><ept id=\"p2\">&lt;/code&gt;</ept> and returns the same results as the <ph id=\"ph3\">`Like`</ph> operator, using binary comparison.","source":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator, using binary comparison."}],"pos":[35907,36054],"yaml":true},{"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.  \n  \n This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison.","nodes":[{"pos":[0,268],"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.","nodes":[{"content":"This method compares the parameters <ph id=\"ph1\">`Source`</ph> and <ph id=\"ph2\">`Pattern`</ph> and returns the same results as the <bpt id=\"p1\">[</bpt>Like Operator<ept id=\"p1\">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.","pos":[0,178],"source":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md)."},{"content":"The result is a Boolean value indicating whether or not the string satisfies the pattern.","pos":[179,268]}]},{"pos":[275,435],"content":"This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison.","nodes":[{"content":"This method is similar to <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt;</ph> except that it always performs a case-sensitive binary comparison.","pos":[0,160],"source":"This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison."}]}],"pos":[36065,36505],"yaml":true,"extradata":"MT"},{"content":"Required. Any `String` expression.","nodes":[{"pos":[0,34],"content":"Required. Any `String` expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`String`</ph> expression.","pos":[10,34],"source":" Any `String` expression."}]}],"pos":[36672,36707],"yaml":true},{"content":"Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"pos":[0,108],"content":"Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`String`</ph> expression conforming to the pattern-matching conventions described in Like Operator.","pos":[10,108],"source":" Any `String` expression conforming to the pattern-matching conventions described in Like Operator."}]}],"pos":[36770,36879],"yaml":true},{"content":"A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.","nodes":[{"pos":[0,293],"content":"A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value indicating whether or not the string satisfies the pattern.","pos":[0,77],"source":"A `Boolean` value indicating whether or not the string satisfies the pattern."},{"content":"If the value in string satisfies the pattern contained in pattern, result is <ph id=\"ph1\">`True`</ph>.","pos":[78,162],"source":" If the value in string satisfies the pattern contained in pattern, result is `True`."},{"content":"If the string does not satisfy the pattern, result is <ph id=\"ph1\">`False`</ph>.","pos":[163,225],"source":" If the string does not satisfy the pattern, result is `False`."},{"content":"If both string and pattern are empty strings, the result is <ph id=\"ph1\">`True`</ph>.","pos":[226,293],"source":" If both string and pattern are empty strings, the result is `True`."}]}],"pos":[36937,37231],"yaml":true},{"content":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator, using text comparison.","nodes":[{"pos":[0,144],"content":"Compares the parameters <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Source</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Pattern</ph><ept id=\"p2\">&lt;/code&gt;</ept> and returns the same results as the <ph id=\"ph3\">`Like`</ph> operator, using text comparison.","source":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator, using text comparison."}],"pos":[38454,38599],"yaml":true},{"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a `Boolean` value indicating whether or not the string satisfies the pattern.  \n  \n This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.","nodes":[{"pos":[0,270],"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a `Boolean` value indicating whether or not the string satisfies the pattern.","nodes":[{"content":"This method compares the parameters <ph id=\"ph1\">`Source`</ph> and <ph id=\"ph2\">`Pattern`</ph> and returns the same results as the <bpt id=\"p1\">[</bpt>Like Operator<ept id=\"p1\">](~/docs/visual-basic/language-reference/operators/like-operator.md)</ept>.","pos":[0,178],"source":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md)."},{"content":"The result is a <ph id=\"ph1\">`Boolean`</ph> value indicating whether or not the string satisfies the pattern.","pos":[179,270],"source":" The result is a `Boolean` value indicating whether or not the string satisfies the pattern."}]},{"pos":[277,504],"content":"This method is similar to <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt;</ph> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's <ph id=\"ph2\">`LocaleID`</ph> value.","source":"This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value."}],"pos":[38610,39119],"yaml":true,"extradata":"MT"},{"content":"Required. Any `String` expression.","nodes":[{"pos":[0,34],"content":"Required. Any `String` expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`String`</ph> expression.","pos":[10,34],"source":" Any `String` expression."}]}],"pos":[39284,39319],"yaml":true},{"content":"Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"pos":[0,108],"content":"Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`String`</ph> expression conforming to the pattern-matching conventions described in Like Operator.","pos":[10,108],"source":" Any `String` expression conforming to the pattern-matching conventions described in Like Operator."}]}],"pos":[39382,39491],"yaml":true},{"content":"A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.","nodes":[{"pos":[0,293],"content":"A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value indicating whether or not the string satisfies the pattern.","pos":[0,77],"source":"A `Boolean` value indicating whether or not the string satisfies the pattern."},{"content":"If the value in string satisfies the pattern contained in pattern, result is <ph id=\"ph1\">`True`</ph>.","pos":[78,162],"source":" If the value in string satisfies the pattern contained in pattern, result is `True`."},{"content":"If the string does not satisfy the pattern, result is <ph id=\"ph1\">`False`</ph>.","pos":[163,225],"source":" If the string does not satisfy the pattern, result is `False`."},{"content":"If both string and pattern are empty strings, the result is <ph id=\"ph1\">`True`</ph>.","pos":[226,293],"source":" If both string and pattern are empty strings, the result is `True`."}]}],"pos":[39549,39843],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.CompilerServices.StringType\n  commentId: T:Microsoft.VisualBasic.CompilerServices.StringType\n  id: StringType\n  children:\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  - Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  langs:\n  - csharp\n  name: StringType\n  nameWithType: StringType\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: This class has been deprecated as of Visual Basic 2005.\n  remarks: This class provides methods for manipulating data that potentially represents a `String` value.\n  syntax:\n    content: public sealed class StringType\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  id: FromBoolean(System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromBoolean(Boolean)\n  nameWithType: StringType.FromBoolean(Boolean)\n  fullName: StringType.FromBoolean(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to the specified `Boolean`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromBoolean (bool Value);\n    parameters:\n    - id: Value\n      type: System.Boolean\n      description: Required. `Boolean` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  id: FromByte(System.Byte)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromByte(Byte)\n  nameWithType: StringType.FromByte(Byte)\n  fullName: StringType.FromByte(Byte)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to the specified `Byte`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromByte (byte Value);\n    parameters:\n    - id: Value\n      type: System.Byte\n      description: Required. `Byte` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromByte*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  id: FromChar(System.Char)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromChar(Char)\n  nameWithType: StringType.FromChar(Char)\n  fullName: StringType.FromChar(Char)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to the specified `Char`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromChar (char Value);\n    parameters:\n    - id: Value\n      type: System.Char\n      description: Required. `Char` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromChar*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  id: FromDate(System.DateTime)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDate(DateTime)\n  nameWithType: StringType.FromDate(DateTime)\n  fullName: StringType.FromDate(DateTime)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to the specified date.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDate (DateTime Value);\n    parameters:\n    - id: Value\n      type: System.DateTime\n      description: Required. Date to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  id: FromDecimal(System.Decimal)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDecimal(Decimal)\n  nameWithType: StringType.FromDecimal(Decimal)\n  fullName: StringType.FromDecimal(Decimal)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to the specified `Decimal`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDecimal (decimal Value);\n    parameters:\n    - id: Value\n      type: System.Decimal\n      description: Required. `Decimal` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  id: FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDecimal(Decimal, NumberFormatInfo)\n  nameWithType: StringType.FromDecimal(Decimal, NumberFormatInfo)\n  fullName: StringType.FromDecimal(Decimal, NumberFormatInfo)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Decimal` and number format information.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDecimal (decimal Value, System.Globalization.NumberFormatInfo NumberFormat);\n    parameters:\n    - id: Value\n      type: System.Decimal\n      description: Required. `Decimal` to convert to a `String` value.\n    - id: NumberFormat\n      type: System.Globalization.NumberFormatInfo\n      description: A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  id: FromDouble(System.Double)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDouble(Double)\n  nameWithType: StringType.FromDouble(Double)\n  fullName: StringType.FromDouble(Double)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Double`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDouble (double Value);\n    parameters:\n    - id: Value\n      type: System.Double\n      description: Required. `Double` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  id: FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDouble(Double, NumberFormatInfo)\n  nameWithType: StringType.FromDouble(Double, NumberFormatInfo)\n  fullName: StringType.FromDouble(Double, NumberFormatInfo)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Double` and number format information.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDouble (double Value, System.Globalization.NumberFormatInfo NumberFormat);\n    parameters:\n    - id: Value\n      type: System.Double\n      description: Required. `Double` to convert to a `String` value.\n    - id: NumberFormat\n      type: System.Globalization.NumberFormatInfo\n      description: A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  id: FromInteger(System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromInteger(Int32)\n  nameWithType: StringType.FromInteger(Int32)\n  fullName: StringType.FromInteger(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Integer`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromInteger (int Value);\n    parameters:\n    - id: Value\n      type: System.Int32\n      description: Required. `Integer` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  id: FromLong(System.Int64)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromLong(Int64)\n  nameWithType: StringType.FromLong(Int64)\n  fullName: StringType.FromLong(Int64)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Int64` (64-bit integer).\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromLong (long Value);\n    parameters:\n    - id: Value\n      type: System.Int64\n      description: Required. `Int64` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromLong*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  id: FromObject(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromObject(Object)\n  nameWithType: StringType.FromObject(Object)\n  fullName: StringType.FromObject(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to the specified object.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromObject (object Value);\n    parameters:\n    - id: Value\n      type: System.Object\n      description: Required. Object to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  id: FromShort(System.Int16)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromShort(Int16)\n  nameWithType: StringType.FromShort(Int16)\n  fullName: StringType.FromShort(Int16)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Int16` (16-bit integer).\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromShort (short Value);\n    parameters:\n    - id: Value\n      type: System.Int16\n      description: Required. `Int616` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromShort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  id: FromSingle(System.Single)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromSingle(Single)\n  nameWithType: StringType.FromSingle(Single)\n  fullName: StringType.FromSingle(Single)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Single`.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromSingle (float Value);\n    parameters:\n    - id: Value\n      type: System.Single\n      description: Required. `Single` to convert to a `String` value.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  id: FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromSingle(Single, NumberFormatInfo)\n  nameWithType: StringType.FromSingle(Single, NumberFormatInfo)\n  fullName: StringType.FromSingle(Single, NumberFormatInfo)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a `String` value that corresponds to a specified `Single` and number format information.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromSingle (float Value, System.Globalization.NumberFormatInfo NumberFormat);\n    parameters:\n    - id: Value\n      type: System.Single\n      description: Required. `Sinble` to convert to a `String` value.\n    - id: NumberFormat\n      type: System.Globalization.NumberFormatInfo\n      description: A <xref href=\"System.Globalization.NumberFormatInfo\"></xref> object that defines how numeric values are formatted and displayed, depending on the culture.\n    return:\n      type: System.String\n      description: The `String` value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  id: MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: MidStmtStr(String, Int32, Int32, String)\n  nameWithType: StringType.MidStmtStr(String, Int32, Int32, String)\n  fullName: StringType.MidStmtStr(String, Int32, Int32, String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Overwrites the <code>sDest</code> parameter with the contents of the <code>sInsert</code> parameter.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static void MidStmtStr (ref string sDest, int StartPosition, int MaxInsertLength, string sInsert);\n    parameters:\n    - id: sDest\n      type: System.String\n      description: Required. String variable to modify.\n    - id: StartPosition\n      type: System.Int32\n      description: Required. Location in the <code>sDest</code> parameter to begin overwriting from. The index is 1-based.\n    - id: MaxInsertLength\n      type: System.Int32\n      description: Required. Maximum number of characters from the <code>sInsert</code> parameter to use, starting from the first character.\n    - id: sInsert\n      type: System.String\n      description: Required. String value to overwrite the <code>sDest</code> parameter with.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  id: StrCmp(System.String,System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrCmp(String, String, Boolean)\n  nameWithType: StringType.StrCmp(String, String, Boolean)\n  fullName: StringType.StrCmp(String, String, Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares two strings.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static int StrCmp (string sLeft, string sRight, bool TextCompare);\n    parameters:\n    - id: sLeft\n      type: System.String\n      description: Required. String to compare with <code>sRight</code>.\n    - id: sRight\n      type: System.String\n      description: Required. String to compare with <code>sLeft</code>.\n    - id: TextCompare\n      type: System.Boolean\n      description: Required. `True` to perform a case-insensitive comparison; otherwise `False`.\n    return:\n      type: System.Int32\n      description: \"<table><thead><tr><th> Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> zero  \\n  \\n </td><td> The two strings are equal.  \\n  \\n </td></tr><tr><td> less than zero  \\n  \\n </td><td>\\n          <code>sLeft</code> is less than <code>sRight</code>.  \\n  \\n </td></tr><tr><td> greater than zero  \\n  \\n </td><td>\\n          <code>sLeft</code> is greater than <code>sRight</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  id: StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrLike(String, String, CompareMethod)\n  nameWithType: StringType.StrLike(String, String, CompareMethod)\n  fullName: StringType.StrLike(String, String, CompareMethod)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator.\n  remarks: This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.\n  syntax:\n    content: public static bool StrLike (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);\n    parameters:\n    - id: Source\n      type: System.String\n      description: Required. Any `String` expression.\n    - id: Pattern\n      type: System.String\n      description: Any `String` expression conforming to the pattern-matching conventions described in Like Operator.\n    - id: CompareOption\n      type: Microsoft.VisualBasic.CompareMethod\n      description: Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>. Can be `vbBinaryCompare` for binary comparison or `vbTextCompare` for comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.\n    return:\n      type: System.Boolean\n      description: A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLike*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  id: StrLikeBinary(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrLikeBinary(String, String)\n  nameWithType: StringType.StrLikeBinary(String, String)\n  fullName: StringType.StrLikeBinary(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator, using binary comparison.\n  remarks: \"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.  \\n  \\n This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison.\"\n  syntax:\n    content: public static bool StrLikeBinary (string Source, string Pattern);\n    parameters:\n    - id: Source\n      type: System.String\n      description: Required. Any `String` expression.\n    - id: Pattern\n      type: System.String\n      description: Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.\n    return:\n      type: System.Boolean\n      description: A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  id: StrLikeText(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrLikeText(String, String)\n  nameWithType: StringType.StrLikeText(String, String)\n  fullName: StringType.StrLikeText(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the `Like` operator, using text comparison.\n  remarks: \"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md). The result is a `Boolean` value indicating whether or not the string satisfies the pattern.  \\n  \\n This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.\"\n  syntax:\n    content: public static bool StrLikeText (string Source, string Pattern);\n    parameters:\n    - id: Source\n      type: System.String\n      description: Required. Any `String` expression.\n    - id: Pattern\n      type: System.String\n      description: Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.\n    return:\n      type: System.Boolean\n      description: A `Boolean` value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is `True`. If the string does not satisfy the pattern, result is `False`. If both string and pattern are empty strings, the result is `True`.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromBoolean(Boolean)\n  nameWithType: StringType.FromBoolean(Boolean)\n  fullName: StringType.FromBoolean(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromByte(Byte)\n  nameWithType: StringType.FromByte(Byte)\n  fullName: StringType.FromByte(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromChar(Char)\n  nameWithType: StringType.FromChar(Char)\n  fullName: StringType.FromChar(Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDate(DateTime)\n  nameWithType: StringType.FromDate(DateTime)\n  fullName: StringType.FromDate(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDecimal(Decimal)\n  nameWithType: StringType.FromDecimal(Decimal)\n  fullName: StringType.FromDecimal(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDecimal(Decimal, NumberFormatInfo)\n  nameWithType: StringType.FromDecimal(Decimal, NumberFormatInfo)\n  fullName: StringType.FromDecimal(Decimal, NumberFormatInfo)\n- uid: System.Globalization.NumberFormatInfo\n  parent: System.Globalization\n  isExternal: false\n  name: NumberFormatInfo\n  nameWithType: NumberFormatInfo\n  fullName: System.Globalization.NumberFormatInfo\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDouble(Double)\n  nameWithType: StringType.FromDouble(Double)\n  fullName: StringType.FromDouble(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDouble(Double, NumberFormatInfo)\n  nameWithType: StringType.FromDouble(Double, NumberFormatInfo)\n  fullName: StringType.FromDouble(Double, NumberFormatInfo)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromInteger(Int32)\n  nameWithType: StringType.FromInteger(Int32)\n  fullName: StringType.FromInteger(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromLong(Int64)\n  nameWithType: StringType.FromLong(Int64)\n  fullName: StringType.FromLong(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromObject(Object)\n  nameWithType: StringType.FromObject(Object)\n  fullName: StringType.FromObject(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromShort(Int16)\n  nameWithType: StringType.FromShort(Int16)\n  fullName: StringType.FromShort(Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromSingle(Single)\n  nameWithType: StringType.FromSingle(Single)\n  fullName: StringType.FromSingle(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromSingle(Single, NumberFormatInfo)\n  nameWithType: StringType.FromSingle(Single, NumberFormatInfo)\n  fullName: StringType.FromSingle(Single, NumberFormatInfo)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: MidStmtStr(String, Int32, Int32, String)\n  nameWithType: StringType.MidStmtStr(String, Int32, Int32, String)\n  fullName: StringType.MidStmtStr(String, Int32, Int32, String)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrCmp(String, String, Boolean)\n  nameWithType: StringType.StrCmp(String, String, Boolean)\n  fullName: StringType.StrCmp(String, String, Boolean)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLike(String, String, CompareMethod)\n  nameWithType: StringType.StrLike(String, String, CompareMethod)\n  fullName: StringType.StrLike(String, String, CompareMethod)\n- uid: Microsoft.VisualBasic.CompareMethod\n  parent: Microsoft.VisualBasic\n  isExternal: false\n  name: CompareMethod\n  nameWithType: CompareMethod\n  fullName: Microsoft.VisualBasic.CompareMethod\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeBinary(String, String)\n  nameWithType: StringType.StrLikeBinary(String, String)\n  fullName: StringType.StrLikeBinary(String, String)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeText(String, String)\n  nameWithType: StringType.StrLikeText(String, String)\n  fullName: StringType.StrLikeText(String, String)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDecimal\n  nameWithType: StringType.FromDecimal\n  fullName: StringType.FromDecimal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDouble\n  nameWithType: StringType.FromDouble\n  fullName: StringType.FromDouble\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromSingle\n  nameWithType: StringType.FromSingle\n  fullName: StringType.FromSingle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromBoolean\n  nameWithType: StringType.FromBoolean\n  fullName: StringType.FromBoolean\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromByte\n  nameWithType: StringType.FromByte\n  fullName: StringType.FromByte\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromChar\n  nameWithType: StringType.FromChar\n  fullName: StringType.FromChar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDate\n  nameWithType: StringType.FromDate\n  fullName: StringType.FromDate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromInteger\n  nameWithType: StringType.FromInteger\n  fullName: StringType.FromInteger\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromLong\n  nameWithType: StringType.FromLong\n  fullName: StringType.FromLong\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromObject\n  nameWithType: StringType.FromObject\n  fullName: StringType.FromObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromShort\n  nameWithType: StringType.FromShort\n  fullName: StringType.FromShort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: MidStmtStr\n  nameWithType: StringType.MidStmtStr\n  fullName: StringType.MidStmtStr\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrCmp\n  nameWithType: StringType.StrCmp\n  fullName: StringType.StrCmp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLike\n  nameWithType: StringType.StrLike\n  fullName: StringType.StrLike\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeBinary\n  nameWithType: StringType.StrLikeBinary\n  fullName: StringType.StrLikeBinary\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeText\n  nameWithType: StringType.StrLikeText\n  fullName: StringType.StrLikeText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/StringType.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}