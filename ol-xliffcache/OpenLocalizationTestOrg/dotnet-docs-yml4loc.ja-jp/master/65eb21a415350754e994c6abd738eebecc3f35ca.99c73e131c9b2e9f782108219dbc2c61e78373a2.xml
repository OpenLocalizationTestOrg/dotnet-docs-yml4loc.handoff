{"nodes":[{"content":"Represents an adjustable arrow-shaped line cap. This class cannot be inherited.","nodes":[{"pos":[0,79],"content":"Represents an adjustable arrow-shaped line cap. This class cannot be inherited.","nodes":[{"content":"Represents an adjustable arrow-shaped line cap. This class cannot be inherited.","pos":[0,79],"nodes":[{"content":"Represents an adjustable arrow-shaped line cap.","pos":[0,47]},{"content":"This class cannot be inherited.","pos":[48,79]}]}]}],"pos":[822,902],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height. The arrow end caps created with this constructor are always filled.","nodes":[{"pos":[0,209],"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height. The arrow end caps created with this constructor are always filled.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"&gt;&lt;/xref&gt;</ph> class with the specified width and height.","pos":[0,141],"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height."},{"content":"The arrow end caps created with this constructor are always filled.","pos":[142,209]}]}],"pos":[3397,3607],"yaml":true},{"content":"The width of the arrow.","nodes":[{"pos":[0,23],"content":"The width of the arrow.","nodes":[{"content":"The width of the arrow.","pos":[0,23]}]}],"pos":[4912,4936],"yaml":true},{"content":"The height of the arrow.","nodes":[{"pos":[0,24],"content":"The height of the arrow.","nodes":[{"content":"The height of the arrow.","pos":[0,24]}]}],"pos":[4998,5023],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property. Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter.","nodes":[{"pos":[0,263],"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property. Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"&gt;&lt;/xref&gt;</ph> class with the specified width, height, and fill property.","pos":[0,157],"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property."},{"content":"Whether an arrow end cap is filled depends on the argument passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isFilled</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[158,263],"source":" Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter."}]}],"pos":[6296,6560],"yaml":true},{"content":"The width of the arrow.","nodes":[{"pos":[0,23],"content":"The width of the arrow.","nodes":[{"content":"The width of the arrow.","pos":[0,23]}]}],"pos":[7880,7904],"yaml":true},{"content":"The height of the arrow.","nodes":[{"pos":[0,24],"content":"The height of the arrow.","nodes":[{"content":"The height of the arrow.","pos":[0,24]}]}],"pos":[7966,7991],"yaml":true},{"content":"`true` to fill the arrow cap; otherwise, `false`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> to fill the arrow cap; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to fill the arrow cap; otherwise, `false`."}],"pos":[8056,8108],"yaml":true},{"content":"Gets or sets whether the arrow cap is filled.","nodes":[{"pos":[0,45],"content":"Gets or sets whether the arrow cap is filled.","nodes":[{"content":"Gets or sets whether the arrow cap is filled.","pos":[0,45]}]}],"pos":[9136,9182],"yaml":true},{"content":"This property is `true` if the arrow cap is filled; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"This property is <ph id=\"ph1\">`true`</ph> if the arrow cap is filled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"This property is `true` if the arrow cap is filled; otherwise, `false`."}],"pos":[9296,9368],"yaml":true},{"content":"Gets or sets the height of the arrow cap.","nodes":[{"pos":[0,41],"content":"Gets or sets the height of the arrow cap.","nodes":[{"content":"Gets or sets the height of the arrow cap.","pos":[0,41]}]}],"pos":[10397,10439],"yaml":true},{"content":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","nodes":[{"pos":[0,349],"content":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","nodes":[{"content":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","pos":[0,349],"nodes":[{"content":"The height of the arrow cap is scaled by the width of the <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object used to draw the line being capped.","pos":[0,126],"source":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped."},{"content":"For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","pos":[127,349],"source":" For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high."}]}]}],"pos":[10450,10800],"yaml":true,"extradata":"MT"},{"content":"The height of the arrow cap.","nodes":[{"pos":[0,28],"content":"The height of the arrow cap.","nodes":[{"content":"The height of the arrow cap.","pos":[0,28]}]}],"pos":[10914,10943],"yaml":true},{"content":"Gets or sets the number of units between the outline of the arrow cap and the fill.","nodes":[{"pos":[0,83],"content":"Gets or sets the number of units between the outline of the arrow cap and the fill.","nodes":[{"content":"Gets or sets the number of units between the outline of the arrow cap and the fill.","pos":[0,83]}]}],"pos":[12002,12086],"yaml":true},{"content":"The number of units between the outline of the arrow cap and the fill of the arrow cap.","nodes":[{"pos":[0,87],"content":"The number of units between the outline of the arrow cap and the fill of the arrow cap.","nodes":[{"content":"The number of units between the outline of the arrow cap and the fill of the arrow cap.","pos":[0,87]}]}],"pos":[12205,12293],"yaml":true},{"content":"Gets or sets the width of the arrow cap.","nodes":[{"pos":[0,40],"content":"Gets or sets the width of the arrow cap.","nodes":[{"content":"Gets or sets the width of the arrow cap.","pos":[0,40]}]}],"pos":[13321,13362],"yaml":true},{"content":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","nodes":[{"pos":[0,347],"content":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","nodes":[{"content":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","pos":[0,347],"nodes":[{"content":"The width of the arrow cap is scaled by the width of the <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object used to draw the line being capped.","pos":[0,125],"source":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped."},{"content":"For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","pos":[126,347],"source":" For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide."}]}]}],"pos":[13373,13721],"yaml":true,"extradata":"MT"},{"content":"The width, in units, of the arrow cap.","nodes":[{"pos":[0,38],"content":"The width, in units, of the arrow cap.","nodes":[{"content":"The width, in units, of the arrow cap.","pos":[0,38]}]}],"pos":[13834,13873],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap\n  commentId: T:System.Drawing.Drawing2D.AdjustableArrowCap\n  id: AdjustableArrowCap\n  children:\n  - System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  - System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  - System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  - System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  - System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  - System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  langs:\n  - csharp\n  name: AdjustableArrowCap\n  nameWithType: AdjustableArrowCap\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Represents an adjustable arrow-shaped line cap. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class AdjustableArrowCap : System.Drawing.Drawing2D.CustomLineCap'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Drawing.Drawing2D.CustomLineCap\n  implements: []\n  inheritedMembers:\n  - System.Drawing.Drawing2D.CustomLineCap.BaseCap\n  - System.Drawing.Drawing2D.CustomLineCap.BaseInset\n  - System.Drawing.Drawing2D.CustomLineCap.Clone\n  - System.Drawing.Drawing2D.CustomLineCap.Dispose\n  - System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)\n  - System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)\n  - System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)\n  - System.Drawing.Drawing2D.CustomLineCap.StrokeJoin\n  - System.Drawing.Drawing2D.CustomLineCap.WidthScale\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  commentId: M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single)'\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: AdjustableArrowCap(Single, Single)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single, Single)\n  fullName: AdjustableArrowCap.AdjustableArrowCap(Single, Single)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height. The arrow end caps created with this constructor are always filled.\n  remarks: ''\n  example:\n  - \"The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates an <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object named `myArrow`.  \\n  \\n-   Creates a <xref:System.Drawing.Pen> object named `capPen`, and sets its <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties equal to `myArrow`.  \\n  \\n-   Uses the <xref:System.Drawing.Graphics.DrawLine%2A> method to draw to screen a line capped by two arrows.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#1)]\"\n  syntax:\n    content: public AdjustableArrowCap (float width, float height);\n    parameters:\n    - id: width\n      type: System.Single\n      description: The width of the arrow.\n    - id: height\n      type: System.Single\n      description: The height of the arrow.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  commentId: M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  id: '#ctor(System.Single,System.Single,System.Boolean)'\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: AdjustableArrowCap(Single, Single, Boolean)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single, Single, Boolean)\n  fullName: AdjustableArrowCap.AdjustableArrowCap(Single, Single, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property. Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter.\n  remarks: ''\n  example:\n  - \"The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates an <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object named `myArrow`.  \\n  \\n-   Creates a <xref:System.Drawing.Pen> object named `capPen`, and sets its <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties equal to `myArrow`.  \\n  \\n-   Uses the <xref:System.Drawing.Graphics.DrawLine%2A> method to draw to screen a line capped by two arrows.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#2)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#2)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#2)]\"\n  syntax:\n    content: public AdjustableArrowCap (float width, float height, bool isFilled);\n    parameters:\n    - id: width\n      type: System.Single\n      description: The width of the arrow.\n    - id: height\n      type: System.Single\n      description: The height of the arrow.\n    - id: isFilled\n      type: System.Boolean\n      description: '`true` to fill the arrow cap; otherwise, `false`.'\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  commentId: P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  id: Filled\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: Filled\n  nameWithType: AdjustableArrowCap.Filled\n  fullName: AdjustableArrowCap.Filled\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets whether the arrow cap is filled.\n  syntax:\n    content: public bool Filled { get; set; }\n    return:\n      type: System.Boolean\n      description: This property is `true` if the arrow cap is filled; otherwise, `false`.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.Filled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  commentId: P:System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  id: Height\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: Height\n  nameWithType: AdjustableArrowCap.Height\n  fullName: AdjustableArrowCap.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the height of the arrow cap.\n  remarks: The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.\n  syntax:\n    content: public float Height { get; set; }\n    return:\n      type: System.Single\n      description: The height of the arrow cap.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.Height*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  commentId: P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  id: MiddleInset\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: MiddleInset\n  nameWithType: AdjustableArrowCap.MiddleInset\n  fullName: AdjustableArrowCap.MiddleInset\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the number of units between the outline of the arrow cap and the fill.\n  syntax:\n    content: public float MiddleInset { get; set; }\n    return:\n      type: System.Single\n      description: The number of units between the outline of the arrow cap and the fill of the arrow cap.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  commentId: P:System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  id: Width\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: Width\n  nameWithType: AdjustableArrowCap.Width\n  fullName: AdjustableArrowCap.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the width of the arrow cap.\n  remarks: The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.\n  syntax:\n    content: public float Width { get; set; }\n    return:\n      type: System.Single\n      description: The width, in units, of the arrow cap.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.Width*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Drawing.Drawing2D.CustomLineCap\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: CustomLineCap\n  nameWithType: CustomLineCap\n  fullName: System.Drawing.Drawing2D.CustomLineCap\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: AdjustableArrowCap(Single, Single)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single, Single)\n  fullName: AdjustableArrowCap.AdjustableArrowCap(Single, Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: AdjustableArrowCap(Single, Single, Boolean)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single, Single, Boolean)\n  fullName: AdjustableArrowCap.AdjustableArrowCap(Single, Single, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Filled\n  nameWithType: AdjustableArrowCap.Filled\n  fullName: AdjustableArrowCap.Filled\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Height\n  nameWithType: AdjustableArrowCap.Height\n  fullName: AdjustableArrowCap.Height\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: MiddleInset\n  nameWithType: AdjustableArrowCap.MiddleInset\n  fullName: AdjustableArrowCap.MiddleInset\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Width\n  nameWithType: AdjustableArrowCap.Width\n  fullName: AdjustableArrowCap.Width\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: AdjustableArrowCap\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap\n  fullName: AdjustableArrowCap.AdjustableArrowCap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Filled*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Filled\n  nameWithType: AdjustableArrowCap.Filled\n  fullName: AdjustableArrowCap.Filled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Height*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Height\n  nameWithType: AdjustableArrowCap.Height\n  fullName: AdjustableArrowCap.Height\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: MiddleInset\n  nameWithType: AdjustableArrowCap.MiddleInset\n  fullName: AdjustableArrowCap.MiddleInset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Width*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Width\n  nameWithType: AdjustableArrowCap.Width\n  fullName: AdjustableArrowCap.Width\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/AdjustableArrowCap.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: BaseCap\n  nameWithType: CustomLineCap.BaseCap\n  fullName: CustomLineCap.BaseCap\n- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: BaseInset\n  nameWithType: CustomLineCap.BaseInset\n  fullName: CustomLineCap.BaseInset\n- uid: System.Drawing.Drawing2D.CustomLineCap.Clone\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: Clone()\n  nameWithType: CustomLineCap.Clone()\n  fullName: CustomLineCap.Clone()\n- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: Dispose()\n  nameWithType: CustomLineCap.Dispose()\n  fullName: CustomLineCap.Dispose()\n- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CustomLineCap.Dispose(Boolean)\n  fullName: CustomLineCap.Dispose(Boolean)\n- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: GetStrokeCaps(LineCap, LineCap)\n  nameWithType: CustomLineCap.GetStrokeCaps(LineCap, LineCap)\n  fullName: CustomLineCap.GetStrokeCaps(LineCap, LineCap)\n- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: SetStrokeCaps(LineCap, LineCap)\n  nameWithType: CustomLineCap.SetStrokeCaps(LineCap, LineCap)\n  fullName: CustomLineCap.SetStrokeCaps(LineCap, LineCap)\n- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: StrokeJoin\n  nameWithType: CustomLineCap.StrokeJoin\n  fullName: CustomLineCap.StrokeJoin\n- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale\n  parent: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: WidthScale\n  nameWithType: CustomLineCap.WidthScale\n  fullName: CustomLineCap.WidthScale\n"}