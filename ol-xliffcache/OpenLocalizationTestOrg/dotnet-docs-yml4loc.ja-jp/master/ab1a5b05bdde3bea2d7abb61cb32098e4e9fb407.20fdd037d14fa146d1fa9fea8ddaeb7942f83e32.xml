{"nodes":[{"content":"Delegate that is used by the <xref href=\"System.Xml.Serialization.XmlSerializer\"></xref> class for serialization of types from SOAP-encoded, non-root XML data.","nodes":[{"pos":[0,159],"content":"Delegate that is used by the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Serialization.XmlSerializer\"&gt;&lt;/xref&gt;</ph> class for serialization of types from SOAP-encoded, non-root XML data.","source":"Delegate that is used by the <xref href=\"System.Xml.Serialization.XmlSerializer\"></xref> class for serialization of types from SOAP-encoded, non-root XML data."}],"pos":[515,675],"yaml":true},{"content":"During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <xref:System.Xml.Serialization.XmlSerializationWriter> class. During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> class delegate. It does so for certain mappings between .NET Framework types and XML data types that are serialized through SOAP-encoded XML and are not root elements. Then, as necessary, a write method is called during serialization.  \n  \n You should not directly instantiate <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.  \n  \n SOAP encoding is described in Section 5 of the SOAP 1.1 specification.","nodes":[{"pos":[0,604],"content":"During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <xref:System.Xml.Serialization.XmlSerializationWriter> class. During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> class delegate. It does so for certain mappings between .NET Framework types and XML data types that are serialized through SOAP-encoded XML and are not root elements. Then, as necessary, a write method is called during serialization.","nodes":[{"content":"During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <xref:System.Xml.Serialization.XmlSerializationWriter> class. During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> class delegate. It does so for certain mappings between .NET Framework types and XML data types that are serialized through SOAP-encoded XML and are not root elements. Then, as necessary, a write method is called during serialization.","pos":[0,604],"nodes":[{"content":"During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializationWriter&gt;</ph> class.","pos":[0,224],"source":"During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <xref:System.Xml.Serialization.XmlSerializationWriter> class."},{"content":"During this process, the .NET Framework generates write methods that implement the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializationWriteCallback&gt;</ph> class delegate.","pos":[225,385],"source":" During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> class delegate."},{"content":"It does so for certain mappings between .NET Framework types and XML data types that are serialized through SOAP-encoded XML and are not root elements.","pos":[386,537]},{"content":"Then, as necessary, a write method is called during serialization.","pos":[538,604]}]}]},{"pos":[611,709],"content":"You should not directly instantiate <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.","nodes":[{"content":"You should not directly instantiate <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializationWriteCallback&gt;</ph>.","pos":[0,98],"source":"You should not directly instantiate <xref:System.Xml.Serialization.XmlSerializationWriteCallback>."}]},{"pos":[716,786],"content":"SOAP encoding is described in Section 5 of the SOAP 1.1 specification.","nodes":[{"content":"SOAP encoding is described in Section 5 of the SOAP 1.1 specification.","pos":[0,70]}]}],"pos":[686,1479],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Serialization.XmlSerializationWriteCallback\n  commentId: T:System.Xml.Serialization.XmlSerializationWriteCallback\n  id: XmlSerializationWriteCallback\n  langs:\n  - csharp\n  name: XmlSerializationWriteCallback\n  nameWithType: XmlSerializationWriteCallback\n  fullName: System.Xml.Serialization.XmlSerializationWriteCallback\n  type: Delegate\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: Delegate that is used by the <xref href=\"System.Xml.Serialization.XmlSerializer\"></xref> class for serialization of types from SOAP-encoded, non-root XML data.\n  remarks: \"During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <xref:System.Xml.Serialization.XmlSerializationWriter> class. During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> class delegate. It does so for certain mappings between .NET Framework types and XML data types that are serialized through SOAP-encoded XML and are not root elements. Then, as necessary, a write method is called during serialization.  \\n  \\n You should not directly instantiate <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.  \\n  \\n SOAP encoding is described in Section 5 of the SOAP 1.1 specification.\"\n  syntax:\n    content: public delegate void XmlSerializationWriteCallback(object o);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSerializationWriteCallback.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}