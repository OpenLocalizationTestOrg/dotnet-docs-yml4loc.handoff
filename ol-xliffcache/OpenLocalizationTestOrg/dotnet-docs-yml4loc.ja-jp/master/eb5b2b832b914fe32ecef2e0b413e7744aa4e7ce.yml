### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  commentId: T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  id: ConsoleApplicationBase
  children:
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  langs:
  - csharp
  name: ConsoleApplicationBase
  nameWithType: ConsoleApplicationBase
  fullName: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Provides properties, methods, and events related to the current application.
  remarks: "The properties exposed by the `My.Application` object return data that is associated only with the current application or DLL. No system-level information can be altered with `My.Application`.  \n  \n The `My.Application` object consists of the following classes:  \n  \n-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> provides members that are available in all projects.  \n  \n-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> provides members available in Windows Forms applications.  \n  \n-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> provides members available in console applications."
  example:
  - "This example uses the `My.Application.CommandLineArgs` property to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#3)]"
  syntax:
    content: 'public class ConsoleApplicationBase : Microsoft.VisualBasic.ApplicationServices.ApplicationBase'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  derivedClasses:
  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log
  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  commentId: M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: ConsoleApplicationBase()
  nameWithType: ConsoleApplicationBase.ConsoleApplicationBase()
  fullName: ConsoleApplicationBase.ConsoleApplicationBase()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Initializes a new instance of the <xref href="Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase"></xref> class.
  syntax:
    content: public ConsoleApplicationBase ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  commentId: P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  id: CommandLineArgs
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: CommandLineArgs
  nameWithType: ConsoleApplicationBase.CommandLineArgs
  fullName: ConsoleApplicationBase.CommandLineArgs
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Gets a collection containing the command-line arguments as strings for the current application.
  remarks: "The `My.Application.CommandLineArgs` property provides read-only access to the current application's command-line arguments for applications that are not ClickOnce deployed.  \n  \n For a single-instance application, the `My.Application.CommandLineArgs` property returns the command-line arguments for the first instance of an application. To access the arguments for subsequent attempts to start a single-instance application, you must handle the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event and examine the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs> argument.  \n  \n> [!NOTE]\n>  The `My.Application.CommandLineArgs` property returns only the command-line arguments. This is different from the behavior of the <xref:System.Environment.CommandLine%2A> property, which returns the application name in addition to the arguments.  \n  \n> [!NOTE]\n>  In an application that is ClickOnce deployed, use the <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A> property of the `My.Application.Deployment` object to get the command-line arguments. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>.  \n  \n The following table lists examples of tasks involving the `My.Application.CommandLineArgs` property.  \n  \n|To|See|  \n|-|-|  \n|Check the command-line arguments of subsequent attempts to start a single-instance application|<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|No|  \n|Console Application|**Yes**|  \n|Windows Control Library|No|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example uses the `My.Application.CommandLineArgs` property to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \n  \n [!code-vb[VbVbalrMyApplication#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#3)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> CommandLineArgs { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"></xref> of `String`, containing the command-line arguments as strings for the current application.
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  altCompliant: System.Environment.CommandLine
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  commentId: P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  id: Deployment
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: Deployment
  nameWithType: ConsoleApplicationBase.Deployment
  fullName: ConsoleApplicationBase.Deployment
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Gets the current application's ClickOnce deployment object, which provides support for updating the current deployment programmatically and support for the on-demand download of files.
  remarks: "The `My.Application.Deployment` property returns the application's ClickOnce <xref:System.Deployment.Application.ApplicationDeployment> object. The <xref:System.Deployment.Application.ApplicationDeployment> object provides support for updating the current deployment programmatically as well as support for the on-demand download of files. For more information on ClickOnce applications and how to deploy them, see [ClickOnce Security and Deployment](http://msdn.microsoft.com/library/abab6d34-c3c2-45c1-a8b6-43c7d3131e7a) and [Publishing ClickOnce Applications](http://msdn.microsoft.com/library/eb6dfe79-f54c-4331-8e36-073688e70973).  \n  \n Confirm that the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed%2A> property is `True` before you access the `My.Application.Deployment` property. Otherwise, if the application is not deployed using ClickOnce, reading the `My.Application.Deployment` property results in an <xref:System.Deployment.Application.InvalidDeploymentException> exception. For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](http://msdn.microsoft.com/library/2e4aa67c-4445-4f7b-9e03-9acb95829127).  \n  \n For more information on using the `My.Application.Deployment` property, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Forms Application|**Yes**|  \n|Class Library|No|  \n|Console Application|**Yes**|  \n|Windows Forms Control Library|No|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example downloads and installs the update after checking that the application is network-deployed. The <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> method does not update the application unless it is out of date. The application has to restart to use the update.  \n  \n [!code-vb[VbVbalrMyApplication#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#4)]  \n  \n Only applications that are ClickOnce deployed can be updated using the `My.Application.Deployment` object. For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](http://msdn.microsoft.com/library/2e4aa67c-4445-4f7b-9e03-9acb95829127)."
  syntax:
    content: public System.Deployment.Application.ApplicationDeployment Deployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: Returns the <xref href="System.Deployment.Application.ApplicationDeployment"></xref> object for the application's ClickOnce deployment.
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: The application is not deployed as a ClickOnce application.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  commentId: P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  id: InternalCommandLine
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: InternalCommandLine
  nameWithType: ConsoleApplicationBase.InternalCommandLine
  fullName: ConsoleApplicationBase.InternalCommandLine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Sets the values to use as the current application's command-line arguments.
  remarks: This method allows you to set the internal value of the command-line arguments used by the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> class. This property determines what the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property returns. If you do not set this property, or you set this property to `Nothing`, the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property obtains the command-line arguments from the <xref:System.Environment.CommandLine%2A> property.
  syntax:
    content: protected System.Collections.ObjectModel.ReadOnlyCollection<string> InternalCommandLine { set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"></xref> of `String`, containing the strings to use as the command-line arguments for the current application.
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  commentId: P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ConsoleApplicationBase.IsNetworkDeployed
  fullName: ConsoleApplicationBase.IsNetworkDeployed
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Gets a `Boolean` that represents whether the application was deployed from a network using ClickOnce.
  remarks: "The `My.Application.IsNetworkDeployed` property indicates whether the application was deployed from a network using ClickOnce. For more information on ClickOnce applications, see [ClickOnce Security and Deployment](http://msdn.microsoft.com/library/abab6d34-c3c2-45c1-a8b6-43c7d3131e7a).  \n  \n You should confirm that this property is `True` before you access the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> property. Otherwise, if the application is not deployed from a network using ClickOnce, reading the `My.Application.Deployment` property results in an <xref:System.Deployment.Application.InvalidDeploymentException> exception.  \n  \n For more information on configuring ClickOnce, see [Publishing ClickOnce Applications](http://msdn.microsoft.com/library/eb6dfe79-f54c-4331-8e36-073688e70973). For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](http://msdn.microsoft.com/library/2e4aa67c-4445-4f7b-9e03-9acb95829127).  \n  \n For more information on using the `My.Application.IsNetworkDeployed` property, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Forms Application|**Yes**|  \n|Class Library|No|  \n|Console Application|**Yes**|  \n|Windows Forms Control Library|No|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example downloads and installs the update after checking that the application is deployed from a network. The <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> method does not update the application unless it is out of date. The application has to restart to use the update.  \n  \n [!code-vb[VbVbalrMyApplication#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#4)]  \n  \n Only applications that are ClickOnce-deployed can be updated using the `My.Application.Deployment` object. For more information on deploying a ClickOnce application, see [How to: Publish a ClickOnce Application using the Publish Wizard](http://msdn.microsoft.com/library/2e4aa67c-4445-4f7b-9e03-9acb95829127)."
  syntax:
    content: public bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: A `Boolean` that represents whether the application was deployed from a network. The value is `True` if the current application was deployed from a network; otherwise the value is `False`.
  overload: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: ApplicationBase
  nameWithType: ApplicationBase
  fullName: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: ConsoleApplicationBase()
  nameWithType: ConsoleApplicationBase.ConsoleApplicationBase()
  fullName: ConsoleApplicationBase.ConsoleApplicationBase()
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: CommandLineArgs
  nameWithType: ConsoleApplicationBase.CommandLineArgs
  fullName: ConsoleApplicationBase.CommandLineArgs
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Deployment
  nameWithType: ConsoleApplicationBase.Deployment
  fullName: ConsoleApplicationBase.Deployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: InternalCommandLine
  nameWithType: ConsoleApplicationBase.InternalCommandLine
  fullName: ConsoleApplicationBase.InternalCommandLine
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ConsoleApplicationBase.IsNetworkDeployed
  fullName: ConsoleApplicationBase.IsNetworkDeployed
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: ConsoleApplicationBase
  nameWithType: ConsoleApplicationBase.ConsoleApplicationBase
  fullName: ConsoleApplicationBase.ConsoleApplicationBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: CommandLineArgs
  nameWithType: ConsoleApplicationBase.CommandLineArgs
  fullName: ConsoleApplicationBase.CommandLineArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: Deployment
  nameWithType: ConsoleApplicationBase.Deployment
  fullName: ConsoleApplicationBase.Deployment
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: InternalCommandLine
  nameWithType: ConsoleApplicationBase.InternalCommandLine
  fullName: ConsoleApplicationBase.InternalCommandLine
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed*
  parent: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ConsoleApplicationBase.IsNetworkDeployed
  fullName: ConsoleApplicationBase.IsNetworkDeployed
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/ConsoleApplicationBase.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: ChangeCulture(String)
  nameWithType: ApplicationBase.ChangeCulture(String)
  fullName: ApplicationBase.ChangeCulture(String)
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: ChangeUICulture(String)
  nameWithType: ApplicationBase.ChangeUICulture(String)
  fullName: ApplicationBase.ChangeUICulture(String)
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: Culture
  nameWithType: ApplicationBase.Culture
  fullName: ApplicationBase.Culture
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: GetEnvironmentVariable(String)
  nameWithType: ApplicationBase.GetEnvironmentVariable(String)
  fullName: ApplicationBase.GetEnvironmentVariable(String)
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: Info
  nameWithType: ApplicationBase.Info
  fullName: ApplicationBase.Info
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: Log
  nameWithType: ApplicationBase.Log
  fullName: ApplicationBase.Log
- uid: Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture
  parent: Microsoft.VisualBasic.ApplicationServices.ApplicationBase
  isExternal: false
  name: UICulture
  nameWithType: ApplicationBase.UICulture
  fullName: ApplicationBase.UICulture
