{"nodes":[{"content":"Represents a reference to a type.","nodes":[{"pos":[0,33],"content":"Represents a reference to a type.","nodes":[{"content":"Represents a reference to a type.","pos":[0,33]}]}],"pos":[1307,1341],"yaml":true},{"content":"A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects. When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>. For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.  \n  \n A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string. It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible. If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as \"System.Console\" instead of just \"Console\", because not all languages support importing namespaces. Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.  \n  \n The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference. For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.","nodes":[{"pos":[0,374],"content":"A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects. When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>. For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object is used to represent a type for CodeDOM objects.","pos":[0,97],"source":"A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects."},{"content":"When CodeDOM types have a <ph id=\"ph1\">`Type`</ph> property, it is of type <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>.","pos":[98,195],"source":" When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName&gt;</ph> property is a <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> that represents a field's data type.","pos":[196,374],"source":" For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type."}]},{"pos":[381,967],"content":"A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string. It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible. If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as \"System.Console\" instead of just \"Console\", because not all languages support importing namespaces. Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.","nodes":[{"content":"A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string. It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible. If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as \"System.Console\" instead of just \"Console\", because not all languages support importing namespaces. Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.","pos":[0,586],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> can be initialized with a <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> object or a string.","pos":[0,106],"source":"A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string."},{"content":"It is generally recommended to use a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> to do this, although it may not always be possible.","pos":[107,214],"source":" It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible."},{"content":"If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as \"System.Console\" instead of just \"Console\", because not all languages support importing namespaces.","pos":[215,443]},{"content":"Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.","pos":[444,586]}]}]},{"pos":[974,1355],"content":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference. For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.","nodes":[{"content":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference. For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.","pos":[0,381],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property specifies the name of the type to reference.","pos":[0,109],"source":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference."},{"content":"For references to array types, the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A&gt;</ph> property indicates the type of the elements of the array, and the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> property indicates the number of dimensions in the array.","pos":[110,381],"source":" For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array."}]}]}],"pos":[1352,2718],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class."}],"pos":[5068,5163],"yaml":true},{"content":"This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.  If you use this constructor, set properties to establish the type reference.","nodes":[{"pos":[0,159],"content":"This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.  If you use this constructor, set properties to establish the type reference.","nodes":[{"content":"This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.  If you use this constructor, set properties to establish the type reference.","pos":[0,159],"nodes":[{"content":"This constructor creates an empty <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object.","pos":[0,81],"source":"This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object."},{"content":"If you use this constructor, set properties to establish the type reference.","pos":[83,159]}]}]}],"pos":[5174,5334],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified code type parameter.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified code type parameter.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified code type parameter."}],"pos":[6642,6777],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> that represents the type of the type parameter.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeParameter\"&gt;&lt;/xref&gt;</ph> that represents the type of the type parameter.","source":"A <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> that represents the type of the type parameter."}],"pos":[6979,7083],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified type name.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name."}],"pos":[8230,8355],"yaml":true},{"content":"If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types. For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.  \n  \n> [!NOTE]\n>  You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.  \n  \n To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.","nodes":[{"pos":[0,503],"content":"If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types. For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.","nodes":[{"content":"If the <ph id=\"ph1\">`typeName`</ph> parameter references a generic type, it must follow the syntax conventions for generic types.","pos":[0,111],"source":"If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types."},{"content":"For example, the reflection signature for a <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> type, where <ph id=\"ph2\">`K`</ph> is a string and <ph id=\"ph3\">`V`</ph> is a <ph id=\"ph4\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of integers, is represented by reflection as the following (with the assembly information removed): <ph id=\"ph5\">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph>.","pos":[112,503],"source":" For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``."}]},{"pos":[511,621],"content":"[!NOTE]\n You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.","leadings":["","> "],"nodes":[{"content":"You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.","pos":[9,108],"source":" You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters."}]},{"pos":[628,783],"content":"To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.","nodes":[{"content":"To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.","pos":[0,155]}]}],"pos":[8366,9157],"yaml":true,"extradata":"MT"},{"content":"The name of the type to reference.","nodes":[{"pos":[0,34],"content":"The name of the type to reference.","nodes":[{"content":"The name of the type to reference.","pos":[0,34]}]}],"pos":[9304,9339],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified type.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type."}],"pos":[10474,10594],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to reference.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to reference.","source":"The <xref href=\"System.Type\"></xref> to reference."}],"pos":[10729,10780],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[10948,10977],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified array type and rank.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified array type and rank.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified array type and rank."}],"pos":[12205,12340],"yaml":true},{"content":"This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.","nodes":[{"pos":[0,118],"content":"This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.","nodes":[{"content":"This constructor can be used to construct arrays of arrays by nesting <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> objects.","pos":[0,118],"source":"This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects."}]}],"pos":[12351,12470],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the array.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> that indicates the type of the array.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the array."}],"pos":[12674,12768],"yaml":true},{"content":"The number of dimensions in the array.","nodes":[{"pos":[0,38],"content":"The number of dimensions in the array.","nodes":[{"content":"The number of dimensions in the array.","pos":[0,38]}]}],"pos":[12827,12866],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name and type arguments.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified type name and type arguments.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name and type arguments."}],"pos":[14181,14325],"yaml":true},{"content":"The name of the type to reference.","nodes":[{"pos":[0,34],"content":"The name of the type to reference.","nodes":[{"content":"The name of the type to reference.","pos":[0,34]}]}],"pos":[14522,14557],"yaml":true},{"content":"An array of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> values.","nodes":[{"pos":[0,73],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> values.","source":"An array of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> values."}],"pos":[14647,14721],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name and code type reference option.","nodes":[{"pos":[0,155],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified type name and code type reference option.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name and code type reference option."}],"pos":[16066,16222],"yaml":true},{"content":"The name of the type to reference.","nodes":[{"pos":[0,34],"content":"The name of the type to reference.","nodes":[{"content":"The name of the type to reference.","pos":[0,34]}]}],"pos":[16434,16469],"yaml":true},{"content":"The code type reference option, one of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values.","nodes":[{"pos":[0,111],"content":"The code type reference option, one of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReferenceOptions\"&gt;&lt;/xref&gt;</ph> values.","source":"The code type reference option, one of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values."}],"pos":[16574,16686],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified array type name and rank.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified array type name and rank.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified array type name and rank."}],"pos":[17893,18033],"yaml":true},{"content":"The name of the type of the elements of the array.","nodes":[{"pos":[0,50],"content":"The name of the type of the elements of the array.","nodes":[{"content":"The name of the type of the elements of the array.","pos":[0,50]}]}],"pos":[18190,18241],"yaml":true},{"content":"The number of dimensions of the array.","nodes":[{"pos":[0,38],"content":"The number of dimensions of the array.","nodes":[{"content":"The number of dimensions of the array.","pos":[0,38]}]}],"pos":[18300,18339],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type and code type reference.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> class using the specified type and code type reference.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type and code type reference."}],"pos":[19672,19816],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to reference.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to reference.","source":"The <xref href=\"System.Type\"></xref> to reference."}],"pos":[20016,20067],"yaml":true},{"content":"The code type reference option, one of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values.","nodes":[{"pos":[0,111],"content":"The code type reference option, one of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReferenceOptions\"&gt;&lt;/xref&gt;</ph> values.","source":"The code type reference option, one of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values."}],"pos":[20172,20284],"yaml":true},{"content":"Gets or sets the type of the elements in the array.","nodes":[{"pos":[0,51],"content":"Gets or sets the type of the elements in the array.","nodes":[{"content":"Gets or sets the type of the elements in the array.","pos":[0,51]}]}],"pos":[21387,21439],"yaml":true},{"content":"This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.","nodes":[{"pos":[0,123],"content":"This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.","nodes":[{"content":"This is disregarded unless the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> property is greater than or equal to 1.","pos":[0,123],"source":"This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1."}]}],"pos":[21450,21574],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the array elements.","nodes":[{"pos":[0,102],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> that indicates the type of the array elements.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the array elements."}],"pos":[21744,21847],"yaml":true},{"content":"Gets or sets the array rank of the array.","nodes":[{"pos":[0,41],"content":"Gets or sets the array rank of the array.","nodes":[{"content":"Gets or sets the array rank of the array.","pos":[0,41]}]}],"pos":[22919,22961],"yaml":true},{"content":"The number of dimensions of the array.","nodes":[{"pos":[0,38],"content":"The number of dimensions of the array.","nodes":[{"content":"The number of dimensions of the array.","pos":[0,38]}]}],"pos":[23075,23114],"yaml":true},{"content":"Gets or sets the name of the type being referenced.","nodes":[{"pos":[0,51],"content":"Gets or sets the name of the type being referenced.","nodes":[{"content":"Gets or sets the name of the type being referenced.","pos":[0,51]}]}],"pos":[24173,24225],"yaml":true},{"content":"This property contains the name of the type unless it is an array type, in which case it is the array element type.  \n  \n> [!NOTE]\n>  The name of the property may be misleading. This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected. For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.  \n  \n## Representation of Generic Types  \n The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (\"`\") followed by a count of the generic type arguments. The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property. The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.  \n  \n For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):  \n  \n```  \nSystem.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  \n```  \n  \n Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:  \n  \n-   The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:  \n  \n    ```  \n    System.Collections.Generic.Dictionary`2  \n    ```  \n  \n-   The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:  \n  \n    ```  \n    System.String  \n    ```  \n  \n-   The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:  \n  \n    ```  \n    System.Collections.Generic.List`1  \n    ```  \n  \n-   The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:  \n  \n    ```  \n    System.Int32  \n    ```  \n  \n The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values. The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.  It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign (\"+\").  \n  \n> [!NOTE]\n>  When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>. Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.","nodes":[{"pos":[0,115],"content":"This property contains the name of the type unless it is an array type, in which case it is the array element type.","nodes":[{"content":"This property contains the name of the type unless it is an array type, in which case it is the array element type.","pos":[0,115]}]},{"pos":[123,571],"content":"[!NOTE]\n The name of the property may be misleading. This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected. For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.","leadings":["","> "],"nodes":[{"content":" The name of the property may be misleading. This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected. For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.","pos":[8,446],"nodes":[{"content":"The name of the property may be misleading.","pos":[1,44]},{"content":"This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.","pos":[45,197]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> value for <ph id=\"ph2\">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph> is <ph id=\"ph3\">``System.Collections.Generic.Dictionary`2``</ph>.","pos":[198,438],"source":" For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``."}]}]},{"pos":[580,611],"content":"Representation of Generic Types","linkify":"Representation of Generic Types","nodes":[{"content":"Representation of Generic Types","pos":[0,31]}]},{"pos":[615,1322],"content":"The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (\"`\") followed by a count of the generic type arguments. The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property. The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.","nodes":[{"content":"The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (\"`\") followed by a count of the generic type arguments. The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property. The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.","pos":[0,707],"nodes":[{"content":"The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.","pos":[0,120]},{"content":"The return value can contain generic types.","pos":[121,164]},{"content":"Generic types are formatted with the name of the type followed by a grave accent (\"`\") followed by a count of the generic type arguments.","pos":[165,302]},{"content":"The generic type arguments can be found in the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReferenceCollection&gt;</ph> returned by the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property.","pos":[303,482],"source":" The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property."},{"content":"The values returned by <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> and the associated <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> contain the same content as the value of the type returned by reflection.","pos":[483,707],"source":" The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection."}]}]},{"pos":[1329,1593],"content":"For example, a constructed <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> where <ph id=\"ph2\">`K`</ph> is a string and <ph id=\"ph3\">`V`</ph> is a constructed <ph id=\"ph4\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of integers is represented by reflection as the following (with the assembly information removed):","source":"For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):"},{"pos":[1727,1977],"content":"Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:","nodes":[{"content":"Recursively parsing the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property from the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> for <ph id=\"ph3\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> yields the same strings as the reflection representation above:","pos":[0,250],"source":"Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:"}]},{"pos":[1987,2129],"content":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the parent <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> returns the following:","pos":[0,142],"source":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:"}]},{"pos":[2208,2431],"content":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the first <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object in the <ph id=\"ph3\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> collection returns the following:","pos":[0,223],"source":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:"}]},{"pos":[2484,2708],"content":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the second <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object in the <ph id=\"ph3\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> collection returns the following:","pos":[0,224],"source":"The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:"}]},{"pos":[2781,2969],"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property in the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object for <ph id=\"ph3\">``System.Collections.Generic.List`1``</ph> returns the following:","source":"The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:"},{"pos":[3018,3415],"content":"The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values. The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.  It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign (\"+\").","nodes":[{"content":"The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values. The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.  It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign (\"+\").","pos":[0,397],"nodes":[{"content":"The type argument count should be used when parsing the associated <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> values.","pos":[0,131],"source":"The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values."},{"content":"The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.","pos":[132,252]},{"content":"It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign (\"+\").","pos":[254,397]}]}]},{"pos":[3423,3804],"content":"[!NOTE]\n When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>. Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.","leadings":["","> "],"nodes":[{"content":" When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>. Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.","pos":[8,379],"nodes":[{"content":"When creating a generic <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>, the recommended practice is to specify the type arguments as <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> objects or use the constructor that takes a <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","pos":[1,230],"source":" When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>."},{"content":"Use of the constructor that creates a <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> from a string can lead to undiscoverable type-argument errors.","pos":[231,371],"source":" Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors."}]}]}],"pos":[24236,28090],"yaml":true,"extradata":"MT"},{"content":"The name of the type being referenced.","nodes":[{"pos":[0,38],"content":"The name of the type being referenced.","nodes":[{"content":"The name of the type being referenced.","pos":[0,38]}]}],"pos":[28207,28246],"yaml":true},{"content":"Gets or sets the code type reference option.","nodes":[{"pos":[0,44],"content":"Gets or sets the code type reference option.","nodes":[{"content":"Gets or sets the code type reference option.","pos":[0,44]}]}],"pos":[29298,29343],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values.","nodes":[{"pos":[0,97],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReferenceOptions\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values."}],"pos":[29585,29683],"yaml":true},{"content":"Gets the type arguments for the current generic type reference.","nodes":[{"pos":[0,63],"content":"Gets the type arguments for the current generic type reference.","nodes":[{"content":"Gets the type arguments for the current generic type reference.","pos":[0,63]}]}],"pos":[30845,30909],"yaml":true},{"content":"The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type. The collection contains all the type arguments for all nested types. For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.","nodes":[{"pos":[0,340],"content":"The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type. The collection contains all the type arguments for all nested types. For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.","nodes":[{"content":"The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type. The collection contains all the type arguments for all nested types. For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.","pos":[0,340],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property is a collection of type references to be substituted for the type parameter references of the current generic type.","pos":[0,185],"source":"The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type."},{"content":"The collection contains all the type arguments for all nested types.","pos":[186,254]},{"content":"For an example, see the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property.","pos":[255,340],"source":" For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property."}]}]}],"pos":[30920,31261],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> containing the type arguments for the current <xref href=\"System.CodeDom.CodeTypeReference\"></xref> object.","nodes":[{"pos":[0,173],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReferenceCollection\"&gt;&lt;/xref&gt;</ph> containing the type arguments for the current <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> containing the type arguments for the current <xref href=\"System.CodeDom.CodeTypeReference\"></xref> object."}],"pos":[31510,31684],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeTypeReference\n  commentId: T:System.CodeDom.CodeTypeReference\n  id: CodeTypeReference\n  children:\n  - System.CodeDom.CodeTypeReference.#ctor\n  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)\n  - System.CodeDom.CodeTypeReference.#ctor(System.String)\n  - System.CodeDom.CodeTypeReference.#ctor(System.Type)\n  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)\n  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])\n  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)\n  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)\n  - System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)\n  - System.CodeDom.CodeTypeReference.ArrayElementType\n  - System.CodeDom.CodeTypeReference.ArrayRank\n  - System.CodeDom.CodeTypeReference.BaseType\n  - System.CodeDom.CodeTypeReference.Options\n  - System.CodeDom.CodeTypeReference.TypeArguments\n  langs:\n  - csharp\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Represents a reference to a type.\n  remarks: \"A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects. When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>. For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.  \\n  \\n A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string. It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible. If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as \\\"System.Console\\\" instead of just \\\"Console\\\", because not all languages support importing namespaces. Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.  \\n  \\n The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference. For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.\"\n  example:\n  - \"The following example demonstrates use of a <xref:System.CodeDom.CodeTypeReference> to represent a reference to a type.  \\n  \\n [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]\\n [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]\\n [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeTypeReference : System.CodeDom.CodeObject\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference()\n  nameWithType: CodeTypeReference.CodeTypeReference()\n  fullName: CodeTypeReference.CodeTypeReference()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class.\n  remarks: This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.  If you use this constructor, set properties to establish the type reference.\n  syntax:\n    content: public CodeTypeReference ();\n    parameters: []\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)\n  id: '#ctor(System.CodeDom.CodeTypeParameter)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(CodeTypeParameter)\n  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)\n  fullName: CodeTypeReference.CodeTypeReference(CodeTypeParameter)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified code type parameter.\n  syntax:\n    content: public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);\n    parameters:\n    - id: typeParameter\n      type: System.CodeDom.CodeTypeParameter\n      description: A <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> that represents the type of the type parameter.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(String)\n  nameWithType: CodeTypeReference.CodeTypeReference(String)\n  fullName: CodeTypeReference.CodeTypeReference(String)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name.\n  remarks: \"If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types. For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.  \\n  \\n> [!NOTE]\\n>  You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.  \\n  \\n To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.\"\n  syntax:\n    content: public CodeTypeReference (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to reference.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(Type)\n  nameWithType: CodeTypeReference.CodeTypeReference(Type)\n  fullName: CodeTypeReference.CodeTypeReference(Type)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type.\n  syntax:\n    content: public CodeTypeReference (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to reference.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)\n  id: '#ctor(System.CodeDom.CodeTypeReference,System.Int32)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(CodeTypeReference, Int32)\n  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference, Int32)\n  fullName: CodeTypeReference.CodeTypeReference(CodeTypeReference, Int32)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified array type and rank.\n  remarks: This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.\n  syntax:\n    content: public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);\n    parameters:\n    - id: arrayType\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the array.\n    - id: rank\n      type: System.Int32\n      description: The number of dimensions in the array.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])\n  id: '#ctor(System.String,System.CodeDom.CodeTypeReference[])'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(String, CodeTypeReference[])\n  nameWithType: CodeTypeReference.CodeTypeReference(String, CodeTypeReference[])\n  fullName: CodeTypeReference.CodeTypeReference(String, CodeTypeReference[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name and type arguments.\n  syntax:\n    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReference[] typeArguments);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to reference.\n    - id: typeArguments\n      type: System.CodeDom.CodeTypeReference[]\n      description: An array of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> values.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)\n  id: '#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(String, CodeTypeReferenceOptions)\n  nameWithType: CodeTypeReference.CodeTypeReference(String, CodeTypeReferenceOptions)\n  fullName: CodeTypeReference.CodeTypeReference(String, CodeTypeReferenceOptions)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type name and code type reference option.\n  syntax:\n    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to reference.\n    - id: codeTypeReferenceOption\n      type: System.CodeDom.CodeTypeReferenceOptions\n      description: The code type reference option, one of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(String, Int32)\n  nameWithType: CodeTypeReference.CodeTypeReference(String, Int32)\n  fullName: CodeTypeReference.CodeTypeReference(String, Int32)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified array type name and rank.\n  syntax:\n    content: public CodeTypeReference (string baseType, int rank);\n    parameters:\n    - id: baseType\n      type: System.String\n      description: The name of the type of the elements of the array.\n    - id: rank\n      type: System.Int32\n      description: The number of dimensions of the array.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)\n  commentId: M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)\n  id: '#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)'\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: CodeTypeReference(Type, CodeTypeReferenceOptions)\n  nameWithType: CodeTypeReference.CodeTypeReference(Type, CodeTypeReferenceOptions)\n  fullName: CodeTypeReference.CodeTypeReference(Type, CodeTypeReferenceOptions)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeReference\"></xref> class using the specified type and code type reference.\n  syntax:\n    content: public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to reference.\n    - id: codeTypeReferenceOption\n      type: System.CodeDom.CodeTypeReferenceOptions\n      description: The code type reference option, one of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values.\n  overload: System.CodeDom.CodeTypeReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.ArrayElementType\n  commentId: P:System.CodeDom.CodeTypeReference.ArrayElementType\n  id: ArrayElementType\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: ArrayElementType\n  nameWithType: CodeTypeReference.ArrayElementType\n  fullName: CodeTypeReference.ArrayElementType\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the type of the elements in the array.\n  remarks: This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the array elements.\n  overload: System.CodeDom.CodeTypeReference.ArrayElementType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.ArrayRank\n  commentId: P:System.CodeDom.CodeTypeReference.ArrayRank\n  id: ArrayRank\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: ArrayRank\n  nameWithType: CodeTypeReference.ArrayRank\n  fullName: CodeTypeReference.ArrayRank\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the array rank of the array.\n  syntax:\n    content: public int ArrayRank { get; set; }\n    return:\n      type: System.Int32\n      description: The number of dimensions of the array.\n  overload: System.CodeDom.CodeTypeReference.ArrayRank*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.BaseType\n  commentId: P:System.CodeDom.CodeTypeReference.BaseType\n  id: BaseType\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: BaseType\n  nameWithType: CodeTypeReference.BaseType\n  fullName: CodeTypeReference.BaseType\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the name of the type being referenced.\n  remarks: \"This property contains the name of the type unless it is an array type, in which case it is the array element type.  \\n  \\n> [!NOTE]\\n>  The name of the property may be misleading. This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected. For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.  \\n  \\n## Representation of Generic Types  \\n The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (\\\"`\\\") followed by a count of the generic type arguments. The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property. The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.  \\n  \\n For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):  \\n  \\n```  \\nSystem.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  \\n```  \\n  \\n Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:  \\n  \\n-   The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:  \\n  \\n    ```  \\n    System.Collections.Generic.Dictionary`2  \\n    ```  \\n  \\n-   The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:  \\n  \\n    ```  \\n    System.String  \\n    ```  \\n  \\n-   The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:  \\n  \\n    ```  \\n    System.Collections.Generic.List`1  \\n    ```  \\n  \\n-   The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:  \\n  \\n    ```  \\n    System.Int32  \\n    ```  \\n  \\n The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values. The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.  It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign (\\\"+\\\").  \\n  \\n> [!NOTE]\\n>  When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>. Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.\"\n  syntax:\n    content: public string BaseType { get; set; }\n    return:\n      type: System.String\n      description: The name of the type being referenced.\n  overload: System.CodeDom.CodeTypeReference.BaseType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.Options\n  commentId: P:System.CodeDom.CodeTypeReference.Options\n  id: Options\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: Options\n  nameWithType: CodeTypeReference.Options\n  fullName: CodeTypeReference.Options\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the code type reference option.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReferenceOptions\n      description: A bitwise combination of the <xref href=\"System.CodeDom.CodeTypeReferenceOptions\"></xref> values.\n  overload: System.CodeDom.CodeTypeReference.Options*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeTypeReference.TypeArguments\n  commentId: P:System.CodeDom.CodeTypeReference.TypeArguments\n  id: TypeArguments\n  parent: System.CodeDom.CodeTypeReference\n  langs:\n  - csharp\n  name: TypeArguments\n  nameWithType: CodeTypeReference.TypeArguments\n  fullName: CodeTypeReference.TypeArguments\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets the type arguments for the current generic type reference.\n  remarks: The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type. The collection contains all the type arguments for all nested types. For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }\n    return:\n      type: System.CodeDom.CodeTypeReferenceCollection\n      description: A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> containing the type arguments for the current <xref href=\"System.CodeDom.CodeTypeReference\"></xref> object.\n  overload: System.CodeDom.CodeTypeReference.TypeArguments*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.CodeDom.CodeObject\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeObject\n  nameWithType: CodeObject\n  fullName: System.CodeDom.CodeObject\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.CodeDom.CodeTypeReference.#ctor\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference()\n  nameWithType: CodeTypeReference.CodeTypeReference()\n  fullName: CodeTypeReference.CodeTypeReference()\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(CodeTypeParameter)\n  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)\n  fullName: CodeTypeReference.CodeTypeReference(CodeTypeParameter)\n- uid: System.CodeDom.CodeTypeParameter\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeParameter\n  nameWithType: CodeTypeParameter\n  fullName: System.CodeDom.CodeTypeParameter\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(String)\n  nameWithType: CodeTypeReference.CodeTypeReference(String)\n  fullName: CodeTypeReference.CodeTypeReference(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(Type)\n  nameWithType: CodeTypeReference.CodeTypeReference(Type)\n  fullName: CodeTypeReference.CodeTypeReference(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(CodeTypeReference, Int32)\n  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference, Int32)\n  fullName: CodeTypeReference.CodeTypeReference(CodeTypeReference, Int32)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(String, CodeTypeReference[])\n  nameWithType: CodeTypeReference.CodeTypeReference(String, CodeTypeReference[])\n  fullName: CodeTypeReference.CodeTypeReference(String, CodeTypeReference[])\n- uid: System.CodeDom.CodeTypeReference[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference[]\n  nameWithType: CodeTypeReference[]\n  fullName: System.CodeDom.CodeTypeReference[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeTypeReference\n    name: CodeTypeReference\n    nameWithType: CodeTypeReference\n    fullName: System.CodeDom.CodeTypeReference\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(String, CodeTypeReferenceOptions)\n  nameWithType: CodeTypeReference.CodeTypeReference(String, CodeTypeReferenceOptions)\n  fullName: CodeTypeReference.CodeTypeReference(String, CodeTypeReferenceOptions)\n- uid: System.CodeDom.CodeTypeReferenceOptions\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReferenceOptions\n  nameWithType: CodeTypeReferenceOptions\n  fullName: System.CodeDom.CodeTypeReferenceOptions\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(String, Int32)\n  nameWithType: CodeTypeReference.CodeTypeReference(String, Int32)\n  fullName: CodeTypeReference.CodeTypeReference(String, Int32)\n- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference(Type, CodeTypeReferenceOptions)\n  nameWithType: CodeTypeReference.CodeTypeReference(Type, CodeTypeReferenceOptions)\n  fullName: CodeTypeReference.CodeTypeReference(Type, CodeTypeReferenceOptions)\n- uid: System.CodeDom.CodeTypeReference.ArrayElementType\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: ArrayElementType\n  nameWithType: CodeTypeReference.ArrayElementType\n  fullName: CodeTypeReference.ArrayElementType\n- uid: System.CodeDom.CodeTypeReference.ArrayRank\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: ArrayRank\n  nameWithType: CodeTypeReference.ArrayRank\n  fullName: CodeTypeReference.ArrayRank\n- uid: System.CodeDom.CodeTypeReference.BaseType\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: BaseType\n  nameWithType: CodeTypeReference.BaseType\n  fullName: CodeTypeReference.BaseType\n- uid: System.CodeDom.CodeTypeReference.Options\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: Options\n  nameWithType: CodeTypeReference.Options\n  fullName: CodeTypeReference.Options\n- uid: System.CodeDom.CodeTypeReference.TypeArguments\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: TypeArguments\n  nameWithType: CodeTypeReference.TypeArguments\n  fullName: CodeTypeReference.TypeArguments\n- uid: System.CodeDom.CodeTypeReferenceCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReferenceCollection\n  nameWithType: CodeTypeReferenceCollection\n  fullName: System.CodeDom.CodeTypeReferenceCollection\n- uid: System.CodeDom.CodeTypeReference.#ctor*\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference.CodeTypeReference\n  fullName: CodeTypeReference.CodeTypeReference\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n- uid: System.CodeDom.CodeTypeReference.ArrayElementType*\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: ArrayElementType\n  nameWithType: CodeTypeReference.ArrayElementType\n  fullName: CodeTypeReference.ArrayElementType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n- uid: System.CodeDom.CodeTypeReference.ArrayRank*\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: ArrayRank\n  nameWithType: CodeTypeReference.ArrayRank\n  fullName: CodeTypeReference.ArrayRank\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n- uid: System.CodeDom.CodeTypeReference.BaseType*\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: BaseType\n  nameWithType: CodeTypeReference.BaseType\n  fullName: CodeTypeReference.BaseType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n- uid: System.CodeDom.CodeTypeReference.Options*\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: Options\n  nameWithType: CodeTypeReference.Options\n  fullName: CodeTypeReference.Options\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n- uid: System.CodeDom.CodeTypeReference.TypeArguments*\n  parent: System.CodeDom.CodeTypeReference\n  isExternal: false\n  name: TypeArguments\n  nameWithType: CodeTypeReference.TypeArguments\n  fullName: CodeTypeReference.TypeArguments\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeTypeReference.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.CodeDom.CodeObject.UserData\n  parent: System.CodeDom.CodeObject\n  isExternal: false\n  name: UserData\n  nameWithType: CodeObject.UserData\n  fullName: CodeObject.UserData\n"}