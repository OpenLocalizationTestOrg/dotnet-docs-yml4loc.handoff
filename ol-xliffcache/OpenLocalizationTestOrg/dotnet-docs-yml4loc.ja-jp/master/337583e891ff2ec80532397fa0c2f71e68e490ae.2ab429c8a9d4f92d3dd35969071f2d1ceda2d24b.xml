{"nodes":[{"content":"Represents the security policy levels for the common language runtime. This class cannot be inherited.","nodes":[{"pos":[0,102],"content":"Represents the security policy levels for the common language runtime. This class cannot be inherited.","nodes":[{"content":"Represents the security policy levels for the common language runtime. This class cannot be inherited.","pos":[0,102],"nodes":[{"content":"Represents the security policy levels for the common language runtime.","pos":[0,70]},{"content":"This class cannot be inherited.","pos":[71,102]}]}]}],"pos":[2046,2149],"yaml":true},{"content":"> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime (CLR) is moving away from providing security policy for computers. We recommend that you use [Windows Software Restriction Policies (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101) or [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) as a replacement for CLR security policy. The information in this topic applies to the .NET Framework version 3.5 and earlier; it does not apply to the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later. For more information about this and other changes, see [Security Changes](~/docs/framework/security/security-changes.md).  \n  \n The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The following policy levels are implemented:  \n  \n1.  Enterprise: Security policy for all managed code in an enterprise.  \n  \n2.  Machine: Security policy for all managed code run on the computer.  \n  \n3.  User: Security policy for all managed code run by the user.  \n  \n4.  Application domain: Security policy for all managed code in an application.  \n  \n A policy level consists of a set of code groups organized into a single rooted tree (see <xref:System.Security.Policy.CodeGroup>), a set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group, and a list of fully-trusted assemblies.  \n  \n Use <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName> to enumerate the policy levels.","nodes":[{"pos":[2,711],"content":"[!IMPORTANT]\n Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime (CLR) is moving away from providing security policy for computers. We recommend that you use [Windows Software Restriction Policies (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101) or [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) as a replacement for CLR security policy. The information in this topic applies to the .NET Framework version 3.5 and earlier; it does not apply to the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later. For more information about this and other changes, see [Security Changes](~/docs/framework/security/security-changes.md).","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime (CLR) is moving away from providing security policy for computers. We recommend that you use [Windows Software Restriction Policies (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101) or [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) as a replacement for CLR security policy. The information in this topic applies to the .NET Framework version 3.5 and earlier; it does not apply to the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later. For more information about this and other changes, see [Security Changes](~/docs/framework/security/security-changes.md).","pos":[13,707],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the common language runtime (CLR) is moving away from providing security policy for computers.","pos":[1,170],"source":" Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime (CLR) is moving away from providing security policy for computers."},{"content":"We recommend that you use <bpt id=\"p1\">[</bpt>Windows Software Restriction Policies (SRP)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=178101)</ept> or <bpt id=\"p2\">[</bpt>AppLocker<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=178102)</ept> as a replacement for CLR security policy.","pos":[171,393],"source":" We recommend that you use [Windows Software Restriction Policies (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101) or [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) as a replacement for CLR security policy."},{"content":"The information in this topic applies to the .NET Framework version 3.5 and earlier; it does not apply to the <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and later.","pos":[394,572],"source":" The information in this topic applies to the .NET Framework version 3.5 and earlier; it does not apply to the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later."},{"content":"For more information about this and other changes, see <bpt id=\"p1\">[</bpt>Security Changes<ept id=\"p1\">](~/docs/framework/security/security-changes.md)</ept>.","pos":[573,694],"source":" For more information about this and other changes, see [Security Changes](~/docs/framework/security/security-changes.md)."}]}]},{"pos":[718,963],"content":"The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The following policy levels are implemented:","nodes":[{"content":"The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The following policy levels are implemented:","pos":[0,245],"nodes":[{"content":"The highest level of security policy is enterprise-wide.","pos":[0,56]},{"content":"Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels.","pos":[57,200]},{"content":"The following policy levels are implemented:","pos":[201,245]}]}]},{"pos":[973,1039],"content":"Enterprise: Security policy for all managed code in an enterprise.","nodes":[{"content":"Enterprise: Security policy for all managed code in an enterprise.","pos":[0,66]}]},{"pos":[1049,1115],"content":"Machine: Security policy for all managed code run on the computer.","nodes":[{"content":"Machine: Security policy for all managed code run on the computer.","pos":[0,66]}]},{"pos":[1125,1184],"content":"User: Security policy for all managed code run by the user.","nodes":[{"content":"User: Security policy for all managed code run by the user.","pos":[0,59]}]},{"pos":[1194,1269],"content":"Application domain: Security policy for all managed code in an application.","nodes":[{"content":"Application domain: Security policy for all managed code in an application.","pos":[0,75]}]},{"pos":[1276,1590],"content":"A policy level consists of a set of code groups organized into a single rooted tree (see <xref:System.Security.Policy.CodeGroup>), a set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group, and a list of fully-trusted assemblies.","nodes":[{"content":"A policy level consists of a set of code groups organized into a single rooted tree (see <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup&gt;</ph>), a set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group, and a list of fully-trusted assemblies.","pos":[0,314],"source":"A policy level consists of a set of code groups organized into a single rooted tree (see <xref:System.Security.Policy.CodeGroup>), a set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group, and a list of fully-trusted assemblies."}]},{"pos":[1597,1715],"content":"Use <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName> to enumerate the policy levels.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName&gt;</ph> to enumerate the policy levels.","pos":[0,118],"source":"Use <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName> to enumerate the policy levels."}]}],"pos":[2160,3893],"yaml":true,"extradata":"MT"},{"content":"Adds a <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> corresponding to the specified <xref href=\"System.Security.Policy.StrongName\"></xref> to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","nodes":[{"pos":[0,370],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> corresponding to the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;&lt;/xref&gt;</ph> to the list of <ph id=\"ph3\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","source":"Adds a <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> corresponding to the specified <xref href=\"System.Security.Policy.StrongName\"></xref> to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated."}],"pos":[5732,6103],"yaml":true},{"content":"The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"pos":[0,212],"content":"The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A&gt;</ph> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","pos":[0,212],"source":"The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions."}]}],"pos":[6114,6327],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.StrongName\"></xref> used to create the <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to add to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","nodes":[{"pos":[0,362],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;&lt;/xref&gt;</ph> used to create the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> to add to the list of <ph id=\"ph3\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","source":"The <xref href=\"System.Security.Policy.StrongName\"></xref> used to create the <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to add to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated."}],"pos":[6652,7015],"yaml":true},{"content":"The <code>sn</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sn</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>sn</code> parameter is `null`."}],"pos":[7200,7241],"yaml":true},{"content":"The <xref href=\"System.Security.Policy.StrongName\"></xref> specified by the <code>sn</code> parameter already has full trust.","nodes":[{"pos":[0,125],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">sn</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter already has full trust.","source":"The <xref href=\"System.Security.Policy.StrongName\"></xref> specified by the <code>sn</code> parameter already has full trust."}],"pos":[7335,7461],"yaml":true},{"content":"Adds the specified <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","nodes":[{"pos":[0,296],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> to the list of <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","source":"Adds the specified <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated."}],"pos":[8923,9220],"yaml":true},{"content":"The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"pos":[0,212],"content":"The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A&gt;</ph> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","pos":[0,212],"source":"The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions."}]}],"pos":[9231,9444],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to add to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","nodes":[{"pos":[0,288],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> to add to the list of <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.","source":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to add to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated."}],"pos":[9811,10100],"yaml":true},{"content":"The <code>snMC</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">snMC</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>snMC</code> parameter is `null`."}],"pos":[10285,10328],"yaml":true},{"content":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> specified by the <code>snMC</code> parameter already has full trust.","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">snMC</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter already has full trust.","source":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> specified by the <code>snMC</code> parameter already has full trust."}],"pos":[10422,10569],"yaml":true},{"content":"Adds a <xref href=\"System.Security.NamedPermissionSet\"></xref> to the current policy level.","nodes":[{"pos":[0,91],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> to the current policy level.","source":"Adds a <xref href=\"System.Security.NamedPermissionSet\"></xref> to the current policy level."}],"pos":[11950,12042],"yaml":true},{"content":"Named permission sets are scoped by policy level.","nodes":[{"pos":[0,49],"content":"Named permission sets are scoped by policy level.","nodes":[{"content":"Named permission sets are scoped by policy level.","pos":[0,49]}]}],"pos":[12053,12103],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> to add to the current policy level.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> to add to the current policy level.","source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> to add to the current policy level."}],"pos":[12306,12402],"yaml":true},{"content":"The <code>permSet</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">permSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>permSet</code> parameter is `null`."}],"pos":[12588,12634],"yaml":true},{"content":"The <code>permSet</code> parameter has the same name as an existing <xref href=\"System.Security.NamedPermissionSet\"></xref> in the <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.","nodes":[{"pos":[0,187],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">permSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter has the same name as an existing <ph id=\"ph2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph3\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>permSet</code> parameter has the same name as an existing <xref href=\"System.Security.NamedPermissionSet\"></xref> in the <xref href=\"System.Security.Policy.PolicyLevel\"></xref>."}],"pos":[12728,12916],"yaml":true},{"content":"Replaces a <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified <xref href=\"System.Security.PermissionSet\"></xref>.","nodes":[{"pos":[0,165],"content":"Replaces a <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> in the current policy level with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.PermissionSet\"&gt;&lt;/xref&gt;</ph>.","source":"Replaces a <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified <xref href=\"System.Security.PermissionSet\"></xref>."}],"pos":[14302,14468],"yaml":true},{"content":"The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to replace.","nodes":[{"pos":[0,83],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> to replace.","source":"The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to replace."}],"pos":[14685,14769],"yaml":true},{"content":"The <xref href=\"System.Security.PermissionSet\"></xref> that replaces the <xref href=\"System.Security.NamedPermissionSet\"></xref> specified by the <code>name</code> parameter.","nodes":[{"pos":[0,174],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;&lt;/xref&gt;</ph> that replaces the <ph id=\"ph2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The <xref href=\"System.Security.PermissionSet\"></xref> that replaces the <xref href=\"System.Security.NamedPermissionSet\"></xref> specified by the <code>name</code> parameter."}],"pos":[14845,15020],"yaml":true},{"content":"A copy of the <xref href=\"System.Security.NamedPermissionSet\"></xref> that was replaced.","nodes":[{"pos":[0,88],"content":"A copy of the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> that was replaced.","source":"A copy of the <xref href=\"System.Security.NamedPermissionSet\"></xref> that was replaced."}],"pos":[15098,15187],"yaml":true},{"content":"The <code>name</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>pSet</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter is `null`."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>pSet</code> parameter is `null`."}],"pos":[15376,15485],"yaml":true},{"content":"The <code>name</code> parameter is equal to the name of a reserved permission set.  \n  \n -or-  \n  \n The <xref href=\"System.Security.PermissionSet\"></xref> specified by the <code>pSet</code> parameter cannot be found.","nodes":[{"pos":[0,82],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is equal to the name of a reserved permission set.","source":"The <code>name</code> parameter is equal to the name of a reserved permission set."},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,216],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be found.","source":"The <xref href=\"System.Security.PermissionSet\"></xref> specified by the <code>pSet</code> parameter cannot be found."}],"pos":[15579,15804],"yaml":true},{"content":"Creates a new policy level for use at the application domain policy level.","nodes":[{"pos":[0,74],"content":"Creates a new policy level for use at the application domain policy level.","nodes":[{"content":"Creates a new policy level for use at the application domain policy level.","pos":[0,74]}]}],"pos":[16968,17043],"yaml":true},{"content":"This method creates a new <xref:System.Security.Policy.PolicyLevel> with the <xref:System.Security.Policy.PolicyLevel.Label%2A> \"AppDomain\". The new <xref:System.Security.Policy.PolicyLevel> will initially contain the same <xref:System.Security.NamedPermissionSet> objects as in the default computer policy, and will have a single root code group that grants `FullTrust` to all code.","nodes":[{"pos":[0,383],"content":"This method creates a new <xref:System.Security.Policy.PolicyLevel> with the <xref:System.Security.Policy.PolicyLevel.Label%2A> \"AppDomain\". The new <xref:System.Security.Policy.PolicyLevel> will initially contain the same <xref:System.Security.NamedPermissionSet> objects as in the default computer policy, and will have a single root code group that grants `FullTrust` to all code.","nodes":[{"content":"This method creates a new <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Security.Policy.PolicyLevel.Label%2A&gt;</ph> \"AppDomain\".","pos":[0,140],"source":"This method creates a new <xref:System.Security.Policy.PolicyLevel> with the <xref:System.Security.Policy.PolicyLevel.Label%2A> \"AppDomain\"."},{"content":"The new <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> will initially contain the same <ph id=\"ph2\">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> objects as in the default computer policy, and will have a single root code group that grants <ph id=\"ph3\">`FullTrust`</ph> to all code.","pos":[141,383],"source":" The new <xref:System.Security.Policy.PolicyLevel> will initially contain the same <xref:System.Security.NamedPermissionSet> objects as in the default computer policy, and will have a single root code group that grants `FullTrust` to all code."}]}],"pos":[17054,17438],"yaml":true,"extradata":"MT"},{"content":"The newly created <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.","nodes":[{"pos":[0,74],"content":"The newly created <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph>.","source":"The newly created <xref href=\"System.Security.Policy.PolicyLevel\"></xref>."}],"pos":[17632,17707],"yaml":true},{"content":"Reconstructs a security object with a given state from an XML encoding.","nodes":[{"pos":[0,71],"content":"Reconstructs a security object with a given state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a given state from an XML encoding.","pos":[0,71]}]}],"pos":[19023,19095],"yaml":true},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[19266,19326],"yaml":true},{"content":"The <code>e</code> parameter is `null`.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>e</code> parameter is `null`."}],"pos":[19498,19538],"yaml":true},{"content":"The <xref href=\"System.Security.SecurityElement\"></xref> specified by the <code>e</code> parameter is invalid.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is invalid.","source":"The <xref href=\"System.Security.SecurityElement\"></xref> specified by the <code>e</code> parameter is invalid."}],"pos":[19632,19743],"yaml":true},{"content":"Gets a list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy.","nodes":[{"pos":[0,207],"content":"Gets a list of <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy.","source":"Gets a list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy."}],"pos":[20897,21105],"yaml":true},{"content":"<xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> are granted full trust during security policy evaluation of assemblies not in the list, but are not automatically granted full trust when directly evaluated by the security policy system.  \n  \n The <xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> property is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"pos":[0,252],"content":"<xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> are granted full trust during security policy evaluation of assemblies not in the list, but are not automatically granted full trust when directly evaluated by the security policy system.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A&gt;</ph> are granted full trust during security policy evaluation of assemblies not in the list, but are not automatically granted full trust when directly evaluated by the security policy system.","pos":[0,252],"source":"<xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> are granted full trust during security policy evaluation of assemblies not in the list, but are not automatically granted full trust when directly evaluated by the security policy system."}]},{"pos":[259,472],"content":"The <xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> property is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A&gt;</ph> property is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","pos":[0,213],"source":"The <xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> property is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions."}]}],"pos":[21116,21593],"yaml":true,"extradata":"MT"},{"content":"A list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy. These assemblies are granted full trust during security policy evaluation of assemblies not in the list.","nodes":[{"pos":[0,307],"content":"A list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy. These assemblies are granted full trust during security policy evaluation of assemblies not in the list.","nodes":[{"content":"A list of <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy.","pos":[0,202],"source":"A list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy."},{"content":"These assemblies are granted full trust during security policy evaluation of assemblies not in the list.","pos":[203,307]}]}],"pos":[21880,22188],"yaml":true},{"content":"Returns the <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified name.","nodes":[{"pos":[0,120],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> in the current policy level with the specified name.","source":"Returns the <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified name."}],"pos":[23555,23676],"yaml":true},{"content":"The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to find.","nodes":[{"pos":[0,80],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> to find.","source":"The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to find."}],"pos":[23854,23935],"yaml":true},{"content":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified name, if found; otherwise, `null`.","nodes":[{"pos":[0,141],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> in the current policy level with the specified name, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified name, if found; otherwise, `null`."}],"pos":[24013,24155],"yaml":true},{"content":"The <code>name</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter is `null`."}],"pos":[24341,24384],"yaml":true},{"content":"Gets a descriptive label for the policy level.","nodes":[{"pos":[0,46],"content":"Gets a descriptive label for the policy level.","nodes":[{"content":"Gets a descriptive label for the policy level.","pos":[0,46]}]}],"pos":[25454,25501],"yaml":true},{"content":"The label is used to help the administrator identify the policy level.","nodes":[{"pos":[0,70],"content":"The label is used to help the administrator identify the policy level.","nodes":[{"content":"The label is used to help the administrator identify the policy level.","pos":[0,70]}]}],"pos":[25512,25583],"yaml":true,"extradata":"MT"},{"content":"The label associated with the policy level.","nodes":[{"pos":[0,43],"content":"The label associated with the policy level.","nodes":[{"content":"The label associated with the policy level.","pos":[0,43]}]}],"pos":[25692,25736],"yaml":true},{"content":"Gets a list of named permission sets defined for the policy level.","nodes":[{"pos":[0,66],"content":"Gets a list of named permission sets defined for the policy level.","nodes":[{"content":"Gets a list of named permission sets defined for the policy level.","pos":[0,66]}]}],"pos":[26961,27028],"yaml":true},{"content":"A list of named permission sets defined for the policy level.","nodes":[{"pos":[0,61],"content":"A list of named permission sets defined for the policy level.","nodes":[{"content":"A list of named permission sets defined for the policy level.","pos":[0,61]}]}],"pos":[27180,27242],"yaml":true},{"content":"Replaces the configuration file for this <xref href=\"System.Security.Policy.PolicyLevel\"></xref> with the last backup (reflecting the state of policy prior to the last time it was saved) and returns it to the state of the last save.","nodes":[{"pos":[0,232],"content":"Replaces the configuration file for this <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph> with the last backup (reflecting the state of policy prior to the last time it was saved) and returns it to the state of the last save.","source":"Replaces the configuration file for this <xref href=\"System.Security.Policy.PolicyLevel\"></xref> with the last backup (reflecting the state of policy prior to the last time it was saved) and returns it to the state of the last save."}],"pos":[28413,28646],"yaml":true},{"content":"This method does not make modifications to the current <xref:System.Security.Policy.PolicyLevel>. Instead, it updates the <xref:System.Security.Policy.PolicyLevel> object's file and the <xref:System.Security.Policy.PolicyLevel> that the security system uses to evaluate policy.  \n  \n This method is used by the caspol -recover option (see [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)).","nodes":[{"pos":[0,277],"content":"This method does not make modifications to the current <xref:System.Security.Policy.PolicyLevel>. Instead, it updates the <xref:System.Security.Policy.PolicyLevel> object's file and the <xref:System.Security.Policy.PolicyLevel> that the security system uses to evaluate policy.","nodes":[{"content":"This method does not make modifications to the current <xref:System.Security.Policy.PolicyLevel>. Instead, it updates the <xref:System.Security.Policy.PolicyLevel> object's file and the <xref:System.Security.Policy.PolicyLevel> that the security system uses to evaluate policy.","pos":[0,277],"nodes":[{"content":"This method does not make modifications to the current <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph>.","pos":[0,97],"source":"This method does not make modifications to the current <xref:System.Security.Policy.PolicyLevel>."},{"content":"Instead, it updates the <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> object's file and the <ph id=\"ph2\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> that the security system uses to evaluate policy.","pos":[98,277],"source":" Instead, it updates the <xref:System.Security.Policy.PolicyLevel> object's file and the <xref:System.Security.Policy.PolicyLevel> that the security system uses to evaluate policy."}]}]},{"pos":[284,459],"content":"This method is used by the caspol -recover option (see <bpt id=\"p1\">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id=\"p1\">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept>).","source":"This method is used by the caspol -recover option (see [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md))."}],"pos":[28657,29121],"yaml":true,"extradata":"MT"},{"content":"The policy level does not have a valid configuration file.","nodes":[{"pos":[0,58],"content":"The policy level does not have a valid configuration file.","nodes":[{"content":"The policy level does not have a valid configuration file.","pos":[0,58]}]}],"pos":[29379,29438],"yaml":true},{"content":"Removes an assembly with the specified <xref href=\"System.Security.Policy.StrongName\"></xref> from the list of assemblies the policy level uses to evaluate policy.","nodes":[{"pos":[0,163],"content":"Removes an assembly with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;&lt;/xref&gt;</ph> from the list of assemblies the policy level uses to evaluate policy.","source":"Removes an assembly with the specified <xref href=\"System.Security.Policy.StrongName\"></xref> from the list of assemblies the policy level uses to evaluate policy."}],"pos":[30755,30919],"yaml":true},{"content":"The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"pos":[0,215],"content":"The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A&gt;</ph> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","pos":[0,215],"source":"The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions."}]}],"pos":[30930,31146],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.StrongName\"></xref> of the assembly to remove from the list of assemblies used to evaluate policy.","nodes":[{"pos":[0,137],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;&lt;/xref&gt;</ph> of the assembly to remove from the list of assemblies used to evaluate policy.","source":"The <xref href=\"System.Security.Policy.StrongName\"></xref> of the assembly to remove from the list of assemblies used to evaluate policy."}],"pos":[31474,31612],"yaml":true},{"content":"The <code>sn</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sn</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>sn</code> parameter is `null`."}],"pos":[31800,31841],"yaml":true},{"content":"The assembly with the <xref href=\"System.Security.Policy.StrongName\"></xref> specified by the <code>sn</code> parameter does not have full trust.","nodes":[{"pos":[0,145],"content":"The assembly with the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongName\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">sn</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not have full trust.","source":"The assembly with the <xref href=\"System.Security.Policy.StrongName\"></xref> specified by the <code>sn</code> parameter does not have full trust."}],"pos":[31935,32081],"yaml":true},{"content":"Removes an assembly with the specified <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> from the list of assemblies the policy level uses to evaluate policy.","nodes":[{"pos":[0,182],"content":"Removes an assembly with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> from the list of assemblies the policy level uses to evaluate policy.","source":"Removes an assembly with the specified <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> from the list of assemblies the policy level uses to evaluate policy."}],"pos":[33561,33744],"yaml":true},{"content":"The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"pos":[0,215],"content":"The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A&gt;</ph> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.","pos":[0,215],"source":"The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions."}]}],"pos":[33755,33971],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> of the assembly to remove from the list of assemblies used to evaluate policy.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> of the assembly to remove from the list of assemblies used to evaluate policy.","source":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> of the assembly to remove from the list of assemblies used to evaluate policy."}],"pos":[34341,34498],"yaml":true},{"content":"The <code>snMC</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">snMC</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>snMC</code> parameter is `null`."}],"pos":[34686,34729],"yaml":true},{"content":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> specified by the <code>snMC</code> parameter does not have full trust.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.StrongNameMembershipCondition\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">snMC</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not have full trust.","source":"The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> specified by the <code>snMC</code> parameter does not have full trust."}],"pos":[34823,34972],"yaml":true},{"content":"Removes the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> from the current policy level.","nodes":[{"pos":[0,108],"content":"Removes the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> from the current policy level.","source":"Removes the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> from the current policy level."}],"pos":[36371,36480],"yaml":true},{"content":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> to remove from the current policy level.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> to remove from the current policy level.","source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> to remove from the current policy level."}],"pos":[36716,36817],"yaml":true},{"content":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> that was removed.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> that was removed.","source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> that was removed."}],"pos":[36895,36973],"yaml":true},{"content":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> specified by the <code>permSet</code> parameter was not found.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">permSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not found.","source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> specified by the <code>permSet</code> parameter was not found."}],"pos":[37154,37277],"yaml":true},{"content":"The <code>permSet</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">permSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>permSet</code> parameter is `null`."}],"pos":[37379,37425],"yaml":true},{"content":"Removes the <xref href=\"System.Security.NamedPermissionSet\"></xref> with the specified name from the current policy level.","nodes":[{"pos":[0,122],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> with the specified name from the current policy level.","source":"Removes the <xref href=\"System.Security.NamedPermissionSet\"></xref> with the specified name from the current policy level."}],"pos":[38676,38799],"yaml":true},{"content":"The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to remove.","nodes":[{"pos":[0,82],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to remove."}],"pos":[38980,39063],"yaml":true},{"content":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> that was removed.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> that was removed.","source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> that was removed."}],"pos":[39141,39219],"yaml":true},{"content":"The <code>name</code> parameter is equal to the name of a reserved permission set.  \n  \n -or-  \n  \n A <xref href=\"System.Security.NamedPermissionSet\"></xref> with the specified name cannot be found.","nodes":[{"pos":[0,82],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is equal to the name of a reserved permission set.","source":"The <code>name</code> parameter is equal to the name of a reserved permission set."},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,198],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> with the specified name cannot be found.","source":"A <xref href=\"System.Security.NamedPermissionSet\"></xref> with the specified name cannot be found."}],"pos":[39400,39607],"yaml":true},{"content":"The <code>name</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter is `null`."}],"pos":[39709,39752],"yaml":true},{"content":"Returns the current policy level to the default state.","nodes":[{"pos":[0,54],"content":"Returns the current policy level to the default state.","nodes":[{"content":"Returns the current policy level to the default state.","pos":[0,54]}]}],"pos":[40826,40881],"yaml":true},{"content":"The default state is different for each policy level.","nodes":[{"pos":[0,53],"content":"The default state is different for each policy level.","nodes":[{"content":"The default state is different for each policy level.","pos":[0,53]}]}],"pos":[40892,40946],"yaml":true,"extradata":"MT"},{"content":"Resolves policy based on evidence for the policy level, and returns the resulting <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.","nodes":[{"pos":[0,142],"content":"Resolves policy based on evidence for the policy level, and returns the resulting <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;&lt;/xref&gt;</ph>.","source":"Resolves policy based on evidence for the policy level, and returns the resulting <xref href=\"System.Security.Policy.PolicyStatement\"></xref>."}],"pos":[42290,42433],"yaml":true},{"content":"<xref:System.Security.Policy.PolicyLevel.Resolve%2A> is the basic policy evaluation operation for policy levels. Given a set of evidence as input, this method tests membership conditions of code groups starting at the root and working down as matched. The combination of permissions resulting from the matching code groups produces a <xref:System.Security.Policy.PolicyStatement> that is returned.  \n  \n In granting permissions to code, security policy uses the resolved policy statements for all applicable policy levels, together with the code request for permissions.","nodes":[{"pos":[0,397],"content":"<xref:System.Security.Policy.PolicyLevel.Resolve%2A> is the basic policy evaluation operation for policy levels. Given a set of evidence as input, this method tests membership conditions of code groups starting at the root and working down as matched. The combination of permissions resulting from the matching code groups produces a <xref:System.Security.Policy.PolicyStatement> that is returned.","nodes":[{"content":"<xref:System.Security.Policy.PolicyLevel.Resolve%2A> is the basic policy evaluation operation for policy levels. Given a set of evidence as input, this method tests membership conditions of code groups starting at the root and working down as matched. The combination of permissions resulting from the matching code groups produces a <xref:System.Security.Policy.PolicyStatement> that is returned.","pos":[0,397],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel.Resolve%2A&gt;</ph> is the basic policy evaluation operation for policy levels.","pos":[0,112],"source":"<xref:System.Security.Policy.PolicyLevel.Resolve%2A> is the basic policy evaluation operation for policy levels."},{"content":"Given a set of evidence as input, this method tests membership conditions of code groups starting at the root and working down as matched.","pos":[113,251]},{"content":"The combination of permissions resulting from the matching code groups produces a <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyStatement&gt;</ph> that is returned.","pos":[252,397],"source":" The combination of permissions resulting from the matching code groups produces a <xref:System.Security.Policy.PolicyStatement> that is returned."}]}]},{"pos":[404,570],"content":"In granting permissions to code, security policy uses the resolved policy statements for all applicable policy levels, together with the code request for permissions.","nodes":[{"content":"In granting permissions to code, security policy uses the resolved policy statements for all applicable policy levels, together with the code request for permissions.","pos":[0,166]}]}],"pos":[42444,43019],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.Evidence\"></xref> used to resolve the <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;&lt;/xref&gt;</ph> used to resolve the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Security.Policy.Evidence\"></xref> used to resolve the <xref href=\"System.Security.Policy.PolicyLevel\"></xref>."}],"pos":[43957,44091],"yaml":true},{"content":"The resulting <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.","nodes":[{"pos":[0,74],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.Security.Policy.PolicyStatement\"></xref>."}],"pos":[44173,44248],"yaml":true},{"content":"The policy level contains multiple matching code groups marked as exclusive.","nodes":[{"pos":[0,76],"content":"The policy level contains multiple matching code groups marked as exclusive.","nodes":[{"content":"The policy level contains multiple matching code groups marked as exclusive.","pos":[0,76]}]}],"pos":[44440,44517],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[44619,44666],"yaml":true},{"content":"Resolves policy at the policy level and returns the root of a code group tree that matches the evidence.","nodes":[{"pos":[0,104],"content":"Resolves policy at the policy level and returns the root of a code group tree that matches the evidence.","nodes":[{"content":"Resolves policy at the policy level and returns the root of a code group tree that matches the evidence.","pos":[0,104]}]}],"pos":[45983,46088],"yaml":true},{"content":"You can use this method to analyze the effect of the code groups in a policy level with respect to a certain set of evidence. For example, if the security policy is not granting an assembly the minimum code request permissions it needs, it can be difficult to tell by examination of the code groups exactly where the problem is.  \n  \n Since this method returns a code group that can have child code groups, it is possible for an administrator to examine the code group and its child code groups and determine which code groups match.","nodes":[{"pos":[0,328],"content":"You can use this method to analyze the effect of the code groups in a policy level with respect to a certain set of evidence. For example, if the security policy is not granting an assembly the minimum code request permissions it needs, it can be difficult to tell by examination of the code groups exactly where the problem is.","nodes":[{"content":"You can use this method to analyze the effect of the code groups in a policy level with respect to a certain set of evidence. For example, if the security policy is not granting an assembly the minimum code request permissions it needs, it can be difficult to tell by examination of the code groups exactly where the problem is.","pos":[0,328],"nodes":[{"content":"You can use this method to analyze the effect of the code groups in a policy level with respect to a certain set of evidence.","pos":[0,125]},{"content":"For example, if the security policy is not granting an assembly the minimum code request permissions it needs, it can be difficult to tell by examination of the code groups exactly where the problem is.","pos":[126,328]}]}]},{"pos":[335,533],"content":"Since this method returns a code group that can have child code groups, it is possible for an administrator to examine the code group and its child code groups and determine which code groups match.","nodes":[{"content":"Since this method returns a code group that can have child code groups, it is possible for an administrator to examine the code group and its child code groups and determine which code groups match.","pos":[0,198]}]}],"pos":[46099,46637],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.Evidence\"></xref> used to resolve policy.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;&lt;/xref&gt;</ph> used to resolve policy.","source":"The <xref href=\"System.Security.Policy.Evidence\"></xref> used to resolve policy."}],"pos":[46868,46949],"yaml":true},{"content":"A <xref href=\"System.Security.Policy.CodeGroup\"></xref> representing the root of a tree of code groups matching the specified evidence.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.CodeGroup\"&gt;&lt;/xref&gt;</ph> representing the root of a tree of code groups matching the specified evidence.","source":"A <xref href=\"System.Security.Policy.CodeGroup\"></xref> representing the root of a tree of code groups matching the specified evidence."}],"pos":[47025,47161],"yaml":true},{"content":"The policy level contains multiple matching code groups marked as exclusive.","nodes":[{"pos":[0,76],"content":"The policy level contains multiple matching code groups marked as exclusive.","nodes":[{"content":"The policy level contains multiple matching code groups marked as exclusive.","pos":[0,76]}]}],"pos":[47371,47448],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[47550,47597],"yaml":true},{"content":"Gets or sets the root code group for the policy level.","nodes":[{"pos":[0,54],"content":"Gets or sets the root code group for the policy level.","nodes":[{"content":"Gets or sets the root code group for the policy level.","pos":[0,54]}]}],"pos":[48715,48770],"yaml":true},{"content":"Every policy level has one root <xref:System.Security.Policy.CodeGroup>.","nodes":[{"pos":[0,72],"content":"Every policy level has one root <xref:System.Security.Policy.CodeGroup>.","nodes":[{"content":"Every policy level has one root <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup&gt;</ph>.","pos":[0,72],"source":"Every policy level has one root <xref:System.Security.Policy.CodeGroup>."}]}],"pos":[48781,48854],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of policy level code groups.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.CodeGroup\"&gt;&lt;/xref&gt;</ph> that is the root of the tree of policy level code groups.","source":"The <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of policy level code groups."}],"pos":[49021,49137],"yaml":true},{"content":"The value for <xref href=\"System.Security.Policy.PolicyLevel.RootCodeGroup\"></xref> is `null`.","nodes":[{"pos":[0,94],"content":"The value for <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel.RootCodeGroup\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The value for <xref href=\"System.Security.Policy.PolicyLevel.RootCodeGroup\"></xref> is `null`."}],"pos":[49315,49410],"yaml":true},{"content":"Gets the path where the policy file is stored.","nodes":[{"pos":[0,46],"content":"Gets the path where the policy file is stored.","nodes":[{"content":"Gets the path where the policy file is stored.","pos":[0,46]}]}],"pos":[50528,50575],"yaml":true},{"content":"The path where the policy file is stored, or `null` if the <xref href=\"System.Security.Policy.PolicyLevel\"></xref> does not have a storage location.","nodes":[{"pos":[0,148],"content":"The path where the policy file is stored, or <ph id=\"ph1\">`null`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph> does not have a storage location.","source":"The path where the policy file is stored, or `null` if the <xref href=\"System.Security.Policy.PolicyLevel\"></xref> does not have a storage location."}],"pos":[51403,51552],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,69],"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]}],"pos":[52705,52775],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[52941,53014],"yaml":true},{"content":"Gets the type of the policy level.","nodes":[{"pos":[0,34],"content":"Gets the type of the policy level.","nodes":[{"content":"Gets the type of the policy level.","pos":[0,34]}]}],"pos":[54149,54184],"yaml":true},{"content":"The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The policy levels in order are the following.  \n  \n1.  Enterprise  \n  \n2.  Machine  \n  \n3.  User  \n  \n4.  Application domain  \n  \n For more information, see <xref:System.Security.PolicyLevelType>.","nodes":[{"pos":[0,246],"content":"The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The policy levels in order are the following.","nodes":[{"content":"The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The policy levels in order are the following.","pos":[0,246],"nodes":[{"content":"The highest level of security policy is enterprise-wide.","pos":[0,56]},{"content":"Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels.","pos":[57,200]},{"content":"The policy levels in order are the following.","pos":[201,246]}]}]},{"pos":[256,266],"content":"Enterprise","nodes":[{"content":"Enterprise","pos":[0,10]}]},{"pos":[276,283],"content":"Machine","nodes":[{"content":"Machine","pos":[0,7]}]},{"pos":[293,297],"content":"User","nodes":[{"content":"User","pos":[0,4]}]},{"pos":[307,325],"content":"Application domain","nodes":[{"content":"Application domain","pos":[0,18]}]},{"pos":[332,397],"content":"For more information, see <xref:System.Security.PolicyLevelType>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Security.PolicyLevelType&gt;</ph>.","pos":[0,65],"source":"For more information, see <xref:System.Security.PolicyLevelType>."}]}],"pos":[54195,54605],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.PolicyLevelType\"></xref> values.","nodes":[{"pos":[0,71],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.PolicyLevelType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.PolicyLevelType\"></xref> values."}],"pos":[54823,54895],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.PolicyLevel\n  commentId: T:System.Security.Policy.PolicyLevel\n  id: PolicyLevel\n  children:\n  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)\n  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  - System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)\n  - System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)\n  - System.Security.Policy.PolicyLevel.CreateAppDomainLevel\n  - System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.PolicyLevel.FullTrustAssemblies\n  - System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)\n  - System.Security.Policy.PolicyLevel.Label\n  - System.Security.Policy.PolicyLevel.NamedPermissionSets\n  - System.Security.Policy.PolicyLevel.Recover\n  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)\n  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)\n  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)\n  - System.Security.Policy.PolicyLevel.Reset\n  - System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)\n  - System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  - System.Security.Policy.PolicyLevel.RootCodeGroup\n  - System.Security.Policy.PolicyLevel.StoreLocation\n  - System.Security.Policy.PolicyLevel.ToXml\n  - System.Security.Policy.PolicyLevel.Type\n  langs:\n  - csharp\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Represents the security policy levels for the common language runtime. This class cannot be inherited.\n  remarks: \"> [!IMPORTANT]\\n>  Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime (CLR) is moving away from providing security policy for computers. We recommend that you use [Windows Software Restriction Policies (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101) or [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) as a replacement for CLR security policy. The information in this topic applies to the .NET Framework version 3.5 and earlier; it does not apply to the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later. For more information about this and other changes, see [Security Changes](~/docs/framework/security/security-changes.md).  \\n  \\n The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The following policy levels are implemented:  \\n  \\n1.  Enterprise: Security policy for all managed code in an enterprise.  \\n  \\n2.  Machine: Security policy for all managed code run on the computer.  \\n  \\n3.  User: Security policy for all managed code run by the user.  \\n  \\n4.  Application domain: Security policy for all managed code in an application.  \\n  \\n A policy level consists of a set of code groups organized into a single rooted tree (see <xref:System.Security.Policy.CodeGroup>), a set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group, and a list of fully-trusted assemblies.  \\n  \\n Use <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName> to enumerate the policy levels.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class PolicyLevel\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)\n  commentId: M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)\n  id: AddFullTrustAssembly(System.Security.Policy.StrongName)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: AddFullTrustAssembly(StrongName)\n  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)\n  fullName: PolicyLevel.AddFullTrustAssembly(StrongName)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Adds a <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> corresponding to the specified <xref href=\"System.Security.Policy.StrongName\"></xref> to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.\n  remarks: The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.\n  syntax:\n    content: >-\n      [System.Obsolete(\"All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.\")]\n\n      public void AddFullTrustAssembly (System.Security.Policy.StrongName sn);\n    parameters:\n    - id: sn\n      type: System.Security.Policy.StrongName\n      description: The <xref href=\"System.Security.Policy.StrongName\"></xref> used to create the <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to add to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.\n  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>sn</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Security.Policy.StrongName\"></xref> specified by the <code>sn</code> parameter already has full trust.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  commentId: M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  id: AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: AddFullTrustAssembly(StrongNameMembershipCondition)\n  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)\n  fullName: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Adds the specified <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.\n  remarks: The <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.\n  syntax:\n    content: >-\n      [System.Obsolete(\"All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.\")]\n\n      public void AddFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);\n    parameters:\n    - id: snMC\n      type: System.Security.Policy.StrongNameMembershipCondition\n      description: The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> to add to the list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.\n  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>snMC</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> specified by the <code>snMC</code> parameter already has full trust.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)\n  commentId: M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)\n  id: AddNamedPermissionSet(System.Security.NamedPermissionSet)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: AddNamedPermissionSet(NamedPermissionSet)\n  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)\n  fullName: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Adds a <xref href=\"System.Security.NamedPermissionSet\"></xref> to the current policy level.\n  remarks: Named permission sets are scoped by policy level.\n  syntax:\n    content: public void AddNamedPermissionSet (System.Security.NamedPermissionSet permSet);\n    parameters:\n    - id: permSet\n      type: System.Security.NamedPermissionSet\n      description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> to add to the current policy level.\n  overload: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>permSet</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>permSet</code> parameter has the same name as an existing <xref href=\"System.Security.NamedPermissionSet\"></xref> in the <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)\n  commentId: M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)\n  id: ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: ChangeNamedPermissionSet(String, PermissionSet)\n  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String, PermissionSet)\n  fullName: PolicyLevel.ChangeNamedPermissionSet(String, PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Replaces a <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified <xref href=\"System.Security.PermissionSet\"></xref>.\n  syntax:\n    content: public System.Security.NamedPermissionSet ChangeNamedPermissionSet (string name, System.Security.PermissionSet pSet);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to replace.\n    - id: pSet\n      type: System.Security.PermissionSet\n      description: The <xref href=\"System.Security.PermissionSet\"></xref> that replaces the <xref href=\"System.Security.NamedPermissionSet\"></xref> specified by the <code>name</code> parameter.\n    return:\n      type: System.Security.NamedPermissionSet\n      description: A copy of the <xref href=\"System.Security.NamedPermissionSet\"></xref> that was replaced.\n  overload: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>name</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>pSet</code> parameter is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>name</code> parameter is equal to the name of a reserved permission set.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.PermissionSet\\\"></xref> specified by the <code>pSet</code> parameter cannot be found.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel\n  commentId: M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel\n  id: CreateAppDomainLevel\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: CreateAppDomainLevel()\n  nameWithType: PolicyLevel.CreateAppDomainLevel()\n  fullName: PolicyLevel.CreateAppDomainLevel()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Creates a new policy level for use at the application domain policy level.\n  remarks: This method creates a new <xref:System.Security.Policy.PolicyLevel> with the <xref:System.Security.Policy.PolicyLevel.Label%2A> \"AppDomain\". The new <xref:System.Security.Policy.PolicyLevel> will initially contain the same <xref:System.Security.NamedPermissionSet> objects as in the default computer policy, and will have a single root code group that grants `FullTrust` to all code.\n  syntax:\n    content: public static System.Security.Policy.PolicyLevel CreateAppDomainLevel ();\n    parameters: []\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: The newly created <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.\n  overload: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PolicyLevel.FromXml(SecurityElement)\n  fullName: PolicyLevel.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a given state from an XML encoding.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Policy.PolicyLevel.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>e</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Security.SecurityElement\"></xref> specified by the <code>e</code> parameter is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies\n  commentId: P:System.Security.Policy.PolicyLevel.FullTrustAssemblies\n  id: FullTrustAssemblies\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: FullTrustAssemblies\n  nameWithType: PolicyLevel.FullTrustAssemblies\n  fullName: PolicyLevel.FullTrustAssemblies\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets a list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy.\n  remarks: \"<xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> are granted full trust during security policy evaluation of assemblies not in the list, but are not automatically granted full trust when directly evaluated by the security policy system.  \\n  \\n The <xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> property is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.\")]\n\n      public System.Collections.IList FullTrustAssemblies { get; }\n    return:\n      type: System.Collections.IList\n      description: A list of <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy. These assemblies are granted full trust during security policy evaluation of assemblies not in the list.\n  overload: System.Security.Policy.PolicyLevel.FullTrustAssemblies*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)\n  commentId: M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)\n  id: GetNamedPermissionSet(System.String)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: GetNamedPermissionSet(String)\n  nameWithType: PolicyLevel.GetNamedPermissionSet(String)\n  fullName: PolicyLevel.GetNamedPermissionSet(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Returns the <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified name.\n  syntax:\n    content: public System.Security.NamedPermissionSet GetNamedPermissionSet (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to find.\n    return:\n      type: System.Security.NamedPermissionSet\n      description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> in the current policy level with the specified name, if found; otherwise, `null`.\n  overload: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.Label\n  commentId: P:System.Security.Policy.PolicyLevel.Label\n  id: Label\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: Label\n  nameWithType: PolicyLevel.Label\n  fullName: PolicyLevel.Label\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets a descriptive label for the policy level.\n  remarks: The label is used to help the administrator identify the policy level.\n  syntax:\n    content: public string Label { get; }\n    return:\n      type: System.String\n      description: The label associated with the policy level.\n  overload: System.Security.Policy.PolicyLevel.Label*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets\n  commentId: P:System.Security.Policy.PolicyLevel.NamedPermissionSets\n  id: NamedPermissionSets\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: NamedPermissionSets\n  nameWithType: PolicyLevel.NamedPermissionSets\n  fullName: PolicyLevel.NamedPermissionSets\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets a list of named permission sets defined for the policy level.\n  syntax:\n    content: public System.Collections.IList NamedPermissionSets { get; }\n    return:\n      type: System.Collections.IList\n      description: A list of named permission sets defined for the policy level.\n  overload: System.Security.Policy.PolicyLevel.NamedPermissionSets*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.Recover\n  commentId: M:System.Security.Policy.PolicyLevel.Recover\n  id: Recover\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: Recover()\n  nameWithType: PolicyLevel.Recover()\n  fullName: PolicyLevel.Recover()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Replaces the configuration file for this <xref href=\"System.Security.Policy.PolicyLevel\"></xref> with the last backup (reflecting the state of policy prior to the last time it was saved) and returns it to the state of the last save.\n  remarks: \"This method does not make modifications to the current <xref:System.Security.Policy.PolicyLevel>. Instead, it updates the <xref:System.Security.Policy.PolicyLevel> object's file and the <xref:System.Security.Policy.PolicyLevel> that the security system uses to evaluate policy.  \\n  \\n This method is used by the caspol -recover option (see [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)).\"\n  syntax:\n    content: public void Recover ();\n    parameters: []\n  overload: System.Security.Policy.PolicyLevel.Recover*\n  exceptions:\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: The policy level does not have a valid configuration file.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)\n  commentId: M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)\n  id: RemoveFullTrustAssembly(System.Security.Policy.StrongName)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: RemoveFullTrustAssembly(StrongName)\n  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)\n  fullName: PolicyLevel.RemoveFullTrustAssembly(StrongName)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Removes an assembly with the specified <xref href=\"System.Security.Policy.StrongName\"></xref> from the list of assemblies the policy level uses to evaluate policy.\n  remarks: The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.\n  syntax:\n    content: >-\n      [System.Obsolete(\"All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.\")]\n\n      public void RemoveFullTrustAssembly (System.Security.Policy.StrongName sn);\n    parameters:\n    - id: sn\n      type: System.Security.Policy.StrongName\n      description: The <xref href=\"System.Security.Policy.StrongName\"></xref> of the assembly to remove from the list of assemblies used to evaluate policy.\n  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>sn</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The assembly with the <xref href=\"System.Security.Policy.StrongName\"></xref> specified by the <code>sn</code> parameter does not have full trust.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  commentId: M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  id: RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)\n  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)\n  fullName: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Removes an assembly with the specified <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> from the list of assemblies the policy level uses to evaluate policy.\n  remarks: The <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A> method is not supported in version 2.0 or later of the .NET Framework because the list of full trust assemblies is not used in those versions.\n  syntax:\n    content: >-\n      [System.Obsolete(\"All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.\")]\n\n      public void RemoveFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);\n    parameters:\n    - id: snMC\n      type: System.Security.Policy.StrongNameMembershipCondition\n      description: The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> of the assembly to remove from the list of assemblies used to evaluate policy.\n  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>snMC</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Security.Policy.StrongNameMembershipCondition\"></xref> specified by the <code>snMC</code> parameter does not have full trust.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)\n  commentId: M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)\n  id: RemoveNamedPermissionSet(System.Security.NamedPermissionSet)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: RemoveNamedPermissionSet(NamedPermissionSet)\n  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)\n  fullName: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Removes the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> from the current policy level.\n  syntax:\n    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (System.Security.NamedPermissionSet permSet);\n    parameters:\n    - id: permSet\n      type: System.Security.NamedPermissionSet\n      description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> to remove from the current policy level.\n    return:\n      type: System.Security.NamedPermissionSet\n      description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> that was removed.\n  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> specified by the <code>permSet</code> parameter was not found.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>permSet</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)\n  commentId: M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)\n  id: RemoveNamedPermissionSet(System.String)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: RemoveNamedPermissionSet(String)\n  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)\n  fullName: PolicyLevel.RemoveNamedPermissionSet(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Removes the <xref href=\"System.Security.NamedPermissionSet\"></xref> with the specified name from the current policy level.\n  syntax:\n    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> to remove.\n    return:\n      type: System.Security.NamedPermissionSet\n      description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> that was removed.\n  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>name</code> parameter is equal to the name of a reserved permission set.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Security.NamedPermissionSet\\\"></xref> with the specified name cannot be found.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.Reset\n  commentId: M:System.Security.Policy.PolicyLevel.Reset\n  id: Reset\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: PolicyLevel.Reset()\n  fullName: PolicyLevel.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Returns the current policy level to the default state.\n  remarks: The default state is different for each policy level.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Security.Policy.PolicyLevel.Reset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)\n  id: Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: Resolve(Evidence)\n  nameWithType: PolicyLevel.Resolve(Evidence)\n  fullName: PolicyLevel.Resolve(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves policy based on evidence for the policy level, and returns the resulting <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.\n  remarks: \"<xref:System.Security.Policy.PolicyLevel.Resolve%2A> is the basic policy evaluation operation for policy levels. Given a set of evidence as input, this method tests membership conditions of code groups starting at the root and working down as matched. The combination of permissions resulting from the matching code groups produces a <xref:System.Security.Policy.PolicyStatement> that is returned.  \\n  \\n In granting permissions to code, security policy uses the resolved policy statements for all applicable policy levels, together with the code request for permissions.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.PolicyLevel.Resolve%2A> method. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \\n  \\n [!code-cpp[system.Security.policy.policylevel#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CPP/policylevel.cpp#13)]\\n [!code-csharp[system.Security.policy.policylevel#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CS/policylevel.cs#13)]\\n [!code-vb[system.Security.policy.policylevel#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.policy.policylevel/VB/policylevel.vb#13)]\"\n  syntax:\n    content: public System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The <xref href=\"System.Security.Policy.Evidence\"></xref> used to resolve the <xref href=\"System.Security.Policy.PolicyLevel\"></xref>.\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: The resulting <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.\n  overload: System.Security.Policy.PolicyLevel.Resolve*\n  exceptions:\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: The policy level contains multiple matching code groups marked as exclusive.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)\n  fullName: PolicyLevel.ResolveMatchingCodeGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves policy at the policy level and returns the root of a code group tree that matches the evidence.\n  remarks: \"You can use this method to analyze the effect of the code groups in a policy level with respect to a certain set of evidence. For example, if the security policy is not granting an assembly the minimum code request permissions it needs, it can be difficult to tell by examination of the code groups exactly where the problem is.  \\n  \\n Since this method returns a code group that can have child code groups, it is possible for an administrator to examine the code group and its child code groups and determine which code groups match.\"\n  syntax:\n    content: public System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The <xref href=\"System.Security.Policy.Evidence\"></xref> used to resolve policy.\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: A <xref href=\"System.Security.Policy.CodeGroup\"></xref> representing the root of a tree of code groups matching the specified evidence.\n  overload: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*\n  exceptions:\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: The policy level contains multiple matching code groups marked as exclusive.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.RootCodeGroup\n  commentId: P:System.Security.Policy.PolicyLevel.RootCodeGroup\n  id: RootCodeGroup\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: RootCodeGroup\n  nameWithType: PolicyLevel.RootCodeGroup\n  fullName: PolicyLevel.RootCodeGroup\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets the root code group for the policy level.\n  remarks: Every policy level has one root <xref:System.Security.Policy.CodeGroup>.\n  syntax:\n    content: public System.Security.Policy.CodeGroup RootCodeGroup { get; set; }\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: The <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of policy level code groups.\n  overload: System.Security.Policy.PolicyLevel.RootCodeGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for <xref href=\"System.Security.Policy.PolicyLevel.RootCodeGroup\"></xref> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.StoreLocation\n  commentId: P:System.Security.Policy.PolicyLevel.StoreLocation\n  id: StoreLocation\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: StoreLocation\n  nameWithType: PolicyLevel.StoreLocation\n  fullName: PolicyLevel.StoreLocation\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the path where the policy file is stored.\n  remarks: ''\n  example:\n  - \"The following code shows how to display the store location for a policy level. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \\n  \\n [!code-cpp[system.Security.policy.policylevel#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CPP/policylevel.cpp#15)]\\n [!code-csharp[system.Security.policy.policylevel#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CS/policylevel.cs#15)]\\n [!code-vb[system.Security.policy.policylevel#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.policy.policylevel/VB/policylevel.vb#15)]\"\n  syntax:\n    content: public string StoreLocation { get; }\n    return:\n      type: System.String\n      description: The path where the policy file is stored, or `null` if the <xref href=\"System.Security.Policy.PolicyLevel\"></xref> does not have a storage location.\n  overload: System.Security.Policy.PolicyLevel.StoreLocation*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.ToXml\n  commentId: M:System.Security.Policy.PolicyLevel.ToXml\n  id: ToXml\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PolicyLevel.ToXml()\n  fullName: PolicyLevel.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.PolicyLevel.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.PolicyLevel.Type\n  commentId: P:System.Security.Policy.PolicyLevel.Type\n  id: Type\n  parent: System.Security.Policy.PolicyLevel\n  langs:\n  - csharp\n  name: Type\n  nameWithType: PolicyLevel.Type\n  fullName: PolicyLevel.Type\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the type of the policy level.\n  remarks: \"The highest level of security policy is enterprise-wide. Successive lower levels of hierarchy represent further policy restrictions, but can never grant more permissions than allowed by higher levels. The policy levels in order are the following.  \\n  \\n1.  Enterprise  \\n  \\n2.  Machine  \\n  \\n3.  User  \\n  \\n4.  Application domain  \\n  \\n For more information, see <xref:System.Security.PolicyLevelType>.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Security.PolicyLevelType Type { get; }\n    return:\n      type: System.Security.PolicyLevelType\n      description: One of the <xref href=\"System.Security.PolicyLevelType\"></xref> values.\n  overload: System.Security.Policy.PolicyLevel.Type*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: AddFullTrustAssembly(StrongName)\n  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)\n  fullName: PolicyLevel.AddFullTrustAssembly(StrongName)\n- uid: System.Security.Policy.StrongName\n  parent: System.Security.Policy\n  isExternal: false\n  name: StrongName\n  nameWithType: StrongName\n  fullName: System.Security.Policy.StrongName\n- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: AddFullTrustAssembly(StrongNameMembershipCondition)\n  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)\n  fullName: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)\n- uid: System.Security.Policy.StrongNameMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: StrongNameMembershipCondition\n  nameWithType: StrongNameMembershipCondition\n  fullName: System.Security.Policy.StrongNameMembershipCondition\n- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: AddNamedPermissionSet(NamedPermissionSet)\n  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)\n  fullName: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)\n- uid: System.Security.NamedPermissionSet\n  parent: System.Security\n  isExternal: false\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet\n  fullName: System.Security.NamedPermissionSet\n- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: ChangeNamedPermissionSet(String, PermissionSet)\n  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String, PermissionSet)\n  fullName: PolicyLevel.ChangeNamedPermissionSet(String, PermissionSet)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: CreateAppDomainLevel()\n  nameWithType: PolicyLevel.CreateAppDomainLevel()\n  fullName: PolicyLevel.CreateAppDomainLevel()\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PolicyLevel.FromXml(SecurityElement)\n  fullName: PolicyLevel.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: FullTrustAssemblies\n  nameWithType: PolicyLevel.FullTrustAssemblies\n  fullName: PolicyLevel.FullTrustAssemblies\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: GetNamedPermissionSet(String)\n  nameWithType: PolicyLevel.GetNamedPermissionSet(String)\n  fullName: PolicyLevel.GetNamedPermissionSet(String)\n- uid: System.Security.Policy.PolicyLevel.Label\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Label\n  nameWithType: PolicyLevel.Label\n  fullName: PolicyLevel.Label\n- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: NamedPermissionSets\n  nameWithType: PolicyLevel.NamedPermissionSets\n  fullName: PolicyLevel.NamedPermissionSets\n- uid: System.Security.Policy.PolicyLevel.Recover\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Recover()\n  nameWithType: PolicyLevel.Recover()\n  fullName: PolicyLevel.Recover()\n- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RemoveFullTrustAssembly(StrongName)\n  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)\n  fullName: PolicyLevel.RemoveFullTrustAssembly(StrongName)\n- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)\n  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)\n  fullName: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)\n- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RemoveNamedPermissionSet(NamedPermissionSet)\n  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)\n  fullName: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)\n- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RemoveNamedPermissionSet(String)\n  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)\n  fullName: PolicyLevel.RemoveNamedPermissionSet(String)\n- uid: System.Security.Policy.PolicyLevel.Reset\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Reset()\n  nameWithType: PolicyLevel.Reset()\n  fullName: PolicyLevel.Reset()\n- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Resolve(Evidence)\n  nameWithType: PolicyLevel.Resolve(Evidence)\n  fullName: PolicyLevel.Resolve(Evidence)\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)\n  fullName: PolicyLevel.ResolveMatchingCodeGroups(Evidence)\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.PolicyLevel.RootCodeGroup\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RootCodeGroup\n  nameWithType: PolicyLevel.RootCodeGroup\n  fullName: PolicyLevel.RootCodeGroup\n- uid: System.Security.Policy.PolicyLevel.StoreLocation\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: StoreLocation\n  nameWithType: PolicyLevel.StoreLocation\n  fullName: PolicyLevel.StoreLocation\n- uid: System.Security.Policy.PolicyLevel.ToXml\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: ToXml()\n  nameWithType: PolicyLevel.ToXml()\n  fullName: PolicyLevel.ToXml()\n- uid: System.Security.Policy.PolicyLevel.Type\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Type\n  nameWithType: PolicyLevel.Type\n  fullName: PolicyLevel.Type\n- uid: System.Security.PolicyLevelType\n  parent: System.Security\n  isExternal: false\n  name: PolicyLevelType\n  nameWithType: PolicyLevelType\n  fullName: System.Security.PolicyLevelType\n- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: AddFullTrustAssembly\n  nameWithType: PolicyLevel.AddFullTrustAssembly\n  fullName: PolicyLevel.AddFullTrustAssembly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: AddNamedPermissionSet\n  nameWithType: PolicyLevel.AddNamedPermissionSet\n  fullName: PolicyLevel.AddNamedPermissionSet\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: ChangeNamedPermissionSet\n  nameWithType: PolicyLevel.ChangeNamedPermissionSet\n  fullName: PolicyLevel.ChangeNamedPermissionSet\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: CreateAppDomainLevel\n  nameWithType: PolicyLevel.CreateAppDomainLevel\n  fullName: PolicyLevel.CreateAppDomainLevel\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.FromXml*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: FromXml\n  nameWithType: PolicyLevel.FromXml\n  fullName: PolicyLevel.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: FullTrustAssemblies\n  nameWithType: PolicyLevel.FullTrustAssemblies\n  fullName: PolicyLevel.FullTrustAssemblies\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: GetNamedPermissionSet\n  nameWithType: PolicyLevel.GetNamedPermissionSet\n  fullName: PolicyLevel.GetNamedPermissionSet\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.Label*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Label\n  nameWithType: PolicyLevel.Label\n  fullName: PolicyLevel.Label\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: NamedPermissionSets\n  nameWithType: PolicyLevel.NamedPermissionSets\n  fullName: PolicyLevel.NamedPermissionSets\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.Recover*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Recover\n  nameWithType: PolicyLevel.Recover\n  fullName: PolicyLevel.Recover\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RemoveFullTrustAssembly\n  nameWithType: PolicyLevel.RemoveFullTrustAssembly\n  fullName: PolicyLevel.RemoveFullTrustAssembly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RemoveNamedPermissionSet\n  nameWithType: PolicyLevel.RemoveNamedPermissionSet\n  fullName: PolicyLevel.RemoveNamedPermissionSet\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.Reset*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Reset\n  nameWithType: PolicyLevel.Reset\n  fullName: PolicyLevel.Reset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.Resolve*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Resolve\n  nameWithType: PolicyLevel.Resolve\n  fullName: PolicyLevel.Resolve\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: ResolveMatchingCodeGroups\n  nameWithType: PolicyLevel.ResolveMatchingCodeGroups\n  fullName: PolicyLevel.ResolveMatchingCodeGroups\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.RootCodeGroup*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: RootCodeGroup\n  nameWithType: PolicyLevel.RootCodeGroup\n  fullName: PolicyLevel.RootCodeGroup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.StoreLocation*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: StoreLocation\n  nameWithType: PolicyLevel.StoreLocation\n  fullName: PolicyLevel.StoreLocation\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.ToXml*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: ToXml\n  nameWithType: PolicyLevel.ToXml\n  fullName: PolicyLevel.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Security.Policy.PolicyLevel.Type*\n  parent: System.Security.Policy.PolicyLevel\n  isExternal: false\n  name: Type\n  nameWithType: PolicyLevel.Type\n  fullName: PolicyLevel.Type\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/PolicyLevel.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}