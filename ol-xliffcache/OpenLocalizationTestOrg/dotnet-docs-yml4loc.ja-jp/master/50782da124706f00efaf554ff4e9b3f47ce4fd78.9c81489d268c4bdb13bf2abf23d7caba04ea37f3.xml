{"nodes":[{"content":"Specifies the event type when an event is raised for an <xref href=\"System.Xml.Linq.XObject\"></xref>.","nodes":[{"pos":[0,101],"content":"Specifies the event type when an event is raised for an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XObject\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies the event type when an event is raised for an <xref href=\"System.Xml.Linq.XObject\"></xref>."}],"pos":[550,652],"yaml":true},{"content":"This `enum` specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>.  \n  \n All operations that modify the XML tree break down to a series of primitives. There are four types of primitives. Two of the primitives (Add and Remove) act on collections. Two of them (Name and Value) act on instances. There is a corresponding event for each of these primitives.  \n  \n You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results. For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event. When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised. However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.","nodes":[{"pos":[0,99],"content":"This <ph id=\"ph1\">`enum`</ph> specifies the event type when an event is raised for an <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","source":"This `enum` specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>."},{"pos":[106,386],"content":"All operations that modify the XML tree break down to a series of primitives. There are four types of primitives. Two of the primitives (Add and Remove) act on collections. Two of them (Name and Value) act on instances. There is a corresponding event for each of these primitives.","nodes":[{"content":"All operations that modify the XML tree break down to a series of primitives. There are four types of primitives. Two of the primitives (Add and Remove) act on collections. Two of them (Name and Value) act on instances. There is a corresponding event for each of these primitives.","pos":[0,280],"nodes":[{"content":"All operations that modify the XML tree break down to a series of primitives.","pos":[0,77]},{"content":"There are four types of primitives.","pos":[78,113]},{"content":"Two of the primitives (Add and Remove) act on collections.","pos":[114,172]},{"content":"Two of them (Name and Value) act on instances.","pos":[173,219]},{"content":"There is a corresponding event for each of these primitives.","pos":[220,280]}]}]},{"pos":[393,1174],"content":"You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results. For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event. When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised. However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.","nodes":[{"content":"You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results. For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event. When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised. However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.","pos":[0,781],"nodes":[{"content":"You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.","pos":[0,129]},{"content":"For example, if you receive a <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> event, and while the event is being processed you remove the node from the tree, you might not receive the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> event.","pos":[130,352],"source":" For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event."},{"content":"When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.","pos":[353,623]},{"content":"However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.","pos":[624,781]}]}]}],"pos":[663,1844],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be added to an <xref href=\"System.Xml.Linq.XContainer\"></xref>.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XObject\"&gt;&lt;/xref&gt;</ph> has been or will be added to an <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XContainer\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be added to an <xref href=\"System.Xml.Linq.XContainer\"></xref>."}],"pos":[7199,7328],"yaml":true},{"content":"An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be renamed.","nodes":[{"pos":[0,76],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XObject\"&gt;&lt;/xref&gt;</ph> has been or will be renamed.","source":"An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be renamed."}],"pos":[8752,8829],"yaml":true},{"content":"An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be removed from an <xref href=\"System.Xml.Linq.XContainer\"></xref>.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XObject\"&gt;&lt;/xref&gt;</ph> has been or will be removed from an <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XContainer\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be removed from an <xref href=\"System.Xml.Linq.XContainer\"></xref>."}],"pos":[10266,10399],"yaml":true},{"content":"The value of an <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.","nodes":[{"pos":[0,234],"content":"The value of an <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.","nodes":[{"content":"The value of an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XObject\"&gt;&lt;/xref&gt;</ph> has been or will be changed.","pos":[0,89],"source":"The value of an <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be changed."},{"content":"In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.","pos":[90,234]}]}],"pos":[11832,12067],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Linq.XObjectChange\n  commentId: T:System.Xml.Linq.XObjectChange\n  id: XObjectChange\n  children:\n  - System.Xml.Linq.XObjectChange.Add\n  - System.Xml.Linq.XObjectChange.Name\n  - System.Xml.Linq.XObjectChange.Remove\n  - System.Xml.Linq.XObjectChange.Value\n  langs:\n  - csharp\n  name: XObjectChange\n  nameWithType: XObjectChange\n  fullName: System.Xml.Linq.XObjectChange\n  type: Enum\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Specifies the event type when an event is raised for an <xref href=\"System.Xml.Linq.XObject\"></xref>.\n  remarks: \"This `enum` specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>.  \\n  \\n All operations that modify the XML tree break down to a series of primitives. There are four types of primitives. Two of the primitives (Add and Remove) act on collections. Two of them (Name and Value) act on instances. There is a corresponding event for each of these primitives.  \\n  \\n You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results. For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event. When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised. However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.\"\n  example:\n  - \"The following example raises an event by adding an element to the tree.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\", \\\"content\\\");  \\nroot.Changing += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changing event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changing: \\\" + e.ObjectChange);  \\n    };  \\nroot.Changed += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changed event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changed: \\\" + e.ObjectChange);  \\n    };  \\nroot.Add(new XElement(\\\"Child\\\", \\\"child content\\\"));  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nChanging event raised  \\n  Sender: System.Xml.Linq.XElement  \\n  Changing: Add  \\nChanged event raised  \\n  Sender: System.Xml.Linq.XElement  \\n  Changed: Add  \\n```  \\n  \\n The following example raises an event by removing an element from the tree.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XElement(\\\"Child\\\", \\\"content\\\")  \\n);  \\nroot.Changing += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changing event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changing: \\\" + e.ObjectChange);  \\n    };  \\nroot.Changed += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changed event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changed: \\\" + e.ObjectChange);  \\n    };  \\nroot.Element(\\\"Child\\\").Remove();  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nChanging event raised  \\n  Sender: System.Xml.Linq.XElement  \\n  Changing: Remove  \\nChanged event raised  \\n  Sender: System.Xml.Linq.XElement  \\n  Changed: Remove  \\n```  \\n  \\n The following example raises an event by changing the name of an element.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\", \\\"content\\\");  \\nroot.Changing += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changing event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changing: \\\" + e.ObjectChange);  \\n    };  \\nroot.Changed += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changed event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changed: \\\" + e.ObjectChange);  \\n    };  \\nroot.Name = \\\"NewName\\\";  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nChanging event raised  \\n  Sender: System.Xml.Linq.XElement  \\n  Changing: Name  \\nChanged event raised  \\n  Sender: System.Xml.Linq.XElement  \\n  Changed: Name  \\n```  \\n  \\n The following example raises an event by setting the value of an attribute.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att\\\", \\\"att value\\\")  \\n);  \\nroot.Changing += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changing event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changing: \\\" + e.ObjectChange);  \\n    };  \\nroot.Changed += (sender, e) =>  \\n    {  \\n        Console.WriteLine(\\\"Changed event raised\\\");  \\n        Console.WriteLine(\\\"  Sender: \\\" + sender.GetType());  \\n        Console.WriteLine(\\\"  Changed: \\\" + e.ObjectChange);  \\n    };  \\nroot.FirstAttribute.Value = \\\"new contents\\\";  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nChanging event raised  \\n  Sender: System.Xml.Linq.XAttribute  \\n  Changing: Value  \\nChanged event raised  \\n  Sender: System.Xml.Linq.XAttribute  \\n  Changed: Value  \\n```\"\n  syntax:\n    content: public enum XObjectChange\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XObjectChange.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XObjectChange.Add\n  commentId: F:System.Xml.Linq.XObjectChange.Add\n  id: Add\n  parent: System.Xml.Linq.XObjectChange\n  langs:\n  - csharp\n  name: Add\n  nameWithType: XObjectChange.Add\n  fullName: XObjectChange.Add\n  type: Field\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be added to an <xref href=\"System.Xml.Linq.XContainer\"></xref>.\n  syntax:\n    content: Add\n    return:\n      type: System.Xml.Linq.XObjectChange\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XObjectChange.xml\n- uid: System.Xml.Linq.XObjectChange.Name\n  commentId: F:System.Xml.Linq.XObjectChange.Name\n  id: Name\n  parent: System.Xml.Linq.XObjectChange\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XObjectChange.Name\n  fullName: XObjectChange.Name\n  type: Field\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be renamed.\n  syntax:\n    content: Name\n    return:\n      type: System.Xml.Linq.XObjectChange\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XObjectChange.xml\n- uid: System.Xml.Linq.XObjectChange.Remove\n  commentId: F:System.Xml.Linq.XObjectChange.Remove\n  id: Remove\n  parent: System.Xml.Linq.XObjectChange\n  langs:\n  - csharp\n  name: Remove\n  nameWithType: XObjectChange.Remove\n  fullName: XObjectChange.Remove\n  type: Field\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: An <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be removed from an <xref href=\"System.Xml.Linq.XContainer\"></xref>.\n  syntax:\n    content: Remove\n    return:\n      type: System.Xml.Linq.XObjectChange\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XObjectChange.xml\n- uid: System.Xml.Linq.XObjectChange.Value\n  commentId: F:System.Xml.Linq.XObjectChange.Value\n  id: Value\n  parent: System.Xml.Linq.XObjectChange\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XObjectChange.Value\n  fullName: XObjectChange.Value\n  type: Field\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: The value of an <xref href=\"System.Xml.Linq.XObject\"></xref> has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.\n  syntax:\n    content: Value\n    return:\n      type: System.Xml.Linq.XObjectChange\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XObjectChange.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Xml.Linq.XObjectChange.Add\n  parent: System.Xml.Linq.XObjectChange\n  isExternal: false\n  name: Add\n  nameWithType: XObjectChange.Add\n  fullName: XObjectChange.Add\n- uid: System.Xml.Linq.XObjectChange\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObjectChange\n  nameWithType: XObjectChange\n  fullName: System.Xml.Linq.XObjectChange\n- uid: System.Xml.Linq.XObjectChange.Name\n  parent: System.Xml.Linq.XObjectChange\n  isExternal: false\n  name: Name\n  nameWithType: XObjectChange.Name\n  fullName: XObjectChange.Name\n- uid: System.Xml.Linq.XObjectChange.Remove\n  parent: System.Xml.Linq.XObjectChange\n  isExternal: false\n  name: Remove\n  nameWithType: XObjectChange.Remove\n  fullName: XObjectChange.Remove\n- uid: System.Xml.Linq.XObjectChange.Value\n  parent: System.Xml.Linq.XObjectChange\n  isExternal: false\n  name: Value\n  nameWithType: XObjectChange.Value\n  fullName: XObjectChange.Value\n"}