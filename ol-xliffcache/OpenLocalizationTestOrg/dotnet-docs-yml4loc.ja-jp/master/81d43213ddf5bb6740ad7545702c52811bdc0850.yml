### YamlMime:ManagedReference
items:
- uid: System.Globalization.NumberFormatInfo
  commentId: T:System.Globalization.NumberFormatInfo
  id: NumberFormatInfo
  children:
  - System.Globalization.NumberFormatInfo.#ctor
  - System.Globalization.NumberFormatInfo.Clone
  - System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - System.Globalization.NumberFormatInfo.CurrencySymbol
  - System.Globalization.NumberFormatInfo.CurrentInfo
  - System.Globalization.NumberFormatInfo.DigitSubstitution
  - System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  - System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  - System.Globalization.NumberFormatInfo.InvariantInfo
  - System.Globalization.NumberFormatInfo.IsReadOnly
  - System.Globalization.NumberFormatInfo.NaNSymbol
  - System.Globalization.NumberFormatInfo.NativeDigits
  - System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  - System.Globalization.NumberFormatInfo.NegativeSign
  - System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - System.Globalization.NumberFormatInfo.NumberGroupSizes
  - System.Globalization.NumberFormatInfo.NumberNegativePattern
  - System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - System.Globalization.NumberFormatInfo.PercentGroupSizes
  - System.Globalization.NumberFormatInfo.PercentNegativePattern
  - System.Globalization.NumberFormatInfo.PercentPositivePattern
  - System.Globalization.NumberFormatInfo.PercentSymbol
  - System.Globalization.NumberFormatInfo.PerMilleSymbol
  - System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - System.Globalization.NumberFormatInfo.PositiveSign
  - System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  langs:
  - csharp
  name: NumberFormatInfo
  nameWithType: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
  type: Class
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Provides culture-specific information for formatting and parsing numeric values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo> class contains culture-specific information that is used when you format and parse numeric values. This information includes the currency symbol, the decimal symbol, the group separator symbol, and the symbols for positive and negative signs.  \n  \n-   [Instantiating a NumberFormatInfo object](#Instantiating)  \n  \n    -   [For the current culture](#Instantiating_Current)  \n  \n    -   [For the invariant culture](#Instantiating_Invariant)  \n  \n    -   [For a specific culture](#Instantiating_Specific)  \n  \n    -   [For a neutral culture](#Instantiating_Neutral)  \n  \n-   [NumberFormatInfo and dynamic data](#dynamic)  \n  \n-   [IFormatProvider, NumberFormatInfo, and numeric formatting](#formatProvider)  \n  \n-   [Format strings and NumberFormatInfo properties](#properties)  \n  \n-   [Modifying NumberFormatInfo properties](#modifying)  \n  \n    -   [Modifying the currency symbol and pattern](#currency)  \n  \n    -   [Formatting a national identification number](#id)  \n  \n-   [Parsing numeric strings](#parsing)  \n  \n    -   [Parsing user strings](#ParseUser)  \n  \n    -   [Serializing and deserializing numeric data](#ParseSerial)  \n  \n<a name=\"Instantiating\"></a>   \n## Instantiating a NumberFormatInfo object  \n You can instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the current culture, the invariant culture, a specific culture, or a neutral culture.  \n  \n<a name=\"Instantiating_Current\"></a>   \n## Instantiating a NumberFormatInfo object for the current culture  \n You can instantiate a <xref:System.Globalization.NumberFormatInfo> object for the current thread culture in any of the following ways. In each case, the returned <xref:System.Globalization.NumberFormatInfo> object is read-only.  \n  \n-   By retrieving a <xref:System.Globalization.CultureInfo> object that represents the current thread culture from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property, and retrieving the <xref:System.Globalization.CultureInfo> object from its <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName> property.  \n  \n-   By retrieving the <xref:System.Globalization.NumberFormatInfo> object returned by the `static` (`Shared` in Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property.  \n  \n-   By calling the <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method with a <xref:System.Globalization.CultureInfo> object that represents the current culture.  \n  \n The following example uses these three ways to create <xref:System.Globalization.NumberFormatInfo> objects that represent the formatting conventions of the current culture. It also retrieves the value of the <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> property to illustrate that each object is read-only.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  \n  \n You can create a writable <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current thread culture in any of the following ways:  \n  \n-   By retrieving a <xref:System.Globalization.NumberFormatInfo> object in any of the ways illustrated in the previous code example, and calling the <xref:System.Globalization.NumberFormatInfo.Clone%2A> method on the returned <xref:System.Globalization.NumberFormatInfo> object. This creates a copy of the original <xref:System.Globalization.NumberFormatInfo> object, except that its <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> property is `false`.  \n  \n-   By calling the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName> method to create a <xref:System.Globalization.CultureInfo> object that represents the current culture, and then using its <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName> property to retrieve the <xref:System.Globalization.NumberFormatInfo> object.  \n  \n The following example illustrates these two ways of instantiating a <xref:System.Globalization.NumberFormatInfo> object, and displays the value of its <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> property to illustrate that the object is not read-only.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  \n  \n Note that the Windows operating system allows the user to override some of the <xref:System.Globalization.NumberFormatInfo> property values used in numeric formatting and parsing operations through the **Region and Language** item in Control Panel. For example, a user whose culture is English (United States) might choose to display currency values as 1.1 USD instead of the default of $1.1. The <xref:System.Globalization.NumberFormatInfo> objects retrieved in the ways discussed previously all reflect these user overrides. If this is undesirable, you can create a <xref:System.Globalization.NumberFormatInfo> object that does not reflect user overrides (and that is also read/write rather than read-only) by calling the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=fullName> constructor and supplying a value of `false` for the `useUserOverride` argument. The following example provides an illustration for a system whose current culture is English (United States) and whose currency symbol has been changed from the default of $ to USD.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  \n  \n If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=fullName> property is set to `true`, the properties <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>, <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName>, and <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=fullName> are also retrieved from the user settings. If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo> object (for example, if the selected calendar is not one of the calendars listed by the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property), the results of the methods and the values of the properties are undefined.  \n  \n<a name=\"Instantiating_Invariant\"></a>   \n## Instantiating a NumberFormatInfo object for the invariant culture  \n The invariant culture represents a culture that is culture-insensitive. It is based on the English language but not on any specific English-speaking country/region. Although the data of specific cultures can be dynamic and can change to reflect new cultural conventions or user preferences, the data of the invariant culture does not change. A <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the invariant culture can be used for formatting operations in which result strings should not vary by culture.  \n  \n You can instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the invariant culture in the following ways:  \n  \n-   By retrieving the value of the <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> property. The returned  <xref:System.Globalization.NumberFormatInfo> object is read-only.  \n  \n-   By retrieving the value of the <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName> property from the <xref:System.Globalization.CultureInfo> object that is returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> property. The returned <xref:System.Globalization.NumberFormatInfo> object is read-only.  \n  \n-   By calling the parameterless <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> class constructor. The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.  \n  \n The following example uses each of these methods to instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the invariant culture. It then indicates whether the object is read-only,  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  \n  \n<a name=\"Instantiating_Specific\"></a>   \n## Instantiating a NumberFormatInfo object for a specific culture  \n A specific culture represents a language that is spoken in a particular country/region. For example, en-US is a specific culture that represents the English language spoken in the United States, and en-CA is a specific culture that represents the English language spoken in Canada. You can instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of a specific culture in the following ways:  \n  \n-   By calling the <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=fullName> method and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property. The returned <xref:System.Globalization.NumberFormatInfo> object is read-only.  \n  \n-   By passing a <xref:System.Globalization.CultureInfo> object that represents the culture whose <xref:System.Globalization.NumberFormatInfo> object you want to retrieve to the static <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method. The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.  \n  \n-   By calling the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName> method and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property. The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.  \n  \n-   By calling one of the <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=fullName> class constructors and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property. The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.  \n  \n The following example uses these four ways to create a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of the Indonesian (Indonesia) culture. It also indicates whether each object is read-only.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  \n  \n<a name=\"Instantiating_Neutral\"></a>   \n## Instantiating a NumberFormatInfo object for a neutral culture  \n A neutral culture represents a culture or language that is independent of a country/region. It is typically the parent of one or more specific cultures. For example, fr is a neutral culture for the French language and the parent of the fr-FR culture. You create a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of a neutral culture in the same way that you create a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of a specific culture.  \n  \n> [!NOTE]\n>  In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, trying to retrieve a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of a neutral culture throws a <xref:System.NotSupportedException> exception.  \n  \n However, because it is independent of a specific country/region, a neutral culture lacks culture-specific formatting information. Rather than populating the <xref:System.Globalization.NumberFormatInfo> object with generic values, the .NET Framework returns a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of a specific culture that is a child of the neutral culture. For example, the <xref:System.Globalization.NumberFormatInfo> object for the neutral en culture reflects the formatting conventions of the en-US culture, and the <xref:System.Globalization.NumberFormatInfo> object for the fr culture reflects the formatting conventions of the fr-FR culture.  \n  \n You can use code like the following to determine which specific culture's formatting conventions each neutral culture represents.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  \n  \n<a name=\"dynamic\"></a>   \n## NumberFormatInfo and dynamic data  \n The culture-specific data for formatting numeric values provided by the <xref:System.Globalization.NumberFormatInfo> class is dynamic, just like the cultural data provided by the <xref:System.Globalization.CultureInfo> class. You should not make any assumptions about the stability of values for <xref:System.Globalization.NumberFormatInfo> objects that are associated with particular <xref:System.Globalization.CultureInfo> objects. Only the data provided by the invariant culture and its associated <xref:System.Globalization.NumberFormatInfo> object is stable. Other data can change between application sessions, or even within a single session, for the following reasons:  \n  \n-   **System updates.** Cultural preferences such as the currency symbol or currency formats change over time. When this happens, Windows Update includes changes to the <xref:System.Globalization.NumberFormatInfo> property value for a particular culture.  \n  \n-   **Replacement cultures.** The <xref:System.Globalization.CultureAndRegionInfoBuilder> class can be used to replace the data of an existing culture.  \n  \n-   **Cascading changes to property values.** A number of culture-related properties can change at run time, which, in turn, causes <xref:System.Globalization.NumberFormatInfo> data to change. For example, the current culture can be changed either programmatically or through user action. When this happens, the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property changes to an object associated with the current culture.  \n  \n-   **User preferences.** Users of your application might override some of the values associated with the current system culture through the region and language options in Control Panel. For example, users might choose a different currency symbol or a different decimal separator symbol. If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=fullName> property is set to `true` (its default value), the properties of the <xref:System.Globalization.NumberFormatInfo> object are also retrieved from the user settings.  \n  \n Starting with the .NET Framework 2.0, all user-overridable properties of a <xref:System.Globalization.NumberFormatInfo> object are initialized when the object is created. There is still a possibility of inconsistency, because neither object creation nor the user override process is atomic, and the relevant values may change during object creation. However, these inconsistencies should be extremely rare.  \n  \n You can control whether user overrides are reflected in <xref:System.Globalization.NumberFormatInfo> objects that represent the same culture as the current thread culture. The following table lists the ways in which a <xref:System.Globalization.NumberFormatInfo> object can be retrieved and indicates whether the resulting object reflects user overrides.  \n  \n|Source of CultureInfo and NumberFormatInfo object|Reflects user overrides|  \n|-------------------------------------------------------|-----------------------------|  \n|`CultureInfo.CurrentCulture.NumberFormat` property|Yes|  \n|<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=fullName> property|Yes|  \n|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName> method|Yes|  \n|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=fullName> method|No|  \n|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor|Yes|  \n|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=fullName> constructor|Depends on value of `useUserOverride` parameter|  \n  \n Unless there is a compelling reason to do otherwise, you should respect user overrides when you use the <xref:System.Globalization.NumberFormatInfo> object in client applications to format and parse user input or to display numeric data. For server applications or unattended applications, you should not respect user overrides. However, if you are using the <xref:System.Globalization.NumberFormatInfo> object either explicitly or implicitly to persist numeric data in string form, you should either use a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of the invariant culture, or you should specify a custom numeric format string that you use regardless of culture.  \n  \n<a name=\"formatProvider\"></a>   \n## IFormatProvider, NumberFormatInfo, and numeric formatting  \n A <xref:System.Globalization.NumberFormatInfo> object is used implicitly or explicitly in all numeric formatting operations. These include calls to the following methods:  \n  \n-   All numeric formatting methods, such as <xref:System.Int32.ToString%2A?displayProperty=fullName>, <xref:System.Double.ToString%2A?displayProperty=fullName>, and <xref:System.Convert.ToString%28System.Int32%29?displayProperty=fullName>.  \n  \n-   The major composite formatting method, <xref:System.String.Format%2A?displayProperty=fullName>.  \n  \n-   Other composite formatting methods, such as <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>.  \n  \n All numeric formatting operations make use of an <xref:System.IFormatProvider> implementation. The <xref:System.IFormatProvider> interface includes a single method, <xref:System.IFormatProvider.GetFormat%28System.Type%29>. This is a callback method that is passed a <xref:System.Type> object that represents the type needed to provide formatting information. The method is responsible for returning either an instance of that type or `null`, if it cannot provide an instance of the type. The .NET Framework provides two <xref:System.IFormatProvider> implementations for formatting numbers:  \n  \n-   The <xref:System.Globalization.CultureInfo> class, which represents a specific culture (or a specific language in a specific country/region). In a numeric formatting operation, the <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=fullName> method returns the <xref:System.Globalization.NumberFormatInfo> object associated with its <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName> property.  \n  \n-   The <xref:System.Globalization.NumberFormatInfo> class, which provides information about the formatting conventions of its associated culture. The <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=fullName> method returns an instance of itself.  \n  \n If an <xref:System.IFormatProvider> implementation is not provided to a formatting method explicitly, a <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property that represents the current thread culture is used.  \n  \n The following example illustrates the relationship between the <xref:System.IFormatProvider> interface and the <xref:System.Globalization.NumberFormatInfo> class in formatting operations by defining a custom <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method displays the type name of the object requested by the formatting operation. If the interface is requesting a <xref:System.Globalization.NumberFormatInfo> object, this method provides the <xref:System.Globalization.NumberFormatInfo> object for the current thread culture. As the output from the example shows, the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=fullName> method requests a <xref:System.Globalization.NumberFormatInfo> object to provide formatting information, whereas the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method requests <xref:System.Globalization.NumberFormatInfo> and <xref:System.Globalization.DateTimeFormatInfo> objects as well as an <xref:System.ICustomFormatter> implementation.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  \n  \n If an <xref:System.IFormatProvider> implementation is not explicitly provided in a numeric formatting method call, the method calls the `CultureInfo.CurrentCulture.GetFormat` method, which returns the <xref:System.Globalization.NumberFormatInfo> object that corresponds to the current thread culture.  \n  \n<a name=\"properties\"></a>   \n## Format strings and NumberFormatInfo properties  \n Every formatting operation uses either a standard or a custom numeric format string to produce a result string from a number. In some cases, the use of a format string to produce a result string is explicit, as in the following example. This code calls the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to convert a <xref:System.Decimal> value to a number of different string representations by using the formatting conventions of the en-US culture.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  \n  \n In other cases, the use of a format string is implicit. For example, in the following method calls to the default or parameterless <xref:System.Decimal.ToString?displayProperty=fullName> method, the value of the <xref:System.Decimal> instance is formatted by using the general (\"G\") format specifier and the conventions of the current culture, which in this case is the en-US culture.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  \n  \n Each standard numeric format string uses one or more <xref:System.Globalization.NumberFormatInfo> properties to determine the pattern or the symbols used in the result string. Similarly, each custom numeric format specifier except \"0\" and \"#\" insert symbols in the result string that are defined by <xref:System.Globalization.NumberFormatInfo> properties. The following table lists the standard and custom numeric format specifiers and their associated <xref:System.Globalization.NumberFormatInfo> properties.  To change the appearance of the result string for a particular culture, see the [Modifying NumberFormatInfo properties](#modifying) section. For details about the use of these format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n|Format specifier|Associated properties|  \n|----------------------|---------------------------|  \n|\"C\" or \"c\" (currency format specifier)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, to define the default number of fractional digits.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, to define the decimal separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, to define the group or thousands separator.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, to define the sizes of integral groups.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, to define the pattern of negative currency values.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, to define the pattern of positive currency values.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, to define the currency symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.|  \n|\"D\" or \"d\" (decimal format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.|  \n|\"E\" or \"e\" (exponential or scientific format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol in the mantissa and exponent.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol in the exponent.|  \n|\"F\" or \"f\" (fixed-point format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, to define the default number of fractional digits.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.|  \n|\"G\" or \"g\" (general format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol for result strings in exponential format.|  \n|\"N\" or \"n\" (number format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, to define the default number of fractional digits.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, to define the group separator (thousands) symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, to define the number of integral digits in a group.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, to define the format of negative values.|  \n|\"P\" or \"p\" (percent format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, to define the default number of fractional digits.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, to define the decimal separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, to define the group separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, to define the number of integral digits in a group.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, to define the placement of the percent symbol and the negative symbol for negative values.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, to define the placement of the percent symbol for positive values.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, to define the percent symbol.|  \n|\"R\" or \"r\" (round-trip format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol in an exponent.|  \n|\"X\" or \"x\" (hexadecimal format specifier)|None.|  \n|\".\" (decimal point custom format specifier)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.|  \n|\",\" (group separator custom format specifier)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, to define the group (thousands) separator symbol.|  \n|\"%\" (percentage placeholder custom format specifier)|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, to define the percent symbol.|  \n|\"‰\" (per mille placeholder custom format specifier)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, to define the per mille symbol.|  \n|\"E\" (exponential notation custom format specifier)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol in the mantissa and exponent.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol in the exponent.|  \n  \n Note that the <xref:System.Globalization.NumberFormatInfo> class includes a <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> property that specifies the base 10 digits used by a specific culture. However, the property is not used in formatting operations; only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used in the result string. In addition, for <xref:System.Single> and <xref:System.Double> values of `NaN`, `PositiveInfinity`, and `NegativeInfinity`, the result string consists exclusively of the symbols defined by the <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, and <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> properties, respectively.  \n  \n<a name=\"modifying\"></a>   \n## Modifying NumberFormatInfo properties  \n You can modify the properties of a <xref:System.Globalization.NumberFormatInfo> object to customize the result string produced in a numeric formatting operation. To do this:  \n  \n1.  Create a read/write copy of a <xref:System.Globalization.NumberFormatInfo> object whose formatting conventions you want to modify. For more information, see the [Instantiating a NumberFormatInfo object](#Instantiating) section.  \n  \n2.  Modify the property or properties that are used to produce the desired result string. For information about how formatting methods use <xref:System.Globalization.NumberFormatInfo> properties to define result strings, see the [Format strings and NumberFormatInfo properties](#properties) section.  \n  \n3.  Use the custom <xref:System.Globalization.NumberFormatInfo> object as the <xref:System.IFormatProvider> argument in calls to formatting methods.  \n  \n> [!NOTE]\n>  Instead of dynamically modifying a culture's property values each time an application is started, you can use the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to define either a custom culture (a culture that has a unique name and that supplements existing cultures) or a replacement culture (one that is used instead of a specific culture).  \n  \n The following sections provide some examples.  \n  \n<a name=\"currency\"></a>   \n### Modifying the currency symbol and pattern  \n The following example modifies a <xref:System.Globalization.NumberFormatInfo> object that that represents the formatting conventions of the en-US culture. It assigns the ISO-4217 currency symbol to the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> property and defines a pattern for currency values that consists of the currency symbol followed by a space and a numeric value.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  \n  \n<a name=\"id\"></a>   \n### Formatting a national identification number  \n Many national identification numbers consist exclusively of digits and so can easily be formatted by modifying the properties of a <xref:System.Globalization.NumberFormatInfo> object. For example, a social security number in the United States consists of 9 digits arranged as follows: `XXX-XX-XXXX`. The following example assumes that social security numbers are stored as integer values and formats them appropriately.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]\n [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  \n  \n<a name=\"parsing\"></a>   \n## Parsing numeric strings  \n Parsing involves converting the string representation of a number to a number. Each numeric type in the .NET Framework includes two overloaded parsing methods: `Parse` and `TryParse`. The `Parse` method converts a string to a number and throws an exception if the conversion fails. The `TryParse` method converts a string to a number, assigns the number to an `out` argument, and returns a <xref:System.Boolean> value that indicates whether the conversion succeeded.  \n  \n The parsing methods implicitly or explicitly use a <xref:System.Globalization.NumberStyles> enumeration value to determine what style elements (such as group separators, a decimal separator, or a currency symbol) can be present in a string if the parsing operation is to succeed. If a <xref:System.Globalization.NumberStyles> value is not provided in the method call, the default is a <xref:System.Globalization.NumberStyles> value that includes the <xref:System.Globalization.NumberStyles.Float> and <xref:System.Globalization.NumberStyles.AllowThousands> flags, which specifies that the parsed string can include group symbols, a decimal separator, a negative sign, and white-space characters, or it can be the string representation of a number in exponential notation.  \n  \n The parsing methods also implicitly or explicitly use a <xref:System.Globalization.NumberFormatInfo> object that defines the specific symbols and patterns that can occur in the string to be parsed. If a <xref:System.Globalization.NumberFormatInfo> object is not provided, the default is the <xref:System.Globalization.NumberFormatInfo> for the current thread culture. For more information about parsing, see the individual parsing methods, such as <xref:System.Int16.Parse%28System.String%29?displayProperty=fullName>, <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName>, <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName>, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName>, <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=fullName>, and <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=fullName>.  \n  \n The following example illustrates the culture-sensitive nature of parsing strings. It tries to parse a string that include thousands separators by using the conventions of the en-US, fr-FR, and invariant cultures. A string that includes the comma as a group separator and the period as a decimal separator fails to parse in the fr-FR culture, and a string with white space as a group separator and a comma as a decimal separator fails to parse in the en-US and invariant cultures.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  \n  \n Parsing generally occurs in two contexts:  \n  \n-   As an operation that is designed to convert user input into a numeric value.  \n  \n-   As an operation that is designed to round-trip a numeric value; that is, to deserialize a numeric value that was previously serialized as a string.  \n  \n The following sections discuss these two operations in greater detail.  \n  \n<a name=\"ParseUser\"></a>   \n### Parsing user strings  \n When you are parsing numeric strings input by the user, you should always instantiate a <xref:System.Globalization.NumberFormatInfo> object that reflects the user's cultural settings. For information about how to instantiate a <xref:System.Globalization.NumberFormatInfo> object that reflects user customizations, see the [NumberFormatInfo and dynamic data](#dynamic) section.  \n  \n The following example illustrates the difference between a parsing operation that reflects user cultural settings and one that does not. In this case, the default system culture is en-US, but the user has defined \",\" as the decimal symbol and \".\" as the group separator in Control Panel, **Region and Language**. Ordinarily, these symbols are reversed in the default en-US culture. When the user enters a string that reflects user settings, and the string is parsed by a <xref:System.Globalization.NumberFormatInfo> object that also reflects user settings (overrides), the parsing operation returns a correct result. However, when the string is parsed by a <xref:System.Globalization.NumberFormatInfo> object that reflects standard en-US cultural settings, it mistakes the comma symbol for a group separator and returns an incorrect result.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  \n  \n<a name=\"ParseSerial\"></a>   \n### Serializing and deserializing numeric data  \n When numeric data is serialized in string format and later deserialized and parsed, the strings should be generated and parsed by using the conventions of the invariant culture. The formatting and parsing operations should never reflect the conventions of a specific culture. If culture-specific settings are used, the portability of the data is strictly limited; it can be successfully deserialized only on a thread whose culture-specific settings are identical to those of the thread on which it was serialized. In some cases, this means that the data cannot even be successfully deserialized on the same system on which it was serialized.  \n  \n The following example illustrates what can happen when this principle is violated. Floating-point values in an array are converted to strings when the current thread uses the culture-specific settings of the en-US culture. The data is then parsed by a thread that uses the culture-specific settings of the en-GB culture. In this case, although each parsing operation succeeds, the data does not round-trip successfully and data corruption occurs. In other cases, a parsing operation could fail and a <xref:System.FormatException> exception could be thrown.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]\n [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]"
  example:
  - "The following example shows how to retrieve a <xref:System.Globalization.NumberFormatInfo> object for a corresponding <xref:System.Globalization.CultureInfo> object, and use the retrieved object to query number formatting information for the particular culture.  \n  \n [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]\n [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]\n [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NumberFormatInfo : ICloneable, IFormatProvider
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.IFormatProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.#ctor
  commentId: M:System.Globalization.NumberFormatInfo.#ctor
  id: '#ctor'
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NumberFormatInfo()
  nameWithType: NumberFormatInfo.NumberFormatInfo()
  fullName: NumberFormatInfo.NumberFormatInfo()
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new writable instance of the <xref href="System.Globalization.NumberFormatInfo"></xref> class that is culture-independent (invariant).
  remarks: The properties of the new instance can be modified if your application needs user-defined formatting.
  syntax:
    content: public NumberFormatInfo ();
    parameters: []
  overload: System.Globalization.NumberFormatInfo.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.Clone
  commentId: M:System.Globalization.NumberFormatInfo.Clone
  id: Clone
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: Clone()
  nameWithType: NumberFormatInfo.Clone()
  fullName: NumberFormatInfo.Clone()
  type: Method
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Creates a shallow copy of the <xref href="System.Globalization.NumberFormatInfo"></xref> object.
  remarks: "The clone is writable even if the original <xref:System.Globalization.NumberFormatInfo> object is read-only. Therefore, the properties of the clone can be modified with user-defined patterns.  \n  \n A shallow copy of an object is a copy of the object only. If the object contains references to other objects, the shallow copy will not create copies of the referred objects. It will refer to the original objects instead. On the other hand, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. In the case of a <xref:System.Globalization.NumberFormatInfo> object, a shallow copy is sufficient for copying all instance properties, because all properties that return object references are `static` (`Shared` in Visual Basic)."
  example:
  - "The following example uses the <xref:System.Globalization.NumberFormatInfo.Clone%2A> method to create a read/write copy of a <xref:System.Globalization.NumberFormatInfo> object that represents the numeric formatting conventions of the current thread culture.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: A new object copied from the original <xref href="System.Globalization.NumberFormatInfo"></xref> object.
  overload: System.Globalization.NumberFormatInfo.Clone*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  id: CurrencyDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencyDecimalDigits
  nameWithType: NumberFormatInfo.CurrencyDecimalDigits
  fullName: NumberFormatInfo.CurrencyDecimalDigits
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of decimal places to use in currency values.
  remarks: The <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property is used with the "C" standard format string without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property.  \n  \n [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]\n [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]\n [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]"
  syntax:
    content: public int CurrencyDecimalDigits { get; set; }
    return:
      type: System.Int32
      description: The number of decimal places to use in currency values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 2.
  overload: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 99.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  id: CurrencyDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencyDecimalSeparator
  nameWithType: NumberFormatInfo.CurrencyDecimalSeparator
  fullName: NumberFormatInfo.CurrencyDecimalSeparator
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string to use as the decimal separator in currency values.
  remarks: "The initial value of this property is derived from the settings in the **Region and Language** item in Control Panel.  \n  \n The <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> property is used with the \"C\" standard format string to define the symbol that separates integral from fractional digits. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> property.  \n  \n [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]\n [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]\n [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]"
  syntax:
    content: public string CurrencyDecimalSeparator { get; set; }
    return:
      type: System.String
      description: The string to use as the decimal separator in currency values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is ".".
  overload: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The property is being set to an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  id: CurrencyGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencyGroupSeparator
  nameWithType: NumberFormatInfo.CurrencyGroupSeparator
  fullName: NumberFormatInfo.CurrencyGroupSeparator
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that separates groups of digits to the left of the decimal in currency values.
  remarks: "The initial value of this property is derived from the settings in the **Regional and Language** item in Control Panel.  \n  \n The <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> property is used with the \"C\" standard format string to define the symbol that separates groups of integral digits. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> property.  \n  \n [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]\n [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]\n [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]"
  syntax:
    content: public string CurrencyGroupSeparator { get; set; }
    return:
      type: System.String
      description: The string that separates groups of digits to the left of the decimal in currency values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is ",".
  overload: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  id: CurrencyGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencyGroupSizes
  nameWithType: NumberFormatInfo.CurrencyGroupSizes
  fullName: NumberFormatInfo.CurrencyGroupSizes
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of digits in each group to the left of the decimal in currency values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> property is used with the \"C\" standard format string to define the number of digits that appear in integral groups. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.  \n  \n The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.  \n  \n For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to \"$55,55555,55555,55555,4444,333.00\". If the array contains { 3, 4, 0 }, the digits are grouped similar to \"$55555555555555555,4444,333.00\"."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> property.  \n  \n [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]\n [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]\n [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]"
  syntax:
    content: public int[] CurrencyGroupSizes { get; set; }
    return:
      type: System.Int32[]
      description: The number of digits in each group to the left of the decimal in currency values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is a one-dimensional array with only one element, which is set to 3.
  overload: System.Globalization.NumberFormatInfo.CurrencyGroupSizes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property is being set and the array contains an entry that is less than 0 or greater than 9.  \n  \n -or-  \n  \n The property is being set and the array contains an entry, other than the last entry, that is set to 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  id: CurrencyNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencyNegativePattern
  nameWithType: NumberFormatInfo.CurrencyNegativePattern
  fullName: NumberFormatInfo.CurrencyNegativePattern
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the format pattern for negative currency values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> property is used with the \"C\" standard format string to define the pattern of negative currency values. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). This property has one of the values in the following table. The symbol \"$\" is the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, the symbol \"-\" is the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, and `n` is a number.  \n  \n|Value|Associated pattern|  \n|-----------|------------------------|  \n|0|($n)|  \n|1|-$n|  \n|2|$-n|  \n|3|$n-|  \n|4|(n$)|  \n|5|-n$|  \n|6|n-$|  \n|7|n$-|  \n|8|-n $|  \n|9|-$ n|  \n|10|n $-|  \n|11|$ n-|  \n|12|$ -n|  \n|13|n- $|  \n|14|($ n)|  \n|15|(n $)|"
  example:
  - "The following example shows how the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> property defines the format of negative currency values.  It retrieves all the specific cultures that are defined on the host computer and displays each culture's <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> property value, its associated pattern, and a number formatted as a currency value.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]"
  syntax:
    content: public int CurrencyNegativePattern { get; set; }
    return:
      type: System.Int32
      description: The format pattern for negative currency values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 0, which represents "($n)", where "$" is the <xref href="System.Globalization.NumberFormatInfo.CurrencySymbol"></xref> and <code>n</code> is a number.
  overload: System.Globalization.NumberFormatInfo.CurrencyNegativePattern*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 15.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  id: CurrencyPositivePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencyPositivePattern
  nameWithType: NumberFormatInfo.CurrencyPositivePattern
  fullName: NumberFormatInfo.CurrencyPositivePattern
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the format pattern for positive currency values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property is used with the \"C\" standard format string to define pattern of positive currency values. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). This property has one of the values in the following table. The symbol \"$\" is the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> and `n` is a number.  \n  \n|Value|Associated pattern|  \n|-----------|------------------------|  \n|0|$n|  \n|1|n$|  \n|2|$ n|  \n|3|n $|  \n  \n Note that the pattern does not support a positive sign."
  syntax:
    content: public int CurrencyPositivePattern { get; set; }
    return:
      type: System.Int32
      description: The format pattern for positive currency values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 0, which represents "$n", where "$" is the <xref href="System.Globalization.NumberFormatInfo.CurrencySymbol"></xref> and <code>n</code> is a number.
  overload: System.Globalization.NumberFormatInfo.CurrencyPositivePattern*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 3.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrencySymbol
  commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  id: CurrencySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrencySymbol
  nameWithType: NumberFormatInfo.CurrencySymbol
  fullName: NumberFormatInfo.CurrencySymbol
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string to use as the currency symbol.
  remarks: The string assigned to the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> property is included in the result string when a numeric value is formatted with the "C" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md).
  example:
  - "The following example displays the currency symbol for the current culture and uses the \"C\" standard numeric format string to format a currency value.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]"
  syntax:
    content: public string CurrencySymbol { get; set; }
    return:
      type: System.String
      description: The string to use as the currency symbol. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "¤".
  overload: System.Globalization.NumberFormatInfo.CurrencySymbol*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.CurrentInfo
  commentId: P:System.Globalization.NumberFormatInfo.CurrentInfo
  id: CurrentInfo
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: CurrentInfo
  nameWithType: NumberFormatInfo.CurrentInfo
  fullName: NumberFormatInfo.CurrentInfo
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets a read-only <xref href="System.Globalization.NumberFormatInfo"></xref> that formats values based on the current culture.
  remarks: Retrieving a <xref:System.Globalization.NumberFormatInfo> object from the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property is equivalent to retrieving a <xref:System.Globalization.NumberFormatInfo> object from the `CultureInfo.CurrentCulture.NumberFormat` property.
  example:
  - "The following example shows that the objects returned by the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> and   `CultureInfo.CurrentCulture.NumberFormat` properties are identical. It then uses reflection to display the property values of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property on a system whose current culture is en-US.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]"
  syntax:
    content: public static System.Globalization.NumberFormatInfo CurrentInfo { get; }
    return:
      type: System.Globalization.NumberFormatInfo
      description: A read-only <xref href="System.Globalization.NumberFormatInfo"></xref> based on the culture of the current thread.
  overload: System.Globalization.NumberFormatInfo.CurrentInfo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.DigitSubstitution
  commentId: P:System.Globalization.NumberFormatInfo.DigitSubstitution
  id: DigitSubstitution
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: DigitSubstitution
  nameWithType: NumberFormatInfo.DigitSubstitution
  fullName: NumberFormatInfo.DigitSubstitution
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets a value that specifies how the graphical user interface displays the shape of a digit.
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> property is reserved for future use. Currently, it is not used in either parsing or formatting operations for the current <xref:System.Globalization.NumberFormatInfo> object.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public System.Globalization.DigitShapes DigitSubstitution { get; set; }
    return:
      type: System.Globalization.DigitShapes
      description: One of the enumeration values that specifies the culture-specific digit shape.
  overload: System.Globalization.NumberFormatInfo.DigitSubstitution*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The value in a set operation is not a valid <xref href="System.Globalization.DigitShapes"></xref> value.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  commentId: M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  id: GetFormat(System.Type)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: GetFormat(Type)
  nameWithType: NumberFormatInfo.GetFormat(Type)
  fullName: NumberFormatInfo.GetFormat(Type)
  type: Method
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets an object of the specified type that provides a number formatting service.
  remarks: The `Format(String, IFormatProvider)` methods supported by the base data types invoke this method when the current <xref:System.Globalization.NumberFormatInfo> is passed as the <xref:System.IFormatProvider> parameter. This method implements <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName>.
  syntax:
    content: public object GetFormat (Type formatType);
    parameters:
    - id: formatType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the required formatting service.
    return:
      type: System.Object
      description: The current <xref href="System.Globalization.NumberFormatInfo"></xref>, if <code>formatType</code> is the same as the type of the current <xref href="System.Globalization.NumberFormatInfo"></xref>; otherwise, `null`.
  overload: System.Globalization.NumberFormatInfo.GetFormat*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  commentId: M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  id: GetInstance(System.IFormatProvider)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: GetInstance(IFormatProvider)
  nameWithType: NumberFormatInfo.GetInstance(IFormatProvider)
  fullName: NumberFormatInfo.GetInstance(IFormatProvider)
  type: Method
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the <xref href="System.Globalization.NumberFormatInfo"></xref> associated with the specified <xref href="System.IFormatProvider"></xref>.
  remarks: "This method uses the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method of `formatProvider` using <xref:System.Globalization.NumberFormatInfo> as the Type parameter. If `formatProvider` is `null` or if <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> returns `null`, this method returns <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  \n  \n Your application gets a <xref:System.Globalization.NumberFormatInfo> object for a specific culture using one of the following methods:  \n  \n-   Through the <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName> property.  \n  \n-   Through the <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method where `provider` is a <xref:System.Globalization.CultureInfo>.  \n  \n A <xref:System.Globalization.NumberFormatInfo> object is created only for the invariant culture or for specific cultures, not for neutral cultures. For more information about the invariant culture, specific cultures, and neutral cultures, see the <xref:System.Globalization.CultureInfo> class."
  syntax:
    content: public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "The <xref href=\"System.IFormatProvider\"></xref> used to get the <xref href=\"System.Globalization.NumberFormatInfo\"></xref>.  \n  \n -or-  \n  \n `null` to get <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\"></xref>."
    return:
      type: System.Globalization.NumberFormatInfo
      description: The <xref href="System.Globalization.NumberFormatInfo"></xref> associated with the specified <xref href="System.IFormatProvider"></xref>.
  overload: System.Globalization.NumberFormatInfo.GetInstance*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.InvariantInfo
  commentId: P:System.Globalization.NumberFormatInfo.InvariantInfo
  id: InvariantInfo
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: InvariantInfo
  nameWithType: NumberFormatInfo.InvariantInfo
  fullName: NumberFormatInfo.InvariantInfo
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets a read-only <xref href="System.Globalization.NumberFormatInfo"></xref> object that is culture-independent (invariant).
  remarks: This <xref:System.Globalization.NumberFormatInfo> object returned by this property does not change, regardless of the current culture. It represents the formatting conventions of the invariant culture, which is a culture associated with the English language but not with any country/region. The invariant culture is used in formatting operations that are culture-independent or that produce result strings suitable for display across multiple cultures.
  example:
  - "The following example displays the default property values of the <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>.  \n  \n [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]\n [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]"
  syntax:
    content: public static System.Globalization.NumberFormatInfo InvariantInfo { get; }
    return:
      type: System.Globalization.NumberFormatInfo
      description: A read-only  object that is culture-independent (invariant).
  overload: System.Globalization.NumberFormatInfo.InvariantInfo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.IsReadOnly
  commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  id: IsReadOnly
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: NumberFormatInfo.IsReadOnly
  fullName: NumberFormatInfo.IsReadOnly
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets a value that indicates whether this <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  remarks: "Attempting to perform an assignment to a property of a read-only <xref:System.Globalization.NumberFormatInfo> causes an <xref:System.InvalidOperationException>.  \n  \n You can call the <xref:System.Globalization.NumberFormatInfo.Clone%2A> method to create a read/write <xref:System.Globalization.NumberFormatInfo> object from a read-only object, as the following example illustrates.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Globalization.NumberFormatInfo"></xref> is read-only; otherwise, `false`.'
  overload: System.Globalization.NumberFormatInfo.IsReadOnly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NaNSymbol
  commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  id: NaNSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NaNSymbol
  nameWithType: NumberFormatInfo.NaNSymbol
  fullName: NumberFormatInfo.NaNSymbol
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that represents the IEEE NaN (not a number) value.
  remarks: For more information on NaN values, see <xref:System.Double> or <xref:System.Single>.
  syntax:
    content: public string NaNSymbol { get; set; }
    return:
      type: System.String
      description: The string that represents the IEEE NaN (not a number) value. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "NaN".
  overload: System.Globalization.NumberFormatInfo.NaNSymbol*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NativeDigits
  commentId: P:System.Globalization.NumberFormatInfo.NativeDigits
  id: NativeDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NativeDigits
  nameWithType: NumberFormatInfo.NativeDigits
  fullName: NumberFormatInfo.NativeDigits
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets a string array of native digits equivalent to the Western digits 0 through 9.
  remarks: >-
    > [!IMPORTANT]

    >  The character set that is specified by the <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> property has no effect on parsing or formatting operations. Only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used when formatting or parsing numeric values or date and time values.
  example:
  - "The following example demonstrates the <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> property.  \n  \n [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]\n [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]\n [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public string[] NativeDigits { get; set; }
    return:
      type: System.String[]
      description: A string array that contains the native equivalent of the Western digits 0 through 9. The default is an array having the elements "0", "1", "2", "3", "4", "5", "6", "7", "8", and "9".
  overload: System.Globalization.NumberFormatInfo.NativeDigits*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "In a set operation, the value is `null`.  \n  \n -or-  \n  \n In a set operation, an element of the value array is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "In a set operation, the value array does not contain 10 elements.  \n  \n -or-  \n  \n In a set operation, an element of the value array does not contain either a single <xref href=\"System.Char\"></xref> object or a pair of <xref href=\"System.Char\"></xref> objects that comprise a surrogate pair.  \n  \n -or-  \n  \n In a set operation, an element of the value array is not a number digit as defined by the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123). That is, the digit in the array element does not have the Unicode `Number, Decimal Digit` (Nd) General Category value.  \n  \n -or-  \n  \n In a set operation, the numeric value of an element in the value array does not correspond to the element's position in the array. That is, the element at index 0, which is the first element of the array, does not have a numeric value of 0, or the element at index 1 does not have a numeric value of 1."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  id: NegativeInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NegativeInfinitySymbol
  nameWithType: NumberFormatInfo.NegativeInfinitySymbol
  fullName: NumberFormatInfo.NegativeInfinitySymbol
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that represents negative infinity.
  remarks: For more information on negative infinity, see <xref:System.Double> or <xref:System.Single>.
  syntax:
    content: public string NegativeInfinitySymbol { get; set; }
    return:
      type: System.String
      description: The string that represents negative infinity. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "-Infinity".
  overload: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NegativeSign
  commentId: P:System.Globalization.NumberFormatInfo.NegativeSign
  id: NegativeSign
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NegativeSign
  nameWithType: NumberFormatInfo.NegativeSign
  fullName: NumberFormatInfo.NegativeSign
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that denotes that the associated number is negative.
  remarks: This property is used in both formatting and parsing operations. For more information on its use in formatting operations, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.
  example:
  - "The following example instantiates a read-write <xref:System.Globalization.CultureInfo> object that represents the invariant culture and assigns the OVERLINE character (U+203E) to its <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> property. It then uses this <xref:System.Globalization.CultureInfo> object to format an array of negative floating-point numbers.  \n  \n [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]\n [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]"
  syntax:
    content: public string NegativeSign { get; set; }
    return:
      type: System.String
      description: The string that denotes that the associated number is negative. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "-".
  overload: System.Globalization.NumberFormatInfo.NegativeSign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NumberDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  id: NumberDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NumberDecimalDigits
  nameWithType: NumberFormatInfo.NumberDecimalDigits
  fullName: NumberFormatInfo.NumberDecimalDigits
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of decimal places to use in numeric values.
  remarks: The <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> property is used with the "F" and "N" standard format strings without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> property.  \n  \n [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]\n [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]\n [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]"
  syntax:
    content: public int NumberDecimalDigits { get; set; }
    return:
      type: System.Int32
      description: The number of decimal places to use in numeric values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 2.
  overload: System.Globalization.NumberFormatInfo.NumberDecimalDigits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 99.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  id: NumberDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NumberDecimalSeparator
  nameWithType: NumberFormatInfo.NumberDecimalSeparator
  fullName: NumberFormatInfo.NumberDecimalSeparator
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string to use as the decimal separator in numeric values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> property is used with the \"E\", \"F\", \"G\", \"N\", and \"R\" standard format strings to define the symbol that separates integral from fractional digits. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  \n  \n The initial value of this property is derived from the settings in the **Region and Language** item in Control Panel."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> property.  \n  \n [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]\n [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]\n [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]"
  syntax:
    content: public string NumberDecimalSeparator { get; set; }
    return:
      type: System.String
      description: The string to use as the decimal separator in numeric values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is ".".
  overload: System.Globalization.NumberFormatInfo.NumberDecimalSeparator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The property is being set to an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NumberGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  id: NumberGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NumberGroupSeparator
  nameWithType: NumberFormatInfo.NumberGroupSeparator
  fullName: NumberFormatInfo.NumberGroupSeparator
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> property is used with the \"N\" standard format string to define the symbol that separates groups of integral digits. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  \n  \n The initial value of this property is derived from the settings in the **Region and Language** item in Control Panel."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> property.  \n  \n [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]\n [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]\n [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]"
  syntax:
    content: public string NumberGroupSeparator { get; set; }
    return:
      type: System.String
      description: The string that separates groups of digits to the left of the decimal in numeric values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is ",".
  overload: System.Globalization.NumberFormatInfo.NumberGroupSeparator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NumberGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  id: NumberGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NumberGroupSizes
  nameWithType: NumberFormatInfo.NumberGroupSizes
  fullName: NumberFormatInfo.NumberGroupSizes
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of digits in each group to the left of the decimal in numeric values.
  remarks: "The value of the <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> property affects the result of number values that are formatted by using the \"N\" . If a custom numeric format string or other standard numeric format strings are used, the value of the <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> property is ignored.  \n  \n Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.  \n  \n The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.  \n  \n For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to \"55,55555,55555,55555,4444,333.00\". If the array contains { 3, 4, 0 }, the digits are grouped similar to \"55555555555555555,4444,333.00\"."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> property.  \n  \n [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]\n [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]\n [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  \n  \n The following example prints a value using different <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> arrays.  \n  \n [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]\n [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]\n [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]"
  syntax:
    content: public int[] NumberGroupSizes { get; set; }
    return:
      type: System.Int32[]
      description: The number of digits in each group to the left of the decimal in numeric values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is a one-dimensional array with only one element, which is set to 3.
  overload: System.Globalization.NumberFormatInfo.NumberGroupSizes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property is being set and the array contains an entry that is less than 0 or greater than 9.  \n  \n -or-  \n  \n The property is being set and the array contains an entry, other than the last entry, that is set to 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.NumberNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  id: NumberNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: NumberNegativePattern
  nameWithType: NumberFormatInfo.NumberNegativePattern
  fullName: NumberFormatInfo.NumberNegativePattern
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the format pattern for negative numeric values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> property defines the format of negative values formatted with the \"N\" standard numeric format string. This property has one of the values in the following table. The symbol \"-\" is the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> and `n` is a number.  \n  \n|Value|Associated pattern|  \n|-----------|------------------------|  \n|0|(n)|  \n|1|-n|  \n|2|- n|  \n|3|n-|  \n|4|n -|  \n  \n The default value for the invariant culture returned by the <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> property is 1, which represents \"-n\", where *n* is a number."
  example:
  - "The following example displays a value using different <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> patterns.  \n  \n [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]\n [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]\n [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]"
  syntax:
    content: public int NumberNegativePattern { get; set; }
    return:
      type: System.Int32
      description: The format pattern for negative numeric values.
  overload: System.Globalization.NumberFormatInfo.NumberNegativePattern*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 4.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  id: PercentDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentDecimalDigits
  nameWithType: NumberFormatInfo.PercentDecimalDigits
  fullName: NumberFormatInfo.PercentDecimalDigits
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of decimal places to use in percent values.
  remarks: The <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> property is used with the "P" standard format string without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> property.  \n  \n [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]\n [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]\n [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]"
  syntax:
    content: public int PercentDecimalDigits { get; set; }
    return:
      type: System.Int32
      description: The number of decimal places to use in percent values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 2.
  overload: System.Globalization.NumberFormatInfo.PercentDecimalDigits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 99.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  id: PercentDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentDecimalSeparator
  nameWithType: NumberFormatInfo.PercentDecimalSeparator
  fullName: NumberFormatInfo.PercentDecimalSeparator
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string to use as the decimal separator in percent values.
  remarks: The <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> property is used with the "P" standard format string to define the symbol that separates integral from fractional digits. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> property.  \n  \n [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]\n [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]\n [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]"
  syntax:
    content: public string PercentDecimalSeparator { get; set; }
    return:
      type: System.String
      description: The string to use as the decimal separator in percent values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is ".".
  overload: System.Globalization.NumberFormatInfo.PercentDecimalSeparator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The property is being set to an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  id: PercentGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentGroupSeparator
  nameWithType: NumberFormatInfo.PercentGroupSeparator
  fullName: NumberFormatInfo.PercentGroupSeparator
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that separates groups of digits to the left of the decimal in percent values.
  remarks: The <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> property is used with the "P" standard format string to define the symbol that separates groups of integers. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> property.  \n  \n [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]\n [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]\n [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]"
  syntax:
    content: public string PercentGroupSeparator { get; set; }
    return:
      type: System.String
      description: The string that separates groups of digits to the left of the decimal in percent values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is ",".
  overload: System.Globalization.NumberFormatInfo.PercentGroupSeparator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  id: PercentGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentGroupSizes
  nameWithType: NumberFormatInfo.PercentGroupSizes
  fullName: NumberFormatInfo.PercentGroupSizes
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of digits in each group to the left of the decimal in percent values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> property is used with the \"P\" standard format string to define the number of digits that appear in integral groups. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.  \n  \n The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.  \n  \n For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to \"55,55555,55555,55555,4444,333.00%\". If the array contains { 3, 4, 0 }, the digits are grouped similar to \"55555555555555555,4444,333.00%\"."
  example:
  - "The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> property.  \n  \n [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]\n [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]\n [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]"
  syntax:
    content: public int[] PercentGroupSizes { get; set; }
    return:
      type: System.Int32[]
      description: The number of digits in each group to the left of the decimal in percent values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is a one-dimensional array with only one element, which is set to 3.
  overload: System.Globalization.NumberFormatInfo.PercentGroupSizes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property is being set and the array contains an entry that is less than 0 or greater than 9.  \n  \n -or-  \n  \n The property is being set and the array contains an entry, other than the last entry, that is set to 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  id: PercentNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentNegativePattern
  nameWithType: NumberFormatInfo.PercentNegativePattern
  fullName: NumberFormatInfo.PercentNegativePattern
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the format pattern for negative percent values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> property is used with the \"P\" standard format string to define the pattern of negative percentage values. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). This property has one of the values in the following table. The symbol \"%\" is the <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, the symbol \"-\" is the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, and `n` is a number. Values 3-11 were introduced in the .NET Framework 2.0 and cannot be used in earlier versions.  \n  \n|Value|Associated pattern|  \n|-----------|------------------------|  \n|0|-n %|  \n|1|-n%|  \n|2|-%n|  \n|3|%-n|  \n|4|%n-|  \n|5|n-%|  \n|6|n%-|  \n|7|-% n|  \n|8|n %-|  \n|9|% n-|  \n|10|% -n|  \n|11|n- %|"
  syntax:
    content: public int PercentNegativePattern { get; set; }
    return:
      type: System.Int32
      description: The format pattern for negative percent values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 0, which represents "-n %", where "%" is the <xref href="System.Globalization.NumberFormatInfo.PercentSymbol"></xref> and <code>n</code> is a number.
  overload: System.Globalization.NumberFormatInfo.PercentNegativePattern*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 11.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentPositivePattern
  commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  id: PercentPositivePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentPositivePattern
  nameWithType: NumberFormatInfo.PercentPositivePattern
  fullName: NumberFormatInfo.PercentPositivePattern
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the format pattern for positive percent values.
  remarks: "The <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> property is used with the \"P\" standard format string to define pattern of positive percentage values. For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). This property has one of the values in the following table. The symbol \"%\" is the <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> and `n` is a number.  \n  \n|Value|Associated pattern|  \n|-----------|------------------------|  \n|0|n %|  \n|1|n%|  \n|2|%n|  \n|3|% n|"
  syntax:
    content: public int PercentPositivePattern { get; set; }
    return:
      type: System.Int32
      description: The format pattern for positive percent values. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is 0, which represents "n %", where "%" is the <xref href="System.Globalization.NumberFormatInfo.PercentSymbol"></xref> and <code>n</code> is a number.
  overload: System.Globalization.NumberFormatInfo.PercentPositivePattern*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to a value that is less than 0 or greater than 3.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PercentSymbol
  commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  id: PercentSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PercentSymbol
  nameWithType: NumberFormatInfo.PercentSymbol
  fullName: NumberFormatInfo.PercentSymbol
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string to use as the percent symbol.
  remarks: The string assigned to the <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> property is included in the result string when a numeric value is formatted with the "P"  or with a format string that includes the "%" .
  syntax:
    content: public string PercentSymbol { get; set; }
    return:
      type: System.String
      description: The string to use as the percent symbol. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "%".
  overload: System.Globalization.NumberFormatInfo.PercentSymbol*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PerMilleSymbol
  commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  id: PerMilleSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PerMilleSymbol
  nameWithType: NumberFormatInfo.PerMilleSymbol
  fullName: NumberFormatInfo.PerMilleSymbol
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string to use as the per mille symbol.
  remarks: The string assigned to the <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> property is included in the result string when a numeric value is formatted with a format string that includes the "‰" .
  syntax:
    content: public string PerMilleSymbol { get; set; }
    return:
      type: System.String
      description: The string to use as the per mille symbol. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "‰", which is the Unicode character U+2030.
  overload: System.Globalization.NumberFormatInfo.PerMilleSymbol*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  id: PositiveInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PositiveInfinitySymbol
  nameWithType: NumberFormatInfo.PositiveInfinitySymbol
  fullName: NumberFormatInfo.PositiveInfinitySymbol
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that represents positive infinity.
  remarks: For more information on positive infinity, see <xref:System.Double> or <xref:System.Single>.
  syntax:
    content: public string PositiveInfinitySymbol { get; set; }
    return:
      type: System.String
      description: The string that represents positive infinity. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "Infinity".
  overload: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property is being set to `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.PositiveSign
  commentId: P:System.Globalization.NumberFormatInfo.PositiveSign
  id: PositiveSign
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: PositiveSign
  nameWithType: NumberFormatInfo.PositiveSign
  fullName: NumberFormatInfo.PositiveSign
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the string that denotes that the associated number is positive.
  remarks: This property is used only for parsing numeric strings, not for formatting.
  syntax:
    content: public string PositiveSign { get; set; }
    return:
      type: System.String
      description: The string that denotes that the associated number is positive. The default for <xref href="System.Globalization.NumberFormatInfo.InvariantInfo"></xref> is "+".
  overload: System.Globalization.NumberFormatInfo.PositiveSign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: In a set operation, the value to be assigned is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The property is being set and the <xref href="System.Globalization.NumberFormatInfo"></xref> object is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  id: ReadOnly(System.Globalization.NumberFormatInfo)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  name: ReadOnly(NumberFormatInfo)
  nameWithType: NumberFormatInfo.ReadOnly(NumberFormatInfo)
  fullName: NumberFormatInfo.ReadOnly(NumberFormatInfo)
  type: Method
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns a read-only <xref href="System.Globalization.NumberFormatInfo"></xref> wrapper.
  remarks: "This wrapper prevents any modifications to `nfi`.  \n  \n Attempting to perform an assignment to a property of a read-only <xref:System.Globalization.NumberFormatInfo> causes an <xref:System.InvalidOperationException>."
  syntax:
    content: public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);
    parameters:
    - id: nfi
      type: System.Globalization.NumberFormatInfo
      description: The <xref href="System.Globalization.NumberFormatInfo"></xref> to wrap.
    return:
      type: System.Globalization.NumberFormatInfo
      description: A read-only <xref href="System.Globalization.NumberFormatInfo"></xref> wrapper around <code>nfi</code>.
  overload: System.Globalization.NumberFormatInfo.ReadOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>nfi</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Globalization.NumberFormatInfo.#ctor
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberFormatInfo()
  nameWithType: NumberFormatInfo.NumberFormatInfo()
  fullName: NumberFormatInfo.NumberFormatInfo()
- uid: System.Globalization.NumberFormatInfo.Clone
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: Clone()
  nameWithType: NumberFormatInfo.Clone()
  fullName: NumberFormatInfo.Clone()
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyDecimalDigits
  nameWithType: NumberFormatInfo.CurrencyDecimalDigits
  fullName: NumberFormatInfo.CurrencyDecimalDigits
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyDecimalSeparator
  nameWithType: NumberFormatInfo.CurrencyDecimalSeparator
  fullName: NumberFormatInfo.CurrencyDecimalSeparator
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyGroupSeparator
  nameWithType: NumberFormatInfo.CurrencyGroupSeparator
  fullName: NumberFormatInfo.CurrencyGroupSeparator
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyGroupSizes
  nameWithType: NumberFormatInfo.CurrencyGroupSizes
  fullName: NumberFormatInfo.CurrencyGroupSizes
- uid: System.Int32[]
  parent: System
  isExternal: false
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyNegativePattern
  nameWithType: NumberFormatInfo.CurrencyNegativePattern
  fullName: NumberFormatInfo.CurrencyNegativePattern
- uid: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyPositivePattern
  nameWithType: NumberFormatInfo.CurrencyPositivePattern
  fullName: NumberFormatInfo.CurrencyPositivePattern
- uid: System.Globalization.NumberFormatInfo.CurrencySymbol
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencySymbol
  nameWithType: NumberFormatInfo.CurrencySymbol
  fullName: NumberFormatInfo.CurrencySymbol
- uid: System.Globalization.NumberFormatInfo.CurrentInfo
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrentInfo
  nameWithType: NumberFormatInfo.CurrentInfo
  fullName: NumberFormatInfo.CurrentInfo
- uid: System.Globalization.NumberFormatInfo
  parent: System.Globalization
  isExternal: false
  name: NumberFormatInfo
  nameWithType: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
- uid: System.Globalization.NumberFormatInfo.DigitSubstitution
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: DigitSubstitution
  nameWithType: NumberFormatInfo.DigitSubstitution
  fullName: NumberFormatInfo.DigitSubstitution
- uid: System.Globalization.DigitShapes
  parent: System.Globalization
  isExternal: false
  name: DigitShapes
  nameWithType: DigitShapes
  fullName: System.Globalization.DigitShapes
- uid: System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: GetFormat(Type)
  nameWithType: NumberFormatInfo.GetFormat(Type)
  fullName: NumberFormatInfo.GetFormat(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: GetInstance(IFormatProvider)
  nameWithType: NumberFormatInfo.GetInstance(IFormatProvider)
  fullName: NumberFormatInfo.GetInstance(IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Globalization.NumberFormatInfo.InvariantInfo
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: InvariantInfo
  nameWithType: NumberFormatInfo.InvariantInfo
  fullName: NumberFormatInfo.InvariantInfo
- uid: System.Globalization.NumberFormatInfo.IsReadOnly
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: NumberFormatInfo.IsReadOnly
  fullName: NumberFormatInfo.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.NumberFormatInfo.NaNSymbol
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NaNSymbol
  nameWithType: NumberFormatInfo.NaNSymbol
  fullName: NumberFormatInfo.NaNSymbol
- uid: System.Globalization.NumberFormatInfo.NativeDigits
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NativeDigits
  nameWithType: NumberFormatInfo.NativeDigits
  fullName: NumberFormatInfo.NativeDigits
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NegativeInfinitySymbol
  nameWithType: NumberFormatInfo.NegativeInfinitySymbol
  fullName: NumberFormatInfo.NegativeInfinitySymbol
- uid: System.Globalization.NumberFormatInfo.NegativeSign
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NegativeSign
  nameWithType: NumberFormatInfo.NegativeSign
  fullName: NumberFormatInfo.NegativeSign
- uid: System.Globalization.NumberFormatInfo.NumberDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberDecimalDigits
  nameWithType: NumberFormatInfo.NumberDecimalDigits
  fullName: NumberFormatInfo.NumberDecimalDigits
- uid: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberDecimalSeparator
  nameWithType: NumberFormatInfo.NumberDecimalSeparator
  fullName: NumberFormatInfo.NumberDecimalSeparator
- uid: System.Globalization.NumberFormatInfo.NumberGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberGroupSeparator
  nameWithType: NumberFormatInfo.NumberGroupSeparator
  fullName: NumberFormatInfo.NumberGroupSeparator
- uid: System.Globalization.NumberFormatInfo.NumberGroupSizes
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberGroupSizes
  nameWithType: NumberFormatInfo.NumberGroupSizes
  fullName: NumberFormatInfo.NumberGroupSizes
- uid: System.Globalization.NumberFormatInfo.NumberNegativePattern
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberNegativePattern
  nameWithType: NumberFormatInfo.NumberNegativePattern
  fullName: NumberFormatInfo.NumberNegativePattern
- uid: System.Globalization.NumberFormatInfo.PercentDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentDecimalDigits
  nameWithType: NumberFormatInfo.PercentDecimalDigits
  fullName: NumberFormatInfo.PercentDecimalDigits
- uid: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentDecimalSeparator
  nameWithType: NumberFormatInfo.PercentDecimalSeparator
  fullName: NumberFormatInfo.PercentDecimalSeparator
- uid: System.Globalization.NumberFormatInfo.PercentGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentGroupSeparator
  nameWithType: NumberFormatInfo.PercentGroupSeparator
  fullName: NumberFormatInfo.PercentGroupSeparator
- uid: System.Globalization.NumberFormatInfo.PercentGroupSizes
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentGroupSizes
  nameWithType: NumberFormatInfo.PercentGroupSizes
  fullName: NumberFormatInfo.PercentGroupSizes
- uid: System.Globalization.NumberFormatInfo.PercentNegativePattern
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentNegativePattern
  nameWithType: NumberFormatInfo.PercentNegativePattern
  fullName: NumberFormatInfo.PercentNegativePattern
- uid: System.Globalization.NumberFormatInfo.PercentPositivePattern
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentPositivePattern
  nameWithType: NumberFormatInfo.PercentPositivePattern
  fullName: NumberFormatInfo.PercentPositivePattern
- uid: System.Globalization.NumberFormatInfo.PercentSymbol
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentSymbol
  nameWithType: NumberFormatInfo.PercentSymbol
  fullName: NumberFormatInfo.PercentSymbol
- uid: System.Globalization.NumberFormatInfo.PerMilleSymbol
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PerMilleSymbol
  nameWithType: NumberFormatInfo.PerMilleSymbol
  fullName: NumberFormatInfo.PerMilleSymbol
- uid: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PositiveInfinitySymbol
  nameWithType: NumberFormatInfo.PositiveInfinitySymbol
  fullName: NumberFormatInfo.PositiveInfinitySymbol
- uid: System.Globalization.NumberFormatInfo.PositiveSign
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PositiveSign
  nameWithType: NumberFormatInfo.PositiveSign
  fullName: NumberFormatInfo.PositiveSign
- uid: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: ReadOnly(NumberFormatInfo)
  nameWithType: NumberFormatInfo.ReadOnly(NumberFormatInfo)
  fullName: NumberFormatInfo.ReadOnly(NumberFormatInfo)
- uid: System.Globalization.NumberFormatInfo.#ctor*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberFormatInfo
  nameWithType: NumberFormatInfo.NumberFormatInfo
  fullName: NumberFormatInfo.NumberFormatInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.Clone*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: Clone
  nameWithType: NumberFormatInfo.Clone
  fullName: NumberFormatInfo.Clone
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyDecimalDigits
  nameWithType: NumberFormatInfo.CurrencyDecimalDigits
  fullName: NumberFormatInfo.CurrencyDecimalDigits
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyDecimalSeparator
  nameWithType: NumberFormatInfo.CurrencyDecimalSeparator
  fullName: NumberFormatInfo.CurrencyDecimalSeparator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyGroupSeparator
  nameWithType: NumberFormatInfo.CurrencyGroupSeparator
  fullName: NumberFormatInfo.CurrencyGroupSeparator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSizes*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyGroupSizes
  nameWithType: NumberFormatInfo.CurrencyGroupSizes
  fullName: NumberFormatInfo.CurrencyGroupSizes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencyNegativePattern*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyNegativePattern
  nameWithType: NumberFormatInfo.CurrencyNegativePattern
  fullName: NumberFormatInfo.CurrencyNegativePattern
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencyPositivePattern*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencyPositivePattern
  nameWithType: NumberFormatInfo.CurrencyPositivePattern
  fullName: NumberFormatInfo.CurrencyPositivePattern
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrencySymbol*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrencySymbol
  nameWithType: NumberFormatInfo.CurrencySymbol
  fullName: NumberFormatInfo.CurrencySymbol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.CurrentInfo*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: CurrentInfo
  nameWithType: NumberFormatInfo.CurrentInfo
  fullName: NumberFormatInfo.CurrentInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.DigitSubstitution*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: DigitSubstitution
  nameWithType: NumberFormatInfo.DigitSubstitution
  fullName: NumberFormatInfo.DigitSubstitution
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.GetFormat*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: GetFormat
  nameWithType: NumberFormatInfo.GetFormat
  fullName: NumberFormatInfo.GetFormat
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.GetInstance*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: GetInstance
  nameWithType: NumberFormatInfo.GetInstance
  fullName: NumberFormatInfo.GetInstance
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.InvariantInfo*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: InvariantInfo
  nameWithType: NumberFormatInfo.InvariantInfo
  fullName: NumberFormatInfo.InvariantInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.IsReadOnly*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: NumberFormatInfo.IsReadOnly
  fullName: NumberFormatInfo.IsReadOnly
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NaNSymbol*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NaNSymbol
  nameWithType: NumberFormatInfo.NaNSymbol
  fullName: NumberFormatInfo.NaNSymbol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NativeDigits*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NativeDigits
  nameWithType: NumberFormatInfo.NativeDigits
  fullName: NumberFormatInfo.NativeDigits
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NegativeInfinitySymbol
  nameWithType: NumberFormatInfo.NegativeInfinitySymbol
  fullName: NumberFormatInfo.NegativeInfinitySymbol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NegativeSign*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NegativeSign
  nameWithType: NumberFormatInfo.NegativeSign
  fullName: NumberFormatInfo.NegativeSign
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NumberDecimalDigits*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberDecimalDigits
  nameWithType: NumberFormatInfo.NumberDecimalDigits
  fullName: NumberFormatInfo.NumberDecimalDigits
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NumberDecimalSeparator*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberDecimalSeparator
  nameWithType: NumberFormatInfo.NumberDecimalSeparator
  fullName: NumberFormatInfo.NumberDecimalSeparator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NumberGroupSeparator*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberGroupSeparator
  nameWithType: NumberFormatInfo.NumberGroupSeparator
  fullName: NumberFormatInfo.NumberGroupSeparator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NumberGroupSizes*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberGroupSizes
  nameWithType: NumberFormatInfo.NumberGroupSizes
  fullName: NumberFormatInfo.NumberGroupSizes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.NumberNegativePattern*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: NumberNegativePattern
  nameWithType: NumberFormatInfo.NumberNegativePattern
  fullName: NumberFormatInfo.NumberNegativePattern
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentDecimalDigits*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentDecimalDigits
  nameWithType: NumberFormatInfo.PercentDecimalDigits
  fullName: NumberFormatInfo.PercentDecimalDigits
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentDecimalSeparator*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentDecimalSeparator
  nameWithType: NumberFormatInfo.PercentDecimalSeparator
  fullName: NumberFormatInfo.PercentDecimalSeparator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentGroupSeparator*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentGroupSeparator
  nameWithType: NumberFormatInfo.PercentGroupSeparator
  fullName: NumberFormatInfo.PercentGroupSeparator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentGroupSizes*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentGroupSizes
  nameWithType: NumberFormatInfo.PercentGroupSizes
  fullName: NumberFormatInfo.PercentGroupSizes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentNegativePattern*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentNegativePattern
  nameWithType: NumberFormatInfo.PercentNegativePattern
  fullName: NumberFormatInfo.PercentNegativePattern
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentPositivePattern*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentPositivePattern
  nameWithType: NumberFormatInfo.PercentPositivePattern
  fullName: NumberFormatInfo.PercentPositivePattern
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PercentSymbol*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PercentSymbol
  nameWithType: NumberFormatInfo.PercentSymbol
  fullName: NumberFormatInfo.PercentSymbol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PerMilleSymbol*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PerMilleSymbol
  nameWithType: NumberFormatInfo.PerMilleSymbol
  fullName: NumberFormatInfo.PerMilleSymbol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PositiveInfinitySymbol
  nameWithType: NumberFormatInfo.PositiveInfinitySymbol
  fullName: NumberFormatInfo.PositiveInfinitySymbol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.PositiveSign*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: PositiveSign
  nameWithType: NumberFormatInfo.PositiveSign
  fullName: NumberFormatInfo.PositiveSign
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Globalization.NumberFormatInfo.ReadOnly*
  parent: System.Globalization.NumberFormatInfo
  isExternal: false
  name: ReadOnly
  nameWithType: NumberFormatInfo.ReadOnly
  fullName: NumberFormatInfo.ReadOnly
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/NumberFormatInfo.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ICloneable
  parent: System
  isExternal: false
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
