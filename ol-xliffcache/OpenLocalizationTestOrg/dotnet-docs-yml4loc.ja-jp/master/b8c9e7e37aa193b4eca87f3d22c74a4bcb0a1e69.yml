### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityContext
  commentId: T:System.Security.SecurityContext
  id: SecurityContext
  children:
  - System.Security.SecurityContext.Capture
  - System.Security.SecurityContext.CreateCopy
  - System.Security.SecurityContext.Dispose
  - System.Security.SecurityContext.IsFlowSuppressed
  - System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  - System.Security.SecurityContext.RestoreFlow
  - System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  - System.Security.SecurityContext.SuppressFlow
  - System.Security.SecurityContext.SuppressFlowWindowsIdentity
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Security.SecurityContext
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Encapsulates and propagates all security-related data for execution contexts transferred across threads. This class cannot be inherited.
  remarks: "A <xref:System.Security.SecurityContext> object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.  This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <xref:System.Security.SecurityContext> is copied and transferred across asynchronous threads.  \n  \n> [!NOTE]\n>  The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions. Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled=\"true\"/>`). Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed. For more information about flowing unmanaged impersonation across asynchronous points, see [\\&lt;alwaysFlowImpersonationPolicy\\&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).  \n  \n The <xref:System.Security.SecurityContext> is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.Capture
  commentId: M:System.Security.SecurityContext.Capture
  id: Capture
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Capture()
  nameWithType: SecurityContext.Capture()
  fullName: SecurityContext.Capture()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Captures the security context for the current thread.
  remarks: The captured security context can be applied to another thread. The <xref:System.Security.SecurityContext> consists of the <xref:System.Threading.CompressedStack> and the <xref:System.Security.Principal.WindowsIdentity> for the executing thread.
  syntax:
    content: public static System.Security.SecurityContext Capture ();
    parameters: []
    return:
      type: System.Security.SecurityContext
      description: The security context for the current thread.
  overload: System.Security.SecurityContext.Capture*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.CreateCopy
  commentId: M:System.Security.SecurityContext.CreateCopy
  id: CreateCopy
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: SecurityContext.CreateCopy()
  fullName: SecurityContext.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Creates a copy of the current security context.
  remarks: The current context must have been acquired through a capture or a copy operation. This method is useful for applying a captured <xref:System.Security.SecurityContext> to multiple threads.
  syntax:
    content: public System.Security.SecurityContext CreateCopy ();
    parameters: []
    return:
      type: System.Security.SecurityContext
      description: The security context for the current thread.
  overload: System.Security.SecurityContext.CreateCopy*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current security context has been previously used, was marshaled across application domains, or was not acquired through the <xref href="System.Security.SecurityContext.Capture"></xref> method.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.Dispose
  commentId: M:System.Security.SecurityContext.Dispose
  id: Dispose
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: SecurityContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Releases all resources used by the current instance of the <xref href="System.Security.SecurityContext"></xref> class.
  remarks: "Call `Dispose` when you are finished using the <xref:System.Security.SecurityContext>. The `Dispose` method leaves the <xref:System.Security.SecurityContext> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.SecurityContext> so the garbage collector can reclaim the memory that the <xref:System.Security.SecurityContext> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.SecurityContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.SecurityContext> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.SecurityContext.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.IsFlowSuppressed
  commentId: M:System.Security.SecurityContext.IsFlowSuppressed
  id: IsFlowSuppressed
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: IsFlowSuppressed()
  nameWithType: SecurityContext.IsFlowSuppressed()
  fullName: SecurityContext.IsFlowSuppressed()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Determines whether the flow of the security context has been suppressed.
  remarks: The <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Security.SecurityContext> information during asynchronous operations.
  syntax:
    content: public static bool IsFlowSuppressed ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the flow has been suppressed; otherwise, `false`.'
  overload: System.Security.SecurityContext.IsFlowSuppressed*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  commentId: M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  id: IsWindowsIdentityFlowSuppressed
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: IsWindowsIdentityFlowSuppressed()
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed()
  fullName: SecurityContext.IsWindowsIdentityFlowSuppressed()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Determines whether the flow of the Windows identity portion of the current security context has been suppressed.
  remarks: The <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <xref:System.Security.SecurityContext> migrates during asynchronous operations.
  syntax:
    content: public static bool IsWindowsIdentityFlowSuppressed ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the flow has been suppressed; otherwise, `false`.'
  overload: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.RestoreFlow
  commentId: M:System.Security.SecurityContext.RestoreFlow
  id: RestoreFlow
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: RestoreFlow()
  nameWithType: SecurityContext.RestoreFlow()
  fullName: SecurityContext.RestoreFlow()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Restores the flow of the security context across asynchronous threads.
  remarks: The <xref:System.Security.SecurityContext.RestoreFlow%2A> method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName> method to reverse the effect of a prior <xref:System.Security.SecurityContext.SuppressFlow%2A> method call.
  syntax:
    content: public static void RestoreFlow ();
    parameters: []
  overload: System.Security.SecurityContext.RestoreFlow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The security context is `null` or an empty string.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  commentId: M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  id: Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Run(SecurityContext, ContextCallback, Object)
  nameWithType: SecurityContext.Run(SecurityContext, ContextCallback, Object)
  fullName: SecurityContext.Run(SecurityContext, ContextCallback, Object)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Runs the specified method in the specified security context on the current thread.
  remarks: The security context for the current thread is returned to its previous state when the method call is complete.
  example:
  - "The following code example shows how to use the <xref:System.Security.SecurityContext.Run%2A> method to execute a method in a specified security context.  \n  \n [!code-csharp[System.Security.SecurityContext.Run#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/CS/form1.cs#1)]\n [!code-vb[System.Security.SecurityContext.Run#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/VB/form1.vb#1)]"
  syntax:
    content: public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: securityContext
      type: System.Security.SecurityContext
      description: The security context to set.
    - id: callback
      type: System.Threading.ContextCallback
      description: The delegate that represents the method to run in the specified security context.
    - id: state
      type: System.Object
      description: The object to pass to the callback method.
  overload: System.Security.SecurityContext.Run*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>securityContext</code> is `null`.  \n  \n -or-  \n  \n <code>securityContext</code> was not acquired through a capture operation.  \n  \n -or-  \n  \n <code>securityContext</code> has already been used as the argument to a <xref href=\"System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)\"></xref> method call."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.SuppressFlow
  commentId: M:System.Security.SecurityContext.SuppressFlow
  id: SuppressFlow
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: SuppressFlow()
  nameWithType: SecurityContext.SuppressFlow()
  fullName: SecurityContext.SuppressFlow()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Suppresses the flow of the security context across asynchronous threads.
  remarks: "Use this method to suppress the flow of <xref:System.Security.SecurityContext> information on the current thread for asynchronous operations.  \n  \n The common language runtime (CLR) is only aware of the impersonation operations performed using managed code. The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions. To flow identity across asynchronous points you must use the managed <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Security.Principal.WindowsImpersonationContext> methods.  \n  \n Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.  \n  \n This method is protected with a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> permission. A fully trusted component can call this method to suppress the flow of the <xref:System.Security.SecurityContext> information during asynchronous calls. When the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`."
  syntax:
    content: public static System.Threading.AsyncFlowControl SuppressFlow ();
    parameters: []
    return:
      type: System.Threading.AsyncFlowControl
      description: An <xref href="System.Threading.AsyncFlowControl"></xref> structure for restoring the flow.
  overload: System.Security.SecurityContext.SuppressFlow*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity
  commentId: M:System.Security.SecurityContext.SuppressFlowWindowsIdentity
  id: SuppressFlowWindowsIdentity
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: SuppressFlowWindowsIdentity()
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity()
  fullName: SecurityContext.SuppressFlowWindowsIdentity()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.
  remarks: "Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.  \n  \n Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.  \n  \n> [!NOTE]\n>  The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions. Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled=\"true\"/>`). Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed. For more information about flowing unmanaged impersonation across asynchronous points, see [\\<alwaysFlowImpersonationPolicy> Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)."
  syntax:
    content: public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();
    parameters: []
    return:
      type: System.Threading.AsyncFlowControl
      description: A structure for restoring the flow.
  overload: System.Security.SecurityContext.SuppressFlowWindowsIdentity*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Security.SecurityContext.Capture
  parent: System.Security.SecurityContext
  isExternal: false
  name: Capture()
  nameWithType: SecurityContext.Capture()
  fullName: SecurityContext.Capture()
- uid: System.Security.SecurityContext
  parent: System.Security
  isExternal: false
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Security.SecurityContext
- uid: System.Security.SecurityContext.CreateCopy
  parent: System.Security.SecurityContext
  isExternal: false
  name: CreateCopy()
  nameWithType: SecurityContext.CreateCopy()
  fullName: SecurityContext.CreateCopy()
- uid: System.Security.SecurityContext.Dispose
  parent: System.Security.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: SecurityContext.Dispose()
- uid: System.Security.SecurityContext.IsFlowSuppressed
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsFlowSuppressed()
  nameWithType: SecurityContext.IsFlowSuppressed()
  fullName: SecurityContext.IsFlowSuppressed()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsWindowsIdentityFlowSuppressed()
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed()
  fullName: SecurityContext.IsWindowsIdentityFlowSuppressed()
- uid: System.Security.SecurityContext.RestoreFlow
  parent: System.Security.SecurityContext
  isExternal: false
  name: RestoreFlow()
  nameWithType: SecurityContext.RestoreFlow()
  fullName: SecurityContext.RestoreFlow()
- uid: System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  parent: System.Security.SecurityContext
  isExternal: false
  name: Run(SecurityContext, ContextCallback, Object)
  nameWithType: SecurityContext.Run(SecurityContext, ContextCallback, Object)
  fullName: SecurityContext.Run(SecurityContext, ContextCallback, Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: false
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Security.SecurityContext.SuppressFlow
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlow()
  nameWithType: SecurityContext.SuppressFlow()
  fullName: SecurityContext.SuppressFlow()
- uid: System.Threading.AsyncFlowControl
  parent: System.Threading
  isExternal: false
  name: AsyncFlowControl
  nameWithType: AsyncFlowControl
  fullName: System.Threading.AsyncFlowControl
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlowWindowsIdentity()
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity()
  fullName: SecurityContext.SuppressFlowWindowsIdentity()
- uid: System.Security.SecurityContext.Capture*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Capture
  nameWithType: SecurityContext.Capture
  fullName: SecurityContext.Capture
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.CreateCopy*
  parent: System.Security.SecurityContext
  isExternal: false
  name: CreateCopy
  nameWithType: SecurityContext.CreateCopy
  fullName: SecurityContext.CreateCopy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.Dispose*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
  fullName: SecurityContext.Dispose
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.IsFlowSuppressed*
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsFlowSuppressed
  nameWithType: SecurityContext.IsFlowSuppressed
  fullName: SecurityContext.IsFlowSuppressed
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed*
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsWindowsIdentityFlowSuppressed
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed
  fullName: SecurityContext.IsWindowsIdentityFlowSuppressed
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.RestoreFlow*
  parent: System.Security.SecurityContext
  isExternal: false
  name: RestoreFlow
  nameWithType: SecurityContext.RestoreFlow
  fullName: SecurityContext.RestoreFlow
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.Run*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Run
  nameWithType: SecurityContext.Run
  fullName: SecurityContext.Run
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.SuppressFlow*
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlow
  nameWithType: SecurityContext.SuppressFlow
  fullName: SecurityContext.SuppressFlow
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity*
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlowWindowsIdentity
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity
  fullName: SecurityContext.SuppressFlowWindowsIdentity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
