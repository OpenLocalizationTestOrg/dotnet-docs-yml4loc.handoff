### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  commentId: T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  id: ReverseBidirectionalIterator`1
  children:
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev
  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid
  langs:
  - csharp
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
  type: Class
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by using the increment operator. The element that the iterator points to can be both written to and read from any number of times. Reverse bidirectional iterators can be used anywhere that a reverse input or reverse output iterator is required.
  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'
  syntax:
    content: 'public class ReverseBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'
    typeParameters:
    - id: TValue
      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'
  inheritance:
  - System.Object
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{TValue}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor
  id: '#ctor'
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: ReverseBidirectionalIterator<TValue>()
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>()
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>()
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  syntax:
    content: public ReverseBidirectionalIterator ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})'
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: ReverseBidirectionalIterator<TValue>(IBidirectionalIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(IBidirectionalIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(IBidirectionalIterator<TValue>)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object from an existing <xref href="Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1"></xref> object.
  syntax:
    content: public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> _Iter);
    parameters:
    - id: _Iter
      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1
      description: An existing <xref href="Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1"></xref> object to copy.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)'
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: ReverseBidirectionalIterator<TValue>(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(ReverseBidirectionalIterator)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base
  id: base
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: base()
  nameWithType: ReverseBidirectionalIterator<TValue>.base()
  fullName: ReverseBidirectionalIterator<TValue>.base()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Gets the underlying base iterator for the <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> base ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1
      description: The underlying base iterator for the <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone
  id: Clone
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: Clone()
  nameWithType: ReverseBidirectionalIterator<TValue>.Clone()
  fullName: ReverseBidirectionalIterator<TValue>.Clone()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Returns a copy of the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: A copy of the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container
  id: container
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: container()
  nameWithType: ReverseBidirectionalIterator<TValue>.container()
  fullName: ReverseBidirectionalIterator<TValue>.container()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Gets the container that the iterator is traversing.
  syntax:
    content: public virtual object container ();
    parameters: []
    return:
      type: System.Object
      description: The container that the iterator is traversing.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: equal_to(IInputIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object is the same as the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  syntax:
    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are the same object; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: equal_to(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next
  id: next
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: next()
  nameWithType: ReverseBidirectionalIterator<TValue>.next()
  fullName: ReverseBidirectionalIterator<TValue>.next()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.
  syntax:
    content: public virtual void next ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Assign(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
    return:
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Decrement(ReverseBidirectionalIterator<TValue>, Int32)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>, Int32)
  fullName: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> , int A_0);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    - id: A_0
      type: System.Int32
      description: An unused parameter that indicates this is the postfix version of the operator.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Decrement(ReverseBidirectionalIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Equality(IInputIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object is the same as the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.%2A> Gene ric.ReverseBidirectionalIterator`1.Equals(Microsoft.VisualC.StlClr. Gene ric.IInputIterator{`0})?qualifyHint=True&autoUpgrade=False
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are the same object; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Equality(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}
  id: op_Implicit
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Implicit
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit
  fullName: ReverseBidirectionalIterator<TValue>.op_Implicit
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Increment(ReverseBidirectionalIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Increment(ReverseBidirectionalIterator<TValue>, Int32)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>, Int32)
  fullName: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> , int A_0);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    - id: A_0
      type: System.Int32
      description: An unused parameter that indicates this is the postfix version of the operator.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Inequality(IInputIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object differs from the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.%2A> Gene ric.ReverseBidirectionalIterator`1.Compare(Microsoft.VisualC.StlClr. Gene ric.IInputIterator{`0})?qualifyHint=True&autoUpgrade=False
  syntax:
    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are different objects; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_Inequality(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_MemberSelection(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
    return:
      type: TValue@
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: op_PointerDereference(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
      description: ''
    return:
      type: TValue@
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev
  id: prev
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: prev()
  nameWithType: ReverseBidirectionalIterator<TValue>.prev()
  fullName: ReverseBidirectionalIterator<TValue>.prev()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.
  syntax:
    content: public virtual void prev ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid
  id: valid
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  langs:
  - csharp
  name: valid()
  nameWithType: ReverseBidirectionalIterator<TValue>.valid()
  fullName: ReverseBidirectionalIterator<TValue>.valid()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the iterator is valid and can be safely used to traverse the underlying container.
  syntax:
    content: public virtual bool valid ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the iterator is valid and safe to use; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>()
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>()
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>(IBidirectionalIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(IBidirectionalIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(IBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IBidirectionalIterator<TValue>
  nameWithType: IBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ReverseBidirectionalIterator
  nameWithType: ReverseBidirectionalIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: base()
  nameWithType: ReverseBidirectionalIterator<TValue>.base()
  fullName: ReverseBidirectionalIterator<TValue>.base()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: Clone()
  nameWithType: ReverseBidirectionalIterator<TValue>.Clone()
  fullName: ReverseBidirectionalIterator<TValue>.Clone()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: container()
  nameWithType: ReverseBidirectionalIterator<TValue>.container()
  fullName: ReverseBidirectionalIterator<TValue>.container()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: equal_to(IInputIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: equal_to(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: next()
  nameWithType: ReverseBidirectionalIterator<TValue>.next()
  fullName: ReverseBidirectionalIterator<TValue>.next()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Assign(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Decrement(ReverseBidirectionalIterator<TValue>, Int32)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>, Int32)
  fullName: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Decrement(ReverseBidirectionalIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Equality(IInputIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Equality(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Implicit
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit
  fullName: ReverseBidirectionalIterator<TValue>.op_Implicit
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Increment(ReverseBidirectionalIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Increment(ReverseBidirectionalIterator<TValue>, Int32)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>, Int32)
  fullName: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Inequality(IInputIterator<TValue>)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)
  fullName: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Inequality(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_MemberSelection(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_PointerDereference(ReverseBidirectionalIterator)
  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)
  fullName: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: prev()
  nameWithType: ReverseBidirectionalIterator<TValue>.prev()
  fullName: ReverseBidirectionalIterator<TValue>.prev()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: valid()
  nameWithType: ReverseBidirectionalIterator<TValue>.valid()
  fullName: ReverseBidirectionalIterator<TValue>.valid()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>
  fullName: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: base
  nameWithType: ReverseBidirectionalIterator<TValue>.base
  fullName: ReverseBidirectionalIterator<TValue>.base
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: Clone
  nameWithType: ReverseBidirectionalIterator<TValue>.Clone
  fullName: ReverseBidirectionalIterator<TValue>.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: container
  nameWithType: ReverseBidirectionalIterator<TValue>.container
  fullName: ReverseBidirectionalIterator<TValue>.container
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: equal_to
  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to
  fullName: ReverseBidirectionalIterator<TValue>.equal_to
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: next
  nameWithType: ReverseBidirectionalIterator<TValue>.next
  fullName: ReverseBidirectionalIterator<TValue>.next
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Assign
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign
  fullName: ReverseBidirectionalIterator<TValue>.op_Assign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Decrement
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement
  fullName: ReverseBidirectionalIterator<TValue>.op_Decrement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Equality
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality
  fullName: ReverseBidirectionalIterator<TValue>.op_Equality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Implicit
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit
  fullName: ReverseBidirectionalIterator<TValue>.op_Implicit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Increment
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment
  fullName: ReverseBidirectionalIterator<TValue>.op_Increment
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_Inequality
  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality
  fullName: ReverseBidirectionalIterator<TValue>.op_Inequality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_MemberSelection
  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection
  fullName: ReverseBidirectionalIterator<TValue>.op_MemberSelection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: op_PointerDereference
  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference
  fullName: ReverseBidirectionalIterator<TValue>.op_PointerDereference
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: prev
  nameWithType: ReverseBidirectionalIterator<TValue>.prev
  fullName: ReverseBidirectionalIterator<TValue>.prev
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  isExternal: false
  name: valid
  nameWithType: ReverseBidirectionalIterator<TValue>.valid
  fullName: ReverseBidirectionalIterator<TValue>.valid
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
