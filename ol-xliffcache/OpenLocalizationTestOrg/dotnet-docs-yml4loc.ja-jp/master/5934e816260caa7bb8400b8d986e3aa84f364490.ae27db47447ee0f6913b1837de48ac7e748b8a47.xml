{"nodes":[{"content":"Defines partial-trust access to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> class.","nodes":[{"pos":[0,100],"content":"Defines partial-trust access to the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph> class.","source":"Defines partial-trust access to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> class."}],"pos":[1362,1463],"yaml":true},{"content":"The <xref:System.Security.Permissions.TypeDescriptorPermission> class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.  \n  \n-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  \n  \n-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>  \n  \n-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  \n  \n-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>","nodes":[{"pos":[0,167],"content":"The <xref:System.Security.Permissions.TypeDescriptorPermission> class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.TypeDescriptorPermission&gt;</ph> class defines access to the following methods on the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.","pos":[0,167],"source":"The <xref:System.Security.Permissions.TypeDescriptorPermission> class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class."}]},{"pos":[177,310],"content":"<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>","nodes":[]},{"pos":[320,451],"content":"<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>","nodes":[]},{"pos":[461,597],"content":"<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>","nodes":[]},{"pos":[607,741],"content":"<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>","nodes":[]}],"pos":[1474,2226],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class."}],"pos":[5101,5216],"yaml":true},{"content":"The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request. Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid.","nodes":[{"pos":[0,248],"content":"The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request. Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> to request.","pos":[0,80],"source":"The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request."},{"content":"Only <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState.None\"&gt;&lt;/xref&gt;</ph> are valid.","pos":[81,248],"source":" Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid."}]}],"pos":[5431,5680],"yaml":true},{"content":"<code>state</code> is not a valid permission state. Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid.","nodes":[{"pos":[0,219],"content":"<code>state</code> is not a valid permission state. Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid permission state.","pos":[0,51],"source":"<code>state</code> is not a valid permission state."},{"content":"Only <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState.None\"&gt;&lt;/xref&gt;</ph> are valid.","pos":[52,219],"source":" Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid."}]}],"pos":[5860,6080],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class with the specified permission flags.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission flags.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class with the specified permission flags."}],"pos":[7583,7734],"yaml":true},{"content":"The permission flags to request.","nodes":[{"pos":[0,32],"content":"The permission flags to request.","nodes":[{"content":"The permission flags to request.","pos":[0,32]}]}],"pos":[7975,8008],"yaml":true},{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","nodes":[{"pos":[0,108],"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","nodes":[{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","pos":[0,108]}]}],"pos":[9266,9375],"yaml":true},{"content":"A copy of the current permission object.","nodes":[{"pos":[0,40],"content":"A copy of the current permission object.","nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]}],"pos":[9541,9582],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor.","nodes":[{"pos":[0,120],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"&gt;&lt;/xref&gt;</ph> for the type descriptor.","source":"Gets or sets the <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor."}],"pos":[10841,10962],"yaml":true},{"content":"The <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"&gt;&lt;/xref&gt;</ph> for the type descriptor.","source":"The <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor."}],"pos":[11171,11279],"yaml":true},{"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,111],"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","pos":[0,111]}]}],"pos":[12699,12811],"yaml":true},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[13019,13079],"yaml":true},{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,150],"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,150]}]}],"pos":[14489,14640],"yaml":true},{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,109],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]}],"pos":[14847,14957],"yaml":true},{"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"pos":[0,165],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[106,165],"source":" This new permission is `null` if the intersection is empty."}]}],"pos":[15028,15194],"yaml":true},{"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,119],"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","pos":[0,119]}]}],"pos":[16612,16732],"yaml":true},{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"pos":[0,130],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]}],"pos":[16917,17048],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[17106,17202],"yaml":true},{"content":"Gets a value that indicates whether the type descriptor may be called from partially trusted code.","nodes":[{"pos":[0,98],"content":"Gets a value that indicates whether the type descriptor may be called from partially trusted code.","nodes":[{"content":"Gets a value that indicates whether the type descriptor may be called from partially trusted code.","pos":[0,98]}]}],"pos":[18525,18624],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.Permissions.TypeDescriptorPermission.Flags\"></xref> property is set to <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,241],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermission.Flags\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.Permissions.TypeDescriptorPermission.Flags\"></xref> property is set to <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess\"></xref>; otherwise, `false`."}],"pos":[18755,18999],"yaml":true},{"content":"When overridden in a derived class, creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,105],"content":"When overridden in a derived class, creates an XML encoding of the security object and its current state.","nodes":[{"content":"When overridden in a derived class, creates an XML encoding of the security object and its current state.","pos":[0,105]}]}],"pos":[20272,20378],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[20553,20626],"yaml":true},{"content":"When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,130],"content":"When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.","pos":[0,130]}]}],"pos":[22010,22141],"yaml":true},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[22344,22452],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[22523,22622],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.TypeDescriptorPermission\n  commentId: T:System.Security.Permissions.TypeDescriptorPermission\n  id: TypeDescriptorPermission\n  children:\n  - System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  - System.Security.Permissions.TypeDescriptorPermission.Copy\n  - System.Security.Permissions.TypeDescriptorPermission.Flags\n  - System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  - System.Security.Permissions.TypeDescriptorPermission.ToXml\n  - System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: TypeDescriptorPermission\n  nameWithType: TypeDescriptorPermission\n  fullName: System.Security.Permissions.TypeDescriptorPermission\n  type: Class\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Defines partial-trust access to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> class.\n  remarks: \"The <xref:System.Security.Permissions.TypeDescriptorPermission> class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>\"\n  syntax:\n    content: 'public sealed class TypeDescriptorPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: TypeDescriptorPermission(PermissionState)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n  fullName: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class.\n  syntax:\n    content: public TypeDescriptorPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request. Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid.\n  overload: System.Security.Permissions.TypeDescriptorPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid permission state. Only <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref> and <xref href=\"System.Security.Permissions.PermissionState.None\"></xref> are valid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  id: '#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)'\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  fullName: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class with the specified permission flags.\n  syntax:\n    content: public TypeDescriptorPermission (System.Security.Permissions.TypeDescriptorPermissionFlags flag);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.TypeDescriptorPermissionFlags\n      description: The permission flags to request.\n  overload: System.Security.Permissions.TypeDescriptorPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.Copy\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: TypeDescriptorPermission.Copy()\n  fullName: TypeDescriptorPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: When implemented by a derived class, creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.Flags\n  commentId: P:System.Security.Permissions.TypeDescriptorPermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: TypeDescriptorPermission.Flags\n  fullName: TypeDescriptorPermission.Flags\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor.\n  syntax:\n    content: public System.Security.Permissions.TypeDescriptorPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.TypeDescriptorPermissionFlags\n      description: The <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Flags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: TypeDescriptorPermission.FromXml(SecurityElement)\n  fullName: TypeDescriptorPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Permissions.TypeDescriptorPermission.FromXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: TypeDescriptorPermission.Intersect(IPermission)\n  fullName: TypeDescriptorPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Intersect*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: TypeDescriptorPermission.IsSubsetOf(IPermission)\n  fullName: TypeDescriptorPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: When implemented by a derived class, determines whether the current permission is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: TypeDescriptorPermission.IsUnrestricted()\n  fullName: TypeDescriptorPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets a value that indicates whether the type descriptor may be called from partially trusted code.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Permissions.TypeDescriptorPermission.Flags\"></xref> property is set to <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess\"></xref>; otherwise, `false`.'\n  overload: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: TypeDescriptorPermission.ToXml()\n  fullName: TypeDescriptorPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: When overridden in a derived class, creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Permissions.TypeDescriptorPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: TypeDescriptorPermission.Union(IPermission)\n  fullName: TypeDescriptorPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Union*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: TypeDescriptorPermission(PermissionState)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n  fullName: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  fullName: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n- uid: System.Security.Permissions.TypeDescriptorPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: TypeDescriptorPermissionFlags\n  nameWithType: TypeDescriptorPermissionFlags\n  fullName: System.Security.Permissions.TypeDescriptorPermissionFlags\n- uid: System.Security.Permissions.TypeDescriptorPermission.Copy\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: TypeDescriptorPermission.Copy()\n  fullName: TypeDescriptorPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.TypeDescriptorPermission.Flags\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Flags\n  nameWithType: TypeDescriptorPermission.Flags\n  fullName: TypeDescriptorPermission.Flags\n- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: TypeDescriptorPermission.FromXml(SecurityElement)\n  fullName: TypeDescriptorPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: TypeDescriptorPermission.Intersect(IPermission)\n  fullName: TypeDescriptorPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: TypeDescriptorPermission.IsSubsetOf(IPermission)\n  fullName: TypeDescriptorPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: TypeDescriptorPermission.IsUnrestricted()\n  fullName: TypeDescriptorPermission.IsUnrestricted()\n- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: TypeDescriptorPermission.ToXml()\n  fullName: TypeDescriptorPermission.ToXml()\n- uid: System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: TypeDescriptorPermission.Union(IPermission)\n  fullName: TypeDescriptorPermission.Union(IPermission)\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: TypeDescriptorPermission\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission\n  fullName: TypeDescriptorPermission.TypeDescriptorPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.Copy*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Copy\n  nameWithType: TypeDescriptorPermission.Copy\n  fullName: TypeDescriptorPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.Flags*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Flags\n  nameWithType: TypeDescriptorPermission.Flags\n  fullName: TypeDescriptorPermission.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: TypeDescriptorPermission.FromXml\n  fullName: TypeDescriptorPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: TypeDescriptorPermission.Intersect\n  fullName: TypeDescriptorPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: TypeDescriptorPermission.IsSubsetOf\n  fullName: TypeDescriptorPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: TypeDescriptorPermission.IsUnrestricted\n  fullName: TypeDescriptorPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: TypeDescriptorPermission.ToXml\n  fullName: TypeDescriptorPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.Permissions.TypeDescriptorPermission.Union*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Union\n  nameWithType: TypeDescriptorPermission.Union\n  fullName: TypeDescriptorPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/TypeDescriptorPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}