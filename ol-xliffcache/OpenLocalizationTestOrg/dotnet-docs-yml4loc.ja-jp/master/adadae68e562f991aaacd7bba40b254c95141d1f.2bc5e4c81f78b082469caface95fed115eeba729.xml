{"nodes":[{"content":"Base class for all key store providers. A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).","nodes":[{"pos":[0,292],"content":"Base class for all key store providers. A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).","nodes":[{"content":"Base class for all key store providers.","pos":[0,39]},{"content":"A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().","pos":[40,205]},{"content":"For details see, <bpt id=\"p1\">[</bpt>Always Encrypted<ept id=\"p1\">](https://msdn.microsoft.com/library/mt163865.aspx)</ept>.","pos":[206,292],"source":" For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)."}]}],"pos":[836,1129],"yaml":true},{"content":"Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.","nodes":[{"pos":[0,75],"content":"Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.","nodes":[{"content":"Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.","pos":[0,75]}]}],"pos":[2751,2827],"yaml":true},{"content":"Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","nodes":[{"pos":[0,205],"content":"Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","nodes":[{"content":"Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","pos":[0,205],"nodes":[{"content":"Decrypts the specified encrypted value of a column encryption key.","pos":[0,66]},{"content":"The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.","pos":[67,205]}]}]}],"pos":[4232,4438],"yaml":true},{"content":"The master key path.","nodes":[{"pos":[0,20],"content":"The master key path.","nodes":[{"content":"The master key path.","pos":[0,20]}]}],"pos":[4685,4706],"yaml":true},{"content":"The encryption algorithm.","nodes":[{"pos":[0,25],"content":"The encryption algorithm.","nodes":[{"content":"The encryption algorithm.","pos":[0,25]}]}],"pos":[4781,4807],"yaml":true},{"content":"The encrypted column encryption key.","nodes":[{"pos":[0,36],"content":"The encrypted column encryption key.","nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]}],"pos":[4891,4928],"yaml":true},{"content":"Returns <xref href=\"System.Byte\"></xref>.   \nThe decrypted column encryption key.","nodes":[{"pos":[0,81],"content":"Returns <xref href=\"System.Byte\"></xref>.   \nThe decrypted column encryption key.","nodes":[{"content":"Returns <xref href=\"System.Byte\"></xref>. ","pos":[0,42],"nodes":[{"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>.","pos":[0,41],"source":"Returns <xref href=\"System.Byte\"></xref>."}]},{"content":"The decrypted column encryption key.","pos":[45,81]}]}],"pos":[4985,5072],"yaml":true},{"content":"Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.","nodes":[{"pos":[0,123],"content":"Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.","nodes":[{"content":"Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.","pos":[0,123]}]}],"pos":[6406,6530],"yaml":true},{"content":"The master key path.","nodes":[{"pos":[0,20],"content":"The master key path.","nodes":[{"content":"The master key path.","pos":[0,20]}]}],"pos":[6768,6789],"yaml":true},{"content":"The encryption algorithm.","nodes":[{"pos":[0,25],"content":"The encryption algorithm.","nodes":[{"content":"The encryption algorithm.","pos":[0,25]}]}],"pos":[6864,6890],"yaml":true},{"content":"The encrypted column encryption key.","nodes":[{"pos":[0,36],"content":"The encrypted column encryption key.","nodes":[{"content":"The encrypted column encryption key.","pos":[0,36]}]}],"pos":[6965,7002],"yaml":true},{"content":"Returns <xref href=\"System.Byte\"></xref>.   \nThe encrypted column encryption key.","nodes":[{"pos":[0,81],"content":"Returns <xref href=\"System.Byte\"></xref>.   \nThe encrypted column encryption key.","nodes":[{"content":"Returns <xref href=\"System.Byte\"></xref>. ","pos":[0,42],"nodes":[{"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>.","pos":[0,41],"source":"Returns <xref href=\"System.Byte\"></xref>."}]},{"content":"The encrypted column encryption key.","pos":[45,81]}]}],"pos":[7059,7146],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  commentId: T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  id: SqlColumnEncryptionKeyStoreProvider\n  children:\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  langs:\n  - csharp\n  name: SqlColumnEncryptionKeyStoreProvider\n  nameWithType: SqlColumnEncryptionKeyStoreProvider\n  fullName: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Base class for all key store providers. A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). For details see, [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).\n  syntax:\n    content: public abstract class SqlColumnEncryptionKeyStoreProvider\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider\n  - System.Data.SqlClient.SqlColumnEncryptionCngProvider\n  - System.Data.SqlClient.SqlColumnEncryptionCspProvider\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  commentId: M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  langs:\n  - csharp\n  name: SqlColumnEncryptionKeyStoreProvider()\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n  fullName: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.\n  syntax:\n    content: protected SqlColumnEncryptionKeyStoreProvider ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  commentId: M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  id: DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  langs:\n  - csharp\n  name: DecryptColumnEncryptionKey(String, String, Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String, String, Byte[])\n  fullName: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String, String, Byte[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Decrypts the specified encrypted value of a column encryption key. The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.\n  syntax:\n    content: public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);\n    parameters:\n    - id: masterKeyPath\n      type: System.String\n      description: The master key path.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: The encryption algorithm.\n    - id: encryptedColumnEncryptionKey\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n    return:\n      type: System.Byte[]\n      description: \"Returns <xref href=\\\"System.Byte\\\"></xref>.   \\nThe decrypted column encryption key.\"\n  overload: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  commentId: M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  id: EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  langs:\n  - csharp\n  name: EncryptColumnEncryptionKey(String, String, Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String, String, Byte[])\n  fullName: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String, String, Byte[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.\n  syntax:\n    content: public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);\n    parameters:\n    - id: masterKeyPath\n      type: System.String\n      description: The master key path.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: The encryption algorithm.\n    - id: columnEncryptionKey\n      type: System.Byte[]\n      description: The encrypted column encryption key.\n    return:\n      type: System.Byte[]\n      description: \"Returns <xref href=\\\"System.Byte\\\"></xref>.   \\nThe encrypted column encryption key.\"\n  overload: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: SqlColumnEncryptionKeyStoreProvider()\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n  fullName: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider()\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: DecryptColumnEncryptionKey(String, String, Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String, String, Byte[])\n  fullName: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(String, String, Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: EncryptColumnEncryptionKey(String, String, Byte[])\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String, String, Byte[])\n  fullName: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(String, String, Byte[])\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor*\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: SqlColumnEncryptionKeyStoreProvider\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider\n  fullName: SqlColumnEncryptionKeyStoreProvider.SqlColumnEncryptionKeyStoreProvider\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey*\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: DecryptColumnEncryptionKey\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey\n  fullName: SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey*\n  parent: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider\n  isExternal: false\n  name: EncryptColumnEncryptionKey\n  nameWithType: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey\n  fullName: SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlColumnEncryptionKeyStoreProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}