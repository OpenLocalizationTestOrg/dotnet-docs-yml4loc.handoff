{"nodes":[{"content":"Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding. This class cannot be inherited.","nodes":[{"pos":[0,170],"content":"Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding. This class cannot be inherited.","nodes":[{"content":"Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding. This class cannot be inherited.","pos":[0,170],"nodes":[{"content":"Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding.","pos":[0,138]},{"content":"This class cannot be inherited.","pos":[139,170]}]}]}],"pos":[1516,1687],"yaml":true},{"content":"This configuration element allows you to create a custom binding that implements the TCP transport protocol.","nodes":[{"pos":[0,108],"content":"This configuration element allows you to create a custom binding that implements the TCP transport protocol.","nodes":[{"content":"This configuration element allows you to create a custom binding that implements the TCP transport protocol.","pos":[0,108]}]}],"pos":[1698,1807],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.TcpTransportElement\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.TcpTransportElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.TcpTransportElement\"></xref> class."}],"pos":[7661,7777],"yaml":true},{"content":"Applies the settings of the specified <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> to this configuration element.","nodes":[{"pos":[0,133],"content":"Applies the settings of the specified <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> to this configuration element.","source":"Applies the settings of the specified <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> to this configuration element."}],"pos":[9193,9327],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> whose settings are to be applied to this configuration element.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> whose settings are to be applied to this configuration element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> whose settings are to be applied to this configuration element."}],"pos":[9568,9701],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> object that represents the custom binding element.","nodes":[{"pos":[0,92],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that represents the custom binding element.","source":"Gets the <xref href=\"System.Type\"></xref> object that represents the custom binding element."}],"pos":[10876,10969],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object that represents the custom binding element.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that represents the custom binding element.","source":"A <xref href=\"System.Type\"></xref> object that represents the custom binding element."}],"pos":[11096,11182],"yaml":true},{"content":"Gets or sets a configuration element that specifies additional connection settings.","nodes":[{"pos":[0,83],"content":"Gets or sets a configuration element that specifies additional connection settings.","nodes":[{"content":"Gets or sets a configuration element that specifies additional connection settings.","pos":[0,83]}]}],"pos":[12381,12465],"yaml":true},{"content":"A configuration element that specifies additional connection settings.","nodes":[{"pos":[0,70],"content":"A configuration element that specifies additional connection settings.","nodes":[{"content":"A configuration element that specifies additional connection settings.","pos":[0,70]}]}],"pos":[12796,12867],"yaml":true},{"content":"Copies the settings from the specified configuration element to this configuration element.","nodes":[{"pos":[0,91],"content":"Copies the settings from the specified configuration element to this configuration element.","nodes":[{"content":"Copies the settings from the specified configuration element to this configuration element.","pos":[0,91]}]}],"pos":[14342,14434],"yaml":true},{"content":"The configuration element whose settings are to be copied to this configuration element section.","nodes":[{"pos":[0,96],"content":"The configuration element whose settings are to be copied to this configuration element section.","nodes":[{"content":"The configuration element whose settings are to be copied to this configuration element section.","pos":[0,96]}]}],"pos":[14683,14780],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref> instance which contains the configuration settings to use for extended protection for a session.","nodes":[{"pos":[0,228],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"&gt;&lt;/xref&gt;</ph> instance which contains the configuration settings to use for extended protection for a session.","source":"Gets or sets a <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref> instance which contains the configuration settings to use for extended protection for a session."}],"pos":[17365,17594],"yaml":true},{"content":"The configuration settings to use for extended protection for a session.","nodes":[{"pos":[0,72],"content":"The configuration settings to use for extended protection for a session.","nodes":[{"content":"The configuration settings to use for extended protection for a session.","pos":[0,72]}]}],"pos":[17982,18055],"yaml":true},{"content":"Gets or sets the maximum number of channels that can wait on the listener to be accepted.","nodes":[{"pos":[0,89],"content":"Gets or sets the maximum number of channels that can wait on the listener to be accepted.","nodes":[{"content":"Gets or sets the maximum number of channels that can wait on the listener to be accepted.","pos":[0,89]}]}],"pos":[20750,20840],"yaml":true},{"content":"Connections in excess of the limit are queued until a space below the limit becomes available. The <xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A> property limits the duration the client waits to be connected before throwing a connection exception.","nodes":[{"pos":[0,290],"content":"Connections in excess of the limit are queued until a space below the limit becomes available. The <xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A> property limits the duration the client waits to be connected before throwing a connection exception.","nodes":[{"content":"Connections in excess of the limit are queued until a space below the limit becomes available. The <xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A> property limits the duration the client waits to be connected before throwing a connection exception.","pos":[0,290],"nodes":[{"content":"Connections in excess of the limit are queued until a space below the limit becomes available.","pos":[0,94]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A&gt;</ph> property limits the duration the client waits to be connected before throwing a connection exception.","pos":[95,290],"source":" The <xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A> property limits the duration the client waits to be connected before throwing a connection exception."}]}]}],"pos":[20851,21142],"yaml":true,"extradata":"MT"},{"content":"The maximum number of channels that can wait on the listener to be accepted. The default is 10.","nodes":[{"pos":[0,95],"content":"The maximum number of channels that can wait on the listener to be accepted. The default is 10.","nodes":[{"content":"The maximum number of channels that can wait on the listener to be accepted. The default is 10.","pos":[0,95],"nodes":[{"content":"The maximum number of channels that can wait on the listener to be accepted.","pos":[0,76]},{"content":"The default is 10.","pos":[77,95]}]}]}],"pos":[21446,21542],"yaml":true},{"content":"Gets or sets a value that specifies whether TCP port sharing is enabled for this connection.","nodes":[{"pos":[0,92],"content":"Gets or sets a value that specifies whether TCP port sharing is enabled for this connection.","nodes":[{"content":"Gets or sets a value that specifies whether TCP port sharing is enabled for this connection.","pos":[0,92]}]}],"pos":[22845,22938],"yaml":true},{"content":"This setting is relevant only to services. Clients are not affected.  \n  \n Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] the TCP Listener and how to start it, see <xref:System.Net.Sockets.TcpListener>.","nodes":[{"pos":[0,68],"content":"This setting is relevant only to services. Clients are not affected.","nodes":[{"content":"This setting is relevant only to services. Clients are not affected.","pos":[0,68],"nodes":[{"content":"This setting is relevant only to services.","pos":[0,42]},{"content":"Clients are not affected.","pos":[43,68]}]}]},{"pos":[75,239],"content":"Using this setting requires enabling the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.","source":"Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its Startup Type to Manual or Automatic."},{"pos":[246,372],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> the TCP Listener and how to start it, see <ph id=\"ph2\">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] the TCP Listener and how to start it, see <xref:System.Net.Sockets.TcpListener>."}],"pos":[22949,23328],"yaml":true,"extradata":"MT"},{"content":"`true` if TCP port sharing is enabled; `false` if each binding uses its own exclusive port. The default value is `false`.","nodes":[{"pos":[0,121],"content":"`true` if TCP port sharing is enabled; `false` if each binding uses its own exclusive port. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if TCP port sharing is enabled; <ph id=\"ph2\">`false`</ph> if each binding uses its own exclusive port.","pos":[0,91],"source":"`true` if TCP port sharing is enabled; `false` if each binding uses its own exclusive port."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[92,121],"source":" The default value is `false`."}]}],"pos":[23586,23710],"yaml":true},{"content":"Gets or sets a value that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.","nodes":[{"pos":[0,126],"content":"Gets or sets a value that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.","nodes":[{"content":"Gets or sets a value that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.","pos":[0,126]}]}],"pos":[26161,26288],"yaml":true},{"content":"This property enables Teredo for the underlying TCP socket. For more information, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651).  \n  \n This property is only applicable on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)]. [!INCLUDE[wv](~/includes/wv-md.md)] has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored. Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage. For more information about configuring Teredo, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651). For more information, see [Windows Server 2003 Technology Centers](http://go.microsoft.com/fwlink/?LinkId=96652).","nodes":[{"pos":[0,150],"content":"This property enables Teredo for the underlying TCP socket. For more information, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651).","nodes":[{"content":"This property enables Teredo for the underlying TCP socket.","pos":[0,59]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Teredo Overview<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=96651)</ept>.","pos":[60,150],"source":" For more information, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651)."}]},{"pos":[157,823],"content":"This property is only applicable on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)]. [!INCLUDE[wv](~/includes/wv-md.md)] has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored. Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage. For more information about configuring Teredo, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651). For more information, see [Windows Server 2003 Technology Centers](http://go.microsoft.com/fwlink/?LinkId=96652).","nodes":[{"content":"This property is only applicable on <ph id=\"ph1\">[!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[ws2003](~/includes/ws2003-md.md)]</ph>.","pos":[0,128],"source":"This property is only applicable on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[wv](~/includes/wv-md.md)]</ph> has a machine-wide configuration option for Teredo, so when running <ph id=\"ph2\">[!INCLUDE[wv](~/includes/wv-md.md)]</ph>, this property is ignored.","pos":[129,295],"source":"[!INCLUDE[wv](~/includes/wv-md.md)] has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored."},{"content":"Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage.","pos":[296,436]},{"content":"For more information about configuring Teredo, see <bpt id=\"p1\">[</bpt>Teredo Overview<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=96651)</ept>.","pos":[437,552],"source":" For more information about configuring Teredo, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Windows Server 2003 Technology Centers<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=96652)</ept>.","pos":[553,666],"source":" For more information, see [Windows Server 2003 Technology Centers](http://go.microsoft.com/fwlink/?LinkId=96652)."}]}],"pos":[26299,27127],"yaml":true,"extradata":"MT"},{"content":"`true` if Teredo is enabled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,78],"content":"`true` if Teredo is enabled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if Teredo is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,48],"source":"`true` if Teredo is enabled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[49,78],"source":" The default value is `false`."}]}],"pos":[27375,27456],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.TcpTransportElement\n  commentId: T:System.ServiceModel.Configuration.TcpTransportElement\n  id: TcpTransportElement\n  children:\n  - System.ServiceModel.Configuration.TcpTransportElement.#ctor\n  - System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  - System.ServiceModel.Configuration.TcpTransportElement.BindingElementType\n  - System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings\n  - System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  - System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement\n  - System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy\n  - System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  - System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog\n  - System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled\n  - System.ServiceModel.Configuration.TcpTransportElement.Properties\n  - System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled\n  langs:\n  - csharp\n  name: TcpTransportElement\n  nameWithType: TcpTransportElement\n  fullName: System.ServiceModel.Configuration.TcpTransportElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding. This class cannot be inherited.\n  remarks: This configuration element allows you to create a custom binding that implements the TCP transport protocol.\n  syntax:\n    content: 'public sealed class TcpTransportElement : System.ServiceModel.Configuration.ConnectionOrientedTransportElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement\n  - System.ServiceModel.Configuration.BindingElementExtensionElement\n  - System.ServiceModel.Configuration.TransportElement\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxBufferSize\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections\n  - System.ServiceModel.Configuration.ConnectionOrientedTransportElement.TransferMode\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.ServiceModel.Configuration.TransportElement.CreateBindingElement\n  - System.ServiceModel.Configuration.TransportElement.ManualAddressing\n  - System.ServiceModel.Configuration.TransportElement.MaxBufferPoolSize\n  - System.ServiceModel.Configuration.TransportElement.MaxReceivedMessageSize\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.TcpTransportElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: TcpTransportElement()\n  nameWithType: TcpTransportElement.TcpTransportElement()\n  fullName: TcpTransportElement.TcpTransportElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.TcpTransportElement\"></xref> class.\n  syntax:\n    content: public TcpTransportElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.TcpTransportElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  commentId: M:System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: ApplyConfiguration(BindingElement)\n  nameWithType: TcpTransportElement.ApplyConfiguration(BindingElement)\n  fullName: TcpTransportElement.ApplyConfiguration(BindingElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Applies the settings of the specified <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> to this configuration element.\n  syntax:\n    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);\n    parameters:\n    - id: bindingElement\n      type: System.ServiceModel.Channels.BindingElement\n      description: The <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> whose settings are to be applied to this configuration element.\n  overload: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.BindingElementType\n  id: BindingElementType\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: BindingElementType\n  nameWithType: TcpTransportElement.BindingElementType\n  fullName: TcpTransportElement.BindingElementType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the <xref href=\"System.Type\"></xref> object that represents the custom binding element.\n  syntax:\n    content: public override Type BindingElementType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object that represents the custom binding element.\n  overload: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings\n  id: ConnectionPoolSettings\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: ConnectionPoolSettings\n  nameWithType: TcpTransportElement.ConnectionPoolSettings\n  fullName: TcpTransportElement.ConnectionPoolSettings\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a configuration element that specifies additional connection settings.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"connectionPoolSettings\")]\n\n      public System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement ConnectionPoolSettings { get; set; }\n    return:\n      type: System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement\n      description: A configuration element that specifies additional connection settings.\n  overload: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  commentId: M:System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: TcpTransportElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: TcpTransportElement.CopyFrom(ServiceModelExtensionElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the settings from the specified configuration element to this configuration element.\n  syntax:\n    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.ServiceModelExtensionElement\n      description: The configuration element whose settings are to be copied to this configuration element section.\n  overload: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement\n  commentId: M:System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement\n  id: CreateDefaultBindingElement\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: CreateDefaultBindingElement()\n  nameWithType: TcpTransportElement.CreateDefaultBindingElement()\n  fullName: TcpTransportElement.CreateDefaultBindingElement()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.ServiceModel.Channels.TransportBindingElement CreateDefaultBindingElement ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.TransportBindingElement\n      description: ''\n  overload: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy\n  id: ExtendedProtectionPolicy\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportElement.ExtendedProtectionPolicy\n  fullName: TcpTransportElement.ExtendedProtectionPolicy\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref> instance which contains the configuration settings to use for extended protection for a session.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"extendedProtectionPolicy\")]\n\n      public System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement ExtendedProtectionPolicy { get; }\n    return:\n      type: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\n      description: The configuration settings to use for extended protection for a session.\n  overload: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  commentId: M:System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: InitializeFrom(BindingElement)\n  nameWithType: TcpTransportElement.InitializeFrom(BindingElement)\n  fullName: TcpTransportElement.InitializeFrom(BindingElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);\n    parameters:\n    - id: bindingElement\n      type: System.ServiceModel.Channels.BindingElement\n      description: ''\n  overload: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog\n  id: ListenBacklog\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: ListenBacklog\n  nameWithType: TcpTransportElement.ListenBacklog\n  fullName: TcpTransportElement.ListenBacklog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum number of channels that can wait on the listener to be accepted.\n  remarks: Connections in excess of the limit are queued until a space below the limit becomes available. The <xref:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout%2A> property limits the duration the client waits to be connected before throwing a connection exception.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"listenBacklog\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int ListenBacklog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of channels that can wait on the listener to be accepted. The default is 10.\n  overload: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled\n  id: PortSharingEnabled\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: PortSharingEnabled\n  nameWithType: TcpTransportElement.PortSharingEnabled\n  fullName: TcpTransportElement.PortSharingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether TCP port sharing is enabled for this connection.\n  remarks: \"This setting is relevant only to services. Clients are not affected.  \\n  \\n Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] the TCP Listener and how to start it, see <xref:System.Net.Sockets.TcpListener>.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"portSharingEnabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool PortSharingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if TCP port sharing is enabled; `false` if each binding uses its own exclusive port. The default value is `false`.'\n  overload: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportElement.Properties\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: TcpTransportElement.Properties\n  fullName: TcpTransportElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.TcpTransportElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled\n  commentId: P:System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled\n  id: TeredoEnabled\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  langs:\n  - csharp\n  name: TeredoEnabled\n  nameWithType: TcpTransportElement.TeredoEnabled\n  fullName: TcpTransportElement.TeredoEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.\n  remarks: \"This property enables Teredo for the underlying TCP socket. For more information, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651).  \\n  \\n This property is only applicable on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)]. [!INCLUDE[wv](~/includes/wv-md.md)] has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored. Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage. For more information about configuring Teredo, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96651). For more information, see [Windows Server 2003 Technology Centers](http://go.microsoft.com/fwlink/?LinkId=96652).\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"teredoEnabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool TeredoEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if Teredo is enabled; otherwise, `false`. The default value is `false`.'\n  overload: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ConnectionOrientedTransportElement\n  nameWithType: ConnectionOrientedTransportElement\n  fullName: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n- uid: System.ServiceModel.Configuration.TcpTransportElement.#ctor\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: TcpTransportElement()\n  nameWithType: TcpTransportElement.TcpTransportElement()\n  fullName: TcpTransportElement.TcpTransportElement()\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ApplyConfiguration(BindingElement)\n  nameWithType: TcpTransportElement.ApplyConfiguration(BindingElement)\n  fullName: TcpTransportElement.ApplyConfiguration(BindingElement)\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: TcpTransportElement.BindingElementType\n  fullName: TcpTransportElement.BindingElementType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ConnectionPoolSettings\n  nameWithType: TcpTransportElement.ConnectionPoolSettings\n  fullName: TcpTransportElement.ConnectionPoolSettings\n- uid: System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: TcpConnectionPoolSettingsElement\n  nameWithType: TcpConnectionPoolSettingsElement\n  fullName: System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement\n- uid: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: TcpTransportElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: TcpTransportElement.CopyFrom(ServiceModelExtensionElement)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelExtensionElement\n  nameWithType: ServiceModelExtensionElement\n  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement\n- uid: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: CreateDefaultBindingElement()\n  nameWithType: TcpTransportElement.CreateDefaultBindingElement()\n  fullName: TcpTransportElement.CreateDefaultBindingElement()\n- uid: System.ServiceModel.Channels.TransportBindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: TransportBindingElement\n  nameWithType: TransportBindingElement\n  fullName: System.ServiceModel.Channels.TransportBindingElement\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportElement.ExtendedProtectionPolicy\n  fullName: TcpTransportElement.ExtendedProtectionPolicy\n- uid: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\n  parent: System.Security.Authentication.ExtendedProtection.Configuration\n  isExternal: false\n  name: ExtendedProtectionPolicyElement\n  nameWithType: ExtendedProtectionPolicyElement\n  fullName: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\n- uid: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: InitializeFrom(BindingElement)\n  nameWithType: TcpTransportElement.InitializeFrom(BindingElement)\n  fullName: TcpTransportElement.InitializeFrom(BindingElement)\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: TcpTransportElement.ListenBacklog\n  fullName: TcpTransportElement.ListenBacklog\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: TcpTransportElement.PortSharingEnabled\n  fullName: TcpTransportElement.PortSharingEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.TcpTransportElement.Properties\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: Properties\n  nameWithType: TcpTransportElement.Properties\n  fullName: TcpTransportElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: TeredoEnabled\n  nameWithType: TcpTransportElement.TeredoEnabled\n  fullName: TcpTransportElement.TeredoEnabled\n- uid: System.ServiceModel.Configuration.TcpTransportElement.#ctor*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: TcpTransportElement\n  nameWithType: TcpTransportElement.TcpTransportElement\n  fullName: TcpTransportElement.TcpTransportElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ApplyConfiguration\n  nameWithType: TcpTransportElement.ApplyConfiguration\n  fullName: TcpTransportElement.ApplyConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.BindingElementType*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: TcpTransportElement.BindingElementType\n  fullName: TcpTransportElement.BindingElementType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ConnectionPoolSettings\n  nameWithType: TcpTransportElement.ConnectionPoolSettings\n  fullName: TcpTransportElement.ConnectionPoolSettings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.CopyFrom*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: CopyFrom\n  nameWithType: TcpTransportElement.CopyFrom\n  fullName: TcpTransportElement.CopyFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.CreateDefaultBindingElement*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: CreateDefaultBindingElement\n  nameWithType: TcpTransportElement.CreateDefaultBindingElement\n  fullName: TcpTransportElement.CreateDefaultBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ExtendedProtectionPolicy*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportElement.ExtendedProtectionPolicy\n  fullName: TcpTransportElement.ExtendedProtectionPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.InitializeFrom*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: InitializeFrom\n  nameWithType: TcpTransportElement.InitializeFrom\n  fullName: TcpTransportElement.InitializeFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: TcpTransportElement.ListenBacklog\n  fullName: TcpTransportElement.ListenBacklog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: TcpTransportElement.PortSharingEnabled\n  fullName: TcpTransportElement.PortSharingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.Properties*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: Properties\n  nameWithType: TcpTransportElement.Properties\n  fullName: TcpTransportElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled*\n  parent: System.ServiceModel.Configuration.TcpTransportElement\n  isExternal: false\n  name: TeredoEnabled\n  nameWithType: TcpTransportElement.TeredoEnabled\n  fullName: TcpTransportElement.TeredoEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ServiceModelExtensionElement.IsModified()\n  fullName: ServiceModelExtensionElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ServiceModelExtensionElement.Reset(ConfigurationElement)\n  fullName: ServiceModelExtensionElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ServiceModelExtensionElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ServiceModelExtensionElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: ConfigurationElementName\n  nameWithType: ServiceModelExtensionElement.ConfigurationElementName\n  fullName: ServiceModelExtensionElement.ConfigurationElementName\n- uid: System.ServiceModel.Configuration.TransportElement.CreateBindingElement\n  parent: System.ServiceModel.Configuration.TransportElement\n  isExternal: false\n  name: CreateBindingElement()\n  nameWithType: TransportElement.CreateBindingElement()\n  fullName: TransportElement.CreateBindingElement()\n- uid: System.ServiceModel.Configuration.TransportElement.ManualAddressing\n  parent: System.ServiceModel.Configuration.TransportElement\n  isExternal: false\n  name: ManualAddressing\n  nameWithType: TransportElement.ManualAddressing\n  fullName: TransportElement.ManualAddressing\n- uid: System.ServiceModel.Configuration.TransportElement.MaxBufferPoolSize\n  parent: System.ServiceModel.Configuration.TransportElement\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: TransportElement.MaxBufferPoolSize\n  fullName: TransportElement.MaxBufferPoolSize\n- uid: System.ServiceModel.Configuration.TransportElement.MaxReceivedMessageSize\n  parent: System.ServiceModel.Configuration.TransportElement\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: TransportElement.MaxReceivedMessageSize\n  fullName: TransportElement.MaxReceivedMessageSize\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: ChannelInitializationTimeout\n  nameWithType: ConnectionOrientedTransportElement.ChannelInitializationTimeout\n  fullName: ConnectionOrientedTransportElement.ChannelInitializationTimeout\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: ConnectionBufferSize\n  nameWithType: ConnectionOrientedTransportElement.ConnectionBufferSize\n  fullName: ConnectionOrientedTransportElement.ConnectionBufferSize\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: ConnectionOrientedTransportElement.HostNameComparisonMode\n  fullName: ConnectionOrientedTransportElement.HostNameComparisonMode\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxBufferSize\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: ConnectionOrientedTransportElement.MaxBufferSize\n  fullName: ConnectionOrientedTransportElement.MaxBufferSize\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: MaxOutputDelay\n  nameWithType: ConnectionOrientedTransportElement.MaxOutputDelay\n  fullName: ConnectionOrientedTransportElement.MaxOutputDelay\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: MaxPendingAccepts\n  nameWithType: ConnectionOrientedTransportElement.MaxPendingAccepts\n  fullName: ConnectionOrientedTransportElement.MaxPendingAccepts\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: MaxPendingConnections\n  nameWithType: ConnectionOrientedTransportElement.MaxPendingConnections\n  fullName: ConnectionOrientedTransportElement.MaxPendingConnections\n- uid: System.ServiceModel.Configuration.ConnectionOrientedTransportElement.TransferMode\n  parent: System.ServiceModel.Configuration.ConnectionOrientedTransportElement\n  isExternal: false\n  name: TransferMode\n  nameWithType: ConnectionOrientedTransportElement.TransferMode\n  fullName: ConnectionOrientedTransportElement.TransferMode\n"}