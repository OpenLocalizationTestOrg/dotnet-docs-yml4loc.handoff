{"nodes":[{"content":"Represents an Access Control Entry (ACE) that contains a qualifier. The qualifier, represented by an <xref href=\"System.Security.AccessControl.AceQualifier\"></xref> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms. The <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonAce\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> classes.","nodes":[{"pos":[0,519],"content":"Represents an Access Control Entry (ACE) that contains a qualifier. The qualifier, represented by an <xref href=\"System.Security.AccessControl.AceQualifier\"></xref> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms. The <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonAce\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> classes.","nodes":[{"content":"Represents an Access Control Entry (ACE) that contains a qualifier.","pos":[0,67]},{"content":"The qualifier, represented by an <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AceQualifier\"&gt;&lt;/xref&gt;</ph> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","pos":[68,275],"source":" The qualifier, represented by an <xref href=\"System.Security.AccessControl.AceQualifier\"></xref> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> class is the abstract base class for the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.CommonAce\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> classes.","pos":[276,519],"source":" The <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonAce\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> classes."}]}],"pos":[736,1256],"yaml":true},{"content":"Gets a value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","nodes":[{"pos":[0,120],"content":"Gets a value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","nodes":[{"content":"Gets a value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","pos":[0,120]}]}],"pos":[4199,4320],"yaml":true},{"content":"A value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","nodes":[{"pos":[0,115],"content":"A value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","nodes":[{"content":"A value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.","pos":[0,115]}]}],"pos":[4501,4617],"yaml":true},{"content":"Returns the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.","nodes":[{"pos":[0,125],"content":"Returns the opaque callback data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object."}],"pos":[5908,6034],"yaml":true},{"content":"Opaque callback data is present only in callback Access Control Entries (ACEs).","nodes":[{"pos":[0,79],"content":"Opaque callback data is present only in callback Access Control Entries (ACEs).","nodes":[{"content":"Opaque callback data is present only in callback Access Control Entries (ACEs).","pos":[0,79]}]}],"pos":[6045,6125],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that represents the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.","nodes":[{"pos":[0,157],"content":"An array of byte values that represents the opaque callback data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of byte values that represents the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object."}],"pos":[6252,6410],"yaml":true},{"content":"Specifies whether this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object contains callback data.","nodes":[{"pos":[0,117],"content":"Specifies whether this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object contains callback data.","source":"Specifies whether this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object contains callback data."}],"pos":[7700,7818],"yaml":true},{"content":"`true` if this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object contains callback data; otherwise, false.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object contains callback data; otherwise, false.","source":"`true` if this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object contains callback data; otherwise, false."}],"pos":[7931,8061],"yaml":true},{"content":"Gets the length of the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object. This property is valid only for callback Access Control Entries (ACEs).","nodes":[{"pos":[0,208],"content":"Gets the length of the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object. This property is valid only for callback Access Control Entries (ACEs).","nodes":[{"content":"Gets the length of the opaque callback data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,136],"source":"Gets the length of the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object."},{"content":"This property is valid only for callback Access Control Entries (ACEs).","pos":[137,208]}]}],"pos":[9364,9573],"yaml":true},{"content":"The length of the opaque callback data.","nodes":[{"pos":[0,39],"content":"The length of the opaque callback data.","nodes":[{"content":"The length of the opaque callback data.","pos":[0,39]}]}],"pos":[9685,9725],"yaml":true},{"content":"Sets the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.","nodes":[{"pos":[0,122],"content":"Sets the opaque callback data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object."}],"pos":[11079,11202],"yaml":true},{"content":"Opaque callback data is present only in callback Access Control Entries (ACEs).","nodes":[{"pos":[0,79],"content":"Opaque callback data is present only in callback Access Control Entries (ACEs).","nodes":[{"content":"Opaque callback data is present only in callback Access Control Entries (ACEs).","pos":[0,79]}]}],"pos":[11213,11293],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that represents the opaque callback data for this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.","nodes":[{"pos":[0,145],"content":"An array of byte values that represents the opaque callback data for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.QualifiedAce\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of byte values that represents the opaque callback data for this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object."}],"pos":[11433,11579],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.QualifiedAce\n  commentId: T:System.Security.AccessControl.QualifiedAce\n  id: QualifiedAce\n  children:\n  - System.Security.AccessControl.QualifiedAce.AceQualifier\n  - System.Security.AccessControl.QualifiedAce.GetOpaque\n  - System.Security.AccessControl.QualifiedAce.IsCallback\n  - System.Security.AccessControl.QualifiedAce.OpaqueLength\n  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  langs:\n  - csharp\n  name: QualifiedAce\n  nameWithType: QualifiedAce\n  fullName: System.Security.AccessControl.QualifiedAce\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents an Access Control Entry (ACE) that contains a qualifier. The qualifier, represented by an <xref href=\"System.Security.AccessControl.AceQualifier\"></xref> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms. The <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonAce\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> classes.\n  syntax:\n    content: 'public abstract class QualifiedAce : System.Security.AccessControl.KnownAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  derivedClasses:\n  - System.Security.AccessControl.CommonAce\n  - System.Security.AccessControl.ObjectAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.BinaryLength\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.QualifiedAce.AceQualifier\n  commentId: P:System.Security.AccessControl.QualifiedAce.AceQualifier\n  id: AceQualifier\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: AceQualifier\n  nameWithType: QualifiedAce.AceQualifier\n  fullName: QualifiedAce.AceQualifier\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.\n  syntax:\n    content: public System.Security.AccessControl.AceQualifier AceQualifier { get; }\n    return:\n      type: System.Security.AccessControl.AceQualifier\n      description: A value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.\n  overload: System.Security.AccessControl.QualifiedAce.AceQualifier*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.QualifiedAce.GetOpaque\n  commentId: M:System.Security.AccessControl.QualifiedAce.GetOpaque\n  id: GetOpaque\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: GetOpaque()\n  nameWithType: QualifiedAce.GetOpaque()\n  fullName: QualifiedAce.GetOpaque()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.\n  remarks: Opaque callback data is present only in callback Access Control Entries (ACEs).\n  syntax:\n    content: public byte[] GetOpaque ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of byte values that represents the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.\n  overload: System.Security.AccessControl.QualifiedAce.GetOpaque*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.QualifiedAce.IsCallback\n  commentId: P:System.Security.AccessControl.QualifiedAce.IsCallback\n  id: IsCallback\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: IsCallback\n  nameWithType: QualifiedAce.IsCallback\n  fullName: QualifiedAce.IsCallback\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Specifies whether this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object contains callback data.\n  syntax:\n    content: public bool IsCallback { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object contains callback data; otherwise, false.'\n  overload: System.Security.AccessControl.QualifiedAce.IsCallback*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength\n  commentId: P:System.Security.AccessControl.QualifiedAce.OpaqueLength\n  id: OpaqueLength\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: OpaqueLength\n  nameWithType: QualifiedAce.OpaqueLength\n  fullName: QualifiedAce.OpaqueLength\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length of the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object. This property is valid only for callback Access Control Entries (ACEs).\n  syntax:\n    content: public int OpaqueLength { get; }\n    return:\n      type: System.Int32\n      description: The length of the opaque callback data.\n  overload: System.Security.AccessControl.QualifiedAce.OpaqueLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  commentId: M:System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  id: SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: SetOpaque(Byte[])\n  nameWithType: QualifiedAce.SetOpaque(Byte[])\n  fullName: QualifiedAce.SetOpaque(Byte[])\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the opaque callback data associated with this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.\n  remarks: Opaque callback data is present only in callback Access Control Entries (ACEs).\n  syntax:\n    content: public void SetOpaque (byte[] opaque);\n    parameters:\n    - id: opaque\n      type: System.Byte[]\n      description: An array of byte values that represents the opaque callback data for this <xref href=\"System.Security.AccessControl.QualifiedAce\"></xref> object.\n  overload: System.Security.AccessControl.QualifiedAce.SetOpaque*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.KnownAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: KnownAce\n  nameWithType: KnownAce\n  fullName: System.Security.AccessControl.KnownAce\n- uid: System.Security.AccessControl.QualifiedAce.AceQualifier\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: AceQualifier\n  nameWithType: QualifiedAce.AceQualifier\n  fullName: QualifiedAce.AceQualifier\n- uid: System.Security.AccessControl.AceQualifier\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceQualifier\n  nameWithType: AceQualifier\n  fullName: System.Security.AccessControl.AceQualifier\n- uid: System.Security.AccessControl.QualifiedAce.GetOpaque\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: GetOpaque()\n  nameWithType: QualifiedAce.GetOpaque()\n  fullName: QualifiedAce.GetOpaque()\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.QualifiedAce.IsCallback\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: IsCallback\n  nameWithType: QualifiedAce.IsCallback\n  fullName: QualifiedAce.IsCallback\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: QualifiedAce.OpaqueLength\n  fullName: QualifiedAce.OpaqueLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: SetOpaque(Byte[])\n  nameWithType: QualifiedAce.SetOpaque(Byte[])\n  fullName: QualifiedAce.SetOpaque(Byte[])\n- uid: System.Security.AccessControl.QualifiedAce.AceQualifier*\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: AceQualifier\n  nameWithType: QualifiedAce.AceQualifier\n  fullName: QualifiedAce.AceQualifier\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n- uid: System.Security.AccessControl.QualifiedAce.GetOpaque*\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: GetOpaque\n  nameWithType: QualifiedAce.GetOpaque\n  fullName: QualifiedAce.GetOpaque\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n- uid: System.Security.AccessControl.QualifiedAce.IsCallback*\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: IsCallback\n  nameWithType: QualifiedAce.IsCallback\n  fullName: QualifiedAce.IsCallback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength*\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: QualifiedAce.OpaqueLength\n  fullName: QualifiedAce.OpaqueLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n- uid: System.Security.AccessControl.QualifiedAce.SetOpaque*\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: SetOpaque\n  nameWithType: QualifiedAce.SetOpaque\n  fullName: QualifiedAce.SetOpaque\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml\n- uid: System.Security.AccessControl.GenericAce.Equals(System.Object)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GenericAce.Equals(Object)\n  fullName: GenericAce.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.AccessControl.GenericAce.GetHashCode\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GenericAce.GetHashCode()\n  fullName: GenericAce.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.GenericAce.AceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceFlags\n  nameWithType: GenericAce.AceFlags\n  fullName: GenericAce.AceFlags\n- uid: System.Security.AccessControl.GenericAce.AceType\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceType\n  nameWithType: GenericAce.AceType\n  fullName: GenericAce.AceType\n- uid: System.Security.AccessControl.GenericAce.AuditFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AuditFlags\n  nameWithType: GenericAce.AuditFlags\n  fullName: GenericAce.AuditFlags\n- uid: System.Security.AccessControl.GenericAce.BinaryLength\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: GenericAce.BinaryLength\n  fullName: GenericAce.BinaryLength\n- uid: System.Security.AccessControl.GenericAce.Copy\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Copy()\n  nameWithType: GenericAce.Copy()\n  fullName: GenericAce.Copy()\n- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: CreateFromBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n  fullName: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.GetBinaryForm(Byte[], Int32)\n  fullName: GenericAce.GetBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.GenericAce.InheritanceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: GenericAce.InheritanceFlags\n  fullName: GenericAce.InheritanceFlags\n- uid: System.Security.AccessControl.GenericAce.IsInherited\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: IsInherited\n  nameWithType: GenericAce.IsInherited\n  fullName: GenericAce.IsInherited\n- uid: System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Equality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Equality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Equality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Inequality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Inequality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Inequality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.PropagationFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: GenericAce.PropagationFlags\n  fullName: GenericAce.PropagationFlags\n- uid: System.Security.AccessControl.KnownAce.AccessMask\n  parent: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: AccessMask\n  nameWithType: KnownAce.AccessMask\n  fullName: KnownAce.AccessMask\n- uid: System.Security.AccessControl.KnownAce.SecurityIdentifier\n  parent: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: KnownAce.SecurityIdentifier\n  fullName: KnownAce.SecurityIdentifier\n"}