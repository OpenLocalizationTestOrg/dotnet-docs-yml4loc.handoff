{"nodes":[{"content":"A group of replaceable monitor objects used by ASP.NET subsystems to maintain application health.","nodes":[{"pos":[0,97],"content":"A group of replaceable monitor objects used by ASP.NET subsystems to maintain application health.","nodes":[{"content":"A group of replaceable monitor objects used by ASP.NET subsystems to maintain application health.","pos":[0,97]}]}],"pos":[452,550],"yaml":true},{"content":"Gets or sets a memory monitor. Setting this property (even null) will stop and dispose any previously assigned monitor. For the default implementation see <xref href=\"System.Web.Hosting.AspNetMemoryMonitor\"></xref>.","nodes":[{"pos":[0,215],"content":"Gets or sets a memory monitor. Setting this property (even null) will stop and dispose any previously assigned monitor. For the default implementation see <xref href=\"System.Web.Hosting.AspNetMemoryMonitor\"></xref>.","nodes":[{"content":"Gets or sets a memory monitor.","pos":[0,30]},{"content":"Setting this property (even null) will stop and dispose any previously assigned monitor.","pos":[31,119]},{"content":"For the default implementation see <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.AspNetMemoryMonitor\"&gt;&lt;/xref&gt;</ph>.","pos":[120,215],"source":" For the default implementation see <xref href=\"System.Web.Hosting.AspNetMemoryMonitor\"></xref>."}]}],"pos":[1653,1869],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.ApplicationMonitors\n  commentId: T:System.Web.Hosting.ApplicationMonitors\n  id: ApplicationMonitors\n  children:\n  - System.Web.Hosting.ApplicationMonitors.MemoryMonitor\n  langs:\n  - csharp\n  name: ApplicationMonitors\n  nameWithType: ApplicationMonitors\n  fullName: System.Web.Hosting.ApplicationMonitors\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: A group of replaceable monitor objects used by ASP.NET subsystems to maintain application health.\n  syntax:\n    content: public sealed class ApplicationMonitors\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationMonitors.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationMonitors.MemoryMonitor\n  commentId: P:System.Web.Hosting.ApplicationMonitors.MemoryMonitor\n  id: MemoryMonitor\n  parent: System.Web.Hosting.ApplicationMonitors\n  langs:\n  - csharp\n  name: MemoryMonitor\n  nameWithType: ApplicationMonitors.MemoryMonitor\n  fullName: ApplicationMonitors.MemoryMonitor\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets or sets a memory monitor. Setting this property (even null) will stop and dispose any previously assigned monitor. For the default implementation see <xref href=\"System.Web.Hosting.AspNetMemoryMonitor\"></xref>.\n  syntax:\n    content: public System.Web.Hosting.IApplicationMonitor MemoryMonitor { get; set; }\n    return:\n      type: System.Web.Hosting.IApplicationMonitor\n      description: ''\n  overload: System.Web.Hosting.ApplicationMonitors.MemoryMonitor*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationMonitors.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.ApplicationMonitors.MemoryMonitor\n  parent: System.Web.Hosting.ApplicationMonitors\n  isExternal: false\n  name: MemoryMonitor\n  nameWithType: ApplicationMonitors.MemoryMonitor\n  fullName: ApplicationMonitors.MemoryMonitor\n- uid: System.Web.Hosting.IApplicationMonitor\n  parent: System.Web.Hosting\n  isExternal: false\n  name: IApplicationMonitor\n  nameWithType: IApplicationMonitor\n  fullName: System.Web.Hosting.IApplicationMonitor\n- uid: System.Web.Hosting.ApplicationMonitors.MemoryMonitor*\n  parent: System.Web.Hosting.ApplicationMonitors\n  isExternal: false\n  name: MemoryMonitor\n  nameWithType: ApplicationMonitors.MemoryMonitor\n  fullName: ApplicationMonitors.MemoryMonitor\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationMonitors.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}