{"nodes":[{"content":"Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.","nodes":[{"pos":[0,156],"content":"Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.","nodes":[{"content":"Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.","pos":[0,156]}]}],"pos":[1159,1316],"yaml":true},{"content":"Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface. However, parameters for passing the store into <xref:System.Xaml.AttachablePropertyServices> are not typed as the interface and are instead typed as `object`. This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.  \n  \n Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store. Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use. Passing `null` enters code paths that do nothing. Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store.","nodes":[{"pos":[0,436],"content":"Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface. However, parameters for passing the store into <xref:System.Xaml.AttachablePropertyServices> are not typed as the interface and are instead typed as `object`. This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.","nodes":[{"content":"Most functionality in this class relies on an attached property store, which generally implements the <ph id=\"ph1\">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> interface.","pos":[0,154],"source":"Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface."},{"content":"However, parameters for passing the store into <ph id=\"ph1\">&lt;xref:System.Xaml.AttachablePropertyServices&gt;</ph> are not typed as the interface and are instead typed as <ph id=\"ph2\">`object`</ph>.","pos":[155,313],"source":" However, parameters for passing the store into <xref:System.Xaml.AttachablePropertyServices> are not typed as the interface and are instead typed as `object`."},{"content":"This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.","pos":[314,436]}]},{"pos":[443,877],"content":"Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store. Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use. Passing `null` enters code paths that do nothing. Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store.","nodes":[{"content":"Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store.","pos":[0,111]},{"content":"Do not pass <ph id=\"ph1\">`null`</ph> to indicate that you do not have an <ph id=\"ph2\">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> to use.","pos":[112,216],"source":" Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use."},{"content":"Passing <ph id=\"ph1\">`null`</ph> enters code paths that do nothing.","pos":[217,266],"source":" Passing `null` enters code paths that do nothing."},{"content":"Passing an object that is non-null, but evaluates as <ph id=\"ph1\">`null`</ph> on an attempted <ph id=\"ph2\">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> cast, uses the default attachable property store.","pos":[267,434],"source":" Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store."}]}],"pos":[1327,2209],"yaml":true,"extradata":"MT"},{"content":"Copies all attachable property/value pairs from a specified attachable property store and into a destination array.","nodes":[{"pos":[0,115],"content":"Copies all attachable property/value pairs from a specified attachable property store and into a destination array.","nodes":[{"content":"Copies all attachable property/value pairs from a specified attachable property store and into a destination array.","pos":[0,115]}]}],"pos":[4135,4251],"yaml":true},{"content":"Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.","nodes":[{"pos":[0,234],"content":"Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.","nodes":[{"content":"Calling this method invokes an underlying <ph id=\"ph1\">&lt;xref:System.Collections.Generic.ICollection%601.CopyTo%2A&gt;</ph> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.","pos":[0,234],"source":"Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic."}]}],"pos":[4262,4497],"yaml":true,"extradata":"MT"},{"content":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.","nodes":[{"pos":[0,186],"content":"A specific attachable property store that implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IAttachedPropertyStore\"&gt;&lt;/xref&gt;</ph>; or any non-null object to access a static default attachable property store.","source":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store."}],"pos":[4762,4949],"yaml":true},{"content":"The destination array. The array is a generic array, should be passed undimensioned, and should have components of <xref href=\"System.Xaml.AttachableMemberIdentifier\"></xref> and `object`.","nodes":[{"pos":[0,188],"content":"The destination array. The array is a generic array, should be passed undimensioned, and should have components of <xref href=\"System.Xaml.AttachableMemberIdentifier\"></xref> and `object`.","nodes":[{"content":"The destination array.","pos":[0,22]},{"content":"The array is a generic array, should be passed undimensioned, and should have components of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.AttachableMemberIdentifier\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">`object`</ph>.","pos":[23,188],"source":" The array is a generic array, should be passed undimensioned, and should have components of <xref href=\"System.Xaml.AttachableMemberIdentifier\"></xref> and `object`."}]}],"pos":[5092,5281],"yaml":true},{"content":"The source index into which to copy.","nodes":[{"pos":[0,36],"content":"The source index into which to copy.","nodes":[{"content":"The source index into which to copy.","pos":[0,36]}]}],"pos":[5341,5378],"yaml":true},{"content":"Returns the count of the attachable property entries that are in the specified store.","nodes":[{"pos":[0,85],"content":"Returns the count of the attachable property entries that are in the specified store.","nodes":[{"content":"Returns the count of the attachable property entries that are in the specified store.","pos":[0,85]}]}],"pos":[6523,6609],"yaml":true},{"content":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.","nodes":[{"pos":[0,186],"content":"A specific attachable property store that implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IAttachedPropertyStore\"&gt;&lt;/xref&gt;</ph>; or any non-null object to access a static default attachable property store.","source":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store."}],"pos":[6774,6961],"yaml":true},{"content":"The integer count of entries in the store.","nodes":[{"pos":[0,42],"content":"The integer count of entries in the store.","nodes":[{"content":"The integer count of entries in the store.","pos":[0,42]}]}],"pos":[7017,7060],"yaml":true},{"content":"Removes the entry for the specified attachable property from the specified store.","nodes":[{"pos":[0,81],"content":"Removes the entry for the specified attachable property from the specified store.","nodes":[{"content":"Removes the entry for the specified attachable property from the specified store.","pos":[0,81]}]}],"pos":[8354,8436],"yaml":true},{"content":"Stores are per instance; therefore, in a store, the `name` value should be unambiguous.","nodes":[{"pos":[0,87],"content":"Stores are per instance; therefore, in a store, the <ph id=\"ph1\">`name`</ph> value should be unambiguous.","source":"Stores are per instance; therefore, in a store, the `name` value should be unambiguous."}],"pos":[8447,8535],"yaml":true,"extradata":"MT"},{"content":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.","nodes":[{"pos":[0,186],"content":"A specific attachable property store that implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IAttachedPropertyStore\"&gt;&lt;/xref&gt;</ph>; or any non-null object to access a static default attachable property store.","source":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store."}],"pos":[8736,8923],"yaml":true},{"content":"The identifier for the attachable property entry to remove from the store.","nodes":[{"pos":[0,74],"content":"The identifier for the attachable property entry to remove from the store.","nodes":[{"content":"The identifier for the attachable property entry to remove from the store.","pos":[0,74]}]}],"pos":[9008,9083],"yaml":true},{"content":"`true` if an attachable property entry for <code>name</code> was found in the store and removed from it; otherwise, `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if an attachable property entry for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> was found in the store and removed from it; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if an attachable property entry for <code>name</code> was found in the store and removed from it; otherwise, `false`."}],"pos":[9141,9268],"yaml":true},{"content":"Sets a value for the specified attachable property in the specified store.","nodes":[{"pos":[0,74],"content":"Sets a value for the specified attachable property in the specified store.","nodes":[{"content":"Sets a value for the specified attachable property in the specified store.","pos":[0,74]}]}],"pos":[10600,10675],"yaml":true},{"content":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to use a static default attachable property store.","nodes":[{"pos":[0,183],"content":"A specific attachable property store that implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IAttachedPropertyStore\"&gt;&lt;/xref&gt;</ph>; or any non-null object to use a static default attachable property store.","source":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to use a static default attachable property store."}],"pos":[10887,11071],"yaml":true},{"content":"The identifier of the attachable property entry for which to set a value.","nodes":[{"pos":[0,73],"content":"The identifier of the attachable property entry for which to set a value.","nodes":[{"content":"The identifier of the attachable property entry for which to set a value.","pos":[0,73]}]}],"pos":[11156,11230],"yaml":true},{"content":"The value to set.","nodes":[{"pos":[0,17],"content":"The value to set.","nodes":[{"content":"The value to set.","pos":[0,17]}]}],"pos":[11291,11309],"yaml":true},{"content":"A value could not be set in the store.","nodes":[{"pos":[0,38],"content":"A value could not be set in the store.","nodes":[{"content":"A value could not be set in the store.","pos":[0,38]}]}],"pos":[11497,11536],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[11638,11667],"yaml":true},{"content":"Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.","nodes":[{"pos":[0,178],"content":"Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.","nodes":[{"content":"Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.","pos":[0,178],"nodes":[{"content":"Attempts to get a value for the specified attachable property in the specified store.","pos":[0,85]},{"content":"Does not throw an exception if the specific attachable property does not exist in the store.","pos":[86,178]}]}]}],"pos":[12936,13115],"yaml":true},{"content":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to use a static default attachable property store.","nodes":[{"pos":[0,183],"content":"A specific attachable property store that implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IAttachedPropertyStore\"&gt;&lt;/xref&gt;</ph>; or any non-null object to use a static default attachable property store.","source":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to use a static default attachable property store."}],"pos":[13334,13518],"yaml":true},{"content":"The identifier of the attachable property entry for which to get a value.","nodes":[{"pos":[0,73],"content":"The identifier of the attachable property entry for which to get a value.","nodes":[{"content":"The identifier of the attachable property entry for which to get a value.","pos":[0,73]}]}],"pos":[13603,13677],"yaml":true},{"content":"Out parameter. When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value.","nodes":[{"pos":[0,144],"content":"Out parameter. When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value.","nodes":[{"content":"Out parameter.","pos":[0,14]},{"content":"When this method returns, contains the destination object for the value if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> exists in the store and has a value.","pos":[15,144],"source":" When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value."}]}],"pos":[13738,13883],"yaml":true},{"content":"`true` if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, `false`.","nodes":[{"pos":[0,149],"content":"<ph id=\"ph1\">`true`</ph> if an attachable property entry for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> was found in the store and a value was posted to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, `false`."}],"pos":[13941,14093],"yaml":true},{"content":"Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.","nodes":[{"pos":[0,211],"content":"Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.","nodes":[{"content":"Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.","pos":[0,211],"nodes":[{"content":"Attempts to get a value for the specified attachable property in the specified store, returning a generic output form.","pos":[0,118]},{"content":"Does not throw an exception if the specific attachable property does not exist in the store.","pos":[119,211]}]}]}],"pos":[15419,15631],"yaml":true},{"content":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.","nodes":[{"pos":[0,186],"content":"A specific attachable property store that implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IAttachedPropertyStore\"&gt;&lt;/xref&gt;</ph>; or any non-null object to access a static default attachable property store.","source":"A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store."}],"pos":[15848,16035],"yaml":true},{"content":"The identifier of the attachable property entry for which to get a value.","nodes":[{"pos":[0,73],"content":"The identifier of the attachable property entry for which to get a value.","nodes":[{"content":"The identifier of the attachable property entry for which to get a value.","pos":[0,73]}]}],"pos":[16120,16194],"yaml":true},{"content":"Out parameter. When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value.","nodes":[{"pos":[0,144],"content":"Out parameter. When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value.","nodes":[{"content":"Out parameter.","pos":[0,14]},{"content":"When this method returns, contains the destination object for the value if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> exists in the store and has a value.","pos":[15,144],"source":" When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value."}]}],"pos":[16243,16388],"yaml":true},{"content":"The expected type of the output.","nodes":[{"pos":[0,32],"content":"The expected type of the output.","nodes":[{"content":"The expected type of the output.","pos":[0,32]}]}],"pos":[16439,16472],"yaml":true},{"content":"`true` if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, `false`.","nodes":[{"pos":[0,149],"content":"<ph id=\"ph1\">`true`</ph> if an attachable property entry for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> was found in the store and a value was posted to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, `false`."}],"pos":[16530,16682],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.AttachablePropertyServices\n  commentId: T:System.Xaml.AttachablePropertyServices\n  id: AttachablePropertyServices\n  children:\n  - System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)\n  - System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)\n  - System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)\n  - System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)\n  - System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)\n  - System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)\n  langs:\n  - csharp\n  name: AttachablePropertyServices\n  nameWithType: AttachablePropertyServices\n  fullName: System.Xaml.AttachablePropertyServices\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.\n  remarks: \"Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface. However, parameters for passing the store into <xref:System.Xaml.AttachablePropertyServices> are not typed as the interface and are instead typed as `object`. This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.  \\n  \\n Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store. Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use. Passing `null` enters code paths that do nothing. Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store.\"\n  syntax:\n    content: public static class AttachablePropertyServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)\n  commentId: M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)\n  id: CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)\n  parent: System.Xaml.AttachablePropertyServices\n  langs:\n  - csharp\n  name: CopyPropertiesTo(Object, KeyValuePair<AttachableMemberIdentifier,Object>[], Int32)\n  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object, KeyValuePair<AttachableMemberIdentifier,Object>[], Int32)\n  fullName: AttachablePropertyServices.CopyPropertiesTo(Object, KeyValuePair<AttachableMemberIdentifier,Object>[], Int32)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Copies all attachable property/value pairs from a specified attachable property store and into a destination array.\n  remarks: Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.\n  syntax:\n    content: public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,object>[] array, int index);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]\n      description: The destination array. The array is a generic array, should be passed undimensioned, and should have components of <xref href=\"System.Xaml.AttachableMemberIdentifier\"></xref> and `object`.\n    - id: index\n      type: System.Int32\n      description: The source index into which to copy.\n  overload: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)\n  commentId: M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)\n  id: GetAttachedPropertyCount(System.Object)\n  parent: System.Xaml.AttachablePropertyServices\n  langs:\n  - csharp\n  name: GetAttachedPropertyCount(Object)\n  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)\n  fullName: AttachablePropertyServices.GetAttachedPropertyCount(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the count of the attachable property entries that are in the specified store.\n  syntax:\n    content: public static int GetAttachedPropertyCount (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.\n    return:\n      type: System.Int32\n      description: The integer count of entries in the store.\n  overload: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)\n  commentId: M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)\n  id: RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)\n  parent: System.Xaml.AttachablePropertyServices\n  langs:\n  - csharp\n  name: RemoveProperty(Object, AttachableMemberIdentifier)\n  nameWithType: AttachablePropertyServices.RemoveProperty(Object, AttachableMemberIdentifier)\n  fullName: AttachablePropertyServices.RemoveProperty(Object, AttachableMemberIdentifier)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Removes the entry for the specified attachable property from the specified store.\n  remarks: Stores are per instance; therefore, in a store, the `name` value should be unambiguous.\n  syntax:\n    content: public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.\n    - id: name\n      type: System.Xaml.AttachableMemberIdentifier\n      description: The identifier for the attachable property entry to remove from the store.\n    return:\n      type: System.Boolean\n      description: '`true` if an attachable property entry for <code>name</code> was found in the store and removed from it; otherwise, `false`.'\n  overload: System.Xaml.AttachablePropertyServices.RemoveProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)\n  commentId: M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)\n  id: SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)\n  parent: System.Xaml.AttachablePropertyServices\n  langs:\n  - csharp\n  name: SetProperty(Object, AttachableMemberIdentifier, Object)\n  nameWithType: AttachablePropertyServices.SetProperty(Object, AttachableMemberIdentifier, Object)\n  fullName: AttachablePropertyServices.SetProperty(Object, AttachableMemberIdentifier, Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Sets a value for the specified attachable property in the specified store.\n  syntax:\n    content: public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to use a static default attachable property store.\n    - id: name\n      type: System.Xaml.AttachableMemberIdentifier\n      description: The identifier of the attachable property entry for which to set a value.\n    - id: value\n      type: System.Object\n      description: The value to set.\n  overload: System.Xaml.AttachablePropertyServices.SetProperty*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A value could not be set in the store.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)\n  commentId: M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)\n  id: TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)\n  parent: System.Xaml.AttachablePropertyServices\n  langs:\n  - csharp\n  name: TryGetProperty(Object, AttachableMemberIdentifier, Object)\n  nameWithType: AttachablePropertyServices.TryGetProperty(Object, AttachableMemberIdentifier, Object)\n  fullName: AttachablePropertyServices.TryGetProperty(Object, AttachableMemberIdentifier, Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.\n  syntax:\n    content: public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to use a static default attachable property store.\n    - id: name\n      type: System.Xaml.AttachableMemberIdentifier\n      description: The identifier of the attachable property entry for which to get a value.\n    - id: value\n      type: System.Object\n      description: Out parameter. When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value.\n    return:\n      type: System.Boolean\n      description: '`true` if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, `false`.'\n  overload: System.Xaml.AttachablePropertyServices.TryGetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)\n  commentId: M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)\n  id: TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)\n  parent: System.Xaml.AttachablePropertyServices\n  langs:\n  - csharp\n  name: TryGetProperty<T>(Object, AttachableMemberIdentifier, T)\n  nameWithType: AttachablePropertyServices.TryGetProperty<T>(Object, AttachableMemberIdentifier, T)\n  fullName: AttachablePropertyServices.TryGetProperty<T>(Object, AttachableMemberIdentifier, T)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.\n  syntax:\n    content: public static bool TryGetProperty<T> (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A specific attachable property store that implements <xref href=\"System.Xaml.IAttachedPropertyStore\"></xref>; or any non-null object to access a static default attachable property store.\n    - id: name\n      type: System.Xaml.AttachableMemberIdentifier\n      description: The identifier of the attachable property entry for which to get a value.\n    - id: value\n      type: T\n      description: Out parameter. When this method returns, contains the destination object for the value if <code>name</code> exists in the store and has a value.\n    typeParameters:\n    - id: T\n      description: The expected type of the output.\n    return:\n      type: System.Boolean\n      description: '`true` if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, `false`.'\n  overload: System.Xaml.AttachablePropertyServices.TryGetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: CopyPropertiesTo(Object, KeyValuePair<AttachableMemberIdentifier,Object>[], Int32)\n  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object, KeyValuePair<AttachableMemberIdentifier,Object>[], Int32)\n  fullName: AttachablePropertyServices.CopyPropertiesTo(Object, KeyValuePair<AttachableMemberIdentifier,Object>[], Int32)\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Xaml.AttachableMemberIdentifier\n  name: AttachableMemberIdentifier\n  nameWithType: AttachableMemberIdentifier\n  fullName: System.Xaml.AttachableMemberIdentifier\n- uid: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<AttachableMemberIdentifier,Object>[]\n  nameWithType: KeyValuePair<AttachableMemberIdentifier,Object>[]\n  fullName: System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.AttachableMemberIdentifier\n    name: AttachableMemberIdentifier\n    nameWithType: AttachableMemberIdentifier\n    fullName: System.Xaml.AttachableMemberIdentifier\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: GetAttachedPropertyCount(Object)\n  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)\n  fullName: AttachablePropertyServices.GetAttachedPropertyCount(Object)\n- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: RemoveProperty(Object, AttachableMemberIdentifier)\n  nameWithType: AttachablePropertyServices.RemoveProperty(Object, AttachableMemberIdentifier)\n  fullName: AttachablePropertyServices.RemoveProperty(Object, AttachableMemberIdentifier)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: SetProperty(Object, AttachableMemberIdentifier, Object)\n  nameWithType: AttachablePropertyServices.SetProperty(Object, AttachableMemberIdentifier, Object)\n  fullName: AttachablePropertyServices.SetProperty(Object, AttachableMemberIdentifier, Object)\n- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: TryGetProperty(Object, AttachableMemberIdentifier, Object)\n  nameWithType: AttachablePropertyServices.TryGetProperty(Object, AttachableMemberIdentifier, Object)\n  fullName: AttachablePropertyServices.TryGetProperty(Object, AttachableMemberIdentifier, Object)\n- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: TryGetProperty<T>(Object, AttachableMemberIdentifier, T)\n  nameWithType: AttachablePropertyServices.TryGetProperty<T>(Object, AttachableMemberIdentifier, T)\n  fullName: AttachablePropertyServices.TryGetProperty<T>(Object, AttachableMemberIdentifier, T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: CopyPropertiesTo\n  nameWithType: AttachablePropertyServices.CopyPropertiesTo\n  fullName: AttachablePropertyServices.CopyPropertiesTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: GetAttachedPropertyCount\n  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount\n  fullName: AttachablePropertyServices.GetAttachedPropertyCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n- uid: System.Xaml.AttachablePropertyServices.RemoveProperty*\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: RemoveProperty\n  nameWithType: AttachablePropertyServices.RemoveProperty\n  fullName: AttachablePropertyServices.RemoveProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n- uid: System.Xaml.AttachablePropertyServices.SetProperty*\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: SetProperty\n  nameWithType: AttachablePropertyServices.SetProperty\n  fullName: AttachablePropertyServices.SetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n- uid: System.Xaml.AttachablePropertyServices.TryGetProperty*\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: TryGetProperty\n  nameWithType: AttachablePropertyServices.TryGetProperty\n  fullName: AttachablePropertyServices.TryGetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1*\n  parent: System.Xaml.AttachablePropertyServices\n  isExternal: false\n  name: TryGetProperty<T>\n  nameWithType: AttachablePropertyServices.TryGetProperty<T>\n  fullName: AttachablePropertyServices.TryGetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/AttachablePropertyServices.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}