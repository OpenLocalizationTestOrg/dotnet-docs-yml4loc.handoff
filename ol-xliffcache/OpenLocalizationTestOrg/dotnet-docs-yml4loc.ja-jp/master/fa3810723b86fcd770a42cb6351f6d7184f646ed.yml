### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.ITree`2
  commentId: T:Microsoft.VisualC.StlClr.ITree`2
  id: ITree`2
  children:
  - Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.clear
  - Microsoft.VisualC.StlClr.ITree`2.count(`0)
  - Microsoft.VisualC.StlClr.ITree`2.empty
  - Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  - Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  - Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  - Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  - Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  - Microsoft.VisualC.StlClr.ITree`2.key_comp
  - Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.size
  - Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  - Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.value_comp
  langs:
  - csharp
  name: ITree<TKey,TValue>
  nameWithType: ITree<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>
  type: Interface
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Defines the interface of the STL/CLR <code>hash_map</code>, <code>hash_multimap</code>, <code>hash_set</code>, and <code>hash_multiset</code> objects.
  remarks: "[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  \n  \n For more information, see [hash_map (STL/CLR)](http://msdn.microsoft.com/library/c3cfc69b-04c6-42ae-a30e-0eda953fe883), [hash_multimap (STL/CLR)](http://msdn.microsoft.com/library/cd78687b-8a05-48e0-9d22-8b8194ae3b0b), [hash_set (STL/CLR)](http://msdn.microsoft.com/library/d110e356-ba3e-4e52-9e2d-d997bf975c96), and [hash_multiset (STL/CLR)](http://msdn.microsoft.com/library/8462bd21-6829-4dd3-ac81-c42d6fdf92f0)."
  syntax:
    content: 'public interface ITree<TKey,TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection'
    typeParameters:
    - id: TKey
      description: The type of the key component of an element in the controlled sequence.
    - id: TValue
      description: The type of the value component of an element in the controlled sequence.
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer{TValue}
  - System.Collections.ICollection
  - System.ICloneable
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: begin(ContainerBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the beginning of the controlled sequence.
  remarks: For more information, see [hash_map::begin (STL/CLR)](http://msdn.microsoft.com/library/b2ff4605-ac37-4456-8299-b3bcccdbe45a), [hash_multimap::begin (STL/CLR)](http://msdn.microsoft.com/library/7f8d51c1-8183-4dc1-9dfc-f58dbf594c42), [hash_set::begin (STL/CLR)](http://msdn.microsoft.com/library/1bd02b6b-0e24-4f42-ad13-fd7776f7f811), and [hash_multiset::begin (STL/CLR)](http://msdn.microsoft.com/library/f03fc205-cbc9-4054-ac6d-41ad526edfea).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.begin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.clear
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.clear
  id: clear
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: clear()
  nameWithType: ITree<TKey,TValue>.clear()
  fullName: ITree<TKey,TValue>.clear()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes all elements from the container.
  remarks: For more information, see [hash_map::clear (STL/CLR)](http://msdn.microsoft.com/library/a2782336-f130-4e27-923e-7dd43c542d30), [hash_multimap::clear (STL/CLR)](http://msdn.microsoft.com/library/8ad99f08-93b3-42b7-be07-f9a8ec556554), [hash_set::clear (STL/CLR)](http://msdn.microsoft.com/library/9f38b72a-5db8-485a-b41a-7d47ac57f4a9), and [hash_multiset::clear (STL/CLR)](http://msdn.microsoft.com/library/2253d5e3-38e6-4ad4-aff4-b546fe95830f).
  syntax:
    content: public void clear ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.ITree`2.clear*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.count(`0)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.count(`0)
  id: count(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: count(TKey)
  nameWithType: ITree<TKey,TValue>.count(TKey)
  fullName: ITree<TKey,TValue>.count(TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Finds the number of elements that match a specified key.
  remarks: For more information, see [hash_map::count (STL/CLR)](http://msdn.microsoft.com/library/1d02f764-d24f-4c8c-8a62-63074fe49aa8), [hash_multimap::count (STL/CLR)](http://msdn.microsoft.com/library/a4bc5b19-e025-4063-9797-304ab4ba08aa), [hash_set::count (STL/CLR)](http://msdn.microsoft.com/library/99dbaef5-64fd-4bef-bac4-a6072dd231f1), and [hash_multiset::count (STL/CLR)](http://msdn.microsoft.com/library/2b31e6b6-3f2c-4042-a06d-90d3074aad43).
  syntax:
    content: public int count (TKey _Keyval);
    parameters:
    - id: _Keyval
      type: TKey
      description: The key value for which to search.
    return:
      type: System.Int32
      description: The number of elements in the controlled sequence that have the same key as <code>_Keyval</code>. You use it to determine the number of elements currently in the controlled sequence that match a specified key.
  overload: Microsoft.VisualC.StlClr.ITree`2.count*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.empty
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.empty
  id: empty
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: empty()
  nameWithType: ITree<TKey,TValue>.empty()
  fullName: ITree<TKey,TValue>.empty()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Tests whether no elements are present in the container.
  remarks: For more information, see [hash_map::empty (STL/CLR)](http://msdn.microsoft.com/library/2a145e16-a48a-4304-8fa6-5b2361693083), [hash_multimap::empty (STL/CLR)](http://msdn.microsoft.com/library/5fd29e90-e33a-460f-9d42-491b82dbaa40), [hash_set::empty (STL/CLR)](http://msdn.microsoft.com/library/7843eb9a-067b-4339-8637-5401b637c6d0), and [hash_multiset::empty (STL/CLR)](http://msdn.microsoft.com/library/e1c738eb-9ac9-426b-88b0-2997c9476001).
  syntax:
    content: public bool empty ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the container has no elements; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.ITree`2.empty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: end(ContainerBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the end of the controlled sequence.
  remarks: For more information, see [hash_map::end (STL/CLR)](http://msdn.microsoft.com/library/bda12a48-cc2b-426f-a4e8-992c88f61736), [hash_multimap::end (STL/CLR)](http://msdn.microsoft.com/library/e9354c40-6d48-4882-aaed-ccd9987f24a9), [hash_set::end (STL/CLR)](http://msdn.microsoft.com/library/957de04e-fdc1-4295-ba25-8b0ad1ea97de), and [hash_multiset::end (STL/CLR)](http://msdn.microsoft.com/library/6f4b222c-2f82-445e-80e5-6e2afd233d4b).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.end*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  id: equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>, TKey)
  nameWithType: ITree<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>, TKey)
  fullName: ITree<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>, TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Finds the range that matches a specified key.
  remarks: For more information, see [hash_map::equal_range (STL/CLR)](http://msdn.microsoft.com/library/9b9a18b8-42fd-4d17-91bd-df85e583cf61), [hash_multimap::equal_range (STL/CLR)](http://msdn.microsoft.com/library/3ea11e31-d4af-4d2e-a80b-eafe12c97d0c), [hash_set::equal_range (STL/CLR)](http://msdn.microsoft.com/library/502af4c5-f71e-44cf-a180-21e9da4b50ff), and [hash_multiset::equal_range (STL/CLR)](http://msdn.microsoft.com/library/a4141d7e-4964-4c78-8989-ae1d1258b50a).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}
      description: ''
    - id: _Keyval
      type: TKey
      description: The key value for which to search.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: A pair of iterators.
  overload: Microsoft.VisualC.StlClr.ITree`2.equal_range*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  id: erase(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: erase(TKey)
  nameWithType: ITree<TKey,TValue>.erase(TKey)
  fullName: ITree<TKey,TValue>.erase(TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes elements from the container that match the specified key.
  remarks: For more information, see [hash_map::erase (STL/CLR)](http://msdn.microsoft.com/library/1d2a79aa-62f7-461c-8f7c-7b660eb189be), [hash_multimap::erase (STL/CLR)](http://msdn.microsoft.com/library/663c67f6-8070-47db-abdc-58f7ace69736), [hash_set::erase (STL/CLR)](http://msdn.microsoft.com/library/620998a0-00c9-4be6-899b-2d71661375b6), and [hash_multiset::erase (STL/CLR)](http://msdn.microsoft.com/library/bddd329d-aece-4b93-8355-005351c3aa45).
  syntax:
    content: public int erase (TKey _Keyval);
    parameters:
    - id: _Keyval
      type: TKey
      description: The key value to erase.
    return:
      type: System.Int32
      description: The number of elements removed.
  overload: Microsoft.VisualC.StlClr.ITree`2.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  nameWithType: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  fullName: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.ITree`2.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  nameWithType: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  fullName: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _First_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Last_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.ITree`2.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  id: find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: find(ContainerBidirectionalIterator<TValue>, TKey)
  nameWithType: ITree<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>, TKey)
  fullName: ITree<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>, TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Finds an element that matches a specified key.
  remarks: For more information, see [hash_map::find (STL/CLR)](http://msdn.microsoft.com/library/53ff8d57-2ea4-485e-9419-aed5e3f5affb), [hash_multimap::find (STL/CLR)](http://msdn.microsoft.com/library/ce839c5e-b8c5-434e-9cc0-e4c6ee6a6bb3), [hash_set::find (STL/CLR)](http://msdn.microsoft.com/library/758b7438-ef15-4af0-8001-a1126d5e9a9e), and [hash_multiset::find (STL/CLR)](http://msdn.microsoft.com/library/fbedeb37-242e-4c2a-b1f8-234bcfd9cd25).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Keyval
      type: TKey
      description: The key value for which to search.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.find*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  nameWithType: ITree<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  fullName: ITree<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Val
      type: TValue
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  id: insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>, TValue)
  nameWithType: ITree<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>, TValue)
  fullName: ITree<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds the given value to the container.
  remarks: For more information, see [hash_map::insert (STL/CLR)](http://msdn.microsoft.com/library/52926ec7-ad4e-4791-a043-46136ee40a69), [hash_multimap::insert (STL/CLR)](http://msdn.microsoft.com/library/51cd98b0-c959-4a44-b914-582c00681bd7), [hash_set::insert (STL/CLR)](http://msdn.microsoft.com/library/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7), and [hash_multiset::insert (STL/CLR)](http://msdn.microsoft.com/library/e7254f30-a514-4ddc-bf53-38aafbe9e8eb).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,bool> , TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}
      description: ''
    - id: _Val
      type: TValue
      description: The key value to insert into the container.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: A pair of iterators.
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  id: insert(System.Collections.Generic.IEnumerable{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: insert(IEnumerable<TValue>)
  nameWithType: ITree<TKey,TValue>.insert(IEnumerable<TValue>)
  fullName: ITree<TKey,TValue>.insert(IEnumerable<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds the given enumeration to the container.
  remarks: For more information, see [hash_map::insert (STL/CLR)](http://msdn.microsoft.com/library/52926ec7-ad4e-4791-a043-46136ee40a69), [hash_multimap::insert (STL/CLR)](http://msdn.microsoft.com/library/51cd98b0-c959-4a44-b914-582c00681bd7), [hash_set::insert (STL/CLR)](http://msdn.microsoft.com/library/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7), and [hash_multiset::insert (STL/CLR)](http://msdn.microsoft.com/library/e7254f30-a514-4ddc-bf53-38aafbe9e8eb).
  syntax:
    content: public void insert (System.Collections.Generic.IEnumerable<TValue> _Right);
    parameters:
    - id: _Right
      type: System.Collections.Generic.IEnumerable{TValue}
      description: The enumeration to insert into the container.
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  id: insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: insert(IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.insert(IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: ITree<TKey,TValue>.insert(IInputIterator<TValue>, IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds to the container the elements specified by the given iterators.
  remarks: For more information, see [hash_map::insert (STL/CLR)](http://msdn.microsoft.com/library/52926ec7-ad4e-4791-a043-46136ee40a69), [hash_multimap::insert (STL/CLR)](http://msdn.microsoft.com/library/51cd98b0-c959-4a44-b914-582c00681bd7), [hash_set::insert (STL/CLR)](http://msdn.microsoft.com/library/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7), and [hash_multiset::insert (STL/CLR)](http://msdn.microsoft.com/library/e7254f30-a514-4ddc-bf53-38aafbe9e8eb).
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: An iterator that points to the beginning of the range of elements to insert.
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: An iterator that points to the element that immediately follows the range of elements to insert.
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.key_comp
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.key_comp
  id: key_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: key_comp()
  nameWithType: ITree<TKey,TValue>.key_comp()
  fullName: ITree<TKey,TValue>.key_comp()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Returns the ordering delegate that is used to order the controlled sequence. You use it to compare two keys.
  remarks: For more information, see [hash_map::key_comp (STL/CLR)](http://msdn.microsoft.com/library/08bd31cc-3a7c-49a3-ac48-089262b3bd44), [hash_multimap::key_comp (STL/CLR)](http://msdn.microsoft.com/library/221d0bfe-19ad-4c34-9b10-77921be32459), [hash_set::key_comp (STL/CLR)](http://msdn.microsoft.com/library/d5dc46c3-c2ee-4591-8f03-d8c9d3df0519), and [hash_multiset::key_comp (STL/CLR)](http://msdn.microsoft.com/library/b9653dd2-20f3-4ef3-875f-265749839ba6).
  syntax:
    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,bool> key_comp ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}
      description: The ordering delegate that is used to order the controlled sequence.
  overload: Microsoft.VisualC.StlClr.ITree`2.key_comp*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  id: lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: lower_bound(ContainerBidirectionalIterator<TValue>, TKey)
  nameWithType: ITree<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>, TKey)
  fullName: ITree<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>, TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Finds the beginning of the range of elements that match a specified key.
  remarks: For more information, see [hash_map::lower_bound (STL/CLR)](http://msdn.microsoft.com/library/7c88987a-9c77-4874-8052-192a148abbf1), [hash_multimap::lower_bound (STL/CLR)](http://msdn.microsoft.com/library/c61091ef-8364-4447-bdd2-a402cbc05f05), [hash_set::lower_bound (STL/CLR)](http://msdn.microsoft.com/library/54fe8ee5-1977-4192-9cc6-b51e84b03a16), and [hash_multiset::lower_bound (STL/CLR)](http://msdn.microsoft.com/library/891898fa-c9e8-4132-a71d-36e5141793f1).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Keyval
      type: TKey
      description: The key value for which to search.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.lower_bound*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: rbegin(ReverseBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the beginning of the reversed controlled sequence.
  remarks: For more information, see [hash_map::rbegin (STL/CLR)](http://msdn.microsoft.com/library/e3b6c4d5-9482-471e-b5fc-70331b082a9b), [hash_multimap::rbegin (STL/CLR)](http://msdn.microsoft.com/library/f5ce0614-3c73-4cec-9fa2-efadf0fd36c7), [hash_set::rbegin (STL/CLR)](http://msdn.microsoft.com/library/1f2ff4ed-8557-40cf-8e61-816563acc43e), and [hash_multiset::rbegin (STL/CLR)](http://msdn.microsoft.com/library/69a06d99-3262-495b-9956-5f155162da33).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.rbegin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: rend(ReverseBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the end of the reversed controlled sequence.
  remarks: For more information, see [hash_map::rend (STL/CLR)](http://msdn.microsoft.com/library/87fb2a06-c92b-4d86-855d-22f5c04aabdb), [hash_multimap::rend (STL/CLR)](http://msdn.microsoft.com/library/7cbed963-7615-40bf-80f2-37b878a64453), [hash_set::rend (STL/CLR)](http://msdn.microsoft.com/library/12764bf1-ff3e-48db-a6ef-fe120187bc4e), and [hash_multiset::rend (STL/CLR)](http://msdn.microsoft.com/library/6d007ac9-18cc-4b51-8384-a4ff65d23e97).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.rend*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.size
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.size
  id: size
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: size()
  nameWithType: ITree<TKey,TValue>.size()
  fullName: ITree<TKey,TValue>.size()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Counts the number of elements in the container.
  remarks: For more information, see [hash_map::size (STL/CLR)](http://msdn.microsoft.com/library/5eb91502-1b11-4703-b473-eb609c181b74), [hash_multimap::size (STL/CLR)](http://msdn.microsoft.com/library/6937c980-5952-48bf-b411-81ab03b2f940), [hash_set::size (STL/CLR)](http://msdn.microsoft.com/library/e006590e-8710-4294-b3a3-dcded0668a24), and [hash_multiset::size (STL/CLR)](http://msdn.microsoft.com/library/45f1f35e-35c4-4e39-8485-0786c1de22e3).
  syntax:
    content: public int size ();
    parameters: []
    return:
      type: System.Int32
      description: The length of the controlled sequence.
  overload: Microsoft.VisualC.StlClr.ITree`2.size*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  id: swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: swap(ITree<TKey,TValue>)
  nameWithType: ITree<TKey,TValue>.swap(ITree<TKey,TValue>)
  fullName: ITree<TKey,TValue>.swap(ITree<TKey,TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Swaps the contents of two containers.
  remarks: For more information, see [hash_map::swap (STL/CLR)](http://msdn.microsoft.com/library/bc1349e0-9be2-4767-a87b-4834615cb52a), [hash_multimap::swap (STL/CLR)](http://msdn.microsoft.com/library/4baa60c2-865a-4e17-acd5-01b7c3c5cd44), [hash_set::swap (STL/CLR)](http://msdn.microsoft.com/library/6476e48f-4744-486d-b028-cf0a048acd4d), and [hash_multiset::swap (STL/CLR)](http://msdn.microsoft.com/library/b79372ab-ca51-494a-89cf-4e2da3ee3ff7).
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.ITree<TKey,TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.ITree`2
      description: The container with which to swap contents.
  overload: Microsoft.VisualC.StlClr.ITree`2.swap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  id: upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: upper_bound(ContainerBidirectionalIterator<TValue>, TKey)
  nameWithType: ITree<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>, TKey)
  fullName: ITree<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>, TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Finds the end of the range of elements that match a specified key.
  remarks: For more information, see [hash_map::upper_bound (STL/CLR)](http://msdn.microsoft.com/library/f83e88b4-e15e-49d5-90e4-cf7360c27c30), [hash_multimap::upper_bound (STL/CLR)](http://msdn.microsoft.com/library/4fa58df6-63ec-411d-bcf9-301d3c88569a), [hash_set::upper_bound (STL/CLR)](http://msdn.microsoft.com/library/dc8815f1-8b45-4f3d-a51f-54050d434d8f), and [hash_multiset::upper_bound (STL/CLR)](http://msdn.microsoft.com/library/d5be0d79-ae60-42bb-8a53-051bc374407d).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Keyval
      type: TKey
      description: The key value to search for.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.ITree`2.upper_bound*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ITree`2.value_comp
  commentId: M:Microsoft.VisualC.StlClr.ITree`2.value_comp
  id: value_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  name: value_comp()
  nameWithType: ITree<TKey,TValue>.value_comp()
  fullName: ITree<TKey,TValue>.value_comp()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Returns the ordering delegate that is used to order the controlled sequence.
  remarks: For more information, see [hash_map::value_comp (STL/CLR)](http://msdn.microsoft.com/library/b11a2dee-07e8-450c-8f85-979c0a15ae64), [hash_multimap::value_comp (STL/CLR)](http://msdn.microsoft.com/library/ec6108b8-a529-499b-bc7f-dce41f5b6175), [hash_set::value_comp (STL/CLR)](http://msdn.microsoft.com/library/7ef381ea-438b-48ce-b0cb-96d844ea5df7), and [hash_multiset::value_comp (STL/CLR)](http://msdn.microsoft.com/library/c5b25ded-9b27-43d5-9821-3f6e17338919).
  syntax:
    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: The ordering delegate that is used to order the controlled sequence.
  overload: Microsoft.VisualC.StlClr.ITree`2.value_comp*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: begin(ContainerBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.clear
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: clear()
  nameWithType: ITree<TKey,TValue>.clear()
  fullName: ITree<TKey,TValue>.clear()
- uid: Microsoft.VisualC.StlClr.ITree`2.count(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: count(TKey)
  nameWithType: ITree<TKey,TValue>.count(TKey)
  fullName: ITree<TKey,TValue>.count(TKey)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: Microsoft.VisualC.StlClr.ITree`2.empty
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: empty()
  nameWithType: ITree<TKey,TValue>.empty()
  fullName: ITree<TKey,TValue>.empty()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: end(ContainerBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>, TKey)
  nameWithType: ITree<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>, TKey)
  fullName: ITree<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>, TKey)
- uid: Microsoft.VisualC.StlClr.GenericPair`2
  name: GenericPair<TValue1,TValue2>
  nameWithType: GenericPair<TValue1,TValue2>
  fullName: Microsoft.VisualC.StlClr.GenericPair<TValue1,TValue2>
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>
  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>
  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.GenericPair`2
    name: GenericPair
    nameWithType: GenericPair
    fullName: Microsoft.VisualC.StlClr.GenericPair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
    name: ContainerBidirectionalIterator
    nameWithType: ContainerBidirectionalIterator
    fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
    name: ContainerBidirectionalIterator
    nameWithType: ContainerBidirectionalIterator
    fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase(TKey)
  nameWithType: ITree<TKey,TValue>.erase(TKey)
  fullName: ITree<TKey,TValue>.erase(TKey)
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  nameWithType: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  fullName: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ContainerBidirectionalIterator
  nameWithType: ContainerBidirectionalIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  nameWithType: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  fullName: ITree<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: find(ContainerBidirectionalIterator<TValue>, TKey)
  nameWithType: ITree<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>, TKey)
  fullName: ITree<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>, TKey)
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  nameWithType: ITree<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  fullName: ITree<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>, TValue)
  nameWithType: ITree<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>, TValue)
  fullName: ITree<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>, TValue)
- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>
  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>
  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.GenericPair`2
    name: GenericPair
    nameWithType: GenericPair
    fullName: Microsoft.VisualC.StlClr.GenericPair
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
    name: ContainerBidirectionalIterator
    nameWithType: ContainerBidirectionalIterator
    fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert(IEnumerable<TValue>)
  nameWithType: ITree<TKey,TValue>.insert(IEnumerable<TValue>)
  fullName: ITree<TKey,TValue>.insert(IEnumerable<TValue>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert(IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.insert(IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: ITree<TKey,TValue>.insert(IInputIterator<TValue>, IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.key_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: key_comp()
  nameWithType: ITree<TKey,TValue>.key_comp()
  fullName: ITree<TKey,TValue>.key_comp()
- uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
  name: BinaryDelegate<TArg1,TArg2,TResult>
  nameWithType: BinaryDelegate<TArg1,TArg2,TResult>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TArg1,TArg2,TResult>
- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: BinaryDelegate<TKey,TKey,Boolean>
  nameWithType: BinaryDelegate<TKey,TKey,Boolean>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
    name: BinaryDelegate
    nameWithType: BinaryDelegate
    fullName: Microsoft.VisualC.StlClr.BinaryDelegate
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: lower_bound(ContainerBidirectionalIterator<TValue>, TKey)
  nameWithType: ITree<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>, TKey)
  fullName: ITree<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>, TKey)
- uid: Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: rbegin(ReverseBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: rend(ReverseBidirectionalIterator<TValue>)
  nameWithType: ITree<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
  fullName: ITree<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.ITree`2.size
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: size()
  nameWithType: ITree<TKey,TValue>.size()
  fullName: ITree<TKey,TValue>.size()
- uid: Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: swap(ITree<TKey,TValue>)
  nameWithType: ITree<TKey,TValue>.swap(ITree<TKey,TValue>)
  fullName: ITree<TKey,TValue>.swap(ITree<TKey,TValue>)
- uid: Microsoft.VisualC.StlClr.ITree`2
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: ITree<TKey,TValue>
  nameWithType: ITree<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: upper_bound(ContainerBidirectionalIterator<TValue>, TKey)
  nameWithType: ITree<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>, TKey)
  fullName: ITree<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>, TKey)
- uid: Microsoft.VisualC.StlClr.ITree`2.value_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: value_comp()
  nameWithType: ITree<TKey,TValue>.value_comp()
  fullName: ITree<TKey,TValue>.value_comp()
- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: BinaryDelegate<TValue,TValue,Boolean>
  nameWithType: BinaryDelegate<TValue,TValue,Boolean>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
    name: BinaryDelegate
    nameWithType: BinaryDelegate
    fullName: Microsoft.VisualC.StlClr.BinaryDelegate
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.ITree`2.erase*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: ITree<TKey,TValue>.erase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.insert*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: ITree<TKey,TValue>.insert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.begin*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: begin
  nameWithType: ITree<TKey,TValue>.begin
  fullName: ITree<TKey,TValue>.begin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.clear*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: clear
  nameWithType: ITree<TKey,TValue>.clear
  fullName: ITree<TKey,TValue>.clear
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.count*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: count
  nameWithType: ITree<TKey,TValue>.count
  fullName: ITree<TKey,TValue>.count
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.empty*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: empty
  nameWithType: ITree<TKey,TValue>.empty
  fullName: ITree<TKey,TValue>.empty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.end*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: end
  nameWithType: ITree<TKey,TValue>.end
  fullName: ITree<TKey,TValue>.end
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.equal_range*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: equal_range
  nameWithType: ITree<TKey,TValue>.equal_range
  fullName: ITree<TKey,TValue>.equal_range
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.find*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: find
  nameWithType: ITree<TKey,TValue>.find
  fullName: ITree<TKey,TValue>.find
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.key_comp*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: key_comp
  nameWithType: ITree<TKey,TValue>.key_comp
  fullName: ITree<TKey,TValue>.key_comp
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.lower_bound*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: lower_bound
  nameWithType: ITree<TKey,TValue>.lower_bound
  fullName: ITree<TKey,TValue>.lower_bound
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.rbegin*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: rbegin
  nameWithType: ITree<TKey,TValue>.rbegin
  fullName: ITree<TKey,TValue>.rbegin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.rend*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: rend
  nameWithType: ITree<TKey,TValue>.rend
  fullName: ITree<TKey,TValue>.rend
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.size*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: size
  nameWithType: ITree<TKey,TValue>.size
  fullName: ITree<TKey,TValue>.size
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.swap*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: swap
  nameWithType: ITree<TKey,TValue>.swap
  fullName: ITree<TKey,TValue>.swap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.upper_bound*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: upper_bound
  nameWithType: ITree<TKey,TValue>.upper_bound
  fullName: ITree<TKey,TValue>.upper_bound
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: Microsoft.VisualC.StlClr.ITree`2.value_comp*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: value_comp
  nameWithType: ITree<TKey,TValue>.value_comp
  fullName: ITree<TKey,TValue>.value_comp
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ITree`2.xml
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IBidirectionalContainer<TValue>
  nameWithType: IBidirectionalContainer<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ICloneable
  parent: System
  isExternal: false
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
