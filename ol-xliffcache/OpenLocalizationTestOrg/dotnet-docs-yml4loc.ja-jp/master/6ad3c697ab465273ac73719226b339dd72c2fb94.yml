### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  commentId: T:System.Security.RightsManagement.UnsignedPublishLicense
  id: UnsignedPublishLicense
  children:
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  - System.Security.RightsManagement.UnsignedPublishLicense.Grants
  - System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  - System.Security.RightsManagement.UnsignedPublishLicense.Owner
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  - System.Security.RightsManagement.UnsignedPublishLicense.ToString
  langs:
  - csharp
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
  type: Class
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Represents an unsigned rights managed <xref href="System.Security.RightsManagement.PublishLicense"></xref> or an unsigned <xref href="System.Security.RightsManagement.PublishLicense"></xref> template.
  remarks: "<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights-managed content.  \n  \n The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the authoring application calls the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.<xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method to create a signed <xref:System.Security.RightsManagement.PublishLicense>.  The signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to the end-user client application which can call <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> to request an end-user <xref:System.Security.RightsManagement.UseLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that are granted to the user.  \n  \n The document author can use the <xref:System.Security.RightsManagement.UnsignedPublishLicense> class either to create a signed <xref:System.Security.RightsManagement.PublishLicense>, or to build and serialize a <xref:System.Security.RightsManagement.PublishLicense> template.  \n  \n As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UnsignedPublishLicense> is only usable in full trust applications.  \n  \n<a name=\"xamlTextUsage_UnsignedPublishLicense\"></a>   \n## XAML Text Usage  \n This type is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UnsignedPublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  commentId: M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  id: '#ctor'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: UnsignedPublishLicense.UnsignedPublishLicense()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Initializes a new instance of the <xref href="System.Security.RightsManagement.UnsignedPublishLicense"></xref> class.
  remarks: <xref:System.Security.RightsManagement.UnsignedPublishLicense> creates an empty and unsigned publish-license.
  syntax:
    content: public UnsignedPublishLicense ();
    parameters: []
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  commentId: M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: UnsignedPublishLicense.UnsignedPublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Initializes a new instance of the <xref href="System.Security.RightsManagement.UnsignedPublishLicense"></xref> class from a specified [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] publish-license template.
  remarks: "The `publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>` or `<INTERVALTIME>` elements are ignored when the <xref:System.Security.RightsManagement.UnsignedPublishLicense> is created by the <xref:System.Security.RightsManagement.UnsignedPublishLicense.%23ctor%2A>(String) constructor.  To specify these values for the publish license, the <xref:System.Security.RightsManagement.ContentGrant> properties for <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> must be explicitly set.  The following example shows how to explicitly set the <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> properties.  \n  \n [!code-csharp[UnsignedPubLicense_snip#RmPkgPubGrants](~/samples/snippets/csharp/VS_Snippets_Wpf/UnsignedPubLicense_snip/CSharp/Window1.xaml.cs#rmpkgpubgrants)]\n [!code-vb[UnsignedPubLicense_snip#RmPkgPubGrants](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UnsignedPubLicense_snip/visualbasic/window1.xaml.vb#rmpkgpubgrants)]"
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubunpublic)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubunpublic)]"
  syntax:
    content: public UnsignedPublishLicense (string publishLicenseTemplate);
    parameters:
    - id: publishLicenseTemplate
      type: System.String
      description: The [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] publish-license template to use to create this license.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  commentId: P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: UnsignedPublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets or sets the publisher-created content identifier.
  remarks: The publisher creates a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify rights-managed content in a <xref:System.Security.RightsManagement.UseLicense> and a <xref:System.Security.RightsManagement.PublishLicense>.
  syntax:
    content: public Guid ContentId { get; set; }
    return:
      type: System.Guid
      description: The publisher-created rights-managed content identifier.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  commentId: P:System.Security.RightsManagement.UnsignedPublishLicense.Grants
  id: Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: UnsignedPublishLicense.Grants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets a collection of assigned user rights.
  syntax:
    content: public System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant> Grants { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
      description: A collection of the assigned user rights that are provided in this license.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  commentId: P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  id: LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets a collection of name and description pairs.
  syntax:
    content: public System.Collections.Generic.IDictionary<int,System.Security.RightsManagement.LocalizedNameDescriptionPair> LocalizedNameDescriptionDictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
      description: A collection of name and description pairs.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  commentId: P:System.Security.RightsManagement.UnsignedPublishLicense.Owner
  id: Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: UnsignedPublishLicense.Owner
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets or sets the content owner.
  remarks: "<xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> specifies the user who owns the <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> is also associated with the Owner node in the issuance license [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]."
  example:
  - "The following example shows how to use this property to assign a <xref:System.Security.RightsManagement.ContentUser>.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubunpublic)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubunpublic)]"
  syntax:
    content: public System.Security.RightsManagement.ContentUser Owner { get; set; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: The user who owns the published content.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  commentId: P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: UnsignedPublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets or sets the contact name for the author or publisher of the content.
  remarks: "<a name=\"xamlTextUsage_ReferralInfoName\"></a>   \n## XAML Text Usage  \n Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public string ReferralInfoName { get; set; }
    return:
      type: System.String
      description: The contact name for the author or publisher of the content.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  commentId: P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: UnsignedPublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets or sets the contact [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content.
  remarks: "<a name=\"xamlTextUsage_ReferralInfoUri\"></a>   \n## XAML Text Usage  \n Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public Uri ReferralInfoUri { get; set; }
    return:
      type: System.Uri
      description: The contact [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the author or publisher of the content.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  commentId: M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  id: Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Sign(SecureEnvironment, UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment, UseLicense)
  fullName: UnsignedPublishLicense.Sign(SecureEnvironment, UseLicense)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Creates a signed <xref href="System.Security.RightsManagement.PublishLicense"></xref> and returns a <xref href="System.Security.RightsManagement.UseLicense"></xref> for the document author.
  remarks: ''
  example:
  - "The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]"
  syntax:
    content: public System.Security.RightsManagement.PublishLicense Sign (System.Security.RightsManagement.SecureEnvironment secureEnvironment, out System.Security.RightsManagement.UseLicense authorUseLicense);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: The secure environment for license activation and binding.
    - id: authorUseLicense
      type: System.Security.RightsManagement.UseLicense
      description: A returned <xref href="System.Security.RightsManagement.UseLicense"></xref> for the document author.
    return:
      type: System.Security.RightsManagement.PublishLicense
      description: The signed <xref href="System.Security.RightsManagement.PublishLicense"></xref> that is created by signing this <xref href="System.Security.RightsManagement.UnsignedPublishLicense"></xref>.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  commentId: M:System.Security.RightsManagement.UnsignedPublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: UnsignedPublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Returns a serialized template created from the [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] of the <xref href="System.Security.RightsManagement.UnsignedPublishLicense"></xref>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A serialized template created from the [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] of the <xref href="System.Security.RightsManagement.UnsignedPublishLicense"></xref>.
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: UnsignedPublishLicense.UnsignedPublishLicense()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: UnsignedPublishLicense.UnsignedPublishLicense(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: UnsignedPublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: UnsignedPublishLicense.Grants
- uid: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
- uid: System.Security.RightsManagement.ContentGrant
  name: ContentGrant
  nameWithType: ContentGrant
  fullName: System.Security.RightsManagement.ContentGrant
- uid: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<ContentGrant>
  nameWithType: ICollection<ContentGrant>
  fullName: System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: System.Security.RightsManagement.ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Int32
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.LocalizedNameDescriptionPair
  name: LocalizedNameDescriptionPair
  nameWithType: LocalizedNameDescriptionPair
  fullName: System.Security.RightsManagement.LocalizedNameDescriptionPair
- uid: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<Int32,LocalizedNameDescriptionPair>
  nameWithType: IDictionary<Int32,LocalizedNameDescriptionPair>
  fullName: System.Collections.Generic.IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.RightsManagement.LocalizedNameDescriptionPair
    name: LocalizedNameDescriptionPair
    nameWithType: LocalizedNameDescriptionPair
    fullName: System.Security.RightsManagement.LocalizedNameDescriptionPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: UnsignedPublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign(SecureEnvironment, UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment, UseLicense)
  fullName: UnsignedPublishLicense.Sign(SecureEnvironment, UseLicense)
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: UnsignedPublishLicense.ToString()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense
  fullName: UnsignedPublishLicense.UnsignedPublishLicense
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: UnsignedPublishLicense.ContentId
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: UnsignedPublishLicense.Grants
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: UnsignedPublishLicense.Owner
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: UnsignedPublishLicense.ReferralInfoName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: UnsignedPublishLicense.ReferralInfoUri
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign
  nameWithType: UnsignedPublishLicense.Sign
  fullName: UnsignedPublishLicense.Sign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString
  nameWithType: UnsignedPublishLicense.ToString
  fullName: UnsignedPublishLicense.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UnsignedPublishLicense.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
