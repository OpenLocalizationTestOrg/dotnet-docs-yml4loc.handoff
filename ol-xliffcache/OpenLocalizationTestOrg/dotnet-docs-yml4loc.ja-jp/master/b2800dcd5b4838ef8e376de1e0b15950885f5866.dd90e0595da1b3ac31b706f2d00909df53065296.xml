{"nodes":[{"content":"Provides methods used for security and transport sinks.","nodes":[{"pos":[0,55],"content":"Provides methods used for security and transport sinks.","nodes":[{"content":"Provides methods used for security and transport sinks.","pos":[0,55]}]}],"pos":[1389,1445],"yaml":true},{"content":"Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.","nodes":[{"pos":[0,382],"content":"Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.","nodes":[{"content":"Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.","pos":[0,382],"nodes":[{"content":"Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.","pos":[0,202]},{"content":"Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.","pos":[203,382]}]}]}],"pos":[1456,1839],"yaml":true,"extradata":"MT"},{"content":"Requests processing from the current sink of the response from a method call sent asynchronously.","nodes":[{"pos":[0,97],"content":"Requests processing from the current sink of the response from a method call sent asynchronously.","nodes":[{"content":"Requests processing from the current sink of the response from a method call sent asynchronously.","pos":[0,97]}]}],"pos":[4886,4984],"yaml":true},{"content":"The `state` parameter contains information that was pushed onto the channel sink stack and associated with the current sink.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">`state`</ph> parameter contains information that was pushed onto the channel sink stack and associated with the current sink.","source":"The `state` parameter contains information that was pushed onto the channel sink stack and associated with the current sink."}],"pos":[4995,5120],"yaml":true,"extradata":"MT"},{"content":"A stack of sinks leading back to the server transport sink.","nodes":[{"pos":[0,59],"content":"A stack of sinks leading back to the server transport sink.","nodes":[{"content":"A stack of sinks leading back to the server transport sink.","pos":[0,59]}]}],"pos":[5964,6024],"yaml":true},{"content":"Information generated on the request side that is associated with this sink.","nodes":[{"pos":[0,76],"content":"Information generated on the request side that is associated with this sink.","nodes":[{"content":"Information generated on the request side that is associated with this sink.","pos":[0,76]}]}],"pos":[6085,6162],"yaml":true},{"content":"The response message.","nodes":[{"pos":[0,21],"content":"The response message.","nodes":[{"content":"The response message.","pos":[0,21]}]}],"pos":[6250,6272],"yaml":true},{"content":"The headers to add to the return message heading to the client.","nodes":[{"pos":[0,63],"content":"The headers to add to the return message heading to the client.","nodes":[{"content":"The headers to add to the return message heading to the client.","pos":[0,63]}]}],"pos":[6372,6436],"yaml":true},{"content":"The stream heading back to the transport sink.","nodes":[{"pos":[0,46],"content":"The stream heading back to the transport sink.","nodes":[{"content":"The stream heading back to the transport sink.","pos":[0,46]}]}],"pos":[6501,6548],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[6760,6822],"yaml":true},{"content":"Returns the <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.","nodes":[{"pos":[0,111],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> onto which the provided response message is to be serialized.","source":"Returns the <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized."}],"pos":[8683,8795],"yaml":true},{"content":"This method is called when a response stream needs to be created.","nodes":[{"pos":[0,65],"content":"This method is called when a response stream needs to be created.","nodes":[{"content":"This method is called when a response stream needs to be created.","pos":[0,65]}]}],"pos":[8806,8872],"yaml":true,"extradata":"MT"},{"content":"A stack of sinks leading back to the server transport sink.","nodes":[{"pos":[0,59],"content":"A stack of sinks leading back to the server transport sink.","nodes":[{"content":"A stack of sinks leading back to the server transport sink.","pos":[0,59]}]}],"pos":[9269,9329],"yaml":true},{"content":"The state that has been pushed to the stack by this sink.","nodes":[{"pos":[0,57],"content":"The state that has been pushed to the stack by this sink.","nodes":[{"content":"The state that has been pushed to the stack by this sink.","pos":[0,57]}]}],"pos":[9390,9448],"yaml":true},{"content":"The response message to serialize.","nodes":[{"pos":[0,34],"content":"The response message to serialize.","nodes":[{"content":"The response message to serialize.","pos":[0,34]}]}],"pos":[9536,9571],"yaml":true},{"content":"The headers to put in the response stream to the client.","nodes":[{"pos":[0,56],"content":"The headers to put in the response stream to the client.","nodes":[{"content":"The headers to put in the response stream to the client.","pos":[0,56]}]}],"pos":[9671,9728],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> onto which the provided response message is to be serialized.","source":"The <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized."}],"pos":[9788,9892],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[10101,10163],"yaml":true},{"content":"Gets the next server channel sink in the server sink chain.","nodes":[{"pos":[0,59],"content":"Gets the next server channel sink in the server sink chain.","nodes":[{"content":"Gets the next server channel sink in the server sink chain.","pos":[0,59]}]}],"pos":[11282,11342],"yaml":true},{"content":"Channel sinks are linked together in a chain of sink providers, and all channel messages flow through this chain before the message is serialized and transported.","nodes":[{"pos":[0,162],"content":"Channel sinks are linked together in a chain of sink providers, and all channel messages flow through this chain before the message is serialized and transported.","nodes":[{"content":"Channel sinks are linked together in a chain of sink providers, and all channel messages flow through this chain before the message is serialized and transported.","pos":[0,162]}]}],"pos":[11353,11516],"yaml":true,"extradata":"MT"},{"content":"The next server channel sink in the server sink chain.","nodes":[{"pos":[0,54],"content":"The next server channel sink in the server sink chain.","nodes":[{"content":"The next server channel sink in the server sink chain.","pos":[0,54]}]}],"pos":[11718,11773],"yaml":true},{"content":"The immediate caller does not have the required <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Infrastructure\"></xref> permission.","nodes":[{"pos":[0,146],"content":"The immediate caller does not have the required <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.Infrastructure\"&gt;&lt;/xref&gt;</ph> permission.","source":"The immediate caller does not have the required <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Infrastructure\"></xref> permission."}],"pos":[11980,12127],"yaml":true},{"content":"Requests message processing from the current sink.","nodes":[{"pos":[0,50],"content":"Requests message processing from the current sink.","nodes":[{"content":"Requests message processing from the current sink.","pos":[0,50]}]}],"pos":[14384,14435],"yaml":true},{"content":"The job of a proxy is to convert a method call invoked on it into a message object. This message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together in the sense that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink can cause a lock to be acquired or released, and then delegated further to the downstream message sink.","nodes":[{"pos":[0,739],"content":"The job of a proxy is to convert a method call invoked on it into a message object. This message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together in the sense that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink can cause a lock to be acquired or released, and then delegated further to the downstream message sink.","nodes":[{"content":"The job of a proxy is to convert a method call invoked on it into a message object. This message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together in the sense that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink can cause a lock to be acquired or released, and then delegated further to the downstream message sink.","pos":[0,739],"nodes":[{"content":"The job of a proxy is to convert a method call invoked on it into a message object.","pos":[0,83]},{"content":"This message object, which implements the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> interface, is passed from the client end to the server end by invoking <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> on message sink objects.","pos":[84,348],"source":" This message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects."},{"content":"Message sinks are chained together in the sense that every message sink is responsible for calling <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> on the next message sink after it has performed its work.","pos":[349,582],"source":" Message sinks are chained together in the sense that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work."},{"content":"For instance, a synchronization-related message sink can cause a lock to be acquired or released, and then delegated further to the downstream message sink.","pos":[583,739]}]}]}],"pos":[14446,15186],"yaml":true,"extradata":"MT"},{"content":"A stack of channel sinks that called the current sink.","nodes":[{"pos":[0,54],"content":"A stack of channel sinks that called the current sink.","nodes":[{"content":"A stack of channel sinks that called the current sink.","pos":[0,54]}]}],"pos":[15798,15853],"yaml":true},{"content":"The message that contains the request.","nodes":[{"pos":[0,38],"content":"The message that contains the request.","nodes":[{"content":"The message that contains the request.","pos":[0,38]}]}],"pos":[15948,15987],"yaml":true},{"content":"Headers retrieved from the incoming message from the client.","nodes":[{"pos":[0,60],"content":"Headers retrieved from the incoming message from the client.","nodes":[{"content":"Headers retrieved from the incoming message from the client.","pos":[0,60]}]}],"pos":[16094,16155],"yaml":true},{"content":"The stream that needs to be to processed and passed on to the deserialization sink.","nodes":[{"pos":[0,83],"content":"The stream that needs to be to processed and passed on to the deserialization sink.","nodes":[{"content":"The stream that needs to be to processed and passed on to the deserialization sink.","pos":[0,83]}]}],"pos":[16227,16311],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.","nodes":[{"pos":[0,173],"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMessage\"&gt;&lt;/xref&gt;</ph> that holds the response message.","pos":[0,133],"source":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message."},{"content":"This parameter is passed uninitialized.","pos":[134,173]}]}],"pos":[16407,16581],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers that are to be added to return message heading to the client. This parameter is passed uninitialized.","nodes":[{"pos":[0,233],"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers that are to be added to return message heading to the client. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"&gt;&lt;/xref&gt;</ph> that holds the headers that are to be added to return message heading to the client.","pos":[0,193],"source":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers that are to be added to return message heading to the client."},{"content":"This parameter is passed uninitialized.","pos":[194,233]}]}],"pos":[16689,16923],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading back to the transport sink. This parameter is passed uninitialized.","nodes":[{"pos":[0,158],"content":"When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading back to the transport sink. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that is heading back to the transport sink.","pos":[0,118],"source":"When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading back to the transport sink."},{"content":"This parameter is passed uninitialized.","pos":[119,158]}]}],"pos":[16996,17155],"yaml":true},{"content":"A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how message was processed.","nodes":[{"pos":[0,144],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"&gt;&lt;/xref&gt;</ph> status value that provides information about how message was processed.","source":"A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how message was processed."}],"pos":[17248,17393],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[17599,17661],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  commentId: T:System.Runtime.Remoting.Channels.IServerChannelSink\n  id: IServerChannelSink\n  children:\n  - System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  - System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink\n  - System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  langs:\n  - csharp\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Provides methods used for security and transport sinks.\n  remarks: Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.\n  example:\n  - \"The following code example illustrates an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink> interface.  \\n  \\n [!code-cpp[Remoting_Sinks#60](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Sinks/CPP/serversink.cpp#60)]\\n [!code-csharp[Remoting_Sinks#60](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Sinks/CS/serversink.cs#60)]  \\n  \\n See the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface documentation for an example of the corresponding server sink provider implementation.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IServerChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase\n  derivedClasses:\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink\n  - System.Runtime.Remoting.Channels.SoapServerFormatterSink\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  implements:\n  - System.Runtime.Remoting.Channels.IChannelSinkBase\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  commentId: M:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  langs:\n  - csharp\n  name: AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  nameWithType: IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  fullName: IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests processing from the current sink of the response from a method call sent asynchronously.\n  remarks: The `state` parameter contains information that was pushed onto the channel sink stack and associated with the current sink.\n  example:\n  - >-\n    [!code-cpp[CommonTransportKeys#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CommonTransportKeys/CPP/commontransportkeys.cpp#1)]\n     [!code-csharp[CommonTransportKeys#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CommonTransportKeys/CS/commontransportkeys.cs#1)]\n     [!code-vb[CommonTransportKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CommonTransportKeys/VB/commontransportkeys.vb#1)]\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n      description: A stack of sinks leading back to the server transport sink.\n    - id: state\n      type: System.Object\n      description: Information generated on the request side that is associated with this sink.\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The response message.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers to add to the return message heading to the client.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream heading back to the transport sink.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  commentId: M:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  langs:\n  - csharp\n  name: GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  nameWithType: IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  fullName: IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Returns the <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.\n  remarks: This method is called when a response stream needs to be created.\n  syntax:\n    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n      description: A stack of sinks leading back to the server transport sink.\n    - id: state\n      type: System.Object\n      description: The state that has been pushed to the stack by this sink.\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The response message to serialize.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers to put in the response stream to the client.\n    return:\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink\n  commentId: P:System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink\n  id: NextChannelSink\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  langs:\n  - csharp\n  name: NextChannelSink\n  nameWithType: IServerChannelSink.NextChannelSink\n  fullName: IServerChannelSink.NextChannelSink\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets the next server channel sink in the server sink chain.\n  remarks: Channel sinks are linked together in a chain of sink providers, and all channel messages flow through this chain before the message is serialized and transported.\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }\n    return:\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The next server channel sink in the server sink chain.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have the required <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Infrastructure\"></xref> permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  commentId: M:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  langs:\n  - csharp\n  name: ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  nameWithType: IServerChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  fullName: IServerChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests message processing from the current sink.\n  remarks: The job of a proxy is to convert a method call invoked on it into a message object. This message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together in the sense that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink can cause a lock to be acquired or released, and then delegated further to the downstream message sink.\n  syntax:\n    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n      description: A stack of channel sinks that called the current sink.\n    - id: requestMsg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message that contains the request.\n    - id: requestHeaders\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: Headers retrieved from the incoming message from the client.\n    - id: requestStream\n      type: System.IO.Stream\n      description: The stream that needs to be to processed and passed on to the deserialization sink.\n    - id: responseMsg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.\n    - id: responseHeaders\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers that are to be added to return message heading to the client. This parameter is passed uninitialized.\n    - id: responseStream\n      type: System.IO.Stream\n      description: When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading back to the transport sink. This parameter is passed uninitialized.\n    return:\n      type: System.Runtime.Remoting.Channels.ServerProcessing\n      description: A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how message was processed.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  nameWithType: IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  fullName: IServerChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerResponseChannelSinkStack\n  nameWithType: IServerResponseChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  nameWithType: IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  fullName: IServerChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: NextChannelSink\n  nameWithType: IServerChannelSink.NextChannelSink\n  fullName: IServerChannelSink.NextChannelSink\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  nameWithType: IServerChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  fullName: IServerChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n- uid: System.Runtime.Remoting.Channels.ServerProcessing\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ServerProcessing\n  nameWithType: ServerProcessing\n  fullName: System.Runtime.Remoting.Channels.ServerProcessing\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkStack\n  nameWithType: IServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: IServerChannelSink.AsyncProcessResponse\n  fullName: IServerChannelSink.AsyncProcessResponse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: GetResponseStream\n  nameWithType: IServerChannelSink.GetResponseStream\n  fullName: IServerChannelSink.GetResponseStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: NextChannelSink\n  nameWithType: IServerChannelSink.NextChannelSink\n  fullName: IServerChannelSink.NextChannelSink\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSink\n  isExternal: false\n  name: ProcessMessage\n  nameWithType: IServerChannelSink.ProcessMessage\n  fullName: IServerChannelSink.ProcessMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IServerChannelSink.xml\n- uid: System.Runtime.Remoting.Channels.IChannelSinkBase\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelSinkBase\n  nameWithType: IChannelSinkBase\n  fullName: System.Runtime.Remoting.Channels.IChannelSinkBase\n"}