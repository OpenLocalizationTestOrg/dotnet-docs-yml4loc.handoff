<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">384c580cac99d04c727247b16c220ac0e06744cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XmlResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3902e2a7927cc6c5f0d3768f52010b2cd9321b94</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b570f340be1d529b61d47a1d125757e8b1eea1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object that calls <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> has the task of interpreting the stream.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace includes two concrete implementations of the <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> class:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is the default resolver for all classes in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the <ph id="ph3">&lt;xref:System.Net.WebRequest?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples of extending the class to improve performance, see the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> helps secure another <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object by wrapping the object object and restricting the resources that it can access.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> can prohibit access to specific Internet sites or zones.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create and specify your own resolver.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you don't specify a resolver, the reader uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> to use by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt;</ph> property and passing the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resource is stored on a system that requires authentication, you use the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;</ph> property to specify the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Supplying authentication credentials</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file that contains the XML data to read may have a restricted access policy.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If authentication is required to access a network resource, use the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property to specify the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property is not set, credentials are set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, assume that credentials are needed when requesting data from the web for authentication purposes.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the web virtual directory allows anonymous access, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property to supply credentials.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that uses an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials to access the http://localhost/bookstore/inventory.xml site.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XmlReaderSettings.cctor#2<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XmlReaderSettings.cctor#2<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XmlReaderSettings.cctor#2<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can supply different credentials for different URIs and add them to a cache.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how to add credentials to a cache.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XslCompiledTransform.Load#11<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XslCompiledTransform.Load#11<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security considerations</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider the following items when working with the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects can contain sensitive information such as user credentials.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be careful when caching <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects and should not pass the <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to an untrusted component.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are designing a class property that uses the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class, the property should be defined as a write-only property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property can be used to specify the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> to use, but it cannot be used to return an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application accepts <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects from untrusted code, you cannot assume that the URI passed into the <ph id="ph2">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method will be the same as that returned by the <ph id="ph3">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes derived from the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method and return data that is different than what was contained in the original URI.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the credentials used to authenticate web requests.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual directory does not require authentication, this property doesn't have to be set.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the credentials of the user must be supplied.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code sets credentials on the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can associate different credentials with different URIs and add them to a cache.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The credentials to be used to authenticate web requests.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If this property is not set, the value defaults to <ph id="ph1">`null`</ph>; that is, the <ph id="ph2">`XmlResolver`</ph> has no user credentials.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, maps a URI to an object that contains the actual resource.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of object returned is negotiable; however, the implementation must always support <ph id="ph1">&lt;xref:System.IO.Stream?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The URI returned from <ph id="ph1">&lt;xref href="System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The current version only returns System.IO.Stream objects.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A stream object or <ph id="ph1">`null`</ph> if a type other than stream is specified.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is not a <ph id="ph2">`Stream`</ph> type.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The specified URI is not an absolute URI.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>, with the same functionality.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The URI returned from <ph id="ph1">&lt;xref href="System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The current version only returns <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A stream object or <ph id="ph1">`null`</ph> if a type other than stream is specified.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The base URI used to resolve the relative URI.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The URI to resolve.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The URI can be absolute or relative.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If relative, it combines with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> to make an absolute URI.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The absolute URI or <ph id="ph1">`null`</ph> if the relative URI cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enables the resolver to return types other than <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The URI.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type to return.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p1">&lt;/code&gt;</ept> is supported; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>