{"nodes":[{"content":"Provides an <xref href=\"System.IProgress`1\"></xref> that invokes callbacks for each reported progress value.","nodes":[{"pos":[0,108],"content":"Provides an <ph id=\"ph1\">&lt;xref href=\"System.IProgress`1\"&gt;&lt;/xref&gt;</ph> that invokes callbacks for each reported progress value.","source":"Provides an <xref href=\"System.IProgress`1\"></xref> that invokes callbacks for each reported progress value."}],"pos":[541,650],"yaml":true},{"content":"Any handler provided to the constructor or event handlers registered with the <xref:System.Progress%601.ProgressChanged> event are invoked through a <xref:System.Threading.SynchronizationContext> instance captured when the instance is constructed. If there is no current <xref:System.Threading.SynchronizationContext> at the time of construction, the callbacks will be invoked on the <xref:System.Threading.ThreadPool>.  \n  \n For more information and a code example, see the article [Async in 4.5: Enabling Progress and Cancellation in Async APIs](http://go.microsoft.com/fwlink/p/?LinkId=267243) in the .NET Framework blog.","nodes":[{"pos":[0,419],"content":"Any handler provided to the constructor or event handlers registered with the <xref:System.Progress%601.ProgressChanged> event are invoked through a <xref:System.Threading.SynchronizationContext> instance captured when the instance is constructed. If there is no current <xref:System.Threading.SynchronizationContext> at the time of construction, the callbacks will be invoked on the <xref:System.Threading.ThreadPool>.","nodes":[{"content":"Any handler provided to the constructor or event handlers registered with the <xref:System.Progress%601.ProgressChanged> event are invoked through a <xref:System.Threading.SynchronizationContext> instance captured when the instance is constructed. If there is no current <xref:System.Threading.SynchronizationContext> at the time of construction, the callbacks will be invoked on the <xref:System.Threading.ThreadPool>.","pos":[0,419],"nodes":[{"content":"Any handler provided to the constructor or event handlers registered with the <ph id=\"ph1\">&lt;xref:System.Progress%601.ProgressChanged&gt;</ph> event are invoked through a <ph id=\"ph2\">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> instance captured when the instance is constructed.","pos":[0,247],"source":"Any handler provided to the constructor or event handlers registered with the <xref:System.Progress%601.ProgressChanged> event are invoked through a <xref:System.Threading.SynchronizationContext> instance captured when the instance is constructed."},{"content":"If there is no current <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> at the time of construction, the callbacks will be invoked on the <ph id=\"ph2\">&lt;xref:System.Threading.ThreadPool&gt;</ph>.","pos":[248,419],"source":" If there is no current <xref:System.Threading.SynchronizationContext> at the time of construction, the callbacks will be invoked on the <xref:System.Threading.ThreadPool>."}]}]},{"pos":[426,624],"content":"For more information and a code example, see the article <bpt id=\"p1\">[</bpt>Async in 4.5: Enabling Progress and Cancellation in Async APIs<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=267243)</ept> in the .NET Framework blog.","source":"For more information and a code example, see the article [Async in 4.5: Enabling Progress and Cancellation in Async APIs](http://go.microsoft.com/fwlink/p/?LinkId=267243) in the .NET Framework blog."}],"pos":[661,1290],"yaml":true,"extradata":"MT"},{"content":"Specifies the type of the progress report value.","nodes":[{"pos":[0,48],"content":"Specifies the type of the progress report value.","nodes":[{"content":"Specifies the type of the progress report value.","pos":[0,48]}]}],"pos":[1406,1455],"yaml":true},{"content":"Initializes the <xref href=\"System.Progress`1\"></xref> object.","nodes":[{"pos":[0,62],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Progress`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes the <xref href=\"System.Progress`1\"></xref> object."}],"pos":[3236,3299],"yaml":true},{"content":"Initializes the <xref href=\"System.Progress`1\"></xref> object with the specified callback.","nodes":[{"pos":[0,90],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Progress`1\"&gt;&lt;/xref&gt;</ph> object with the specified callback.","source":"Initializes the <xref href=\"System.Progress`1\"></xref> object with the specified callback."}],"pos":[4915,5006],"yaml":true},{"content":"A handler to invoke for each reported progress value. This handler will be invoked in addition to any delegates registered with the <xref href=\"System.Progress`1.ProgressChanged\"></xref> event. Depending on the <xref href=\"System.Threading.SynchronizationContext\"></xref> instance captured by the <xref href=\"System.Progress`1\"></xref> at construction, it is possible that this handler instance could be invoked concurrently with itself.","nodes":[{"pos":[0,437],"content":"A handler to invoke for each reported progress value. This handler will be invoked in addition to any delegates registered with the <xref href=\"System.Progress`1.ProgressChanged\"></xref> event. Depending on the <xref href=\"System.Threading.SynchronizationContext\"></xref> instance captured by the <xref href=\"System.Progress`1\"></xref> at construction, it is possible that this handler instance could be invoked concurrently with itself.","nodes":[{"content":"A handler to invoke for each reported progress value.","pos":[0,53]},{"content":"This handler will be invoked in addition to any delegates registered with the <ph id=\"ph1\">&lt;xref href=\"System.Progress`1.ProgressChanged\"&gt;&lt;/xref&gt;</ph> event.","pos":[54,193],"source":" This handler will be invoked in addition to any delegates registered with the <xref href=\"System.Progress`1.ProgressChanged\"></xref> event."},{"content":"Depending on the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> instance captured by the <ph id=\"ph2\">&lt;xref href=\"System.Progress`1\"&gt;&lt;/xref&gt;</ph> at construction, it is possible that this handler instance could be invoked concurrently with itself.","pos":[194,437],"source":" Depending on the <xref href=\"System.Threading.SynchronizationContext\"></xref> instance captured by the <xref href=\"System.Progress`1\"></xref> at construction, it is possible that this handler instance could be invoked concurrently with itself."}]}],"pos":[5147,5585],"yaml":true},{"content":"Reports a progress change.","nodes":[{"pos":[0,26],"content":"Reports a progress change.","nodes":[{"content":"Reports a progress change.","pos":[0,26]}]}],"pos":[7063,7090],"yaml":true},{"content":"The value of the updated progress.","nodes":[{"pos":[0,34],"content":"The value of the updated progress.","nodes":[{"content":"The value of the updated progress.","pos":[0,34]}]}],"pos":[7221,7256],"yaml":true},{"content":"Raised for each reported progress value.","nodes":[{"pos":[0,40],"content":"Raised for each reported progress value.","nodes":[{"content":"Raised for each reported progress value.","pos":[0,40]}]}],"pos":[8757,8798],"yaml":true},{"content":"Handlers registered with this event will be invoked on the <xref:System.Threading.SynchronizationContext> captured when the instance was constructed.","nodes":[{"pos":[0,149],"content":"Handlers registered with this event will be invoked on the <xref:System.Threading.SynchronizationContext> captured when the instance was constructed.","nodes":[{"content":"Handlers registered with this event will be invoked on the <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> captured when the instance was constructed.","pos":[0,149],"source":"Handlers registered with this event will be invoked on the <xref:System.Threading.SynchronizationContext> captured when the instance was constructed."}]}],"pos":[8809,8959],"yaml":true,"extradata":"MT"},{"content":"Reports a progress change.","nodes":[{"pos":[0,26],"content":"Reports a progress change.","nodes":[{"content":"Reports a progress change.","pos":[0,26]}]}],"pos":[10639,10666],"yaml":true},{"content":"The value of the updated progress.","nodes":[{"pos":[0,34],"content":"The value of the updated progress.","nodes":[{"content":"The value of the updated progress.","pos":[0,34]}]}],"pos":[10790,10825],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Progress`1\n  commentId: T:System.Progress`1\n  id: Progress`1\n  children:\n  - System.Progress`1.#ctor\n  - System.Progress`1.#ctor(System.Action{`0})\n  - System.Progress`1.OnReport(`0)\n  - System.Progress`1.ProgressChanged\n  - System.Progress`1.System#IProgress{T}#Report(`0)\n  langs:\n  - csharp\n  name: Progress<T>\n  nameWithType: Progress<T>\n  fullName: System.Progress<T>\n  type: Class\n  assemblies:\n  - System.Runtime.Extensions\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Provides an <xref href=\"System.IProgress`1\"></xref> that invokes callbacks for each reported progress value.\n  remarks: \"Any handler provided to the constructor or event handlers registered with the <xref:System.Progress%601.ProgressChanged> event are invoked through a <xref:System.Threading.SynchronizationContext> instance captured when the instance is constructed. If there is no current <xref:System.Threading.SynchronizationContext> at the time of construction, the callbacks will be invoked on the <xref:System.Threading.ThreadPool>.  \\n  \\n For more information and a code example, see the article [Async in 4.5: Enabling Progress and Cancellation in Async APIs](http://go.microsoft.com/fwlink/p/?LinkId=267243) in the .NET Framework blog.\"\n  syntax:\n    content: 'public class Progress<T> : IProgress<T>'\n    typeParameters:\n    - id: T\n      description: Specifies the type of the progress report value.\n  inheritance:\n  - System.Object\n  implements:\n  - System.IProgress{T}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Progress`1.#ctor\n  commentId: M:System.Progress`1.#ctor\n  id: '#ctor'\n  parent: System.Progress`1\n  langs:\n  - csharp\n  name: Progress<T>()\n  nameWithType: Progress<T>.Progress<T>()\n  fullName: Progress<T>.Progress<T>()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Extensions\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes the <xref href=\"System.Progress`1\"></xref> object.\n  syntax:\n    content: public Progress ();\n    parameters: []\n  overload: System.Progress`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Progress`1.#ctor(System.Action{`0})\n  commentId: M:System.Progress`1.#ctor(System.Action{`0})\n  id: '#ctor(System.Action{`0})'\n  parent: System.Progress`1\n  langs:\n  - csharp\n  name: Progress<T>(Action<T>)\n  nameWithType: Progress<T>.Progress<T>(Action<T>)\n  fullName: Progress<T>.Progress<T>(Action<T>)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Extensions\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes the <xref href=\"System.Progress`1\"></xref> object with the specified callback.\n  syntax:\n    content: public Progress (Action<T> handler);\n    parameters:\n    - id: handler\n      type: System.Action`1\n      description: A handler to invoke for each reported progress value. This handler will be invoked in addition to any delegates registered with the <xref href=\"System.Progress`1.ProgressChanged\"></xref> event. Depending on the <xref href=\"System.Threading.SynchronizationContext\"></xref> instance captured by the <xref href=\"System.Progress`1\"></xref> at construction, it is possible that this handler instance could be invoked concurrently with itself.\n  overload: System.Progress`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Progress`1.OnReport(`0)\n  commentId: M:System.Progress`1.OnReport(`0)\n  id: OnReport(`0)\n  parent: System.Progress`1\n  langs:\n  - csharp\n  name: OnReport(T)\n  nameWithType: Progress<T>.OnReport(T)\n  fullName: Progress<T>.OnReport(T)\n  type: Method\n  assemblies:\n  - System.Runtime.Extensions\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Reports a progress change.\n  syntax:\n    content: protected virtual void OnReport (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The value of the updated progress.\n  overload: System.Progress`1.OnReport*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Progress`1.ProgressChanged\n  commentId: E:System.Progress`1.ProgressChanged\n  id: ProgressChanged\n  parent: System.Progress`1\n  langs:\n  - csharp\n  name: ProgressChanged\n  nameWithType: Progress<T>.ProgressChanged\n  fullName: Progress<T>.ProgressChanged\n  type: Event\n  assemblies:\n  - System.Runtime.Extensions\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Raised for each reported progress value.\n  remarks: Handlers registered with this event will be invoked on the <xref:System.Threading.SynchronizationContext> captured when the instance was constructed.\n  syntax:\n    content: public event EventHandler<T> ProgressChanged;\n    return:\n      type: System.EventHandler{T}\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Progress`1.System#IProgress{T}#Report(`0)\n  commentId: M:System.Progress`1.System#IProgress<T>#Report(`0)\n  id: System#IProgress{T}#Report(`0)\n  isEii: true\n  parent: System.Progress`1\n  langs:\n  - csharp\n  name: IProgress<T>.Report(T)\n  nameWithType: Progress<T>.IProgress<T>.Report(T)\n  fullName: Progress<T>.IProgress<T>.Report(T)\n  type: Method\n  assemblies:\n  - System.Runtime.Extensions\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Reports a progress change.\n  syntax:\n    content: void IProgress<T>.Report (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The value of the updated progress.\n  overload: System.Progress`1.System#IProgress{T}#Report*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Progress`1.#ctor\n  parent: System.Progress`1\n  isExternal: false\n  name: Progress<T>()\n  nameWithType: Progress<T>.Progress<T>()\n  fullName: Progress<T>.Progress<T>()\n- uid: System.Progress`1.#ctor(System.Action{`0})\n  parent: System.Progress`1\n  isExternal: false\n  name: Progress<T>(Action<T>)\n  nameWithType: Progress<T>.Progress<T>(Action<T>)\n  fullName: Progress<T>.Progress<T>(Action<T>)\n- uid: System.Action`1\n  parent: System\n  isExternal: false\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n- uid: System.Progress`1.OnReport(`0)\n  parent: System.Progress`1\n  isExternal: false\n  name: OnReport(T)\n  nameWithType: Progress<T>.OnReport(T)\n  fullName: Progress<T>.OnReport(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Progress`1.ProgressChanged\n  parent: System.Progress`1\n  isExternal: false\n  name: ProgressChanged\n  nameWithType: Progress<T>.ProgressChanged\n  fullName: Progress<T>.ProgressChanged\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.EventHandler{T}\n  parent: System\n  isExternal: false\n  name: EventHandler<T>\n  nameWithType: EventHandler<T>\n  fullName: System.EventHandler<T>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Progress`1.System#IProgress{T}#Report(`0)\n  parent: System.Progress`1\n  isExternal: false\n  name: IProgress<T>.Report(T)\n  nameWithType: Progress<T>.IProgress<T>.Report(T)\n  fullName: Progress<T>.IProgress<T>.Report(T)\n- uid: System.Progress`1.#ctor*\n  parent: System.Progress`1\n  isExternal: false\n  name: Progress<T>\n  nameWithType: Progress<T>.Progress<T>\n  fullName: Progress<T>.Progress<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n- uid: System.Progress`1.OnReport*\n  parent: System.Progress`1\n  isExternal: false\n  name: OnReport\n  nameWithType: Progress<T>.OnReport\n  fullName: Progress<T>.OnReport\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n- uid: System.Progress`1.System#IProgress{T}#Report*\n  parent: System.Progress`1\n  isExternal: false\n  name: System.IProgress<T>.Report\n  nameWithType: Progress<T>.System.IProgress<T>.Report\n  fullName: Progress<T>.System.IProgress<T>.Report\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Progress`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IProgress`1\n  parent: System\n  isExternal: false\n  name: IProgress<T>\n  nameWithType: IProgress<T>\n  fullName: System.IProgress<T>\n"}