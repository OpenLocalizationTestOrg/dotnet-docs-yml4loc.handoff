{"nodes":[{"content":"Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.","nodes":[{"pos":[0,91],"content":"Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.","nodes":[{"content":"Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.","pos":[0,91],"nodes":[{"content":"Controls access permissions in ASP.NET hosted environments.","pos":[0,59]},{"content":"This class cannot be inherited.","pos":[60,91]}]}]}],"pos":[1058,1150],"yaml":true},{"content":"The <xref:System.Web.AspNetHostingPermission> class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel.Minimal> trust level to access protected ASP.NET classes.  \n  \n The <xref:System.Web.AspNetHostingPermission> class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element. By default, the `level` attribute of the `trust` configuration element is set to `Full`. That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel.Unrestricted> level. When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the <xref:System.Web.AspNetHostingPermission> class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain. For more information, see [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  \n  \n It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted. For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`.  \n  \n The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the <xref:System.Web.AspNetHostingPermission> permission. That is, the <xref:System.Web.AspNetHostingPermission> permission is only assigned, by default, to applications that are running under `Full` trust.","nodes":[{"pos":[0,298],"content":"The <xref:System.Web.AspNetHostingPermission> class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel.Minimal> trust level to access protected ASP.NET classes.","nodes":[{"content":"The <xref:System.Web.AspNetHostingPermission> class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel.Minimal> trust level to access protected ASP.NET classes.","pos":[0,298],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> class is used in conjunction with code access security to help protect public types in the System.Web namespaces.","pos":[0,159],"source":"The <xref:System.Web.AspNetHostingPermission> class is used in conjunction with code access security to help protect public types in the System.Web namespaces."},{"content":"Code must be assigned at least the <ph id=\"ph1\">&lt;xref:System.Web.AspNetHostingPermissionLevel.Minimal&gt;</ph> trust level to access protected ASP.NET classes.","pos":[160,298],"source":" Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel.Minimal> trust level to access protected ASP.NET classes."}]}]},{"pos":[305,1225],"content":"The <xref:System.Web.AspNetHostingPermission> class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element. By default, the `level` attribute of the `trust` configuration element is set to `Full`. That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel.Unrestricted> level. When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the <xref:System.Web.AspNetHostingPermission> class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain. For more information, see [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> class's <ph id=\"ph2\">&lt;xref:System.Web.AspNetHostingPermission.Level%2A&gt;</ph> property is set by configuring the appropriate trust level in the  configuration element.","pos":[0,194],"source":"The <xref:System.Web.AspNetHostingPermission> class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element."},{"content":"By default, the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element is set to <ph id=\"ph3\">`Full`</ph>.","pos":[195,283],"source":" By default, the `level` attribute of the `trust` configuration element is set to `Full`."},{"content":"That is, by default, ASP.NET applications run under the <ph id=\"ph1\">&lt;xref:System.Web.AspNetHostingPermissionLevel.Unrestricted&gt;</ph> level.","pos":[284,406],"source":" That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel.Unrestricted> level."},{"content":"When an ASP.NET application domain is created, ASP.NET reads the value specified for the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element, creates an instance of the <ph id=\"ph3\">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> class with the specified <ph id=\"ph4\">&lt;xref:System.Web.AspNetHostingPermission.Level%2A&gt;</ph> attribute, and then adds the class to the permission set for the application domain.","pos":[407,781],"source":" When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the <xref:System.Web.AspNetHostingPermission> class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Trust Levels and Policy Files<ept id=\"p1\">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>.","pos":[782,920],"source":" For more information, see [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)."}]},{"pos":[1232,1573],"content":"It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted. For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`.","nodes":[{"content":"It is recommended that you set the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element to <ph id=\"ph3\">`High`</ph> for sites that are trusted.","pos":[0,127],"source":"It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted."},{"content":"For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element to <ph id=\"ph3\">`Medium`</ph>.","pos":[128,341],"source":" For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`."}]},{"pos":[1580,1922],"content":"The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the <xref:System.Web.AspNetHostingPermission> permission. That is, the <xref:System.Web.AspNetHostingPermission> permission is only assigned, by default, to applications that are running under `Full` trust.","nodes":[{"content":"The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the <ph id=\"ph1\">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> permission.","pos":[0,193],"source":"The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the <xref:System.Web.AspNetHostingPermission> permission."},{"content":"That is, the <ph id=\"ph1\">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> permission is only assigned, by default, to applications that are running under <ph id=\"ph2\">`Full`</ph> trust.","pos":[194,342],"source":" That is, the <xref:System.Web.AspNetHostingPermission> permission is only assigned, by default, to applications that are running under `Full` trust."}]}],"pos":[1161,3092],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value.","nodes":[{"pos":[0,198],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value."}],"pos":[6406,6605],"yaml":true},{"content":"A <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"A <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value."}],"pos":[6819,6905],"yaml":true},{"content":"<code>state</code> is not set to one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration values.","nodes":[{"pos":[0,128],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not set to one of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"<code>state</code> is not set to one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration values."}],"pos":[7067,7196],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified permission level.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission level.","source":"Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified permission level."}],"pos":[8381,8514],"yaml":true},{"content":"An <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration value.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"An <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration value."}],"pos":[8720,8803],"yaml":true},{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","nodes":[{"pos":[0,108],"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","nodes":[{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","pos":[0,108]}]}],"pos":[9785,9894],"yaml":true},{"content":"A copy of the current permission object.","nodes":[{"pos":[0,40],"content":"A copy of the current permission object.","nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]}],"pos":[10060,10101],"yaml":true},{"content":"Reconstructs a permission object with a specified state from an XML encoding.","nodes":[{"pos":[0,77],"content":"Reconstructs a permission object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission object with a specified state from an XML encoding.","pos":[0,77]}]}],"pos":[11244,11322],"yaml":true},{"content":"For details about formatting the XML representation of permission object state, see [Implementing a Custom Permission](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585).","nodes":[{"pos":[0,189],"content":"For details about formatting the XML representation of permission object state, see <bpt id=\"p1\">[</bpt>Implementing a Custom Permission<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585)</ept>.","source":"For details about formatting the XML representation of permission object state, see [Implementing a Custom Permission](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585)."}],"pos":[11333,11523],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding to use to reconstruct the permission object.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> containing the XML encoding to use to reconstruct the permission object.","source":"The <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding to use to reconstruct the permission object."}],"pos":[11731,11861],"yaml":true},{"content":"<code>securityElement</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityElement</code> is `null`."}],"pos":[12033,12073],"yaml":true},{"content":"The <xref href=\"System.Security.SecurityElement.Tag\"></xref> property of <code>securityElement</code> is not equal to \"IPermission\".  \n  \n `-` or-  \n  \n The class <xref href=\"System.Security.SecurityElement.Attribute(System.String)\"></xref> of <code>securityElement</code> is `null` or an empty string (\"\").","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement.Tag\"&gt;&lt;/xref&gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not equal to \"IPermission\".","source":"The <xref href=\"System.Security.SecurityElement.Tag\"></xref> property of <code>securityElement</code> is not equal to \"IPermission\"."},{"pos":[139,146],"content":"<ph id=\"ph1\">`-`</ph> or-","source":"`-` or-"},{"pos":[153,307],"content":"The class <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement.Attribute(System.String)\"&gt;&lt;/xref&gt;</ph> of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph> or an empty string (\"\").","source":"The class <xref href=\"System.Security.SecurityElement.Attribute(System.String)\"></xref> of <code>securityElement</code> is `null` or an empty string (\"\")."}],"pos":[12167,12489],"yaml":true},{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,150],"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,150]}]}],"pos":[13550,13701],"yaml":true},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[13908,14016],"yaml":true},{"content":"An <xref href=\"System.Security.IPermission\"></xref> that represents the intersection of the current permission and the specified permission; otherwise, `null` if the intersection is empty.","nodes":[{"pos":[0,188],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> that represents the intersection of the current permission and the specified permission; otherwise, <ph id=\"ph2\">`null`</ph> if the intersection is empty.","source":"An <xref href=\"System.Security.IPermission\"></xref> that represents the intersection of the current permission and the specified permission; otherwise, `null` if the intersection is empty."}],"pos":[14087,14276],"yaml":true},{"content":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;&lt;/xref&gt;</ph>.","source":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>."}],"pos":[14442,14529],"yaml":true},{"content":"Returns a value indicating whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,98],"content":"Returns a value indicating whether the current permission is a subset of the specified permission.","nodes":[{"content":"Returns a value indicating whether the current permission is a subset of the specified permission.","pos":[0,98]}]}],"pos":[15596,15695],"yaml":true},{"content":"The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission. It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>.","nodes":[{"pos":[0,185],"content":"The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission. It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> to combine with the current permission.","pos":[0,92],"source":"The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission."},{"content":"It must be of the same type as the current <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph>.","pos":[93,185],"source":" It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>."}]}],"pos":[15880,16066],"yaml":true},{"content":"`true` if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,169],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> is a subset of the specified <ph id=\"ph3\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, `false`."}],"pos":[16124,16296],"yaml":true},{"content":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;&lt;/xref&gt;</ph>.","source":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>."}],"pos":[16463,16550],"yaml":true},{"content":"Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.","nodes":[{"pos":[0,126],"content":"Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.","nodes":[{"content":"Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.","pos":[0,126]}]}],"pos":[17521,17648],"yaml":true},{"content":"`true` if unrestricted use of the resource protected by the permission is allowed; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if unrestricted use of the resource protected by the permission is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if unrestricted use of the resource protected by the permission is allowed; otherwise, `false`."}],"pos":[17779,17884],"yaml":true},{"content":"Gets or sets the current hosting permission level for an ASP.NET application.","nodes":[{"pos":[0,77],"content":"Gets or sets the current hosting permission level for an ASP.NET application.","nodes":[{"content":"Gets or sets the current hosting permission level for an ASP.NET application.","pos":[0,77]}]}],"pos":[18877,18955],"yaml":true},{"content":"One of the <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration values.","nodes":[{"pos":[0,91],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"One of the <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration values."}],"pos":[19128,19220],"yaml":true},{"content":"Creates an XML encoding of the permission object and its current state.","nodes":[{"pos":[0,71],"content":"Creates an XML encoding of the permission object and its current state.","nodes":[{"content":"Creates an XML encoding of the permission object and its current state.","pos":[0,71]}]}],"pos":[20208,20280],"yaml":true},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding of the permission object, including any state information.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> containing the XML encoding of the permission object, including any state information.","source":"A <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding of the permission object, including any state information."}],"pos":[20455,20597],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[21705,21800],"yaml":true},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[22003,22111],"yaml":true},{"content":"An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,133],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> that represents the union of the current permission and the specified permission.","source":"An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission."}],"pos":[22182,22316],"yaml":true},{"content":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;&lt;/xref&gt;</ph>.","source":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>."}],"pos":[22478,22565],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.AspNetHostingPermission\n  commentId: T:System.Web.AspNetHostingPermission\n  id: AspNetHostingPermission\n  children:\n  - System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  - System.Web.AspNetHostingPermission.Copy\n  - System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  - System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  - System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Web.AspNetHostingPermission.IsUnrestricted\n  - System.Web.AspNetHostingPermission.Level\n  - System.Web.AspNetHostingPermission.ToXml\n  - System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: AspNetHostingPermission\n  nameWithType: AspNetHostingPermission\n  fullName: System.Web.AspNetHostingPermission\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.\n  remarks: \"The <xref:System.Web.AspNetHostingPermission> class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel.Minimal> trust level to access protected ASP.NET classes.  \\n  \\n The <xref:System.Web.AspNetHostingPermission> class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element. By default, the `level` attribute of the `trust` configuration element is set to `Full`. That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel.Unrestricted> level. When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the <xref:System.Web.AspNetHostingPermission> class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain. For more information, see [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  \\n  \\n It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted. For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`.  \\n  \\n The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the <xref:System.Web.AspNetHostingPermission> permission. That is, the <xref:System.Web.AspNetHostingPermission> permission is only assigned, by default, to applications that are running under `Full` trust.\"\n  example:\n  - \"The following code example shows a class protected using the <xref:System.Web.AspNetHostingPermission> permission. Code must be running with at least <xref:System.Web.AspNetHostingPermissionLevel.Minimal><xref:System.Web.AspNetHostingPermission> permission <xref:System.Web.AspNetHostingPermission.Level%2A> in order to create an instance of the class.  \\n  \\n [!code-csharp[System.Web.AspNetHostingPermission#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.AspNetHostingPermission/CS/CustomAspNetClass.cs#1)]\\n [!code-vb[System.Web.AspNetHostingPermission#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.AspNetHostingPermission/VB/CustomAspNetClass.vb#1)]\"\n  syntax:\n    content: 'public sealed class AspNetHostingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: AspNetHostingPermission(PermissionState)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n  fullName: AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value.\n  syntax:\n    content: public AspNetHostingPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: A <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value.\n  overload: System.Web.AspNetHostingPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not set to one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  commentId: M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  id: '#ctor(System.Web.AspNetHostingPermissionLevel)'\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: AspNetHostingPermission(AspNetHostingPermissionLevel)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n  fullName: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified permission level.\n  syntax:\n    content: public AspNetHostingPermission (System.Web.AspNetHostingPermissionLevel level);\n    parameters:\n    - id: level\n      type: System.Web.AspNetHostingPermissionLevel\n      description: An <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration value.\n  overload: System.Web.AspNetHostingPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.Copy\n  commentId: M:System.Web.AspNetHostingPermission.Copy\n  id: Copy\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: AspNetHostingPermission.Copy()\n  fullName: AspNetHostingPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: When implemented by a derived class, creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Web.AspNetHostingPermission.Copy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: AspNetHostingPermission.FromXml(SecurityElement)\n  fullName: AspNetHostingPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Reconstructs a permission object with a specified state from an XML encoding.\n  remarks: For details about formatting the XML representation of permission object state, see [Implementing a Custom Permission](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585).\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding to use to reconstruct the permission object.\n  overload: System.Web.AspNetHostingPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref href=\\\"System.Security.SecurityElement.Tag\\\"></xref> property of <code>securityElement</code> is not equal to \\\"IPermission\\\".  \\n  \\n `-` or-  \\n  \\n The class <xref href=\\\"System.Security.SecurityElement.Attribute(System.String)\\\"></xref> of <code>securityElement</code> is `null` or an empty string (\\\"\\\").\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: AspNetHostingPermission.Intersect(IPermission)\n  fullName: AspNetHostingPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that represents the intersection of the current permission and the specified permission; otherwise, `null` if the intersection is empty.\n  overload: System.Web.AspNetHostingPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: AspNetHostingPermission.IsSubsetOf(IPermission)\n  fullName: AspNetHostingPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Returns a value indicating whether the current permission is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission. It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, `false`.'\n  overload: System.Web.AspNetHostingPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.IsUnrestricted\n  commentId: M:System.Web.AspNetHostingPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: AspNetHostingPermission.IsUnrestricted()\n  fullName: AspNetHostingPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if unrestricted use of the resource protected by the permission is allowed; otherwise, `false`.'\n  overload: System.Web.AspNetHostingPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.Level\n  commentId: P:System.Web.AspNetHostingPermission.Level\n  id: Level\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Level\n  nameWithType: AspNetHostingPermission.Level\n  fullName: AspNetHostingPermission.Level\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Gets or sets the current hosting permission level for an ASP.NET application.\n  syntax:\n    content: public System.Web.AspNetHostingPermissionLevel Level { get; set; }\n    return:\n      type: System.Web.AspNetHostingPermissionLevel\n      description: One of the <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration values.\n  overload: System.Web.AspNetHostingPermission.Level*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.ToXml\n  commentId: M:System.Web.AspNetHostingPermission.ToXml\n  id: ToXml\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: AspNetHostingPermission.ToXml()\n  fullName: AspNetHostingPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Creates an XML encoding of the permission object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding of the permission object, including any state information.\n  overload: System.Web.AspNetHostingPermission.ToXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  commentId: M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: AspNetHostingPermission.Union(IPermission)\n  fullName: AspNetHostingPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission.\n  overload: System.Web.AspNetHostingPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: AspNetHostingPermission(PermissionState)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n  fullName: AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: AspNetHostingPermission(AspNetHostingPermissionLevel)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n  fullName: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n- uid: System.Web.AspNetHostingPermissionLevel\n  parent: System.Web\n  isExternal: false\n  name: AspNetHostingPermissionLevel\n  nameWithType: AspNetHostingPermissionLevel\n  fullName: System.Web.AspNetHostingPermissionLevel\n- uid: System.Web.AspNetHostingPermission.Copy\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: AspNetHostingPermission.Copy()\n  fullName: AspNetHostingPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: AspNetHostingPermission.FromXml(SecurityElement)\n  fullName: AspNetHostingPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: AspNetHostingPermission.Intersect(IPermission)\n  fullName: AspNetHostingPermission.Intersect(IPermission)\n- uid: System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: AspNetHostingPermission.IsSubsetOf(IPermission)\n  fullName: AspNetHostingPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.AspNetHostingPermission.IsUnrestricted\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: AspNetHostingPermission.IsUnrestricted()\n  fullName: AspNetHostingPermission.IsUnrestricted()\n- uid: System.Web.AspNetHostingPermission.Level\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Level\n  nameWithType: AspNetHostingPermission.Level\n  fullName: AspNetHostingPermission.Level\n- uid: System.Web.AspNetHostingPermission.ToXml\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: AspNetHostingPermission.ToXml()\n  fullName: AspNetHostingPermission.ToXml()\n- uid: System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: AspNetHostingPermission.Union(IPermission)\n  fullName: AspNetHostingPermission.Union(IPermission)\n- uid: System.Web.AspNetHostingPermission.#ctor*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: AspNetHostingPermission\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission\n  fullName: AspNetHostingPermission.AspNetHostingPermission\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.Copy*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Copy\n  nameWithType: AspNetHostingPermission.Copy\n  fullName: AspNetHostingPermission.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.FromXml*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: AspNetHostingPermission.FromXml\n  fullName: AspNetHostingPermission.FromXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.Intersect*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: AspNetHostingPermission.Intersect\n  fullName: AspNetHostingPermission.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.IsSubsetOf*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: AspNetHostingPermission.IsSubsetOf\n  fullName: AspNetHostingPermission.IsSubsetOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.IsUnrestricted*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: AspNetHostingPermission.IsUnrestricted\n  fullName: AspNetHostingPermission.IsUnrestricted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.Level*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Level\n  nameWithType: AspNetHostingPermission.Level\n  fullName: AspNetHostingPermission.Level\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.ToXml*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: AspNetHostingPermission.ToXml\n  fullName: AspNetHostingPermission.ToXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Web.AspNetHostingPermission.Union*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Union\n  nameWithType: AspNetHostingPermission.Union\n  fullName: AspNetHostingPermission.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/AspNetHostingPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}