{"nodes":[{"content":"Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.","nodes":[{"pos":[0,143],"content":"Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.","nodes":[{"content":"Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.","pos":[0,143]}]}],"pos":[2865,3009],"yaml":true},{"content":"Represents a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints and that are built, consistently, into a channel factory on the client and into a channel listener on the service. A binding contains a collection of binding elements that correspond to protocol channels, transport channels, and message encoders. There can be any number of binding elements for protocol channels but one and only one binding element for each the transport and message encoder. There are commonly six layers of binding elements in a binding. Only the transport and encoding binding elements at the bottom of the stack are required. Because an encoding is required for each binding, if an encoding is not specified, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] adds a default encoding for you. The default is Text/XML for the HTTP and HTTPS transports, and Binary for other transports.  \n  \n The following table summarizes the options for each layer.  \n  \n|Layer|Options|Required|  \n|-----------|-------------|--------------|  \n|Transaction Flow|<xref:System.ServiceModel.Channels.TransactionFlowBindingElement>|No|  \n|Reliability|<xref:System.ServiceModel.Channels.ReliableSessionBindingElement>|No|  \n|Security|Symmetric, Asymmetric, Transport-Level|No|  \n|Shape Change|<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>|No|  \n|Transport Upgrades|SSL stream, Windows stream, Peer Resolver|No|  \n|Encoding|Text, Binary, MTOM, Custom|Yes|  \n|Transport|TCP, Named Pipes, HTTP, HTTPS, MSMQ, Custom|Yes|  \n  \n Each binding element provides the specification for building a channel factory on the client and a channel listener on the service. When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding. The same sort of mapping applies to the channel listeners in the stack on the service. Consistency on the client and service is critical for establishing the channel-based connection between these endpoints. Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.  \n  \n Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify it in the metadata of the service. If no name or namespace is specified, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] adds a default values for you. The default name is `null` and the default namespace is http://tempuri.org/. This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.  \n  \n The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time. The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages. The properties used to get and set these timeouts and their default values operations are summarized in the following table.  \n  \n|Timeout Property|Default Value|  \n|----------------------|-------------------|  \n|<xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A>|1 minute|  \n|<xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A>|1 minute|  \n|<xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>|1 minute|  \n|<xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>|10 minutes|  \n  \n When you create a binding by inheriting from <xref:System.ServiceModel.Channels.Binding>, you must override <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>.  \n  \n In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table. For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class.","nodes":[{"pos":[0,933],"content":"Represents a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints and that are built, consistently, into a channel factory on the client and into a channel listener on the service. A binding contains a collection of binding elements that correspond to protocol channels, transport channels, and message encoders. There can be any number of binding elements for protocol channels but one and only one binding element for each the transport and message encoder. There are commonly six layers of binding elements in a binding. Only the transport and encoding binding elements at the bottom of the stack are required. Because an encoding is required for each binding, if an encoding is not specified, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] adds a default encoding for you. The default is Text/XML for the HTTP and HTTPS transports, and Binary for other transports.","nodes":[{"content":"Represents a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints and that are built, consistently, into a channel factory on the client and into a channel listener on the service.","pos":[0,246]},{"content":"A binding contains a collection of binding elements that correspond to protocol channels, transport channels, and message encoders.","pos":[247,378]},{"content":"There can be any number of binding elements for protocol channels but one and only one binding element for each the transport and message encoder.","pos":[379,525]},{"content":"There are commonly six layers of binding elements in a binding.","pos":[526,589]},{"content":"Only the transport and encoding binding elements at the bottom of the stack are required.","pos":[590,679]},{"content":"Because an encoding is required for each binding, if an encoding is not specified, <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> adds a default encoding for you.","pos":[680,841],"source":" Because an encoding is required for each binding, if an encoding is not specified, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] adds a default encoding for you."},{"content":"The default is Text/XML for the HTTP and HTTPS transports, and Binary for other transports.","pos":[842,933]}]},{"pos":[940,998],"content":"The following table summarizes the options for each layer.","nodes":[{"content":"The following table summarizes the options for each layer.","pos":[0,58]}]},{"pos":[1005,1010],"content":"Layer","nodes":[{"content":"Layer","pos":[0,5]}]},{"pos":[1011,1018],"content":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[1019,1027],"content":"Required","nodes":[{"content":"Required","pos":[0,8]}]},{"pos":[1077,1093],"content":"Transaction Flow","nodes":[{"content":"Transaction Flow","pos":[0,16]}]},{"pos":[1094,1159],"content":"<xref:System.ServiceModel.Channels.TransactionFlowBindingElement>","nodes":[]},{"pos":[1160,1162],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1167,1178],"content":"Reliability","nodes":[{"content":"Reliability","pos":[0,11]}]},{"pos":[1179,1244],"content":"<xref:System.ServiceModel.Channels.ReliableSessionBindingElement>","nodes":[]},{"pos":[1245,1247],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1252,1260],"content":"Security","nodes":[{"content":"Security","pos":[0,8]}]},{"pos":[1261,1299],"content":"Symmetric, Asymmetric, Transport-Level","nodes":[{"content":"Symmetric, Asymmetric, Transport-Level","pos":[0,38]}]},{"pos":[1300,1302],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1307,1319],"content":"Shape Change","nodes":[{"content":"Shape Change","pos":[0,12]}]},{"pos":[1320,1385],"content":"<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>","nodes":[]},{"pos":[1386,1388],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1393,1411],"content":"Transport Upgrades","nodes":[{"content":"Transport Upgrades","pos":[0,18]}]},{"pos":[1412,1453],"content":"SSL stream, Windows stream, Peer Resolver","nodes":[{"content":"SSL stream, Windows stream, Peer Resolver","pos":[0,41]}]},{"pos":[1454,1456],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1461,1469],"content":"Encoding","nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[1470,1496],"content":"Text, Binary, MTOM, Custom","nodes":[{"content":"Text, Binary, MTOM, Custom","pos":[0,26]}]},{"pos":[1497,1500],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[1505,1514],"content":"Transport","nodes":[{"content":"Transport","pos":[0,9]}]},{"pos":[1515,1558],"content":"TCP, Named Pipes, HTTP, HTTPS, MSMQ, Custom","nodes":[{"content":"TCP, Named Pipes, HTTP, HTTPS, MSMQ, Custom","pos":[0,43]}]},{"pos":[1559,1562],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[1570,2274],"content":"Each binding element provides the specification for building a channel factory on the client and a channel listener on the service. When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding. The same sort of mapping applies to the channel listeners in the stack on the service. Consistency on the client and service is critical for establishing the channel-based connection between these endpoints. Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.","nodes":[{"content":"Each binding element provides the specification for building a channel factory on the client and a channel listener on the service. When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding. The same sort of mapping applies to the channel listeners in the stack on the service. Consistency on the client and service is critical for establishing the channel-based connection between these endpoints. Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.","pos":[0,704],"nodes":[{"content":"Each binding element provides the specification for building a channel factory on the client and a channel listener on the service.","pos":[0,131]},{"content":"When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding.","pos":[132,274]},{"content":"The same sort of mapping applies to the channel listeners in the stack on the service.","pos":[275,361]},{"content":"Consistency on the client and service is critical for establishing the channel-based connection between these endpoints.","pos":[362,482]},{"content":"Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.","pos":[483,704]}]}]},{"pos":[2281,3369],"content":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify it in the metadata of the service. If no name or namespace is specified, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] adds a default values for you. The default name is `null` and the default namespace is http://tempuri.org/. This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"content":"Each instance of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.Name%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.Binding.Namespace%2A&gt;</ph> that together uniquely identify it in the metadata of the service.","pos":[0,248],"source":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify it in the metadata of the service."},{"content":"If no name or namespace is specified, <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> adds a default values for you.","pos":[249,363],"source":" If no name or namespace is specified, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] adds a default values for you."},{"content":"The default name is <ph id=\"ph1\">`null`</ph> and the default namespace is http://tempuri.org/.","pos":[364,440],"source":" The default name is `null` and the default namespace is http://tempuri.org/."},{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph> property.","pos":[441,618],"source":" This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property."},{"content":"If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\".","pos":[619,746]},{"content":"There is no inherent application or machine dispatch based on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph>.","pos":[747,867],"source":" There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>."},{"content":"So you avoid the common problem of being unable to register additional handlers for well-known protocols.","pos":[868,973]},{"content":"You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[974,1088]}]},{"pos":[3376,3934],"content":"The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time. The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages. The properties used to get and set these timeouts and their default values operations are summarized in the following table.","nodes":[{"content":"The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time. The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages. The properties used to get and set these timeouts and their default values operations are summarized in the following table.","pos":[0,558],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> class implements the <ph id=\"ph2\">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts&gt;</ph> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time.","pos":[0,243],"source":"The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time."},{"content":"The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages.","pos":[244,433]},{"content":"The properties used to get and set these timeouts and their default values operations are summarized in the following table.","pos":[434,558]}]}]},{"pos":[3941,3957],"content":"Timeout Property","nodes":[{"content":"Timeout Property","pos":[0,16]}]},{"pos":[3958,3971],"content":"Default Value","nodes":[{"content":"Default Value","pos":[0,13]}]},{"pos":[4023,4081],"content":"<xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A>","nodes":[]},{"pos":[4082,4090],"content":"1 minute","nodes":[{"content":"1 minute","pos":[0,8]}]},{"pos":[4095,4154],"content":"<xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A>","nodes":[]},{"pos":[4155,4163],"content":"1 minute","nodes":[{"content":"1 minute","pos":[0,8]}]},{"pos":[4168,4226],"content":"<xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>","nodes":[]},{"pos":[4227,4235],"content":"1 minute","nodes":[{"content":"1 minute","pos":[0,8]}]},{"pos":[4240,4301],"content":"<xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>","nodes":[]},{"pos":[4302,4312],"content":"10 minutes","nodes":[{"content":"10 minutes","pos":[0,10]}]},{"pos":[4320,4497],"content":"When you create a binding by inheriting from <xref:System.ServiceModel.Channels.Binding>, you must override <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>.","nodes":[{"content":"When you create a binding by inheriting from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph>, you must override <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A&gt;</ph>.","pos":[0,177],"source":"When you create a binding by inheriting from <xref:System.ServiceModel.Channels.Binding>, you must override <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>."}]},{"pos":[4504,4718],"content":"In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table. For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class.","nodes":[{"content":"In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table. For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class.","pos":[0,214],"nodes":[{"content":"In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table.","pos":[0,127]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph> class.","pos":[128,214],"source":" For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class."}]}]}],"pos":[3020,7772],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\"></xref> class with a default name and namespace.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> class with a default name and namespace.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\"></xref> class with a default name and namespace."}],"pos":[9859,9992],"yaml":true},{"content":"The default name is `null` and the default namespace is http://tempuri.org/.","nodes":[{"pos":[0,76],"content":"The default name is <ph id=\"ph1\">`null`</ph> and the default namespace is http://tempuri.org/.","source":"The default name is `null` and the default namespace is http://tempuri.org/."}],"pos":[10003,10080],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\"></xref> class from a specified binding of the service.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> class from a specified binding of the service.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\"></xref> class from a specified binding of the service."}],"pos":[11614,11753],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> together uniquely identify an instance of a <xref:System.ServiceModel.Channels.Binding> in the metadata of the service.","nodes":[{"pos":[0,236],"content":"The <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> together uniquely identify an instance of a <xref:System.ServiceModel.Channels.Binding> in the metadata of the service.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Name%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.Namespace%2A&gt;</ph> together uniquely identify an instance of a <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> in the metadata of the service.","pos":[0,236],"source":"The <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> together uniquely identify an instance of a <xref:System.ServiceModel.Channels.Binding> in the metadata of the service."}]}],"pos":[11764,12001],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding.Name\"></xref> of the binding.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding.Name\"&gt;&lt;/xref&gt;</ph> of the binding.","source":"The <xref href=\"System.ServiceModel.Channels.Binding.Name\"></xref> of the binding."}],"pos":[12144,12227],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding.Namespace\"></xref> of the binding.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding.Namespace\"&gt;&lt;/xref&gt;</ph> of the binding.","source":"The <xref href=\"System.ServiceModel.Channels.Binding.Namespace\"></xref> of the binding."}],"pos":[12285,12373],"yaml":true},{"content":"<code>name</code> is `null` or an empty string.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or an empty string.","source":"<code>name</code> is `null` or an empty string."}],"pos":[12537,12585],"yaml":true},{"content":"<code>ns</code> is `null`.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;ns&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>ns</code> is `null`."}],"pos":[12687,12714],"yaml":true},{"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.","nodes":[{"pos":[0,149],"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.","nodes":[{"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.","pos":[0,149]}]}],"pos":[13937,14087],"yaml":true},{"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,83],"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"content":"The object array that specifies requirements for the channel factory that is built.","pos":[0,83]}]}],"pos":[14309,14393],"yaml":true},{"content":"The type of channel the channel factory produces.","nodes":[{"pos":[0,49],"content":"The type of channel the channel factory produces.","nodes":[{"content":"The type of channel the channel factory produces.","pos":[0,49]}]}],"pos":[14451,14501],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> that satisfies the features specified by the collection.","nodes":[{"pos":[0,157],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified by the collection.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> that satisfies the features specified by the collection."}],"pos":[14591,14749],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[14946,15053],"yaml":true},{"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.","nodes":[{"pos":[0,168],"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.","nodes":[{"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.","pos":[0,168]}]}],"pos":[16450,16619],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel factory built.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel factory built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel factory built."}],"pos":[16936,17076],"yaml":true},{"content":"The type of channel the channel factory produces.","nodes":[{"pos":[0,49],"content":"The type of channel the channel factory produces.","nodes":[{"content":"The type of channel the channel factory produces.","pos":[0,49]}]}],"pos":[17134,17184],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> that satisfies the features specified by the collection.","nodes":[{"pos":[0,157],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified by the collection.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> that satisfies the features specified by the collection."}],"pos":[17274,17432],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[17629,17736],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[18965,19092],"yaml":true},{"content":"The object array that specifies requirements for the channel factory built.","nodes":[{"pos":[0,75],"content":"The object array that specifies requirements for the channel factory built.","nodes":[{"content":"The object array that specifies requirements for the channel factory built.","pos":[0,75]}]}],"pos":[19388,19464],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[19522,19572],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[19663,19804],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[20002,20109],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.","nodes":[{"pos":[0,164],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.","pos":[0,164]}]}],"pos":[21426,21591],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel listener that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built."}],"pos":[21974,22123],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[22181,22231],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[22322,22463],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[22661,22768],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[23959,24086],"yaml":true},{"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,83],"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"content":"The object array that specifies requirements for the channel factory that is built.","pos":[0,83]}]}],"pos":[24473,24557],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[24615,24665],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[24756,24897],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[25095,25202],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[26567,26694],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel listener that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built."}],"pos":[27168,27317],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[27375,27425],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[27516,27657],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[27855,27962],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[29219,29346],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that provides the base address on which the service listens.","source":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens."}],"pos":[29706,29803],"yaml":true},{"content":"The address, relative to the base address, on which the service listens.","nodes":[{"pos":[0,72],"content":"The address, relative to the base address, on which the service listens.","nodes":[{"content":"The address, relative to the base address, on which the service listens.","pos":[0,72]}]}],"pos":[29883,29956],"yaml":true},{"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,83],"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"content":"The object array that specifies requirements for the channel factory that is built.","pos":[0,83]}]}],"pos":[30024,30108],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[30166,30216],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[30307,30448],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[30646,30753],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[32184,32311],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that provides the base address on which the service listens.","source":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens."}],"pos":[32718,32815],"yaml":true},{"content":"The address, relative to the base address, on which the service listens.","nodes":[{"pos":[0,72],"content":"The address, relative to the base address, on which the service listens.","nodes":[{"content":"The address, relative to the base address, on which the service listens.","pos":[0,72]}]}],"pos":[32895,32968],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel listener that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built."}],"pos":[33076,33225],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[33283,33333],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[33424,33565],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[33763,33870],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[35310,35437],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that provides the base address on which the service listens.","source":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens."}],"pos":[35858,35955],"yaml":true},{"content":"The address, relative to the base address, on which the service listens.","nodes":[{"pos":[0,72],"content":"The address, relative to the base address, on which the service listens.","nodes":[{"content":"The address, relative to the base address, on which the service listens.","pos":[0,72]}]}],"pos":[36035,36108],"yaml":true},{"content":"A value of the <xref href=\"System.ServiceModel.Description.ListenUriMode\"></xref> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.","nodes":[{"pos":[0,227],"content":"A value of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ListenUriMode\"&gt;&lt;/xref&gt;</ph> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.","source":"A value of the <xref href=\"System.ServiceModel.Description.ListenUriMode\"></xref> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided."}],"pos":[36209,36437],"yaml":true},{"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,83],"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"content":"The object array that specifies requirements for the channel factory that is built.","pos":[0,83]}]}],"pos":[36505,36589],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[36647,36697],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[36788,36929],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[37127,37234],"yaml":true},{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"pos":[0,126],"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","nodes":[{"content":"Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.","pos":[0,126]}]}],"pos":[38848,38975],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that provides the base address on which the service listens.","source":"The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens."}],"pos":[39443,39540],"yaml":true},{"content":"The address, relative to the base address, on which the service listens.","nodes":[{"pos":[0,72],"content":"The address, relative to the base address, on which the service listens.","nodes":[{"content":"The address, relative to the base address, on which the service listens.","pos":[0,72]}]}],"pos":[39620,39693],"yaml":true},{"content":"A value of the <xref href=\"System.ServiceModel.Description.ListenUriMode\"></xref> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.","nodes":[{"pos":[0,227],"content":"A value of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ListenUriMode\"&gt;&lt;/xref&gt;</ph> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.","source":"A value of the <xref href=\"System.ServiceModel.Description.ListenUriMode\"></xref> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided."}],"pos":[39794,40022],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel listener that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built."}],"pos":[40130,40279],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[40337,40387],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> that satisfies the features specified.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified."}],"pos":[40478,40619],"yaml":true},{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"pos":[0,106],"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","nodes":[{"content":"Transport element is missing or out of order or scheme is invalid or the message version is not specified.","pos":[0,106]}]}],"pos":[40817,40924],"yaml":true},{"content":"Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.","nodes":[{"pos":[0,169],"content":"Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.","nodes":[{"content":"Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.","pos":[0,169]}]}],"pos":[42253,42423],"yaml":true},{"content":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory. Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.","nodes":[{"pos":[0,442],"content":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory. Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.","nodes":[{"content":"Use this method if you want to check that the channel factory for channels of type <ph id=\"ph1\">`TChannel`</ph> can be build for the binding <ph id=\"ph2\">`parameters`</ph> specified before attempting to actually build the factory.","pos":[0,194],"source":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory."},{"content":"Alternatively, try to build the channel factory by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29&gt;</ph> and catch the exception generated if it cannot be built.","pos":[195,442],"source":" Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built."}]}],"pos":[42434,42877],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel factory that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel factory that is built."}],"pos":[43147,43295],"yaml":true},{"content":"The type of channel for which the factory is being tested.","nodes":[{"pos":[0,58],"content":"The type of channel for which the factory is being tested.","nodes":[{"content":"The type of channel for which the factory is being tested.","pos":[0,58]}]}],"pos":[43353,43412],"yaml":true},{"content":"`true` if the specified channel factory stack can be build on the client; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the specified channel factory stack can be build on the client; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified channel factory stack can be build on the client; otherwise, `false`."}],"pos":[43470,43566],"yaml":true},{"content":"Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.","nodes":[{"pos":[0,168],"content":"Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.","nodes":[{"content":"Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.","pos":[0,168]}]}],"pos":[44900,45069],"yaml":true},{"content":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory. Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.","nodes":[{"pos":[0,406],"content":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory. Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.","nodes":[{"content":"Use this method if you want to check that the channel factory for channels of type <ph id=\"ph1\">`TChannel`</ph> can be build for the binding <ph id=\"ph2\">`parameters`</ph> specified before attempting to actually build the factory.","pos":[0,194],"source":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory."},{"content":"Alternatively, try to build the channel factory by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29&gt;</ph> and catch the exception generated if it cannot be built.","pos":[195,406],"source":" Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built."}]}],"pos":[45080,45487],"yaml":true,"extradata":"MT"},{"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,83],"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"content":"The object array that specifies requirements for the channel factory that is built.","pos":[0,83]}]}],"pos":[45662,45746],"yaml":true},{"content":"The type of channel for which the factory is being tested.","nodes":[{"pos":[0,58],"content":"The type of channel for which the factory is being tested.","nodes":[{"content":"The type of channel for which the factory is being tested.","pos":[0,58]}]}],"pos":[45804,45863],"yaml":true},{"content":"`true` if the specified channel factory stack can be build on the client; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the specified channel factory stack can be build on the client; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified channel factory stack can be build on the client; otherwise, `false`."}],"pos":[45921,46017],"yaml":true},{"content":"Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.","nodes":[{"pos":[0,170],"content":"Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.","nodes":[{"content":"Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.","pos":[0,170]}]}],"pos":[47357,47528],"yaml":true},{"content":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener. Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.","nodes":[{"pos":[0,410],"content":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener. Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.","nodes":[{"content":"Use this method if you want to check that the channel listener for channels of type <ph id=\"ph1\">`TChannel`</ph> can be build for the binding <ph id=\"ph2\">`parameters`</ph> specified before attempting to actually build the listener.","pos":[0,196],"source":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener."},{"content":"Alternatively, try to build the channel listener by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29&gt;</ph> and catch the exception generated if it cannot be built.","pos":[197,410],"source":" Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built."}]}],"pos":[47539,47950],"yaml":true,"extradata":"MT"},{"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"pos":[0,83],"content":"The object array that specifies requirements for the channel factory that is built.","nodes":[{"content":"The object array that specifies requirements for the channel factory that is built.","pos":[0,83]}]}],"pos":[48190,48274],"yaml":true},{"content":"The type of channel for which the listener is being tested.","nodes":[{"pos":[0,59],"content":"The type of channel for which the listener is being tested.","nodes":[{"content":"The type of channel for which the listener is being tested.","pos":[0,59]}]}],"pos":[48332,48392],"yaml":true},{"content":"`true` if the specified channel listener stack can be build on the service; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the specified channel listener stack can be build on the service; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified channel listener stack can be build on the service; otherwise, `false`."}],"pos":[48450,48548],"yaml":true},{"content":"Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.","nodes":[{"pos":[0,171],"content":"Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.","nodes":[{"content":"Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.","pos":[0,171]}]}],"pos":[49977,50149],"yaml":true},{"content":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener. Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.","nodes":[{"pos":[0,446],"content":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener. Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.","nodes":[{"content":"Use this method if you want to check that the channel listener for channels of type <ph id=\"ph1\">`TChannel`</ph> can be build for the binding <ph id=\"ph2\">`parameters`</ph> specified before attempting to actually build the listener.","pos":[0,196],"source":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener."},{"content":"Alternatively, try to build the channel listener by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29&gt;</ph> and catch the exception generated if it cannot be built.","pos":[197,446],"source":" Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built."}]}],"pos":[50160,50607],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel listener that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built."}],"pos":[50942,51091],"yaml":true},{"content":"The type of channel for which the listener is being tested.","nodes":[{"pos":[0,59],"content":"The type of channel for which the listener is being tested.","nodes":[{"content":"The type of channel for which the listener is being tested.","pos":[0,59]}]}],"pos":[51149,51209],"yaml":true},{"content":"`true` if the specified channel listener stack can be build on the service; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the specified channel listener stack can be build on the service; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified channel listener stack can be build on the service; otherwise, `false`."}],"pos":[51267,51365],"yaml":true},{"content":"Gets or sets the interval of time provided for a connection to close before the transport raises an exception.","nodes":[{"pos":[0,110],"content":"Gets or sets the interval of time provided for a connection to close before the transport raises an exception.","nodes":[{"content":"Gets or sets the interval of time provided for a connection to close before the transport raises an exception.","pos":[0,110]}]}],"pos":[52436,52547],"yaml":true},{"content":"The value of this property is used by the channels and listeners produced by the factories of the binding.","nodes":[{"pos":[0,106],"content":"The value of this property is used by the channels and listeners produced by the factories of the binding.","nodes":[{"content":"The value of this property is used by the channels and listeners produced by the factories of the binding.","pos":[0,106]}]}],"pos":[52558,52665],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.","nodes":[{"pos":[0,150],"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.","pos":[0,119],"source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out."},{"content":"The default value is 1 minute.","pos":[120,150]}]}],"pos":[52790,52941],"yaml":true},{"content":"The value is less than zero or too large.","nodes":[{"pos":[0,41],"content":"The value is less than zero or too large.","nodes":[{"content":"The value is less than zero or too large.","pos":[0,41]}]}],"pos":[53132,53174],"yaml":true},{"content":"When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.","nodes":[{"pos":[0,129],"content":"When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.","nodes":[{"content":"When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.","pos":[0,129]}]}],"pos":[54295,54425],"yaml":true},{"content":"The elements should not reference any internal elements that the <xref:System.ServiceModel.Channels.Binding> object uses.","nodes":[{"pos":[0,121],"content":"The elements should not reference any internal elements that the <xref:System.ServiceModel.Channels.Binding> object uses.","nodes":[{"content":"The elements should not reference any internal elements that the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> object uses.","pos":[0,121],"source":"The elements should not reference any internal elements that the <xref:System.ServiceModel.Channels.Binding> object uses."}]}],"pos":[54436,54558],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that contains the binding elements from the current binding object in the correct order.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> object of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> that contains the binding elements from the current binding object in the correct order.","source":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that contains the binding elements from the current binding object in the correct order."}],"pos":[54793,55026],"yaml":true},{"content":"Returns a typed object requested, if present, from the appropriate layer in the binding stack.","nodes":[{"pos":[0,94],"content":"Returns a typed object requested, if present, from the appropriate layer in the binding stack.","nodes":[{"content":"Returns a typed object requested, if present, from the appropriate layer in the binding stack.","pos":[0,94]}]}],"pos":[56443,56538],"yaml":true},{"content":"If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.","nodes":[{"pos":[0,248],"content":"If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.","nodes":[{"content":"If a layer supports returning the requested object, it returns it.","pos":[0,66]},{"content":"If not, it delegates the call down to the next layer in the stack.","pos":[67,133]},{"content":"If it gets to the bottom of the stack and no layer supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[134,248],"source":" If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`."}]}],"pos":[56549,56798],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"&gt;&lt;/xref&gt;</ph> that specifies requirements for the channel listener that is built.","source":"The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built."}],"pos":[57057,57206],"yaml":true},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[57257,57308],"yaml":true},{"content":"The typed object <code>T</code> requested if it is present or `null` if it is not.","nodes":[{"pos":[0,82],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested if it is present or <ph id=\"ph2\">`null`</ph> if it is not.","source":"The typed object <code>T</code> requested if it is present or `null` if it is not."}],"pos":[57353,57436],"yaml":true},{"content":"Gets the message version used by clients and services configured with the binding.","nodes":[{"pos":[0,82],"content":"Gets the message version used by clients and services configured with the binding.","nodes":[{"content":"Gets the message version used by clients and services configured with the binding.","pos":[0,82]}]}],"pos":[58593,58676],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageVersion\"></xref> used by clients and services configured with the binding.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageVersion\"&gt;&lt;/xref&gt;</ph> used by clients and services configured with the binding.","source":"The <xref href=\"System.ServiceModel.Channels.MessageVersion\"></xref> used by clients and services configured with the binding."}],"pos":[58861,58988],"yaml":true},{"content":"Gets or sets the name of the binding.","nodes":[{"pos":[0,37],"content":"Gets or sets the name of the binding.","nodes":[{"content":"Gets or sets the name of the binding.","pos":[0,37]}]}],"pos":[60085,60123],"yaml":true},{"content":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.  \n  \n This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"pos":[0,275],"content":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.","nodes":[{"content":"Each instance of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.Name%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.Binding.Namespace%2A&gt;</ph> that together uniquely identify the user name for the binding in the metadata of the service.","pos":[0,275],"source":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service."}]},{"pos":[282,929],"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[0,647],"nodes":[{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph> property.","pos":[0,177],"source":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property."},{"content":"If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\".","pos":[178,305]},{"content":"There is no inherent application or machine dispatch based on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph>.","pos":[306,426],"source":" There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>."},{"content":"So you avoid the common problem of being unable to register additional handlers for well-known protocols.","pos":[427,532]},{"content":"You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[533,647]}]}]}],"pos":[60134,61070],"yaml":true,"extradata":"MT"},{"content":"The name of the binding. The default name is `null`.","nodes":[{"pos":[0,52],"content":"The name of the binding. The default name is `null`.","nodes":[{"content":"The name of the binding.","pos":[0,24]},{"content":"The default name is <ph id=\"ph1\">`null`</ph>.","pos":[25,52],"source":" The default name is `null`."}]}],"pos":[61183,61236],"yaml":true},{"content":"The value set cannot be `null` or an empty string.","nodes":[{"pos":[0,50],"content":"The value set cannot be <ph id=\"ph1\">`null`</ph> or an empty string.","source":"The value set cannot be `null` or an empty string."}],"pos":[61399,61450],"yaml":true},{"content":"Gets or sets the XML namespace of the binding.","nodes":[{"pos":[0,46],"content":"Gets or sets the XML namespace of the binding.","nodes":[{"content":"Gets or sets the XML namespace of the binding.","pos":[0,46]}]}],"pos":[62495,62542],"yaml":true},{"content":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.  \n  \n This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"pos":[0,275],"content":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.","nodes":[{"content":"Each instance of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.Name%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.Binding.Namespace%2A&gt;</ph> that together uniquely identify the user name for the binding in the metadata of the service.","pos":[0,275],"source":"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service."}]},{"pos":[282,929],"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[0,647],"nodes":[{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph> property.","pos":[0,177],"source":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property."},{"content":"If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\".","pos":[178,305]},{"content":"There is no inherent application or machine dispatch based on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph>.","pos":[306,426],"source":" There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>."},{"content":"So you avoid the common problem of being unable to register additional handlers for well-known protocols.","pos":[427,532]},{"content":"You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[533,647]}]}]}],"pos":[62553,63489],"yaml":true,"extradata":"MT"},{"content":"The XML namespace of the binding. The default value is \"http://tempuri.org/\".","nodes":[{"pos":[0,77],"content":"The XML namespace of the binding. The default value is \"http://tempuri.org/\".","nodes":[{"content":"The XML namespace of the binding. The default value is \"http://tempuri.org/\".","pos":[0,77],"nodes":[{"content":"The XML namespace of the binding.","pos":[0,33]},{"content":"The default value is \"http://tempuri.org/\".","pos":[34,77]}]}]}],"pos":[63607,63685],"yaml":true},{"content":"The value set cannot be `null`.","nodes":[{"pos":[0,31],"content":"The value set cannot be <ph id=\"ph1\">`null`</ph>.","source":"The value set cannot be `null`."}],"pos":[63861,63893],"yaml":true},{"content":"Gets or sets the interval of time provided for a connection to open before the transport raises an exception.","nodes":[{"pos":[0,109],"content":"Gets or sets the interval of time provided for a connection to open before the transport raises an exception.","nodes":[{"content":"Gets or sets the interval of time provided for a connection to open before the transport raises an exception.","pos":[0,109]}]}],"pos":[64950,65060],"yaml":true},{"content":"The value of this property is used by the channels and listeners produced by the factories of the binding.","nodes":[{"pos":[0,106],"content":"The value of this property is used by the channels and listeners produced by the factories of the binding.","nodes":[{"content":"The value of this property is used by the channels and listeners produced by the factories of the binding.","pos":[0,106]}]}],"pos":[65071,65178],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.","nodes":[{"pos":[0,149],"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.","pos":[0,118],"source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out."},{"content":"The default value is 1 minute.","pos":[119,149]}]}],"pos":[65302,65452],"yaml":true},{"content":"The value is less than zero or too large.","nodes":[{"pos":[0,41],"content":"The value is less than zero or too large.","nodes":[{"content":"The value is less than zero or too large.","pos":[0,41]}]}],"pos":[65642,65684],"yaml":true},{"content":"Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.","nodes":[{"pos":[0,145],"content":"Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.","nodes":[{"content":"Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.","pos":[0,145]}]}],"pos":[66759,66905],"yaml":true},{"content":"When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive. If either of these inactivity timers goes off, then the connection is dropped.  \n  \n-   The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period. An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.  \n  \n-   The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding. This inactivity timer fires if no application messages are received within the timeout period. This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session. This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.  \n  \n Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect. The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.  \n  \n If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.  \n  \n When security is used with sessions, the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> value set on the binding is also used as the session timeout.","nodes":[{"pos":[0,204],"content":"When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive. If either of these inactivity timers goes off, then the connection is dropped.","nodes":[{"content":"When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive. If either of these inactivity timers goes off, then the connection is dropped.","pos":[0,204],"nodes":[{"content":"When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive.","pos":[0,125]},{"content":"If either of these inactivity timers goes off, then the connection is dropped.","pos":[126,204]}]}]},{"pos":[214,675],"content":"The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period. An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.","nodes":[{"content":"The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period. An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.","pos":[0,461],"nodes":[{"content":"The first inactivity timer is on the reliable session and is called the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A&gt;</ph>.","pos":[0,136],"source":"The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>."},{"content":"This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period.","pos":[137,258]},{"content":"An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.","pos":[259,461]}]}]},{"pos":[685,1189],"content":"The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding. This inactivity timer fires if no application messages are received within the timeout period. This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session. This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.","nodes":[{"content":"The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding. This inactivity timer fires if no application messages are received within the timeout period. This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session. This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.","pos":[0,504],"nodes":[{"content":"The second inactivity timer is on the service and uses the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A&gt;</ph> setting of the binding.","pos":[0,144],"source":"The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding."},{"content":"This inactivity timer fires if no application messages are received within the timeout period.","pos":[145,239]},{"content":"This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session.","pos":[240,406]},{"content":"This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.","pos":[407,504]}]}]},{"pos":[1196,1587],"content":"Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect. The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.","nodes":[{"content":"Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect. The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.","pos":[0,391],"nodes":[{"content":"Since the connection is dropped if either inactivity timer fires, increasing <ph id=\"ph1\">&lt;xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A&gt;</ph> once it is greater than <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A&gt;</ph> has no effect.","pos":[0,241],"source":"Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect."},{"content":"The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.","pos":[242,391]}]}]},{"pos":[1594,1836],"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","nodes":[{"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","pos":[0,242],"nodes":[{"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout.","pos":[0,130]},{"content":"In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","pos":[131,242]}]}]},{"pos":[1843,2007],"content":"When security is used with sessions, the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> value set on the binding is also used as the session timeout.","nodes":[{"content":"When security is used with sessions, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A&gt;</ph> value set on the binding is also used as the session timeout.","pos":[0,164],"source":"When security is used with sessions, the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> value set on the binding is also used as the session timeout."}]}],"pos":[66916,68936],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.","nodes":[{"pos":[0,156],"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the application has to receive a message before timing out.","pos":[0,124],"source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the application has to receive a message before timing out."},{"content":"The default value is 10 minute.","pos":[125,156]}]}],"pos":[69063,69220],"yaml":true},{"content":"The value is less than zero or too large.","nodes":[{"pos":[0,41],"content":"The value is less than zero or too large.","nodes":[{"content":"The value is less than zero or too large.","pos":[0,41]}]}],"pos":[69413,69455],"yaml":true},{"content":"When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.","nodes":[{"pos":[0,160],"content":"When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.","nodes":[{"content":"When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.","pos":[0,160]}]}],"pos":[70482,70643],"yaml":true},{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"pos":[0,923],"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","nodes":[{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[0,923],"nodes":[{"content":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph> property.","pos":[0,177],"source":"This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property."},{"content":"Each instance of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Binding.Name%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.Binding.Namespace%2A&gt;</ph> that together uniquely identify the user name for the binding in the metadata of the service.","pos":[178,453],"source":" Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service."},{"content":"If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\".","pos":[454,581]},{"content":"There is no inherent application or machine dispatch based on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding.Scheme%2A&gt;</ph>.","pos":[582,702],"source":" There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>."},{"content":"So you avoid the common problem of being unable to register additional handlers for well-known protocols.","pos":[703,808]},{"content":"You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.","pos":[809,923]}]}]}],"pos":[70654,71578],"yaml":true,"extradata":"MT"},{"content":"The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.","nodes":[{"pos":[0,120],"content":"The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.","nodes":[{"content":"The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.","pos":[0,120]}]}],"pos":[71697,71818],"yaml":true},{"content":"Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.","nodes":[{"pos":[0,118],"content":"Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.","nodes":[{"content":"Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.","pos":[0,118]}]}],"pos":[72949,73068],"yaml":true},{"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","nodes":[{"pos":[0,242],"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","nodes":[{"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","pos":[0,242],"nodes":[{"content":"If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout.","pos":[0,130]},{"content":"In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.","pos":[131,242]}]}]}],"pos":[73079,73322],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.","nodes":[{"pos":[0,150],"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the write operation has to complete before timing out.","pos":[0,119],"source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the write operation has to complete before timing out."},{"content":"The default value is 1 minute.","pos":[120,150]}]}],"pos":[73446,73597],"yaml":true},{"content":"The value is less than zero or too large.","nodes":[{"pos":[0,41],"content":"The value is less than zero or too large.","nodes":[{"content":"The value is less than zero or too large.","pos":[0,41]}]}],"pos":[73787,73829],"yaml":true},{"content":"Returns whether the name of the binding should be serialized.","nodes":[{"pos":[0,61],"content":"Returns whether the name of the binding should be serialized.","nodes":[{"content":"Returns whether the name of the binding should be serialized.","pos":[0,61]}]}],"pos":[74938,75000],"yaml":true},{"content":"`true` if the binding name should be serialized; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the binding name should be serialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the binding name should be serialized; otherwise, `false`."}],"pos":[75136,75207],"yaml":true},{"content":"Returns whether the namespace of the binding should be serialized.","nodes":[{"pos":[0,66],"content":"Returns whether the namespace of the binding should be serialized.","nodes":[{"content":"Returns whether the namespace of the binding should be serialized.","pos":[0,66]}]}],"pos":[76326,76393],"yaml":true},{"content":"`true` if the binding namespace should be serialized; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the binding namespace should be serialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the binding namespace should be serialized; otherwise, `false`."}],"pos":[76534,76610],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.Binding\n  commentId: T:System.ServiceModel.Channels.Binding\n  id: Binding\n  children:\n  - System.ServiceModel.Channels.Binding.#ctor\n  - System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CloseTimeout\n  - System.ServiceModel.Channels.Binding.CreateBindingElements\n  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.MessageVersion\n  - System.ServiceModel.Channels.Binding.Name\n  - System.ServiceModel.Channels.Binding.Namespace\n  - System.ServiceModel.Channels.Binding.OpenTimeout\n  - System.ServiceModel.Channels.Binding.ReceiveTimeout\n  - System.ServiceModel.Channels.Binding.Scheme\n  - System.ServiceModel.Channels.Binding.SendTimeout\n  - System.ServiceModel.Channels.Binding.ShouldSerializeName\n  - System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  langs:\n  - csharp\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.\n  remarks: \"Represents a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints and that are built, consistently, into a channel factory on the client and into a channel listener on the service. A binding contains a collection of binding elements that correspond to protocol channels, transport channels, and message encoders. There can be any number of binding elements for protocol channels but one and only one binding element for each the transport and message encoder. There are commonly six layers of binding elements in a binding. Only the transport and encoding binding elements at the bottom of the stack are required. Because an encoding is required for each binding, if an encoding is not specified, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] adds a default encoding for you. The default is Text/XML for the HTTP and HTTPS transports, and Binary for other transports.  \\n  \\n The following table summarizes the options for each layer.  \\n  \\n|Layer|Options|Required|  \\n|-----------|-------------|--------------|  \\n|Transaction Flow|<xref:System.ServiceModel.Channels.TransactionFlowBindingElement>|No|  \\n|Reliability|<xref:System.ServiceModel.Channels.ReliableSessionBindingElement>|No|  \\n|Security|Symmetric, Asymmetric, Transport-Level|No|  \\n|Shape Change|<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>|No|  \\n|Transport Upgrades|SSL stream, Windows stream, Peer Resolver|No|  \\n|Encoding|Text, Binary, MTOM, Custom|Yes|  \\n|Transport|TCP, Named Pipes, HTTP, HTTPS, MSMQ, Custom|Yes|  \\n  \\n Each binding element provides the specification for building a channel factory on the client and a channel listener on the service. When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding. The same sort of mapping applies to the channel listeners in the stack on the service. Consistency on the client and service is critical for establishing the channel-based connection between these endpoints. Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.  \\n  \\n Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify it in the metadata of the service. If no name or namespace is specified, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] adds a default values for you. The default name is `null` and the default namespace is http://tempuri.org/. This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \\\"http\\\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.  \\n  \\n The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time. The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages. The properties used to get and set these timeouts and their default values operations are summarized in the following table.  \\n  \\n|Timeout Property|Default Value|  \\n|----------------------|-------------------|  \\n|<xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A>|1 minute|  \\n|<xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A>|1 minute|  \\n|<xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>|1 minute|  \\n|<xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>|10 minutes|  \\n  \\n When you create a binding by inheriting from <xref:System.ServiceModel.Channels.Binding>, you must override <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>.  \\n  \\n In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table. For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class.\"\n  example:\n  - '[!code-csharp[S_UEBinding#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebinding/cs/service.cs#11)]'\n  syntax:\n    content: 'public abstract class Binding : System.ServiceModel.IDefaultCommunicationTimeouts'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.HttpBindingBase\n  - System.ServiceModel.MsmqBindingBase\n  - System.ServiceModel.NetNamedPipeBinding\n  - System.ServiceModel.NetPeerTcpBinding\n  - System.ServiceModel.NetTcpBinding\n  - System.ServiceModel.UdpBinding\n  - System.ServiceModel.WebHttpBinding\n  - System.ServiceModel.WSDualHttpBinding\n  - System.ServiceModel.WSHttpBindingBase\n  - System.ServiceModel.Channels.CustomBinding\n  implements:\n  - System.ServiceModel.IDefaultCommunicationTimeouts\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.#ctor\n  commentId: M:System.ServiceModel.Channels.Binding.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: Binding()\n  nameWithType: Binding.Binding()\n  fullName: Binding.Binding()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\"></xref> class with a default name and namespace.\n  remarks: The default name is `null` and the default namespace is http://tempuri.org/.\n  example:\n  - >-\n    [!code-csharp[S_UEBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebinding/cs/service.cs#2)]\n     [!code-vb[S_UEBinding#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebinding/vb/service.vb#2)]\n  syntax:\n    content: protected Binding ();\n    parameters: []\n  overload: System.ServiceModel.Channels.Binding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)\n  commentId: M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: Binding(String, String)\n  nameWithType: Binding.Binding(String, String)\n  fullName: Binding.Binding(String, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\"></xref> class from a specified binding of the service.\n  remarks: The <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> together uniquely identify an instance of a <xref:System.ServiceModel.Channels.Binding> in the metadata of the service.\n  syntax:\n    content: protected Binding (string name, string ns);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.ServiceModel.Channels.Binding.Name\"></xref> of the binding.\n    - id: ns\n      type: System.String\n      description: The <xref href=\"System.ServiceModel.Channels.Binding.Namespace\"></xref> of the binding.\n  overload: System.ServiceModel.Channels.Binding.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is `null` or an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ns</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  id: BuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.BuildChannelFactory<TChannel>(Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.\n  syntax:\n    content: public System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (object[] parameters);\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel factory produces.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> that satisfies the features specified by the collection.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelFactory``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.\n  syntax:\n    content: public virtual System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);\n    parameters:\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel factory built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel factory produces.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> that satisfies the features specified by the collection.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelFactory``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  id: BuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  id: BuildChannelListener``1(System.Uri,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Uri, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (Uri listenUri, object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: listenUriBaseAddress\n      type: System.Uri\n      description: ''\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  id: BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (Uri listenUri, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: listenUriBaseAddress\n      type: System.Uri\n      description: ''\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  id: BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Uri, String, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (Uri listenUriBaseAddress, string listenUriRelativeAddress, object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: listenUriBaseAddress\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.\n    - id: listenUriRelativeAddress\n      type: System.String\n      description: The address, relative to the base address, on which the service listens.\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  id: BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: listenUriBaseAddress\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.\n    - id: listenUriRelativeAddress\n      type: System.String\n      description: The address, relative to the base address, on which the service listens.\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  id: BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Description.ListenUriMode listenUriMode, object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: listenUriBaseAddress\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.\n    - id: listenUriRelativeAddress\n      type: System.String\n      description: The address, relative to the base address, on which the service listens.\n    - id: listenUriMode\n      type: System.ServiceModel.Description.ListenUriMode\n      description: A value of the <xref href=\"System.ServiceModel.Description.ListenUriMode\"></xref> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  id: BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Description.ListenUriMode listenUriMode, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: listenUriBaseAddress\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that provides the base address on which the service listens.\n    - id: listenUriRelativeAddress\n      type: System.String\n      description: The address, relative to the base address, on which the service listens.\n    - id: listenUriMode\n      type: System.ServiceModel.Description.ListenUriMode\n      description: A value of the <xref href=\"System.ServiceModel.Description.ListenUriMode\"></xref> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> that satisfies the features specified.\n  overload: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Transport element is missing or out of order or scheme is invalid or the message version is not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.\n  remarks: Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory. Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.\n  syntax:\n    content: public virtual bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);\n    parameters:\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel for which the factory is being tested.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified channel factory stack can be build on the client; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  id: CanBuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelFactory<TChannel>(Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.\n  remarks: Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory. Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.\n  syntax:\n    content: public bool CanBuildChannelFactory<TChannel> (object[] parameters);\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel for which the factory is being tested.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified channel factory stack can be build on the client; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  id: CanBuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelListener<TChannel>(Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.\n  remarks: Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener. Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.\n  syntax:\n    content: 'public bool CanBuildChannelListener<TChannel> (object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: The object array that specifies requirements for the channel factory that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel for which the listener is being tested.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified channel listener stack can be build on the service; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.\n  remarks: Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener. Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.\n  syntax:\n    content: 'public virtual bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel for which the listener is being tested.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified channel listener stack can be build on the service; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.CloseTimeout\n  commentId: P:System.ServiceModel.Channels.Binding.CloseTimeout\n  id: CloseTimeout\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: CloseTimeout\n  nameWithType: Binding.CloseTimeout\n  fullName: Binding.CloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the interval of time provided for a connection to close before the transport raises an exception.\n  remarks: The value of this property is used by the channels and listeners produced by the factories of the binding.\n  syntax:\n    content: public TimeSpan CloseTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.\n  overload: System.ServiceModel.Channels.Binding.CloseTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero or too large.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.CreateBindingElements\n  commentId: M:System.ServiceModel.Channels.Binding.CreateBindingElements\n  id: CreateBindingElements\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: CreateBindingElements()\n  nameWithType: Binding.CreateBindingElements()\n  fullName: Binding.CreateBindingElements()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.\n  remarks: The elements should not reference any internal elements that the <xref:System.ServiceModel.Channels.Binding> object uses.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElementCollection\n      description: A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that contains the binding elements from the current binding object in the correct order.\n  overload: System.ServiceModel.Channels.Binding.CreateBindingElements*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingParameterCollection)\n  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)\n  fullName: Binding.GetProperty<T>(BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a typed object requested, if present, from the appropriate layer in the binding stack.\n  remarks: If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.\n  syntax:\n    content: 'public T GetProperty<T> (System.ServiceModel.Channels.BindingParameterCollection parameters) where T : class;'\n    parameters:\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\"></xref> that specifies requirements for the channel listener that is built.\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested if it is present or `null` if it is not.\n  overload: System.ServiceModel.Channels.Binding.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.MessageVersion\n  commentId: P:System.ServiceModel.Channels.Binding.MessageVersion\n  id: MessageVersion\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: MessageVersion\n  nameWithType: Binding.MessageVersion\n  fullName: Binding.MessageVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the message version used by clients and services configured with the binding.\n  syntax:\n    content: public System.ServiceModel.Channels.MessageVersion MessageVersion { get; }\n    return:\n      type: System.ServiceModel.Channels.MessageVersion\n      description: The <xref href=\"System.ServiceModel.Channels.MessageVersion\"></xref> used by clients and services configured with the binding.\n  overload: System.ServiceModel.Channels.Binding.MessageVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.Name\n  commentId: P:System.ServiceModel.Channels.Binding.Name\n  id: Name\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: Name\n  nameWithType: Binding.Name\n  fullName: Binding.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the name of the binding.\n  remarks: \"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.  \\n  \\n This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \\\"http\\\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the binding. The default name is `null`.\n  overload: System.ServiceModel.Channels.Binding.Name*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value set cannot be `null` or an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.Namespace\n  commentId: P:System.ServiceModel.Channels.Binding.Namespace\n  id: Namespace\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: Binding.Namespace\n  fullName: Binding.Namespace\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the XML namespace of the binding.\n  remarks: \"Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.  \\n  \\n This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \\\"http\\\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.\"\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The XML namespace of the binding. The default value is \"http://tempuri.org/\".\n  overload: System.ServiceModel.Channels.Binding.Namespace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value set cannot be `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.OpenTimeout\n  commentId: P:System.ServiceModel.Channels.Binding.OpenTimeout\n  id: OpenTimeout\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: OpenTimeout\n  nameWithType: Binding.OpenTimeout\n  fullName: Binding.OpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the interval of time provided for a connection to open before the transport raises an exception.\n  remarks: The value of this property is used by the channels and listeners produced by the factories of the binding.\n  syntax:\n    content: public TimeSpan OpenTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.\n  overload: System.ServiceModel.Channels.Binding.OpenTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero or too large.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout\n  commentId: P:System.ServiceModel.Channels.Binding.ReceiveTimeout\n  id: ReceiveTimeout\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: ReceiveTimeout\n  nameWithType: Binding.ReceiveTimeout\n  fullName: Binding.ReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.\n  remarks: \"When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive. If either of these inactivity timers goes off, then the connection is dropped.  \\n  \\n-   The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period. An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.  \\n  \\n-   The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding. This inactivity timer fires if no application messages are received within the timeout period. This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session. This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.  \\n  \\n Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect. The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.  \\n  \\n If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.  \\n  \\n When security is used with sessions, the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> value set on the binding is also used as the session timeout.\"\n  syntax:\n    content: public TimeSpan ReceiveTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.\n  overload: System.ServiceModel.Channels.Binding.ReceiveTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero or too large.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.Scheme\n  commentId: P:System.ServiceModel.Channels.Binding.Scheme\n  id: Scheme\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: Scheme\n  nameWithType: Binding.Scheme\n  fullName: Binding.Scheme\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.\n  remarks: This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property. Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service. If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to \"http\". There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>. So you avoid the common problem of being unable to register additional handlers for well-known protocols. You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.\n  syntax:\n    content: public abstract string Scheme { get; }\n    return:\n      type: System.String\n      description: The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.\n  overload: System.ServiceModel.Channels.Binding.Scheme*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.SendTimeout\n  commentId: P:System.ServiceModel.Channels.Binding.SendTimeout\n  id: SendTimeout\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: SendTimeout\n  nameWithType: Binding.SendTimeout\n  fullName: Binding.SendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.\n  remarks: If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout. In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.\n  syntax:\n    content: public TimeSpan SendTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.\n  overload: System.ServiceModel.Channels.Binding.SendTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero or too large.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName\n  commentId: M:System.ServiceModel.Channels.Binding.ShouldSerializeName\n  id: ShouldSerializeName\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: ShouldSerializeName()\n  nameWithType: Binding.ShouldSerializeName()\n  fullName: Binding.ShouldSerializeName()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns whether the name of the binding should be serialized.\n  syntax:\n    content: public bool ShouldSerializeName ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the binding name should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.Binding.ShouldSerializeName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  commentId: M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  id: ShouldSerializeNamespace\n  parent: System.ServiceModel.Channels.Binding\n  langs:\n  - csharp\n  name: ShouldSerializeNamespace()\n  nameWithType: Binding.ShouldSerializeNamespace()\n  fullName: Binding.ShouldSerializeNamespace()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns whether the namespace of the binding should be serialized.\n  syntax:\n    content: public bool ShouldSerializeNamespace ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the binding namespace should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.Channels.Binding.#ctor\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Binding()\n  nameWithType: Binding.Binding()\n  fullName: Binding.Binding()\n- uid: System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Binding(String, String)\n  nameWithType: Binding.Binding(String, String)\n  fullName: Binding.Binding(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.BuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n- uid: System.ServiceModel.Description.ListenUriMode\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ListenUriMode\n  nameWithType: ListenUriMode\n  fullName: System.ServiceModel.Description.ListenUriMode\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CloseTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: Binding.CloseTimeout\n  fullName: Binding.CloseTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.Binding.CreateBindingElements\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CreateBindingElements()\n  nameWithType: Binding.CreateBindingElements()\n  fullName: Binding.CreateBindingElements()\n- uid: System.ServiceModel.Channels.BindingElementCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElementCollection\n  nameWithType: BindingElementCollection\n  fullName: System.ServiceModel.Channels.BindingElementCollection\n- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: GetProperty<T>(BindingParameterCollection)\n  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)\n  fullName: Binding.GetProperty<T>(BindingParameterCollection)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.Binding.MessageVersion\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: MessageVersion\n  nameWithType: Binding.MessageVersion\n  fullName: Binding.MessageVersion\n- uid: System.ServiceModel.Channels.MessageVersion\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageVersion\n  nameWithType: MessageVersion\n  fullName: System.ServiceModel.Channels.MessageVersion\n- uid: System.ServiceModel.Channels.Binding.Name\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Name\n  nameWithType: Binding.Name\n  fullName: Binding.Name\n- uid: System.ServiceModel.Channels.Binding.Namespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Namespace\n  nameWithType: Binding.Namespace\n  fullName: Binding.Namespace\n- uid: System.ServiceModel.Channels.Binding.OpenTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: Binding.OpenTimeout\n  fullName: Binding.OpenTimeout\n- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: Binding.ReceiveTimeout\n  fullName: Binding.ReceiveTimeout\n- uid: System.ServiceModel.Channels.Binding.Scheme\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Scheme\n  nameWithType: Binding.Scheme\n  fullName: Binding.Scheme\n- uid: System.ServiceModel.Channels.Binding.SendTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: SendTimeout\n  nameWithType: Binding.SendTimeout\n  fullName: Binding.SendTimeout\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeName()\n  nameWithType: Binding.ShouldSerializeName()\n  fullName: Binding.ShouldSerializeName()\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeNamespace()\n  nameWithType: Binding.ShouldSerializeNamespace()\n  fullName: Binding.ShouldSerializeNamespace()\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>\n  fullName: Binding.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.#ctor*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Binding\n  nameWithType: Binding.Binding\n  fullName: Binding.Binding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: Binding.BuildChannelFactory<TChannel>\n  fullName: Binding.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: Binding.BuildChannelListener<TChannel>\n  fullName: Binding.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: Binding.CanBuildChannelListener<TChannel>\n  fullName: Binding.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.CloseTimeout*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: Binding.CloseTimeout\n  fullName: Binding.CloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.CreateBindingElements*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CreateBindingElements\n  nameWithType: Binding.CreateBindingElements\n  fullName: Binding.CreateBindingElements\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.GetProperty``1*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: Binding.GetProperty<T>\n  fullName: Binding.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.MessageVersion*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: MessageVersion\n  nameWithType: Binding.MessageVersion\n  fullName: Binding.MessageVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.Name*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Name\n  nameWithType: Binding.Name\n  fullName: Binding.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.Namespace*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Namespace\n  nameWithType: Binding.Namespace\n  fullName: Binding.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.OpenTimeout*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: Binding.OpenTimeout\n  fullName: Binding.OpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: Binding.ReceiveTimeout\n  fullName: Binding.ReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.Scheme*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Scheme\n  nameWithType: Binding.Scheme\n  fullName: Binding.Scheme\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.SendTimeout*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: SendTimeout\n  nameWithType: Binding.SendTimeout\n  fullName: Binding.SendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeName\n  nameWithType: Binding.ShouldSerializeName\n  fullName: Binding.ShouldSerializeName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace*\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeNamespace\n  nameWithType: Binding.ShouldSerializeNamespace\n  fullName: Binding.ShouldSerializeNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/Binding.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n"}