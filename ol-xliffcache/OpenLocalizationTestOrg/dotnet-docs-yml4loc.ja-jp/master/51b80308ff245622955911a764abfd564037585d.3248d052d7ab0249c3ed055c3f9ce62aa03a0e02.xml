{"nodes":[{"content":"Provides a way to apply custom logic to a binding.","nodes":[{"pos":[0,50],"content":"Provides a way to apply custom logic to a binding.","nodes":[{"content":"Provides a way to apply custom logic to a binding.","pos":[0,50]}]}],"pos":[638,689],"yaml":true},{"content":"If you want to associate a value converter with a binding, create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and then implement the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. Converters can change data from one type to another, translate data based on cultural information, or modify other aspects of the presentation. For examples of some typical converter scenarios, see \"Data Conversion\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n Value converters are culture-aware. Both the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods have a `culture` parameter that indicates the cultural information. If cultural information is irrelevant to the conversion, then you can ignore that parameter in your custom converter.  \n  \n The <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods also have a parameter called `parameter` so that you can use the same instance of the converter with different parameters. For example, you can write a formatting converter that produces different formats of data based on the input parameter that you use. You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> of the <xref:System.Windows.Data.Binding> class to pass a parameter as an argument into the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.","nodes":[{"pos":[0,590],"content":"If you want to associate a value converter with a binding, create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and then implement the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. Converters can change data from one type to another, translate data based on cultural information, or modify other aspects of the presentation. For examples of some typical converter scenarios, see \"Data Conversion\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"content":"If you want to associate a value converter with a binding, create a class that implements the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface and then implement the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.","pos":[0,294],"source":"If you want to associate a value converter with a binding, create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and then implement the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods."},{"content":"Converters can change data from one type to another, translate data based on cultural information, or modify other aspects of the presentation.","pos":[295,438]},{"content":"For examples of some typical converter scenarios, see \"Data Conversion\" in <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[439,590],"source":" For examples of some typical converter scenarios, see \"Data Conversion\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}]},{"pos":[597,951],"content":"Value converters are culture-aware. Both the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods have a `culture` parameter that indicates the cultural information. If cultural information is irrelevant to the conversion, then you can ignore that parameter in your custom converter.","nodes":[{"content":"Value converters are culture-aware.","pos":[0,35]},{"content":"Both the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods have a <ph id=\"ph3\">`culture`</ph> parameter that indicates the cultural information.","pos":[36,236],"source":" Both the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods have a `culture` parameter that indicates the cultural information."},{"content":"If cultural information is irrelevant to the conversion, then you can ignore that parameter in your custom converter.","pos":[237,354]}]},{"pos":[958,1631],"content":"The <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods also have a parameter called `parameter` so that you can use the same instance of the converter with different parameters. For example, you can write a formatting converter that produces different formats of data based on the input parameter that you use. You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> of the <xref:System.Windows.Data.Binding> class to pass a parameter as an argument into the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods also have a parameter called <ph id=\"ph3\">`parameter`</ph> so that you can use the same instance of the converter with different parameters.","pos":[0,250],"source":"The <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods also have a parameter called `parameter` so that you can use the same instance of the converter with different parameters."},{"content":"For example, you can write a formatting converter that produces different formats of data based on the input parameter that you use.","pos":[251,383]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> class to pass a parameter as an argument into the <ph id=\"ph3\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.","pos":[384,673],"source":" You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> of the <xref:System.Windows.Data.Binding> class to pass a parameter as an argument into the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods."}]}],"pos":[700,2340],"yaml":true,"extradata":"MT"},{"content":"Converts a value.","nodes":[{"pos":[0,17],"content":"Converts a value.","nodes":[{"content":"Converts a value.","pos":[0,17]}]}],"pos":[4332,4350],"yaml":true},{"content":"The data binding engine calls this method when it propagates a value from the binding source to the binding target.  \n  \n The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.Convert%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.Convert%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.  \n  \n A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.  \n  \n A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.","nodes":[{"pos":[0,115],"content":"The data binding engine calls this method when it propagates a value from the binding source to the binding target.","nodes":[{"content":"The data binding engine calls this method when it propagates a value from the binding source to the binding target.","pos":[0,115]}]},{"pos":[122,597],"content":"The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.Convert%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.Convert%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.","nodes":[{"content":"The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.Convert%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.Convert%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.","pos":[0,475],"nodes":[{"content":"The data binding engine does not catch exceptions that are thrown by a user-supplied converter.","pos":[0,95]},{"content":"Any exception that is thrown by the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> method, or any uncaught exceptions that are thrown by methods that the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> method calls, are treated as run-time errors.","pos":[96,356],"source":" Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.Convert%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.Convert%2A> method calls, are treated as run-time errors."},{"content":"Handle anticipated problems by returning <ph id=\"ph1\">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</ph>.","pos":[357,475],"source":" Handle anticipated problems by returning <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>."}]}]},{"pos":[604,876],"content":"A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.","nodes":[{"content":"A return value of <ph id=\"ph1\">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</ph> indicates that the converter produced no value and that the binding uses the <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if available, or the default value instead.","pos":[0,272],"source":"A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead."}]},{"pos":[883,1110],"content":"A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.","nodes":[{"content":"A return value of <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName&gt;</ph> indicates that the binding does not transfer the value or use the <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph> or default value.","pos":[0,227],"source":"A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value."}]}],"pos":[4361,5480],"yaml":true,"extradata":"MT"},{"content":"The value produced by the binding source.","nodes":[{"pos":[0,41],"content":"The value produced by the binding source.","nodes":[{"content":"The value produced by the binding source.","pos":[0,41]}]}],"pos":[5695,5737],"yaml":true},{"content":"The type of the binding target property.","nodes":[{"pos":[0,40],"content":"The type of the binding target property.","nodes":[{"content":"The type of the binding target property.","pos":[0,40]}]}],"pos":[5801,5842],"yaml":true},{"content":"The converter parameter to use.","nodes":[{"pos":[0,31],"content":"The converter parameter to use.","nodes":[{"content":"The converter parameter to use.","pos":[0,31]}]}],"pos":[5907,5939],"yaml":true},{"content":"The culture to use in the converter.","nodes":[{"pos":[0,36],"content":"The culture to use in the converter.","nodes":[{"content":"The culture to use in the converter.","pos":[0,36]}]}],"pos":[6021,6058],"yaml":true},{"content":"A converted value. If the method returns `null`, the valid null value is used.","nodes":[{"pos":[0,78],"content":"A converted value. If the method returns `null`, the valid null value is used.","nodes":[{"content":"A converted value.","pos":[0,18]},{"content":"If the method returns <ph id=\"ph1\">`null`</ph>, the valid null value is used.","pos":[19,78],"source":" If the method returns `null`, the valid null value is used."}]}],"pos":[6115,6194],"yaml":true},{"content":"Converts a value.","nodes":[{"pos":[0,17],"content":"Converts a value.","nodes":[{"content":"Converts a value.","pos":[0,17]}]}],"pos":[7530,7548],"yaml":true},{"content":"The data binding engine calls this method when it propagates a value from the binding target to the binding source.  \n  \n The implementation of this method must be the inverse of the <xref:System.Windows.Data.IValueConverter.Convert%2A> method.  \n  \n The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  \n  \n A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.  \n  \n A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.","nodes":[{"pos":[0,115],"content":"The data binding engine calls this method when it propagates a value from the binding target to the binding source.","nodes":[{"content":"The data binding engine calls this method when it propagates a value from the binding target to the binding source.","pos":[0,115]}]},{"pos":[122,244],"content":"The implementation of this method must be the inverse of the <xref:System.Windows.Data.IValueConverter.Convert%2A> method.","nodes":[{"content":"The implementation of this method must be the inverse of the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> method.","pos":[0,122],"source":"The implementation of this method must be the inverse of the <xref:System.Windows.Data.IValueConverter.Convert%2A> method."}]},{"pos":[251,750],"content":"The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.","nodes":[{"content":"The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.","pos":[0,499],"nodes":[{"content":"The data binding engine does not catch exceptions that are thrown by a user-supplied converter.","pos":[0,95]},{"content":"Any exception that is thrown by the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> method, or any uncaught exceptions that are thrown by methods that the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> method calls, are treated as run-time errors.","pos":[96,364],"source":" Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method calls, are treated as run-time errors."},{"content":"Handle anticipated problems by returning <ph id=\"ph1\">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.<ph id=\"ph2\">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>.","pos":[365,499],"source":" Handle anticipated problems by returning <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>."}]}]},{"pos":[757,1029],"content":"A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.","nodes":[{"content":"A return value of <ph id=\"ph1\">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</ph> indicates that the converter produced no value and that the binding uses the <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if available, or the default value instead.","pos":[0,272],"source":"A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead."}]},{"pos":[1036,1263],"content":"A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.","nodes":[{"content":"A return value of <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName&gt;</ph> indicates that the binding does not transfer the value or use the <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph> or default value.","pos":[0,227],"source":"A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value."}]}],"pos":[7559,8833],"yaml":true,"extradata":"MT"},{"content":"The value that is produced by the binding target.","nodes":[{"pos":[0,49],"content":"The value that is produced by the binding target.","nodes":[{"content":"The value that is produced by the binding target.","pos":[0,49]}]}],"pos":[9052,9102],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[9166,9190],"yaml":true},{"content":"The converter parameter to use.","nodes":[{"pos":[0,31],"content":"The converter parameter to use.","nodes":[{"content":"The converter parameter to use.","pos":[0,31]}]}],"pos":[9255,9287],"yaml":true},{"content":"The culture to use in the converter.","nodes":[{"pos":[0,36],"content":"The culture to use in the converter.","nodes":[{"content":"The culture to use in the converter.","pos":[0,36]}]}],"pos":[9369,9406],"yaml":true},{"content":"A converted value. If the method returns `null`, the valid null value is used.","nodes":[{"pos":[0,78],"content":"A converted value. If the method returns `null`, the valid null value is used.","nodes":[{"content":"A converted value.","pos":[0,18]},{"content":"If the method returns <ph id=\"ph1\">`null`</ph>, the valid null value is used.","pos":[19,78],"source":" If the method returns `null`, the valid null value is used."}]}],"pos":[9463,9542],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Data.IValueConverter\n  commentId: T:System.Windows.Data.IValueConverter\n  id: IValueConverter\n  children:\n  - System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  langs:\n  - csharp\n  name: IValueConverter\n  nameWithType: IValueConverter\n  fullName: System.Windows.Data.IValueConverter\n  type: Interface\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Provides a way to apply custom logic to a binding.\n  remarks: \"If you want to associate a value converter with a binding, create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and then implement the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. Converters can change data from one type to another, translate data based on cultural information, or modify other aspects of the presentation. For examples of some typical converter scenarios, see \\\"Data Conversion\\\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \\n  \\n Value converters are culture-aware. Both the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods have a `culture` parameter that indicates the cultural information. If cultural information is irrelevant to the conversion, then you can ignore that parameter in your custom converter.  \\n  \\n The <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods also have a parameter called `parameter` so that you can use the same instance of the converter with different parameters. For example, you can write a formatting converter that produces different formats of data based on the input parameter that you use. You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> of the <xref:System.Windows.Data.Binding> class to pass a parameter as an argument into the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.\"\n  syntax:\n    content: public interface IValueConverter\n  derivedClasses:\n  - System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  - System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter\n  - System.Activities.Presentation.Converters.ModelPropertyEntryToOwnerActivityConverter\n  - System.Activities.Presentation.Converters.ModelToObjectValueConverter\n  - System.Windows.Controls.AlternationConverter\n  - System.Windows.Controls.BooleanToVisibilityConverter\n  - System.Windows.Controls.Ribbon.Primitives.RibbonWindowSmallIconConverter\n  - System.Windows.Documents.ZoomPercentageConverter\n  - System.Windows.Navigation.JournalEntryListConverter\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/IValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  commentId: M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Data.IValueConverter\n  langs:\n  - csharp\n  name: Convert(Object, Type, Object, CultureInfo)\n  nameWithType: IValueConverter.Convert(Object, Type, Object, CultureInfo)\n  fullName: IValueConverter.Convert(Object, Type, Object, CultureInfo)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Converts a value.\n  remarks: \"The data binding engine calls this method when it propagates a value from the binding source to the binding target.  \\n  \\n The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.Convert%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.Convert%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.  \\n  \\n A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.  \\n  \\n A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.\"\n  syntax:\n    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value produced by the binding source.\n    - id: targetType\n      type: System.Type\n      description: The type of the binding target property.\n    - id: parameter\n      type: System.Object\n      description: The converter parameter to use.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The culture to use in the converter.\n    return:\n      type: System.Object\n      description: A converted value. If the method returns `null`, the valid null value is used.\n  overload: System.Windows.Data.IValueConverter.Convert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/IValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  commentId: M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Data.IValueConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object, Type, Object, CultureInfo)\n  nameWithType: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)\n  fullName: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Converts a value.\n  remarks: \"The data binding engine calls this method when it propagates a value from the binding target to the binding source.  \\n  \\n The implementation of this method must be the inverse of the <xref:System.Windows.Data.IValueConverter.Convert%2A> method.  \\n  \\n The data binding engine does not catch exceptions that are thrown by a user-supplied converter. Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method calls, are treated as run-time errors. Handle anticipated problems by returning <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  \\n  \\n A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.  \\n  \\n A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.\"\n  syntax:\n    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value that is produced by the binding target.\n    - id: targetType\n      type: System.Type\n      description: The type to convert to.\n    - id: parameter\n      type: System.Object\n      description: The converter parameter to use.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The culture to use in the converter.\n    return:\n      type: System.Object\n      description: A converted value. If the method returns `null`, the valid null value is used.\n  overload: System.Windows.Data.IValueConverter.ConvertBack*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/IValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Data.IValueConverter\n  isExternal: false\n  name: Convert(Object, Type, Object, CultureInfo)\n  nameWithType: IValueConverter.Convert(Object, Type, Object, CultureInfo)\n  fullName: IValueConverter.Convert(Object, Type, Object, CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Windows.Data.IValueConverter\n  isExternal: false\n  name: ConvertBack(Object, Type, Object, CultureInfo)\n  nameWithType: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)\n  fullName: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)\n- uid: System.Windows.Data.IValueConverter.Convert*\n  parent: System.Windows.Data.IValueConverter\n  isExternal: false\n  name: Convert\n  nameWithType: IValueConverter.Convert\n  fullName: IValueConverter.Convert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/IValueConverter.xml\n- uid: System.Windows.Data.IValueConverter.ConvertBack*\n  parent: System.Windows.Data.IValueConverter\n  isExternal: false\n  name: ConvertBack\n  nameWithType: IValueConverter.ConvertBack\n  fullName: IValueConverter.ConvertBack\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/IValueConverter.xml\n"}