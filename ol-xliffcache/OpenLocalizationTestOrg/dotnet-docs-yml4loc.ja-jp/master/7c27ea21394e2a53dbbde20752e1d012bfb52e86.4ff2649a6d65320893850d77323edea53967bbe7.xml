{"nodes":[{"content":"Provides an interface to retrieve an assembly or type by name.","nodes":[{"pos":[0,62],"content":"Provides an interface to retrieve an assembly or type by name.","nodes":[{"content":"Provides an interface to retrieve an assembly or type by name.","pos":[0,62]}]}],"pos":[1218,1281],"yaml":true},{"content":"This service is used to load types at design time.","nodes":[{"pos":[0,50],"content":"This service is used to load types at design time.","nodes":[{"content":"This service is used to load types at design time.","pos":[0,50]}]}],"pos":[1292,1343],"yaml":true,"extradata":"MT"},{"content":"Gets the requested assembly.","nodes":[{"pos":[0,28],"content":"Gets the requested assembly.","nodes":[{"content":"Gets the requested assembly.","pos":[0,28]}]}],"pos":[3495,3524],"yaml":true},{"content":"The name of the assembly to retrieve.","nodes":[{"pos":[0,37],"content":"The name of the assembly to retrieve.","nodes":[{"content":"The name of the assembly to retrieve.","pos":[0,37]}]}],"pos":[3725,3763],"yaml":true},{"content":"An instance of the requested assembly, or `null` if no assembly can be located.","nodes":[{"pos":[0,79],"content":"An instance of the requested assembly, or <ph id=\"ph1\">`null`</ph> if no assembly can be located.","source":"An instance of the requested assembly, or `null` if no assembly can be located."}],"pos":[3833,3913],"yaml":true},{"content":"Gets the requested assembly.","nodes":[{"pos":[0,28],"content":"Gets the requested assembly.","nodes":[{"content":"Gets the requested assembly.","pos":[0,28]}]}],"pos":[5481,5510],"yaml":true},{"content":"The name of the assembly to retrieve.","nodes":[{"pos":[0,37],"content":"The name of the assembly to retrieve.","nodes":[{"content":"The name of the assembly to retrieve.","pos":[0,37]}]}],"pos":[5730,5768],"yaml":true},{"content":"`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located.","nodes":[{"pos":[0,168],"content":"<ph id=\"ph1\">`true`</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id=\"ph2\">`false`</ph>, and this method returns <ph id=\"ph3\">`null`</ph> if the assembly cannot be located.","source":"`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located."}],"pos":[5837,6008],"yaml":true},{"content":"An instance of the requested assembly, or `null` if no assembly can be located.","nodes":[{"pos":[0,79],"content":"An instance of the requested assembly, or <ph id=\"ph1\">`null`</ph> if no assembly can be located.","source":"An instance of the requested assembly, or `null` if no assembly can be located."}],"pos":[6078,6158],"yaml":true},{"content":"Gets the path to the file from which the assembly was loaded.","nodes":[{"pos":[0,61],"content":"Gets the path to the file from which the assembly was loaded.","nodes":[{"content":"Gets the path to the file from which the assembly was loaded.","pos":[0,61]}]}],"pos":[7690,7752],"yaml":true},{"content":"The name of the assembly.","nodes":[{"pos":[0,25],"content":"The name of the assembly.","nodes":[{"content":"The name of the assembly.","pos":[0,25]}]}],"pos":[7939,7965],"yaml":true},{"content":"The path to the file from which the assembly was loaded.","nodes":[{"pos":[0,56],"content":"The path to the file from which the assembly was loaded.","nodes":[{"content":"The path to the file from which the assembly was loaded.","pos":[0,56]}]}],"pos":[8022,8079],"yaml":true},{"content":"Loads a type with the specified name.","nodes":[{"pos":[0,37],"content":"Loads a type with the specified name.","nodes":[{"content":"Loads a type with the specified name.","pos":[0,37]}]}],"pos":[9488,9526],"yaml":true},{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","nodes":[{"pos":[0,164],"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","nodes":[{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[0,164],"nodes":[{"content":"The name of the type.","pos":[0,21]},{"content":"If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[22,164]}]}]}],"pos":[9660,9825],"yaml":true},{"content":"An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found.","nodes":[{"pos":[0,122],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that corresponds to the specified name, or <ph id=\"ph2\">`null`</ph> if no type can be found.","source":"An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found."}],"pos":[9880,10003],"yaml":true},{"content":"Loads a type with the specified name.","nodes":[{"pos":[0,37],"content":"Loads a type with the specified name.","nodes":[{"content":"Loads a type with the specified name.","pos":[0,37]}]}],"pos":[11474,11512],"yaml":true},{"content":"If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.","nodes":[{"pos":[0,102],"content":"If the type cannot be loaded and the <ph id=\"ph1\">`throwOnError`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this will throw an exception.","source":"If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception."}],"pos":[11523,11626],"yaml":true,"extradata":"MT"},{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","nodes":[{"pos":[0,164],"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","nodes":[{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[0,164],"nodes":[{"content":"The name of the type.","pos":[0,21]},{"content":"If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[22,164]}]}]}],"pos":[11779,11944],"yaml":true},{"content":"`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located.","nodes":[{"pos":[0,168],"content":"<ph id=\"ph1\">`true`</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id=\"ph2\">`false`</ph>, and this method returns <ph id=\"ph3\">`null`</ph> if the assembly cannot be located.","source":"`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located."}],"pos":[12013,12184],"yaml":true},{"content":"An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found.","nodes":[{"pos":[0,122],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that corresponds to the specified name, or <ph id=\"ph2\">`null`</ph> if no type can be found.","source":"An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found."}],"pos":[12239,12362],"yaml":true},{"content":"Loads a type with the specified name.","nodes":[{"pos":[0,37],"content":"Loads a type with the specified name.","nodes":[{"content":"Loads a type with the specified name.","pos":[0,37]}]}],"pos":[13905,13943],"yaml":true},{"content":"If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.","nodes":[{"pos":[0,102],"content":"If the type cannot be loaded and the <ph id=\"ph1\">`throwOnError`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this will throw an exception.","source":"If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception."}],"pos":[13954,14057],"yaml":true,"extradata":"MT"},{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","nodes":[{"pos":[0,164],"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","nodes":[{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[0,164],"nodes":[{"content":"The name of the type.","pos":[0,21]},{"content":"If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[22,164]}]}]}],"pos":[14227,14392],"yaml":true},{"content":"`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located.","nodes":[{"pos":[0,168],"content":"<ph id=\"ph1\">`true`</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id=\"ph2\">`false`</ph>, and this method returns <ph id=\"ph3\">`null`</ph> if the assembly cannot be located.","source":"`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located."}],"pos":[14461,14632],"yaml":true},{"content":"`true` to ignore case when searching for types; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> to ignore case when searching for types; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to ignore case when searching for types; otherwise, `false`."}],"pos":[14699,14769],"yaml":true},{"content":"An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found.","nodes":[{"pos":[0,122],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that corresponds to the specified name, or <ph id=\"ph2\">`null`</ph> if no type can be found.","source":"An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found."}],"pos":[14824,14947],"yaml":true},{"content":"Adds a reference to the specified assembly.","nodes":[{"pos":[0,43],"content":"Adds a reference to the specified assembly.","nodes":[{"content":"Adds a reference to the specified assembly.","pos":[0,43]}]}],"pos":[16475,16519],"yaml":true},{"content":"Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.","nodes":[{"pos":[0,135],"content":"Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.","nodes":[{"content":"Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.","pos":[0,135]}]}],"pos":[16530,16666],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Reflection.AssemblyName\"></xref> that indicates the assembly to reference.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> that indicates the assembly to reference.","source":"An <xref href=\"System.Reflection.AssemblyName\"></xref> that indicates the assembly to reference."}],"pos":[16851,16948],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ITypeResolutionService\n  commentId: T:System.ComponentModel.Design.ITypeResolutionService\n  id: ITypeResolutionService\n  children:\n  - System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  - System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  - System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  - System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  langs:\n  - csharp\n  name: ITypeResolutionService\n  nameWithType: ITypeResolutionService\n  fullName: System.ComponentModel.Design.ITypeResolutionService\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides an interface to retrieve an assembly or type by name.\n  remarks: This service is used to load types at design time.\n  example:\n  - \"The following example control provides an interface to call methods of the <xref:System.ComponentModel.Design.ITypeResolutionService> from design mode.  \\n  \\n [!code-cpp[ITypeResolutionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CPP/ityperesolutionservicecontrol.cpp#1)]\\n [!code-csharp[ITypeResolutionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CS/ityperesolutionservicecontrol.cs#1)]\\n [!code-vb[ITypeResolutionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeResolutionServiceExample/VB/ityperesolutionservicecontrol.vb#1)]\"\n  syntax:\n    content: public interface ITypeResolutionService\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  id: GetAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName)\n  fullName: ITypeResolutionService.GetAssembly(AssemblyName)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested assembly.\n  syntax:\n    content: public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly to retrieve.\n    return:\n      type: System.Reflection.Assembly\n      description: An instance of the requested assembly, or `null` if no assembly can be located.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  id: GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetAssembly(AssemblyName, Boolean)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName, Boolean)\n  fullName: ITypeResolutionService.GetAssembly(AssemblyName, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested assembly.\n  syntax:\n    content: public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly to retrieve.\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located.'\n    return:\n      type: System.Reflection.Assembly\n      description: An instance of the requested assembly, or `null` if no assembly can be located.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  id: GetPathOfAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetPathOfAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n  fullName: ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the path to the file from which the assembly was loaded.\n  syntax:\n    content: public string GetPathOfAssembly (System.Reflection.AssemblyName name);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly.\n    return:\n      type: System.String\n      description: The path to the file from which the assembly was loaded.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: ITypeResolutionService.GetType(String)\n  fullName: ITypeResolutionService.GetType(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Loads a type with the specified name.\n  syntax:\n    content: public Type GetType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.\n    return:\n      type: System.Type\n      description: An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  id: GetType(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetType(String, Boolean)\n  nameWithType: ITypeResolutionService.GetType(String, Boolean)\n  fullName: ITypeResolutionService.GetType(String, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Loads a type with the specified name.\n  remarks: If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.\n  syntax:\n    content: public Type GetType (string name, bool throwOnError);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located.'\n    return:\n      type: System.Type\n      description: An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  id: GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetType(String, Boolean, Boolean)\n  nameWithType: ITypeResolutionService.GetType(String, Boolean, Boolean)\n  fullName: ITypeResolutionService.GetType(String, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Loads a type with the specified name.\n  remarks: If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.\n  syntax:\n    content: public Type GetType (string name, bool throwOnError, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` if this method should throw an exception if the assembly cannot be located; otherwise, `false`, and this method returns `null` if the assembly cannot be located.'\n    - id: ignoreCase\n      type: System.Boolean\n      description: '`true` to ignore case when searching for types; otherwise, `false`.'\n    return:\n      type: System.Type\n      description: An instance of <xref href=\"System.Type\"></xref> that corresponds to the specified name, or `null` if no type can be found.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  commentId: M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  id: ReferenceAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: ReferenceAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.ReferenceAssembly(AssemblyName)\n  fullName: ITypeResolutionService.ReferenceAssembly(AssemblyName)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds a reference to the specified assembly.\n  remarks: Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.\n  syntax:\n    content: public void ReferenceAssembly (System.Reflection.AssemblyName name);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: An <xref href=\"System.Reflection.AssemblyName\"></xref> that indicates the assembly to reference.\n  overload: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName)\n  fullName: ITypeResolutionService.GetAssembly(AssemblyName)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetAssembly(AssemblyName, Boolean)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName, Boolean)\n  fullName: ITypeResolutionService.GetAssembly(AssemblyName, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetPathOfAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n  fullName: ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType(String)\n  nameWithType: ITypeResolutionService.GetType(String)\n  fullName: ITypeResolutionService.GetType(String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType(String, Boolean)\n  nameWithType: ITypeResolutionService.GetType(String, Boolean)\n  fullName: ITypeResolutionService.GetType(String, Boolean)\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType(String, Boolean, Boolean)\n  nameWithType: ITypeResolutionService.GetType(String, Boolean, Boolean)\n  fullName: ITypeResolutionService.GetType(String, Boolean, Boolean)\n- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: ReferenceAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.ReferenceAssembly(AssemblyName)\n  fullName: ITypeResolutionService.ReferenceAssembly(AssemblyName)\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetAssembly\n  nameWithType: ITypeResolutionService.GetAssembly\n  fullName: ITypeResolutionService.GetAssembly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetPathOfAssembly\n  nameWithType: ITypeResolutionService.GetPathOfAssembly\n  fullName: ITypeResolutionService.GetPathOfAssembly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType\n  nameWithType: ITypeResolutionService.GetType\n  fullName: ITypeResolutionService.GetType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: ReferenceAssembly\n  nameWithType: ITypeResolutionService.ReferenceAssembly\n  fullName: ITypeResolutionService.ReferenceAssembly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeResolutionService.xml\n"}