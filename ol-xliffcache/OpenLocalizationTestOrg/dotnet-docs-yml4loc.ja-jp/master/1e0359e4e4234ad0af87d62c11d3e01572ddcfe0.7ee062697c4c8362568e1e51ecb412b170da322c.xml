{"nodes":[{"content":"Provides information for a manifest signature.","nodes":[{"pos":[0,46],"content":"Provides information for a manifest signature.","nodes":[{"content":"Provides information for a manifest signature.","pos":[0,46]}]}],"pos":[1229,1276],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A> method to obtain a <xref:System.Security.Cryptography.ManifestSignatureInformationCollection> object that can be use to examine the signature information.","nodes":[{"pos":[0,246],"content":"Use the <xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A> method to obtain a <xref:System.Security.Cryptography.ManifestSignatureInformationCollection> object that can be use to examine the signature information.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A&gt;</ph> method to obtain a <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ManifestSignatureInformationCollection&gt;</ph> object that can be use to examine the signature information.","pos":[0,246],"source":"Use the <xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A> method to obtain a <xref:System.Security.Cryptography.ManifestSignatureInformationCollection> object that can be use to examine the signature information."}]}],"pos":[1287,1534],"yaml":true,"extradata":"MT"},{"content":"Gets the Authenticode signature information for a manifest.","nodes":[{"pos":[0,59],"content":"Gets the Authenticode signature information for a manifest.","nodes":[{"content":"Gets the Authenticode signature information for a manifest.","pos":[0,59]}]}],"pos":[3063,3123],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\"></xref> object that contains Authenticode signature information for the manifest, or `null` if there is no signature.","nodes":[{"pos":[0,212],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\"&gt;&lt;/xref&gt;</ph> object that contains Authenticode signature information for the manifest, or <ph id=\"ph2\">`null`</ph> if there is no signature.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\"></xref> object that contains Authenticode signature information for the manifest, or `null` if there is no signature."}],"pos":[3385,3598],"yaml":true},{"content":"Gets the type of a manifest.","nodes":[{"pos":[0,28],"content":"Gets the type of a manifest.","nodes":[{"content":"Gets the type of a manifest.","pos":[0,28]}]}],"pos":[4743,4772],"yaml":true},{"content":"One of the <xref href=\"System.Security.ManifestKinds\"></xref> values.","nodes":[{"pos":[0,69],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.ManifestKinds\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.ManifestKinds\"></xref> values."}],"pos":[4923,4993],"yaml":true},{"content":"Gets the details of the strong name signature of a manifest.","nodes":[{"pos":[0,60],"content":"Gets the details of the strong name signature of a manifest.","nodes":[{"content":"Gets the details of the strong name signature of a manifest.","pos":[0,60]}]}],"pos":[6191,6252],"yaml":true},{"content":"A <xref href=\"System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\"></xref> object that contains the signature, or `null` if there is no strong name signature.","nodes":[{"pos":[0,184],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\"&gt;&lt;/xref&gt;</ph> object that contains the signature, or <ph id=\"ph2\">`null`</ph> if there is no strong name signature.","source":"A <xref href=\"System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\"></xref> object that contains the signature, or `null` if there is no strong name signature."}],"pos":[6474,6659],"yaml":true},{"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context.","nodes":[{"pos":[0,113],"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context.","nodes":[{"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context.","pos":[0,113]}]}],"pos":[7977,8091],"yaml":true},{"content":"The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.","nodes":[{"pos":[0,116],"content":"The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.","nodes":[{"content":"The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.","pos":[0,116],"nodes":[{"content":"The activation context of the manifest.","pos":[0,39]},{"content":"Activation contexts belong to an application and contain multiple manifests.","pos":[40,116]}]}]}],"pos":[8339,8456],"yaml":true},{"content":"A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified.","nodes":[{"pos":[0,150],"content":"A collection that contains a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"&gt;&lt;/xref&gt;</ph> object for each manifest that is verified.","source":"A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified."}],"pos":[8567,8718],"yaml":true},{"content":"The <code>application</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">application</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>application</code> parameter is `null`."}],"pos":[8921,8971],"yaml":true},{"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type.","nodes":[{"pos":[0,131],"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type.","nodes":[{"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type.","pos":[0,131]}]}],"pos":[10316,10448],"yaml":true},{"content":"The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.","nodes":[{"pos":[0,116],"content":"The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.","nodes":[{"content":"The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.","pos":[0,116],"nodes":[{"content":"The activation context of the manifest.","pos":[0,39]},{"content":"Activation contexts belong to an application and contain multiple manifests.","pos":[40,116]}]}]}],"pos":[10737,10854],"yaml":true},{"content":"The type of manifest. This parameter specifies which manifests in the activation context you want to verify.","nodes":[{"pos":[0,108],"content":"The type of manifest. This parameter specifies which manifests in the activation context you want to verify.","nodes":[{"content":"The type of manifest. This parameter specifies which manifests in the activation context you want to verify.","pos":[0,108],"nodes":[{"content":"The type of manifest.","pos":[0,21]},{"content":"This parameter specifies which manifests in the activation context you want to verify.","pos":[22,108]}]}]}],"pos":[10935,11044],"yaml":true},{"content":"A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified.","nodes":[{"pos":[0,150],"content":"A collection that contains a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"&gt;&lt;/xref&gt;</ph> object for each manifest that is verified.","source":"A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified."}],"pos":[11155,11306],"yaml":true},{"content":"The <code>application</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">application</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>application</code> parameter is `null`."}],"pos":[11509,11559],"yaml":true},{"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type, and allows certificates to be selected for revocation.","nodes":[{"pos":[0,186],"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type, and allows certificates to be selected for revocation.","nodes":[{"content":"Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type, and allows certificates to be selected for revocation.","pos":[0,186]}]}],"pos":[13414,13601],"yaml":true},{"content":"The application context of the manifests. Activation contexts belong to an application and contain multiple manifests.","nodes":[{"pos":[0,118],"content":"The application context of the manifests. Activation contexts belong to an application and contain multiple manifests.","nodes":[{"content":"The application context of the manifests. Activation contexts belong to an application and contain multiple manifests.","pos":[0,118],"nodes":[{"content":"The application context of the manifests.","pos":[0,41]},{"content":"Activation contexts belong to an application and contain multiple manifests.","pos":[42,118]}]}]}],"pos":[14052,14171],"yaml":true},{"content":"The type of manifest. This parameter specifies which manifests in the activation context you want to verify.","nodes":[{"pos":[0,108],"content":"The type of manifest. This parameter specifies which manifests in the activation context you want to verify.","nodes":[{"content":"The type of manifest. This parameter specifies which manifests in the activation context you want to verify.","pos":[0,108],"nodes":[{"content":"The type of manifest.","pos":[0,21]},{"content":"This parameter specifies which manifests in the activation context you want to verify.","pos":[22,108]}]}]}],"pos":[14252,14361],"yaml":true},{"content":"One of the enumeration values that specifies which certificates in the chain are checked for revocation. The default is <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot\"></xref>.","nodes":[{"pos":[0,218],"content":"One of the enumeration values that specifies which certificates in the chain are checked for revocation. The default is <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot\"></xref>.","nodes":[{"content":"One of the enumeration values that specifies which certificates in the chain are checked for revocation.","pos":[0,104]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot\"&gt;&lt;/xref&gt;</ph>.","pos":[105,218],"source":" The default is <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot\"></xref>."}]}],"pos":[14482,14701],"yaml":true},{"content":"Determines whether the X.509 verification should look online for revocation lists.","nodes":[{"pos":[0,82],"content":"Determines whether the X.509 verification should look online for revocation lists.","nodes":[{"content":"Determines whether the X.509 verification should look online for revocation lists.","pos":[0,82]}]}],"pos":[14822,14905],"yaml":true},{"content":"A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified.","nodes":[{"pos":[0,150],"content":"A collection that contains a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"&gt;&lt;/xref&gt;</ph> object for each manifest that is verified.","source":"A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified."}],"pos":[15016,15167],"yaml":true},{"content":"The <code>application</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">application</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>application</code> parameter is `null`."}],"pos":[15370,15420],"yaml":true},{"content":"A value specified for the <code>revocationFlag</code> or <code>revocationMode</code> parameter is invalid.","nodes":[{"pos":[0,106],"content":"A value specified for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">revocationFlag</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">revocationMode</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is invalid.","source":"A value specified for the <code>revocationFlag</code> or <code>revocationMode</code> parameter is invalid."}],"pos":[15534,15641],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ManifestSignatureInformation\n  commentId: T:System.Security.Cryptography.ManifestSignatureInformation\n  id: ManifestSignatureInformation\n  children:\n  - System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  - System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  - System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  langs:\n  - csharp\n  name: ManifestSignatureInformation\n  nameWithType: ManifestSignatureInformation\n  fullName: System.Security.Cryptography.ManifestSignatureInformation\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Provides information for a manifest signature.\n  remarks: Use the <xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A> method to obtain a <xref:System.Security.Cryptography.ManifestSignatureInformationCollection> object that can be use to examine the signature information.\n  syntax:\n    content: public sealed class ManifestSignatureInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  commentId: P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  id: AuthenticodeSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: AuthenticodeSignature\n  nameWithType: ManifestSignatureInformation.AuthenticodeSignature\n  fullName: ManifestSignatureInformation.AuthenticodeSignature\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the Authenticode signature information for a manifest.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\"></xref> object that contains Authenticode signature information for the manifest, or `null` if there is no signature.\n  overload: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  commentId: P:System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  id: Manifest\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: Manifest\n  nameWithType: ManifestSignatureInformation.Manifest\n  fullName: ManifestSignatureInformation.Manifest\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the type of a manifest.\n  syntax:\n    content: public System.Security.ManifestKinds Manifest { get; }\n    return:\n      type: System.Security.ManifestKinds\n      description: One of the <xref href=\"System.Security.ManifestKinds\"></xref> values.\n  overload: System.Security.Cryptography.ManifestSignatureInformation.Manifest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  commentId: P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  id: StrongNameSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: StrongNameSignature\n  nameWithType: ManifestSignatureInformation.StrongNameSignature\n  fullName: ManifestSignatureInformation.StrongNameSignature\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the details of the strong name signature of a manifest.\n  syntax:\n    content: public System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature { get; }\n    return:\n      type: System.Security.Cryptography.StrongNameSignatureInformation\n      description: A <xref href=\"System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\"></xref> object that contains the signature, or `null` if there is no strong name signature.\n  overload: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  commentId: M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  id: VerifySignature(System.ActivationContext)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: VerifySignature(ActivationContext)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext)\n  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gathers and verifies information about the signatures of manifests that belong to a specified activation context.\n  syntax:\n    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application);\n    parameters:\n    - id: application\n      type: System.ActivationContext\n      description: The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.\n    return:\n      type: System.Security.Cryptography.ManifestSignatureInformationCollection\n      description: A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified.\n  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>application</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  commentId: M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  id: VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: VerifySignature(ActivationContext, ManifestKinds)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)\n  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type.\n  syntax:\n    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests);\n    parameters:\n    - id: application\n      type: System.ActivationContext\n      description: The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.\n    - id: manifests\n      type: System.Security.ManifestKinds\n      description: The type of manifest. This parameter specifies which manifests in the activation context you want to verify.\n    return:\n      type: System.Security.Cryptography.ManifestSignatureInformationCollection\n      description: A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified.\n  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>application</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  commentId: M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  id: VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)\n  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type, and allows certificates to be selected for revocation.\n  syntax:\n    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests, System.Security.Cryptography.X509Certificates.X509RevocationFlag revocationFlag, System.Security.Cryptography.X509Certificates.X509RevocationMode revocationMode);\n    parameters:\n    - id: application\n      type: System.ActivationContext\n      description: The application context of the manifests. Activation contexts belong to an application and contain multiple manifests.\n    - id: manifests\n      type: System.Security.ManifestKinds\n      description: The type of manifest. This parameter specifies which manifests in the activation context you want to verify.\n    - id: revocationFlag\n      type: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n      description: One of the enumeration values that specifies which certificates in the chain are checked for revocation. The default is <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot\"></xref>.\n    - id: revocationMode\n      type: System.Security.Cryptography.X509Certificates.X509RevocationMode\n      description: Determines whether the X.509 verification should look online for revocation lists.\n    return:\n      type: System.Security.Cryptography.ManifestSignatureInformationCollection\n      description: A collection that contains a <xref href=\"System.Security.Cryptography.ManifestSignatureInformation\"></xref> object for each manifest that is verified.\n  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>application</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: A value specified for the <code>revocationFlag</code> or <code>revocationMode</code> parameter is invalid.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: AuthenticodeSignature\n  nameWithType: ManifestSignatureInformation.AuthenticodeSignature\n  fullName: ManifestSignatureInformation.AuthenticodeSignature\n- uid: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: AuthenticodeSignatureInformation\n  nameWithType: AuthenticodeSignatureInformation\n  fullName: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\n- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: Manifest\n  nameWithType: ManifestSignatureInformation.Manifest\n  fullName: ManifestSignatureInformation.Manifest\n- uid: System.Security.ManifestKinds\n  parent: System.Security\n  isExternal: false\n  name: ManifestKinds\n  nameWithType: ManifestKinds\n  fullName: System.Security.ManifestKinds\n- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: StrongNameSignature\n  nameWithType: ManifestSignatureInformation.StrongNameSignature\n  fullName: ManifestSignatureInformation.StrongNameSignature\n- uid: System.Security.Cryptography.StrongNameSignatureInformation\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: StrongNameSignatureInformation\n  nameWithType: StrongNameSignatureInformation\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature(ActivationContext)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext)\n  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext)\n- uid: System.Security.Cryptography.ManifestSignatureInformationCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ManifestSignatureInformationCollection\n  nameWithType: ManifestSignatureInformationCollection\n  fullName: System.Security.Cryptography.ManifestSignatureInformationCollection\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature(ActivationContext, ManifestKinds)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)\n  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)\n  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509RevocationFlag\n  nameWithType: X509RevocationFlag\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509RevocationMode\n  nameWithType: X509RevocationMode\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode\n- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature*\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: AuthenticodeSignature\n  nameWithType: ManifestSignatureInformation.AuthenticodeSignature\n  fullName: ManifestSignatureInformation.AuthenticodeSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest*\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: Manifest\n  nameWithType: ManifestSignatureInformation.Manifest\n  fullName: ManifestSignatureInformation.Manifest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature*\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: StrongNameSignature\n  nameWithType: ManifestSignatureInformation.StrongNameSignature\n  fullName: ManifestSignatureInformation.StrongNameSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature\n  nameWithType: ManifestSignatureInformation.VerifySignature\n  fullName: ManifestSignatureInformation.VerifySignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}