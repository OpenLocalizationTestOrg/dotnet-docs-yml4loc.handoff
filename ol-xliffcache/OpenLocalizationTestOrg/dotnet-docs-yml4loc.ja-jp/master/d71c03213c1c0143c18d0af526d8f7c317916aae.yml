### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.SocketElement
  commentId: T:System.Net.Configuration.SocketElement
  id: SocketElement
  children:
  - System.Net.Configuration.SocketElement.#ctor
  - System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  - System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  - System.Net.Configuration.SocketElement.IPProtectionLevel
  - System.Net.Configuration.SocketElement.PostDeserialize
  - System.Net.Configuration.SocketElement.Properties
  langs:
  - csharp
  name: SocketElement
  nameWithType: SocketElement
  fullName: System.Net.Configuration.SocketElement
  type: Class
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Represents information used to configure <xref href="System.Net.Sockets.Socket"></xref> objects. This class cannot be inherited.
  remarks: "This class corresponds to the [\\&lt;socket\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/socket-element-network-settings.md) configuration element.  \n  \n This class provides programmatic access to information that can be stored in configuration files.  \n  \n This class is used to specify whether completion ports are used for connecting, whether completion ports are used for accepting connections, and the default IP protection level for an IPv6 socket."
  syntax:
    content: 'public sealed class SocketElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.SocketElement.#ctor
  commentId: M:System.Net.Configuration.SocketElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: SocketElement()
  nameWithType: SocketElement.SocketElement()
  fullName: SocketElement.SocketElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Initializes a new instance of the <xref href="System.Net.Configuration.SocketElement"></xref> class.
  remarks: This constructor adds the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> and <xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A> properties to the <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> collection.
  syntax:
    content: public SocketElement ();
    parameters: []
  overload: System.Net.Configuration.SocketElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  commentId: P:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  id: AlwaysUseCompletionPortsForAccept
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: AlwaysUseCompletionPortsForAccept
  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept
  fullName: SocketElement.AlwaysUseCompletionPortsForAccept
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Gets or sets a Boolean value that specifies whether completion ports are used when accepting connections.
  syntax:
    content: >-
      [System.Configuration.ConfigurationProperty("alwaysUseCompletionPortsForAccept", DefaultValue=Mono.Cecil.CustomAttributeArgument)]

      public bool AlwaysUseCompletionPortsForAccept { get; set; }
    return:
      type: System.Boolean
      description: '`true` to use completion ports; otherwise, `false`.'
  overload: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept*
  exceptions: []
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  commentId: P:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  id: AlwaysUseCompletionPortsForConnect
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: AlwaysUseCompletionPortsForConnect
  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect
  fullName: SocketElement.AlwaysUseCompletionPortsForConnect
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Gets or sets a Boolean value that specifies whether completion ports are used when making connections.
  syntax:
    content: >-
      [System.Configuration.ConfigurationProperty("alwaysUseCompletionPortsForConnect", DefaultValue=Mono.Cecil.CustomAttributeArgument)]

      public bool AlwaysUseCompletionPortsForConnect { get; set; }
    return:
      type: System.Boolean
      description: '`true` to use completion ports; otherwise, `false`.'
  overload: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect*
  exceptions: []
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.SocketElement.IPProtectionLevel
  commentId: P:System.Net.Configuration.SocketElement.IPProtectionLevel
  id: IPProtectionLevel
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: IPProtectionLevel
  nameWithType: SocketElement.IPProtectionLevel
  fullName: SocketElement.IPProtectionLevel
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Gets or sets a value that specifies the default <xref href="System.Net.Sockets.IPProtectionLevel"></xref> to use for a socket.
  remarks: The <xref:System.Net.Configuration.SocketElement.IPProtectionLevel%2A> property enables configuration of a restriction for an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. This option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This option has three defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel?displayProperty=fullName> enumeration.
  syntax:
    content: >-
      [System.Configuration.ConfigurationProperty("ipProtectionLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)]

      public System.Net.Sockets.IPProtectionLevel IPProtectionLevel { get; set; }
    return:
      type: System.Net.Sockets.IPProtectionLevel
      description: The value of the <xref href="System.Net.Sockets.IPProtectionLevel"></xref> for the current instance.
  overload: System.Net.Configuration.SocketElement.IPProtectionLevel*
  exceptions: []
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.SocketElement.PostDeserialize
  commentId: M:System.Net.Configuration.SocketElement.PostDeserialize
  id: PostDeserialize
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: SocketElement.PostDeserialize()
  fullName: SocketElement.PostDeserialize()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: >-
      [System.MonoTODO]

      protected override void PostDeserialize ();
    parameters: []
  overload: System.Net.Configuration.SocketElement.PostDeserialize*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Net.Configuration.SocketElement.Properties
  commentId: P:System.Net.Configuration.SocketElement.Properties
  id: Properties
  parent: System.Net.Configuration.SocketElement
  langs:
  - csharp
  name: Properties
  nameWithType: SocketElement.Properties
  fullName: SocketElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: ''
  overload: System.Net.Configuration.SocketElement.Properties*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
references:
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.SocketElement.#ctor
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: SocketElement()
  nameWithType: SocketElement.SocketElement()
  fullName: SocketElement.SocketElement()
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForAccept
  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept
  fullName: SocketElement.AlwaysUseCompletionPortsForAccept
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForConnect
  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect
  fullName: SocketElement.AlwaysUseCompletionPortsForConnect
- uid: System.Net.Configuration.SocketElement.IPProtectionLevel
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: IPProtectionLevel
  nameWithType: SocketElement.IPProtectionLevel
  fullName: SocketElement.IPProtectionLevel
- uid: System.Net.Sockets.IPProtectionLevel
  parent: System.Net.Sockets
  isExternal: false
  name: IPProtectionLevel
  nameWithType: IPProtectionLevel
  fullName: System.Net.Sockets.IPProtectionLevel
- uid: System.Net.Configuration.SocketElement.PostDeserialize
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: SocketElement.PostDeserialize()
  fullName: SocketElement.PostDeserialize()
- uid: System.Net.Configuration.SocketElement.Properties
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: Properties
  nameWithType: SocketElement.Properties
  fullName: SocketElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.SocketElement.#ctor*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: SocketElement
  nameWithType: SocketElement.SocketElement
  fullName: SocketElement.SocketElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForAccept
  nameWithType: SocketElement.AlwaysUseCompletionPortsForAccept
  fullName: SocketElement.AlwaysUseCompletionPortsForAccept
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: AlwaysUseCompletionPortsForConnect
  nameWithType: SocketElement.AlwaysUseCompletionPortsForConnect
  fullName: SocketElement.AlwaysUseCompletionPortsForConnect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Net.Configuration.SocketElement.IPProtectionLevel*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: IPProtectionLevel
  nameWithType: SocketElement.IPProtectionLevel
  fullName: SocketElement.IPProtectionLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Net.Configuration.SocketElement.PostDeserialize*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: PostDeserialize
  nameWithType: SocketElement.PostDeserialize
  fullName: SocketElement.PostDeserialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Net.Configuration.SocketElement.Properties*
  parent: System.Net.Configuration.SocketElement
  isExternal: false
  name: Properties
  nameWithType: SocketElement.Properties
  fullName: SocketElement.Properties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/SocketElement.xml
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: ConfigurationElement.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: ConfigurationElement.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement(XmlReader, Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)
  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)
- uid: System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: ConfigurationElement.GetTransformedAssemblyString(String)
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: ConfigurationElement.GetTransformedTypeString(String)
- uid: System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: ConfigurationElement.Init()
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: ConfigurationElement.InitializeDefault()
- uid: System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: ConfigurationElement.IsModified()
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: ConfigurationElement.IsReadOnly()
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: ConfigurationElement.Item(ConfigurationProperty)
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: ConfigurationElement.Item(String)
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: ConfigurationElement.ListErrors(IList)
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute(String, String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)
  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String, XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)
  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: ConfigurationElement.PreSerialize(XmlWriter)
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: ConfigurationElement.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: ConfigurationElement.ResetModified()
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement(XmlWriter, Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)
  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement(XmlWriter, String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)
  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)
  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: ConfigurationElement.SetReadOnly()
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
