{"nodes":[{"content":"Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.","nodes":[{"pos":[0,126],"content":"Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.","nodes":[{"content":"Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.","pos":[0,126],"nodes":[{"content":"Indicates that the modified instance of a variable differs from its true type when marshaling.","pos":[0,94]},{"content":"This class cannot be inherited.","pos":[95,126]}]}]}],"pos":[532,659],"yaml":true},{"content":"The <xref:System.Runtime.CompilerServices.CompilerMarshalOverride> class allows the common language runtime to marshal using the correct sizes.  \n  \n Some behaviors of the common language runtime are incompatible with some languages. For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API.  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return.","nodes":[{"pos":[0,143],"content":"The <xref:System.Runtime.CompilerServices.CompilerMarshalOverride> class allows the common language runtime to marshal using the correct sizes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.CompilerMarshalOverride&gt;</ph> class allows the common language runtime to marshal using the correct sizes.","pos":[0,143],"source":"The <xref:System.Runtime.CompilerServices.CompilerMarshalOverride> class allows the common language runtime to marshal using the correct sizes."}]},{"pos":[150,553],"content":"Some behaviors of the common language runtime are incompatible with some languages. For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API.  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return.","nodes":[{"content":"Some behaviors of the common language runtime are incompatible with some languages.","pos":[0,83]},{"content":"For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the <ph id=\"ph1\">`BOOLEAN`</ph> type defined by the Microsoft Win32 API.","pos":[84,280],"source":" For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API."},{"content":"To work around such issues, the C++ compiler emits this modifier on any <ph id=\"ph1\">`wchar_t`</ph> or <ph id=\"ph2\">`bool`</ph> parameter or function return.","pos":[282,403],"source":"  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return."}]}],"pos":[670,1228],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.CompilerMarshalOverride\n  commentId: T:System.Runtime.CompilerServices.CompilerMarshalOverride\n  id: CompilerMarshalOverride\n  children: []\n  langs:\n  - csharp\n  name: CompilerMarshalOverride\n  nameWithType: CompilerMarshalOverride\n  fullName: System.Runtime.CompilerServices.CompilerMarshalOverride\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.CompilerServices.VisualC\n  namespace: System.Runtime.CompilerServices\n  summary: Indicates that the modified instance of a variable differs from its true type when marshaling. This class cannot be inherited.\n  remarks: \"The <xref:System.Runtime.CompilerServices.CompilerMarshalOverride> class allows the common language runtime to marshal using the correct sizes.  \\n  \\n Some behaviors of the common language runtime are incompatible with some languages. For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API.  To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return.\"\n  syntax:\n    content: public static class CompilerMarshalOverride\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/CompilerMarshalOverride.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}