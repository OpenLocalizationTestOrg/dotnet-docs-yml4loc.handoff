<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab5abd966cf053bbe7ea129cdae965404d77c192</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Collections.Concurrent.BlockingCollection-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ba3f590910ea48520242b312cee9493235d637a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d233c23fe0ddd1d50672dc9e27d77a962e2c046</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides blocking and bounding capabilities for thread-safe collections that implement <ph id="ph1">&lt;xref href="System.Collections.Concurrent.IProducerConsumerCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is a thread-safe collection class that provides the following:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementation of the producer/consumer pattern; <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is a wrapper for the <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Concurrent addition and removal of items from multiple threads with the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A bounded collection that blocks <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations when the collection is full or empty.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cancellation of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations by using a <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> object in the  <ph id="ph4">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, note that the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Dispose&gt;</ph> method is not thread-safe.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other public and protected members of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> represents a collection that allows for thread-safe adding and removal of data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is used as a wrapper for an <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> instance, and allows removal attempts from the collection to block until data is available to be removed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, you can create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> to enforce an upper bound on the number of data elements allowed in the <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>; addition attempts to the collection may then block until space is available to store the added items.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this manner, <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is similar to a traditional blocking queue data structure, except that the underlying data storage mechanism is abstracted away as an <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> supports bounding and blocking.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bounding means that you can set the maximum capacity of the collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bounding is important in certain scenarios because it enables you to control the maximum size of the collection in memory, and it prevents the producing threads from moving too far ahead of the consuming threads.Multiple threads or tasks can add items to the collection concurrently, and if the collection reaches its specified maximum capacity, the producing threads will block until an item is removed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple consumers can remove items concurrently, and if the collection becomes empty, the consuming threads will block until a producer adds an item.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>A producing thread can call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A&gt;</ph> method to indicate that no more items will be added.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consumers monitor the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> property to know when the collection is empty and no more items will be added.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations are typically performed in a loop.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can cancel a loop by passing in a <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method, and then checking the value of the token's <ph id="ph4">&lt;xref:System.Threading.CancellationToken.IsCancellationRequested%2A&gt;</ph> property on each iteration.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is <ph id="ph1">`true`</ph>, it is up to you to respond the cancellation request by cleaning up any resources and exiting the loop.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify not only the bounded capacity but also the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not modify the underlying collection directly.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> methods to add or remove elements.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object can become corrupted if you change the underlying collection directly.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The type of elements in the collection.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> class without an upper-bound.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default underlying collection is a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object, which provides first in, first out (FIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> class without an upper-bound and using the provided <ph id="ph2">&lt;xref href="System.Collections.Concurrent.IProducerConsumerCollection`1"&gt;&lt;/xref&gt;</ph> as its underlying data store.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection to use as the underlying data store.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collection</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> class with the specified upper-bound.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default underlying collection is a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The bounded size of the collection.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundedCapacity</ph><ept id="p1">&lt;/code&gt;</ept> is not a positive value.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> class with the specified upper-bound and using the provided <ph id="ph2">&lt;xref href="System.Collections.Concurrent.IProducerConsumerCollection`1"&gt;&lt;/xref&gt;</ph> as its underlying data store.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The collection to use as the underlying data store.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The bounded size of the collection.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collection</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundedCapacity</ph><ept id="p1">&lt;/code&gt;</ept> is not a positive value.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The supplied <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collection</ph><ept id="p1">&lt;/code&gt;</ept> contains more values than is permitted by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">boundedCapacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Adds the item to the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a bounded capacity was specified when this instance of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was initialized, a call to Add may block until space is available to store the provided item.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The item to be added to the collection.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The value can be a null reference.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete with regards to additions.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Adds the item to the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a bounded capacity was specified when this instance of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was initialized, a call to <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> may block until space is available to store the provided item.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can return early with an <ph id="ph1">&lt;xref:System.OperationCanceledException&gt;</ph> if the <ph id="ph2">`cancellationToken`</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The item to be added to the collection.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value can be a null reference.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed or the <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> that owns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">cancellationToken</ph><ept id="p1">&lt;/code&gt;</ept> has been disposed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete with regards to additions.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a bounded capacity was specified when all of the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The item to be added to one of the collections.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array to which the item was added.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>At least one underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a bounded capacity was specified when all of the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may return before the item is added to any collection if the <ph id="ph1">`cancellationToken`</ph> is canceled before space is available.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The item to be added to one of the collections.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array to which the item was added.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>At least one underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed, or the <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> that created <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">cancellationToken</ph><ept id="p1">&lt;/code&gt;</ept> has been disposed.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets the bounded capacity of this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Marks the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances as not accepting any more additions.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a collection has been marked as complete for adding, adding to the collection is not permitted and attempts to remove from the collection will not wait when the collection is empty.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Copies all of the items in the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance to a compatible one-dimensional array, starting at the specified index of the target array.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>CopyTo represents a snapshot of the collection at a precise point in time.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other threads are adding or removing items while CopyTo is executing, then the elements returned by CopyTo might not represent the state of the collection.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The array must have zero-based indexing.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The zero-based index in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which copying begins.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> argument is less than zero.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> argument is equal to or greater than the length of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The destination array is too small to hold all of the BlockingCcollection elements.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The array rank doesn't match.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The array type is incompatible with the type of the BlockingCollection elements.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the number of items contained in the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any method in BlockingCollection is executing while the Count property is being accessd, the return value is approximate.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Count may reflect a number that is either greater than or less than the actual number of items in the BlockingCollection.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The number of items contained in the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method is not thread-safe.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Releases resources used by the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Whether being disposed explicitly (true) or due to a finalizer (false).</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Provides a consuming <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerable`1"&gt;&lt;/xref&gt;</ph> for items in the collection.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables client code to remove items from the collection by using a foreach loop (For Each in Visual Basic), or <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=fullName&gt;</ph> or a PLINQ query.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator will continue to provide items (if any exist) until <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> returns true, and if <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> is false the loop blocks until an item becomes available or until the <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> is cancelled.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerable`1"&gt;&lt;/xref&gt;</ph> that removes and returns items from the collection.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed or the <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> that created <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">cancellationToken</ph><ept id="p1">&lt;/code&gt;</ept> has been disposed</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Provides a consuming <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerator`1"&gt;&lt;/xref&gt;</ph> for items in the collection.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerable`1"&gt;&lt;/xref&gt;</ph> that removes and returns items from the collection.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets whether this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Whether this collection has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets whether this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete for adding and is empty.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Whether this collection has been marked as complete for adding and is empty.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Removes  an item from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The item removed from the collection.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance, or the <ph id="ph2">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> is empty and the collection has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Removes an item from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> may block until an item is available to be removed or the token is canceled.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Object that can be used to cancel the take operation.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The item removed from the collection.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed or the <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> that created the token was canceled.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance or the BlockingCollection is marked as complete for adding, or the <ph id="ph2">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> is empty.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to TakeFromAny may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The item removed from one of the collections.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array from which the item was removed.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element or <ph id="ph2">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1.CompleteAdding"&gt;&lt;/xref&gt;</ph> has been called on the collection.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances while observing the specified cancellation token.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to TakeFromAny may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method will return early with an OperationCanceledException if the token is canceled.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The item removed from one of the collections.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array from which the item was removed.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or <ph id="ph2">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1.CompleteAdding"&gt;&lt;/xref&gt;</ph> has been called on the collection.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Copies the items from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance into a new array.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The copied elements are not removed from the collection.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any method in BlockingCollection is executing while the ToArray method executes, the return value is approximate.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>ToArray  may include items that have already been removed, or exclude items that have already been inserted.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>An array containing copies of the elements of the collection.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> within the specified time period.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The item to be added to the collection.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>true if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> could be added to the collection within the specified time; otherwise, false.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;xref href="System.InvalidOperationException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete with regards to additions.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> within the specified time period, while observing a cancellation token.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The item to be added to the collection.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>true if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> could be added to the collection within the specified time; otherwise, false.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;xref href="System.InvalidOperationException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed or the underlying <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete with regards to additions.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is a bounded collection, and is full, this method immediately returns false without adding the item.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The item to be added to the collection.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>true if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> could be added; otherwise false.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;xref href="System.InvalidOperationException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete with regards to additions.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The item to be added to the collection.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>true if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> could be added to the collection within the specified time span; otherwise, false.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;timeout&lt;/code&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been marked as complete with regards to additions.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The item to be added to one of the collections.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array to which the item was added, or -1 if the item could not be added.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>At least one underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances while observing the specified cancellation token.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can return early if the cancellationToken is cancelled before space was available for the Add operation.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The item to be added to one of the collections.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array to which the item was added, or -1 if the item could not be added.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances or the <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> that created <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">cancellationToken</ph><ept id="p1">&lt;/code&gt;</ept> has been disposed.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;timeout&lt;/code&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>At least one underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The item to be added to one of the collections.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array to which the item was added, or -1 if the item could not be added.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>At least one underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The item to be added to one of the collections.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array to which the item was added, or -1 if the item could not be added.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>At least one underlying collection didn't accept the item.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is empty, this method immediately returns false.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The item to be removed from the collection.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an item could be removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> in the specified time period.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The item to be removed from the collection.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>An object that represents the number of milliseconds to wait, or an object that represents -1 milliseconds to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;timeout&lt;/code&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;timeout&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> in the specified time period while observing a cancellation token.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The item to be removed from the collection.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> has been canceled.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed or the underlying <ph id="ph2">&lt;xref href="System.Threading.CancellationTokenSource"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The underlying collection was modified outside this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> in the specified time period.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>, you can specify the type of collection to use.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The item to be removed from the collection.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The item removed from one of the collections.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array from which the item was removed, or -1 if an item could not be removed.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The item removed from one of the collections.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array from which the item was removed, or -1 if an item could not be removed.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The item removed from one of the collections.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;xref href="System.Threading.Timeout.Infinite"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A cancellation token to observe.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array from which the item was removed, or -1 if an item could not be removed.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> is canceled.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The array of collections.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The item removed from one of the collections.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The index of the collection in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> array from which the item was removed, or -1 if an item could not be removed.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>At least one of the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instances has been disposed.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;timeout&lt;/code&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The count of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">collections</ph><ept id="p1">&lt;/code&gt;</ept> argument is a 0-length array or contains a null element.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Provides an <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerator`1"&gt;&lt;/xref&gt;</ph> for items in the collection.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=fullName&gt;</ph> returns a standard enumerator that does not modify the underlying collection.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other threads are adding or removing elements concurrently when GetEnumerator is called, then the elements returned by the enumerator might not represent the current state of the collection.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerator`1"&gt;&lt;/xref&gt;</ph> for the items in the collection.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Copies all of the items in the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance to a compatible one-dimensional array, starting at the specified index of the target array.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The array must have zero-based indexing.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The zero-based index in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which copying begins.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> argument is less than zero.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> argument is equal to or greater than the length of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">array</ph><ept id="p2">&lt;/code&gt;</ept>, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> is synchronized.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>always returns false.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>This property is not supported.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>returns null.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The SyncRoot property is not supported.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Provides an <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> for items in the collection.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> for the items in the collection.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Concurrent.BlockingCollection`1"&gt;&lt;/xref&gt;</ph> has been disposed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>