{"nodes":[{"content":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the RequestSecurityToken and RequestSecurityTokenResponse.","nodes":[{"pos":[0,143],"content":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the RequestSecurityToken and RequestSecurityTokenResponse.","nodes":[{"content":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the RequestSecurityToken and RequestSecurityTokenResponse.","pos":[0,143]}]}],"pos":[791,935],"yaml":true},{"content":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the wst:RequestSecurityToken (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>) and wst:RequestSecurityTokenResponse (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>) messages.  \n  \n For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","nodes":[{"pos":[0,306],"content":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the wst:RequestSecurityToken (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>) and wst:RequestSecurityTokenResponse (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>) messages.","nodes":[{"content":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the wst:RequestSecurityToken (<ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&gt;</ph>) and wst:RequestSecurityTokenResponse (<ph id=\"ph2\">&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&gt;</ph>) messages.","pos":[0,306],"source":"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the wst:RequestSecurityToken (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>) and wst:RequestSecurityTokenResponse (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>) messages."}]},{"pos":[313,456],"content":"For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","nodes":[{"content":"For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","pos":[0,143]}]}],"pos":[946,1407],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> class with no encryption.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"&gt;&lt;/xref&gt;</ph> class with no encryption.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> class with no encryption."}],"pos":[2966,3099],"yaml":true},{"content":"Use this constructor to send the key material in clear text. The <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A> property is set to `null` in the new <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey> instance.","nodes":[{"pos":[0,252],"content":"Use this constructor to send the key material in clear text. The <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A> property is set to `null` in the new <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey> instance.","nodes":[{"content":"Use this constructor to send the key material in clear text.","pos":[0,60]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A&gt;</ph> property is set to <ph id=\"ph2\">`null`</ph> in the new <ph id=\"ph3\">&lt;xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey&gt;</ph> instance.","pos":[61,252],"source":" The <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A> property is set to `null` in the new <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey> instance."}]}],"pos":[3110,3363],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the key material to be protected.","nodes":[{"pos":[0,92],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the key material to be protected.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the key material to be protected."}],"pos":[3501,3594],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> class using the specified encrypting credentials.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"&gt;&lt;/xref&gt;</ph> class using the specified encrypting credentials.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> class using the specified encrypting credentials."}],"pos":[4998,5155],"yaml":true},{"content":"Use this constructor to send the key material encrypted.","nodes":[{"pos":[0,56],"content":"Use this constructor to send the key material encrypted.","nodes":[{"content":"Use this constructor to send the key material encrypted.","pos":[0,56]}]}],"pos":[5166,5223],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the key material to be protected.","nodes":[{"pos":[0,92],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the key material to be protected.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the key material to be protected."}],"pos":[5432,5525],"yaml":true},{"content":"An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> that contains the credentials used to encrypt the key material.","nodes":[{"pos":[0,137],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"&gt;&lt;/xref&gt;</ph> that contains the credentials used to encrypt the key material.","source":"An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> that contains the credentials used to encrypt the key material."}],"pos":[5636,5774],"yaml":true},{"content":"Gets the key material.","nodes":[{"pos":[0,22],"content":"Gets the key material.","nodes":[{"content":"Gets the key material.","pos":[0,22]}]}],"pos":[6904,6927],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the key material.","nodes":[{"pos":[0,76],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the key material.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the key material."}],"pos":[7056,7133],"yaml":true},{"content":"Gets the encrypting credentials for the key.","nodes":[{"pos":[0,44],"content":"Gets the encrypting credentials for the key.","nodes":[{"content":"Gets the encrypting credentials for the key.","pos":[0,44]}]}],"pos":[8313,8358],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.SecurityTokenService.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the key. `null` indicates that the key is not encrypted.","nodes":[{"pos":[0,191],"content":"A <xref href=\"System.IdentityModel.SecurityTokenService.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the key. `null` indicates that the key is not encrypted.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.SecurityTokenService.EncryptingCredentials\"&gt;&lt;/xref&gt;</ph> that represents the credentials used to encrypt the key.","pos":[0,143],"source":"A <xref href=\"System.IdentityModel.SecurityTokenService.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the key."},{"content":"<ph id=\"ph1\">`null`</ph> indicates that the key is not encrypted.","pos":[144,191],"source":"`null` indicates that the key is not encrypted."}]}],"pos":[8560,8752],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  commentId: T:System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  id: ProtectedKey\n  children:\n  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])\n  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes\n  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials\n  langs:\n  - csharp\n  name: ProtectedKey\n  nameWithType: ProtectedKey\n  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the RequestSecurityToken and RequestSecurityTokenResponse.\n  remarks: \"Represents the contents of a wst:Entropy or a wst:RequestedProofToken element inside the wst:RequestSecurityToken (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>) and wst:RequestSecurityTokenResponse (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>) messages.  \\n  \\n For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.\"\n  syntax:\n    content: public class ProtectedKey\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.IdentityModel.Protocols.WSTrust.Entropy\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])\n  commentId: M:System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  langs:\n  - csharp\n  name: ProtectedKey(Byte[])\n  nameWithType: ProtectedKey.ProtectedKey(Byte[])\n  fullName: ProtectedKey.ProtectedKey(Byte[])\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> class with no encryption.\n  remarks: Use this constructor to send the key material in clear text. The <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A> property is set to `null` in the new <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey> instance.\n  syntax:\n    content: public ProtectedKey (byte[] secret);\n    parameters:\n    - id: secret\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the key material to be protected.\n  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  commentId: M:System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  langs:\n  - csharp\n  name: ProtectedKey(Byte[], EncryptingCredentials)\n  nameWithType: ProtectedKey.ProtectedKey(Byte[], EncryptingCredentials)\n  fullName: ProtectedKey.ProtectedKey(Byte[], EncryptingCredentials)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> class using the specified encrypting credentials.\n  remarks: Use this constructor to send the key material encrypted.\n  syntax:\n    content: public ProtectedKey (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);\n    parameters:\n    - id: secret\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the key material to be protected.\n    - id: wrappingCredentials\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> that contains the credentials used to encrypt the key material.\n  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes\n  commentId: M:System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes\n  id: GetKeyBytes\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  langs:\n  - csharp\n  name: GetKeyBytes()\n  nameWithType: ProtectedKey.GetKeyBytes()\n  fullName: ProtectedKey.GetKeyBytes()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets the key material.\n  syntax:\n    content: public byte[] GetKeyBytes ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the key material.\n  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials\n  commentId: P:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials\n  id: WrappingCredentials\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  langs:\n  - csharp\n  name: WrappingCredentials\n  nameWithType: ProtectedKey.WrappingCredentials\n  fullName: ProtectedKey.WrappingCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets the encrypting credentials for the key.\n  syntax:\n    content: public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }\n    return:\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: A <xref href=\"System.IdentityModel.SecurityTokenService.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the key. `null` indicates that the key is not encrypted.\n  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: ProtectedKey(Byte[])\n  nameWithType: ProtectedKey.ProtectedKey(Byte[])\n  fullName: ProtectedKey.ProtectedKey(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: ProtectedKey(Byte[], EncryptingCredentials)\n  nameWithType: ProtectedKey.ProtectedKey(Byte[], EncryptingCredentials)\n  fullName: ProtectedKey.ProtectedKey(Byte[], EncryptingCredentials)\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: GetKeyBytes()\n  nameWithType: ProtectedKey.GetKeyBytes()\n  fullName: ProtectedKey.GetKeyBytes()\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: WrappingCredentials\n  nameWithType: ProtectedKey.WrappingCredentials\n  fullName: ProtectedKey.WrappingCredentials\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: ProtectedKey\n  nameWithType: ProtectedKey.ProtectedKey\n  fullName: ProtectedKey.ProtectedKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: GetKeyBytes\n  nameWithType: ProtectedKey.GetKeyBytes\n  fullName: ProtectedKey.GetKeyBytes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*\n  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  isExternal: false\n  name: WrappingCredentials\n  nameWithType: ProtectedKey.WrappingCredentials\n  fullName: ProtectedKey.WrappingCredentials\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/ProtectedKey.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}