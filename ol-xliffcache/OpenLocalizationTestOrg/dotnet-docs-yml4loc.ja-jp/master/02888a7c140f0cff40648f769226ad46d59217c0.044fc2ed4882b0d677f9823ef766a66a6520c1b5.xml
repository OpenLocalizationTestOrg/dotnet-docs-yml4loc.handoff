{"nodes":[{"content":"Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character. The fallback throws an exception instead of decoding the input byte sequence. This class cannot be inherited.","nodes":[{"pos":[0,250],"content":"Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character. The fallback throws an exception instead of decoding the input byte sequence. This class cannot be inherited.","nodes":[{"content":"Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character. The fallback throws an exception instead of decoding the input byte sequence. This class cannot be inherited.","pos":[0,250],"nodes":[{"content":"Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character.","pos":[0,140]},{"content":"The fallback throws an exception instead of decoding the input byte sequence.","pos":[141,218]},{"content":"This class cannot be inherited.","pos":[219,250]}]}]}],"pos":[734,985],"yaml":true},{"content":"An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link. Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class. Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.  \n  \n A decoding operation can fail if the input byte sequence cannot be mapped by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.  \n  \n In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.  \n  \n The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures. The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted. After the substitute string is emitted, the decoding operation continues converting the remainder of the input. In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.","nodes":[{"pos":[0,479],"content":"An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link. Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class. Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.","nodes":[{"content":"An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.","pos":[0,176]},{"content":"Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> class.","pos":[177,321],"source":" Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class."},{"content":"Specifically, the encoding type's <ph id=\"ph1\">`GetBytes`</ph> method encodes a character to a byte sequence, and the <ph id=\"ph2\">`GetChars`</ph> method decodes a byte sequence to a character.","pos":[322,479],"source":" Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character."}]},{"pos":[486,756],"content":"A decoding operation can fail if the input byte sequence cannot be mapped by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.","nodes":[{"content":"A decoding operation can fail if the input byte sequence cannot be mapped by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.","pos":[0,270],"nodes":[{"content":"A decoding operation can fail if the input byte sequence cannot be mapped by the encoding.","pos":[0,90]},{"content":"For example, an <ph id=\"ph1\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.","pos":[91,270],"source":" For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F."}]}]},{"pos":[763,1131],"content":"In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.","nodes":[{"content":"In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.","pos":[0,368],"nodes":[{"content":"In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.","pos":[0,146]},{"content":"Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <ph id=\"ph1\">&lt;xref:System.Text.DecoderFallback&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> classes.","pos":[147,368],"source":" Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes."}]}]},{"pos":[1138,1702],"content":"The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures. The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted. After the substitute string is emitted, the decoding operation continues converting the remainder of the input. In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.","nodes":[{"content":"The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures. The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted. After the substitute string is emitted, the decoding operation continues converting the remainder of the input. In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.","pos":[0,564],"nodes":[{"content":"The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures.","pos":[0,138]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> class substitutes a string provided in place of any input byte sequence that cannot be converted.","pos":[139,286],"source":" The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted."},{"content":"After the substitute string is emitted, the decoding operation continues converting the remainder of the input.","pos":[287,398]},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> class throws a <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> when an invalid byte sequence is encountered.","pos":[399,564],"source":" In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered."}]}]}],"pos":[996,2707],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallback\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallback\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallback\"></xref> class."}],"pos":[5180,5279],"yaml":true},{"content":"Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.","nodes":[{"pos":[0,115],"content":"Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.","nodes":[{"content":"Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.","pos":[0,115]}]}],"pos":[6872,6988],"yaml":true},{"content":"A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters. This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class. A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.","nodes":[{"pos":[0,538],"content":"A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters. This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class. A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.","nodes":[{"content":"A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters. This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class. A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.","pos":[0,538],"nodes":[{"content":"A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters.","pos":[0,127]},{"content":"This method returns an instance of the <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class, which is a subclass of  the <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> class.","pos":[128,299],"source":" This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> object throws an <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> exception whenever a sequence of bytes is passed to its <ph id=\"ph3\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method.","pos":[300,538],"source":" A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method."}]}]}],"pos":[6999,7538],"yaml":true,"extradata":"MT"},{"content":"A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.","nodes":[{"pos":[0,89],"content":"A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.","nodes":[{"content":"A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.","pos":[0,89]}]}],"pos":[7732,7822],"yaml":true},{"content":"Indicates whether the current <xref href=\"System.Text.DecoderExceptionFallback\"></xref> object and a specified object are equal.","nodes":[{"pos":[0,128],"content":"Indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallback\"&gt;&lt;/xref&gt;</ph> object and a specified object are equal.","source":"Indicates whether the current <xref href=\"System.Text.DecoderExceptionFallback\"></xref> object and a specified object are equal."}],"pos":[9331,9460],"yaml":true},{"content":"An object that derives from the <xref href=\"System.Text.DecoderExceptionFallback\"></xref> class.","nodes":[{"pos":[0,96],"content":"An object that derives from the <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallback\"&gt;&lt;/xref&gt;</ph> class.","source":"An object that derives from the <xref href=\"System.Text.DecoderExceptionFallback\"></xref> class."}],"pos":[9604,9701],"yaml":true},{"content":"`true` if <code>value</code> is not `null` and is a <xref href=\"System.Text.DecoderExceptionFallback\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph3\">`null`</ph> and is a <ph id=\"ph4\">&lt;xref href=\"System.Text.DecoderExceptionFallback\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if <code>value</code> is not `null` and is a <xref href=\"System.Text.DecoderExceptionFallback\"></xref> object; otherwise, `false`."}],"pos":[9759,9899],"yaml":true},{"content":"Retrieves the hash code for this instance.","nodes":[{"pos":[0,42],"content":"Retrieves the hash code for this instance.","nodes":[{"content":"Retrieves the hash code for this instance.","pos":[0,42]}]}],"pos":[11361,11404],"yaml":true},{"content":"Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.","nodes":[{"pos":[0,234],"content":"Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallback.GetHashCode%2A&gt;</ph> method always returns the same value, the application should not use this value to distinguish one <ph id=\"ph2\">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> object from another.","pos":[0,234],"source":"Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another."}]}],"pos":[11415,11650],"yaml":true,"extradata":"MT"},{"content":"The return value is always the same arbitrary value, and has no special significance.","nodes":[{"pos":[0,85],"content":"The return value is always the same arbitrary value, and has no special significance.","nodes":[{"content":"The return value is always the same arbitrary value, and has no special significance.","pos":[0,85]}]}],"pos":[11784,11870],"yaml":true},{"content":"Gets the maximum number of characters this instance can return.","nodes":[{"pos":[0,63],"content":"Gets the maximum number of characters this instance can return.","nodes":[{"content":"Gets the maximum number of characters this instance can return.","pos":[0,63]}]}],"pos":[13339,13403],"yaml":true},{"content":"The return value is always zero.","nodes":[{"pos":[0,32],"content":"The return value is always zero.","nodes":[{"content":"The return value is always zero.","pos":[0,32]}]}],"pos":[13524,13557],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.DecoderExceptionFallback\n  commentId: T:System.Text.DecoderExceptionFallback\n  id: DecoderExceptionFallback\n  children:\n  - System.Text.DecoderExceptionFallback.#ctor\n  - System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  - System.Text.DecoderExceptionFallback.Equals(System.Object)\n  - System.Text.DecoderExceptionFallback.GetHashCode\n  - System.Text.DecoderExceptionFallback.MaxCharCount\n  langs:\n  - csharp\n  name: DecoderExceptionFallback\n  nameWithType: DecoderExceptionFallback\n  fullName: System.Text.DecoderExceptionFallback\n  type: Class\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character. The fallback throws an exception instead of decoding the input byte sequence. This class cannot be inherited.\n  remarks: \"An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link. Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class. Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.  \\n  \\n A decoding operation can fail if the input byte sequence cannot be mapped by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.  \\n  \\n In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.  \\n  \\n The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures. The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted. After the substitute string is emitted, the decoding operation continues converting the remainder of the input. In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderFallbackException> classes.  \\n  \\n [!code-cpp[sys.txt.fallbackDecExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cpp/fallDecExc.cpp#1)]\\n [!code-csharp[sys.txt.fallbackDecExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cs/fallDecExc.cs#1)]\\n [!code-vb[sys.txt.fallbackDecExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackDecExc/vb/fallDecExc.vb#1)]\"\n  syntax:\n    content: 'public sealed class DecoderExceptionFallback : System.Text.DecoderFallback'\n  inheritance:\n  - System.Object\n  - System.Text.DecoderFallback\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Text.DecoderFallback.ExceptionFallback\n  - System.Text.DecoderFallback.ReplacementFallback\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallback.#ctor\n  commentId: M:System.Text.DecoderExceptionFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  name: DecoderExceptionFallback()\n  nameWithType: DecoderExceptionFallback.DecoderExceptionFallback()\n  fullName: DecoderExceptionFallback.DecoderExceptionFallback()\n  type: Constructor\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallback\"></xref> class.\n  syntax:\n    content: public DecoderExceptionFallback ();\n    parameters: []\n  overload: System.Text.DecoderExceptionFallback.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  commentId: M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  name: CreateFallbackBuffer()\n  nameWithType: DecoderExceptionFallback.CreateFallbackBuffer()\n  fullName: DecoderExceptionFallback.CreateFallbackBuffer()\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.\n  remarks: A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters. This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class. A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.\n  syntax:\n    content: public override System.Text.DecoderFallbackBuffer CreateFallbackBuffer ();\n    parameters: []\n    return:\n      type: System.Text.DecoderFallbackBuffer\n      description: A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.\n  overload: System.Text.DecoderExceptionFallback.CreateFallbackBuffer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallback.Equals(System.Object)\n  commentId: M:System.Text.DecoderExceptionFallback.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DecoderExceptionFallback.Equals(Object)\n  fullName: DecoderExceptionFallback.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Indicates whether the current <xref href=\"System.Text.DecoderExceptionFallback\"></xref> object and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object that derives from the <xref href=\"System.Text.DecoderExceptionFallback\"></xref> class.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is not `null` and is a <xref href=\"System.Text.DecoderExceptionFallback\"></xref> object; otherwise, `false`.'\n  overload: System.Text.DecoderExceptionFallback.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallback.GetHashCode\n  commentId: M:System.Text.DecoderExceptionFallback.GetHashCode\n  id: GetHashCode\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DecoderExceptionFallback.GetHashCode()\n  fullName: DecoderExceptionFallback.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Retrieves the hash code for this instance.\n  remarks: Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The return value is always the same arbitrary value, and has no special significance.\n  overload: System.Text.DecoderExceptionFallback.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallback.MaxCharCount\n  commentId: P:System.Text.DecoderExceptionFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  name: MaxCharCount\n  nameWithType: DecoderExceptionFallback.MaxCharCount\n  fullName: DecoderExceptionFallback.MaxCharCount\n  type: Property\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Gets the maximum number of characters this instance can return.\n  syntax:\n    content: public override int MaxCharCount { get; }\n    return:\n      type: System.Int32\n      description: The return value is always zero.\n  overload: System.Text.DecoderExceptionFallback.MaxCharCount*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: DecoderFallback\n  fullName: System.Text.DecoderFallback\n- uid: System.Text.DecoderExceptionFallback.#ctor\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: DecoderExceptionFallback()\n  nameWithType: DecoderExceptionFallback.DecoderExceptionFallback()\n  fullName: DecoderExceptionFallback.DecoderExceptionFallback()\n- uid: System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: CreateFallbackBuffer()\n  nameWithType: DecoderExceptionFallback.CreateFallbackBuffer()\n  fullName: DecoderExceptionFallback.CreateFallbackBuffer()\n- uid: System.Text.DecoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallbackBuffer\n  nameWithType: DecoderFallbackBuffer\n  fullName: System.Text.DecoderFallbackBuffer\n- uid: System.Text.DecoderExceptionFallback.Equals(System.Object)\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DecoderExceptionFallback.Equals(Object)\n  fullName: DecoderExceptionFallback.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.DecoderExceptionFallback.GetHashCode\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DecoderExceptionFallback.GetHashCode()\n  fullName: DecoderExceptionFallback.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.DecoderExceptionFallback.MaxCharCount\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: MaxCharCount\n  nameWithType: DecoderExceptionFallback.MaxCharCount\n  fullName: DecoderExceptionFallback.MaxCharCount\n- uid: System.Text.DecoderExceptionFallback.#ctor*\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: DecoderExceptionFallback\n  nameWithType: DecoderExceptionFallback.DecoderExceptionFallback\n  fullName: DecoderExceptionFallback.DecoderExceptionFallback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n- uid: System.Text.DecoderExceptionFallback.CreateFallbackBuffer*\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: CreateFallbackBuffer\n  nameWithType: DecoderExceptionFallback.CreateFallbackBuffer\n  fullName: DecoderExceptionFallback.CreateFallbackBuffer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n- uid: System.Text.DecoderExceptionFallback.Equals*\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: Equals\n  nameWithType: DecoderExceptionFallback.Equals\n  fullName: DecoderExceptionFallback.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n- uid: System.Text.DecoderExceptionFallback.GetHashCode*\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DecoderExceptionFallback.GetHashCode\n  fullName: DecoderExceptionFallback.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n- uid: System.Text.DecoderExceptionFallback.MaxCharCount*\n  parent: System.Text.DecoderExceptionFallback\n  isExternal: false\n  name: MaxCharCount\n  nameWithType: DecoderExceptionFallback.MaxCharCount\n  fullName: DecoderExceptionFallback.MaxCharCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallback.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Text.DecoderFallback.ExceptionFallback\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  nameWithType: DecoderFallback.ExceptionFallback\n  fullName: DecoderFallback.ExceptionFallback\n- uid: System.Text.DecoderFallback.ReplacementFallback\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  nameWithType: DecoderFallback.ReplacementFallback\n  fullName: DecoderFallback.ReplacementFallback\n"}