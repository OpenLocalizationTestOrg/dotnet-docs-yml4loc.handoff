{"nodes":[{"content":"Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.","nodes":[{"pos":[0,160],"content":"Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.","nodes":[{"content":"Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.","pos":[0,160],"nodes":[{"content":"Represents a geographical location that is determined by latitude and longitude coordinates.","pos":[0,92]},{"content":"May also include altitude, accuracy, speed, and course information.","pos":[93,160]}]}]}],"pos":[1804,1965],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Device.Location.GeoCoordinate\"></xref> that has no data fields set.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> that has no data fields set.","source":"Initializes a new instance of <xref href=\"System.Device.Location.GeoCoordinate\"></xref> that has no data fields set."}],"pos":[3269,3386],"yaml":true},{"content":"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.  \n  \n This constructor should be used for serialization.","nodes":[{"pos":[0,187],"content":"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.","nodes":[{"content":"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.","pos":[0,187],"nodes":[{"content":"All data fields are set to <ph id=\"ph1\">&lt;xref:System.Double.NaN&gt;</ph>.","pos":[0,52],"source":"All data fields are set to <xref:System.Double.NaN>."},{"content":"The new instance of <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> is equivalent to <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Unknown&gt;</ph>.","pos":[54,187],"source":"  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>."}]}]},{"pos":[194,244],"content":"This constructor should be used for serialization.","nodes":[{"content":"This constructor should be used for serialization.","pos":[0,50]}]}],"pos":[3397,3646],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude and longitude data.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> class from latitude and longitude data.","source":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude and longitude data."}],"pos":[4812,4944],"yaml":true},{"content":"The latitude and longitude values must correspond to an actual location on the globe.","nodes":[{"pos":[0,85],"content":"The latitude and longitude values must correspond to an actual location on the globe.","nodes":[{"content":"The latitude and longitude values must correspond to an actual location on the globe.","pos":[0,85]}]}],"pos":[4955,5041],"yaml":true,"extradata":"MT"},{"content":"The latitude of the location. May range from -90.0 to 90.0.","nodes":[{"pos":[0,59],"content":"The latitude of the location. May range from -90.0 to 90.0.","nodes":[{"content":"The latitude of the location. May range from -90.0 to 90.0.","pos":[0,59],"nodes":[{"content":"The latitude of the location.","pos":[0,29]},{"content":"May range from -90.0 to 90.0.","pos":[30,59]}]}]}],"pos":[5202,5262],"yaml":true},{"content":"The longitude of the location. May range from -180.0 to 180.0.","nodes":[{"pos":[0,62],"content":"The longitude of the location. May range from -180.0 to 180.0.","nodes":[{"content":"The longitude of the location. May range from -180.0 to 180.0.","pos":[0,62],"nodes":[{"content":"The longitude of the location.","pos":[0,30]},{"content":"May range from -180.0 to 180.0.","pos":[31,62]}]}]}],"pos":[5327,5390],"yaml":true},{"content":"Latitude or longitude is out of range.","nodes":[{"pos":[0,38],"content":"Latitude or longitude is out of range.","nodes":[{"content":"Latitude or longitude is out of range.","pos":[0,38]}]}],"pos":[5574,5613],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, and altitude data.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> class from latitude, longitude, and altitude data.","source":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, and altitude data."}],"pos":[6705,6848],"yaml":true},{"content":"The latitude and longitude values must correspond to an actual location on the globe.","nodes":[{"pos":[0,85],"content":"The latitude and longitude values must correspond to an actual location on the globe.","nodes":[{"content":"The latitude and longitude values must correspond to an actual location on the globe.","pos":[0,85]}]}],"pos":[6859,6945],"yaml":true,"extradata":"MT"},{"content":"Latitude. May range from -90.0 to 90.0.","nodes":[{"pos":[0,39],"content":"Latitude. May range from -90.0 to 90.0.","nodes":[{"content":"Latitude. May range from -90.0 to 90.0.","pos":[0,39],"nodes":[{"content":"Latitude.","pos":[0,9]},{"content":"May range from -90.0 to 90.0.","pos":[10,39]}]}]}],"pos":[7123,7163],"yaml":true},{"content":"Longitude. May range from -180.0 to 180.0","nodes":[{"pos":[0,41],"content":"Longitude. May range from -180.0 to 180.0","nodes":[{"content":"Longitude. May range from -180.0 to 180.0","pos":[0,41],"nodes":[{"content":"Longitude.","pos":[0,10]},{"content":"May range from -180.0 to 180.0","pos":[11,41]}]}]}],"pos":[7228,7270],"yaml":true},{"content":"The altitude in meters. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.","nodes":[{"pos":[0,108],"content":"The altitude in meters. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.","nodes":[{"content":"The altitude in meters.","pos":[0,23]},{"content":"May be negative, 0, positive, or <ph id=\"ph1\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>, if unknown.","pos":[24,108],"source":" May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown."}]}],"pos":[7334,7443],"yaml":true},{"content":"<code>latitude</code>, <code>longitude</code>, or <code>altitude</code> is out of range.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;latitude&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;longitude&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;altitude&lt;/code&gt;</ph> is out of range.","source":"<code>latitude</code>, <code>longitude</code>, or <code>altitude</code> is out of range."}],"pos":[7627,7716],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course.","nodes":[{"pos":[0,192],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course.","source":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course."}],"pos":[9072,9265],"yaml":true},{"content":"The latitude of the location. May range from -90.0 to 90.0.","nodes":[{"pos":[0,59],"content":"The latitude of the location. May range from -90.0 to 90.0.","nodes":[{"content":"The latitude of the location. May range from -90.0 to 90.0.","pos":[0,59],"nodes":[{"content":"The latitude of the location.","pos":[0,29]},{"content":"May range from -90.0 to 90.0.","pos":[30,59]}]}]}],"pos":[9524,9584],"yaml":true},{"content":"The longitude of the location. May range from -180.0 to 180.0.","nodes":[{"pos":[0,62],"content":"The longitude of the location. May range from -180.0 to 180.0.","nodes":[{"content":"The longitude of the location. May range from -180.0 to 180.0.","pos":[0,62],"nodes":[{"content":"The longitude of the location.","pos":[0,30]},{"content":"May range from -180.0 to 180.0.","pos":[31,62]}]}]}],"pos":[9649,9712],"yaml":true},{"content":"The altitude in meters. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.","nodes":[{"pos":[0,108],"content":"The altitude in meters. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.","nodes":[{"content":"The altitude in meters.","pos":[0,23]},{"content":"May be negative, 0, positive, or <ph id=\"ph1\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>, if unknown.","pos":[24,108],"source":" May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown."}]}],"pos":[9776,9885],"yaml":true},{"content":"The accuracy of the latitude and longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"pos":[0,296],"content":"The accuracy of the latitude and longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"content":"The accuracy of the latitude and longitude coordinates, in meters.","pos":[0,66]},{"content":"Must be greater than or equal to 0.","pos":[67,102]},{"content":"If a value of 0 is supplied to this constructor, the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"&gt;&lt;/xref&gt;</ph> property will be set to <ph id=\"ph2\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>.","pos":[103,296],"source":" If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>."}]}],"pos":[9959,10256],"yaml":true},{"content":"The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"pos":[0,268],"content":"The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"content":"The accuracy of the altitude, in meters.","pos":[0,40]},{"content":"Must be greater than or equal to 0.","pos":[41,76]},{"content":"If a value of 0 is supplied to this constructor, the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"&gt;&lt;/xref&gt;</ph> property will be set to <ph id=\"ph2\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>.","pos":[77,268],"source":" If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>."}]}],"pos":[10328,10597],"yaml":true},{"content":"The speed measured in meters per second. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.  A negative speed can indicate moving in reverse.","nodes":[{"pos":[0,175],"content":"The speed measured in meters per second. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.  A negative speed can indicate moving in reverse.","nodes":[{"content":"The speed measured in meters per second.","pos":[0,40]},{"content":"May be negative, 0, positive, or <ph id=\"ph1\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>, if unknown.","pos":[41,125],"source":" May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown."},{"content":"A negative speed can indicate moving in reverse.","pos":[127,175]}]}],"pos":[10658,10834],"yaml":true},{"content":"The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"pos":[0,185],"content":"The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"content":"The direction of travel, rather than orientation.","pos":[0,49]},{"content":"This parameter is measured in degrees relative to true north.","pos":[50,111]},{"content":"Must range from 0 to 360.0, or be <ph id=\"ph1\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>.","pos":[112,185],"source":" Must range from 0 to 360.0, or be <xref href=\"System.Double.NaN\"></xref>."}]}],"pos":[10896,11082],"yaml":true},{"content":"<code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">&lt;code&gt;latitude&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;longitude&lt;/code&gt;</ph>, <ph id=\"ph3\">&lt;code&gt;horizontalAccuracy&lt;/code&gt;</ph>, <ph id=\"ph4\">&lt;code&gt;verticalAccuracy,&lt;/code&gt;</ph> or <ph id=\"ph5\">&lt;code&gt;course&lt;/code&gt;</ph> is out of range.","source":"<code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range."}],"pos":[11266,11417],"yaml":true},{"content":"Gets the altitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.","nodes":[{"pos":[0,94],"content":"Gets the altitude of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>, in meters.","source":"Gets the altitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters."}],"pos":[12297,12392],"yaml":true},{"content":"The altitude is given relative to sea level.","nodes":[{"pos":[0,44],"content":"The altitude is given relative to sea level.","nodes":[{"content":"The altitude is given relative to sea level.","pos":[0,44]}]}],"pos":[12403,12448],"yaml":true,"extradata":"MT"},{"content":"The altitude, in meters.","nodes":[{"pos":[0,24],"content":"The altitude, in meters.","nodes":[{"content":"The altitude, in meters.","pos":[0,24]}]}],"pos":[12565,12590],"yaml":true},{"content":"Gets or sets the heading in degrees, relative to true north.","nodes":[{"pos":[0,60],"content":"Gets or sets the heading in degrees, relative to true north.","nodes":[{"content":"Gets or sets the heading in degrees, relative to true north.","pos":[0,60]}]}],"pos":[13534,13595],"yaml":true},{"content":"The valid range includes values from 0.0 to 360.0, and `Double.NaN` if the heading is not defined.","nodes":[{"pos":[0,98],"content":"The valid range includes values from 0.0 to 360.0, and <ph id=\"ph1\">`Double.NaN`</ph> if the heading is not defined.","source":"The valid range includes values from 0.0 to 360.0, and `Double.NaN` if the heading is not defined."}],"pos":[13606,13705],"yaml":true,"extradata":"MT"},{"content":"The heading in degrees, relative to true north.","nodes":[{"pos":[0,47],"content":"The heading in degrees, relative to true north.","nodes":[{"content":"The heading in degrees, relative to true north.","pos":[0,47]}]}],"pos":[14396,14444],"yaml":true},{"content":"<xref href=\"System.Device.Location.GeoCoordinate.Course\"></xref> is set outside the valid range.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.Course\"&gt;&lt;/xref&gt;</ph> is set outside the valid range.","source":"<xref href=\"System.Device.Location.GeoCoordinate.Course\"></xref> is set outside the valid range."}],"pos":[14629,14726],"yaml":true},{"content":"Determines if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object is equivalent to the parameter, based solely on latitude and longitude.","nodes":[{"pos":[0,154],"content":"Determines if the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> object is equivalent to the parameter, based solely on latitude and longitude.","source":"Determines if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object is equivalent to the parameter, based solely on latitude and longitude."}],"pos":[15751,15906],"yaml":true},{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"pos":[0,451],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> objects have the same <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt;</ph> properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt;</ph> properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]}],"pos":[15917,16369],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object to compare to the calling object.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> object to compare to the calling object.","source":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object to compare to the calling object."}],"pos":[16557,16660],"yaml":true},{"content":"`true` if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> objects are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, `false`."}],"pos":[16718,16831],"yaml":true},{"content":"Determines if a specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref> is equal to the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, based solely on latitude and longitude.","nodes":[{"pos":[0,206],"content":"Determines if a specified <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>, based solely on latitude and longitude.","source":"Determines if a specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref> is equal to the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, based solely on latitude and longitude."}],"pos":[17840,18047],"yaml":true},{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"pos":[0,451],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> objects have the same <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt;</ph> properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt;</ph> properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]}],"pos":[18058,18510],"yaml":true,"extradata":"MT"},{"content":"The object to compare the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to.","nodes":[{"pos":[0,87],"content":"The object to compare the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> to.","source":"The object to compare the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to."}],"pos":[18650,18738],"yaml":true},{"content":"`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph>, if the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> objects are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, `false`."}],"pos":[18796,18910],"yaml":true},{"content":"Returns the distance between the latitude and longitude coordinates that are specified by this <xref href=\"System.Device.Location.GeoCoordinate\"></xref> and another specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.","nodes":[{"pos":[0,233],"content":"Returns the distance between the latitude and longitude coordinates that are specified by this <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> and another specified <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the distance between the latitude and longitude coordinates that are specified by this <xref href=\"System.Device.Location.GeoCoordinate\"></xref> and another specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."}],"pos":[20051,20285],"yaml":true},{"content":"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.  \n  \n Altitude is not used to calculate the distance.","nodes":[{"pos":[0,264],"content":"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.","nodes":[{"content":"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.","pos":[0,264],"nodes":[{"content":"The Haversine formula is used to calculate the distance.","pos":[0,56]},{"content":"The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid.","pos":[58,176]},{"content":"For long distances, the Haversine formula introduces an error of less than 0.1 percent.","pos":[177,264]}]}]},{"pos":[271,318],"content":"Altitude is not used to calculate the distance.","nodes":[{"content":"Altitude is not used to calculate the distance.","pos":[0,47]}]}],"pos":[20296,20619],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> for the location to calculate the distance to.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> for the location to calculate the distance to.","source":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> for the location to calculate the distance to."}],"pos":[20816,20925],"yaml":true},{"content":"The distance between the two coordinates, in meters.","nodes":[{"pos":[0,52],"content":"The distance between the two coordinates, in meters.","nodes":[{"content":"The distance between the two coordinates, in meters.","pos":[0,52]}]}],"pos":[20982,21035],"yaml":true},{"content":"Serves as a hash function for the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.","nodes":[{"pos":[0,92],"content":"Serves as a hash function for the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>.","source":"Serves as a hash function for the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."}],"pos":[22018,22111],"yaml":true},{"content":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"pos":[0,548],"content":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"content":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,548],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> objects that are equivalent have the same hash code.","pos":[0,96],"source":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code."},{"content":"Equivalent <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> objects have the same <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt;</ph> properties.","pos":[97,302],"source":" Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt;</ph> properties are not used to determine equivalency.","pos":[303,548],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]}],"pos":[22122,22671],"yaml":true,"extradata":"MT"},{"content":"A hash code for the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.","nodes":[{"pos":[0,86],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."}],"pos":[22805,22892],"yaml":true},{"content":"Gets or sets the accuracy of the latitude and longitude that is given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.","nodes":[{"pos":[0,146],"content":"Gets or sets the accuracy of the latitude and longitude that is given by the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>, in meters.","source":"Gets or sets the accuracy of the latitude and longitude that is given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters."}],"pos":[23911,24058],"yaml":true},{"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","nodes":[{"pos":[0,241],"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","nodes":[{"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","pos":[0,241],"nodes":[{"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.","pos":[0,90]},{"content":"A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","pos":[92,241]}]}]}],"pos":[24069,24311],"yaml":true,"extradata":"MT"},{"content":"The accuracy of the latitude and longitude, in meters.","nodes":[{"pos":[0,54],"content":"The accuracy of the latitude and longitude, in meters.","nodes":[{"content":"The accuracy of the latitude and longitude, in meters.","pos":[0,54]}]}],"pos":[24438,24493],"yaml":true},{"content":"<xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> is set outside the valid range.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"&gt;&lt;/xref&gt;</ph> is set outside the valid range.","source":"<xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> is set outside the valid range."}],"pos":[24690,24799],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data.","nodes":[{"pos":[0,142],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> does not contain latitude or longitude data.","source":"Gets a value that indicates whether the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data."}],"pos":[25685,25828],"yaml":true},{"content":"A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>.","nodes":[{"pos":[0,159],"content":"A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> that does not contain latitude or longitude data is equal to <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Unknown&gt;</ph>.","pos":[0,159],"source":"A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>."}]}],"pos":[25839,25999],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> does not contain latitude or longitude data; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data; otherwise, `false`."}],"pos":[26795,26934],"yaml":true},{"content":"Gets or sets the latitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.","nodes":[{"pos":[0,91],"content":"Gets or sets the latitude of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the latitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."}],"pos":[27891,27983],"yaml":true},{"content":"Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.","nodes":[{"pos":[0,190],"content":"Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.","nodes":[{"content":"Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.","pos":[0,190],"nodes":[{"content":"Latitude can range from -90.0 to 90.0.","pos":[0,38]},{"content":"Latitude is measured in degrees north or south from the equator.","pos":[39,103]},{"content":"Positive values are north of the equator and negative values are south of the equator.","pos":[104,190]}]}]}],"pos":[27994,28185],"yaml":true,"extradata":"MT"},{"content":"Latitude of the location.","nodes":[{"pos":[0,25],"content":"Latitude of the location.","nodes":[{"content":"Latitude of the location.","pos":[0,25]}]}],"pos":[28783,28809],"yaml":true},{"content":"<xref href=\"System.Device.Location.GeoCoordinate.Latitude\"></xref> is set outside the valid range.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.Latitude\"&gt;&lt;/xref&gt;</ph> is set outside the valid range.","source":"<xref href=\"System.Device.Location.GeoCoordinate.Latitude\"></xref> is set outside the valid range."}],"pos":[28996,29095],"yaml":true},{"content":"Gets or sets the longitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets or sets the longitude of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the longitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."}],"pos":[29981,30074],"yaml":true},{"content":"The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.","nodes":[{"pos":[0,214],"content":"The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.","nodes":[{"content":"The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.","pos":[0,214],"nodes":[{"content":"The longitude can range from -180.0 to 180.0.","pos":[0,45]},{"content":"Longitude is measured in degrees east or west of the prime meridian.","pos":[46,114]},{"content":"Negative values are west of the prime meridian, and positive values are east of the prime meridian.","pos":[115,214]}]}]}],"pos":[30085,30300],"yaml":true,"extradata":"MT"},{"content":"The longitude.","nodes":[{"pos":[0,14],"content":"The longitude.","nodes":[{"content":"The longitude.","pos":[0,14]}]}],"pos":[30899,30914],"yaml":true},{"content":"<xref href=\"System.Device.Location.GeoCoordinate.Longitude\"></xref> is set outside the valid range.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.Longitude\"&gt;&lt;/xref&gt;</ph> is set outside the valid range.","source":"<xref href=\"System.Device.Location.GeoCoordinate.Longitude\"></xref> is set outside the valid range."}],"pos":[31102,31202],"yaml":true},{"content":"Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects refer to the same location.","nodes":[{"pos":[0,116],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> objects refer to the same location.","source":"Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects refer to the same location."}],"pos":[32415,32532],"yaml":true},{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"pos":[0,451],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> objects have the same <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt;</ph> properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt;</ph> properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]}],"pos":[32543,32995],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.","nodes":[{"pos":[0,79],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."}],"pos":[33237,33317],"yaml":true},{"content":"The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.","nodes":[{"pos":[0,80],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."}],"pos":[33401,33482],"yaml":true},{"content":"`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be equivalent; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph>, if the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> objects are determined to be equivalent; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be equivalent; otherwise, `false`."}],"pos":[33540,33676],"yaml":true},{"content":"Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects correspond to different locations.","nodes":[{"pos":[0,123],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> objects correspond to different locations.","source":"Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects correspond to different locations."}],"pos":[34980,35104],"yaml":true},{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"pos":[0,451],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> objects have the same <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt;</ph> properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt;</ph> properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]}],"pos":[35115,35567],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.","nodes":[{"pos":[0,79],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."}],"pos":[35811,35891],"yaml":true},{"content":"The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.","nodes":[{"pos":[0,80],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."}],"pos":[35975,36056],"yaml":true},{"content":"`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be different; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph>, if the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> objects are determined to be different; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be different; otherwise, `false`."}],"pos":[36114,36249],"yaml":true},{"content":"Gets or sets the speed in meters per second.","nodes":[{"pos":[0,44],"content":"Gets or sets the speed in meters per second.","nodes":[{"content":"Gets or sets the speed in meters per second.","pos":[0,44]}]}],"pos":[37192,37237],"yaml":true},{"content":"The speed in meters per second. The speed must be greater than or equal to zero, or <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"pos":[0,123],"content":"The speed in meters per second. The speed must be greater than or equal to zero, or <xref href=\"System.Double.NaN\"></xref>.","nodes":[{"content":"The speed in meters per second.","pos":[0,31]},{"content":"The speed must be greater than or equal to zero, or <ph id=\"ph1\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>.","pos":[32,123],"source":" The speed must be greater than or equal to zero, or <xref href=\"System.Double.NaN\"></xref>."}]}],"pos":[37941,38065],"yaml":true},{"content":"<xref href=\"System.Device.Location.GeoCoordinate.Speed\"></xref> is set outside the valid range.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.Speed\"&gt;&lt;/xref&gt;</ph> is set outside the valid range.","source":"<xref href=\"System.Device.Location.GeoCoordinate.Speed\"></xref> is set outside the valid range."}],"pos":[38247,38343],"yaml":true},{"content":"Returns a string that contains the latitude and longitude.","nodes":[{"pos":[0,58],"content":"Returns a string that contains the latitude and longitude.","nodes":[{"content":"Returns a string that contains the latitude and longitude.","pos":[0,58]}]}],"pos":[39227,39286],"yaml":true},{"content":"The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.","nodes":[{"pos":[0,172],"content":"The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.","nodes":[{"content":"The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.","pos":[0,172],"nodes":[{"content":"The string representation returned by this method is intended only for debugging use.","pos":[0,85]},{"content":"This method does not return any locale-specific formatting for latitude and longitude.","pos":[86,172]}]}]}],"pos":[39297,39470],"yaml":true,"extradata":"MT"},{"content":"A string that contains the latitude and longitude, separated by a comma.","nodes":[{"pos":[0,72],"content":"A string that contains the latitude and longitude, separated by a comma.","nodes":[{"content":"A string that contains the latitude and longitude, separated by a comma.","pos":[0,72]}]}],"pos":[39605,39678],"yaml":true},{"content":"Represents a <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object that has unknown latitude and longitude fields.","nodes":[{"pos":[0,125],"content":"Represents a <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph> object that has unknown latitude and longitude fields.","source":"Represents a <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object that has unknown latitude and longitude fields."}],"pos":[40625,40751],"yaml":true},{"content":"The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data.","nodes":[{"pos":[0,163],"content":"The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate.IsUnknown%2A&gt;</ph> property can be used to verify whether a <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> contains no data.","pos":[0,163],"source":"The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data."}]}],"pos":[40762,40926],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the accuracy of the altitude given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.","nodes":[{"pos":[0,124],"content":"Gets or sets the accuracy of the altitude given by the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;&lt;/xref&gt;</ph>, in meters.","source":"Gets or sets the accuracy of the altitude given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters."}],"pos":[42729,42854],"yaml":true},{"content":"The accuracy of the altitude, in meters.","nodes":[{"pos":[0,40],"content":"The accuracy of the altitude, in meters.","nodes":[{"content":"The accuracy of the altitude, in meters.","pos":[0,40]}]}],"pos":[42979,43020],"yaml":true},{"content":"<xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> is set outside the valid range.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"&gt;&lt;/xref&gt;</ph> is set outside the valid range.","source":"<xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> is set outside the valid range."}],"pos":[43215,43322],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.GeoCoordinate\n  commentId: T:System.Device.Location.GeoCoordinate\n  id: GeoCoordinate\n  children:\n  - System.Device.Location.GeoCoordinate.#ctor\n  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  - System.Device.Location.GeoCoordinate.Altitude\n  - System.Device.Location.GeoCoordinate.Course\n  - System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.Equals(System.Object)\n  - System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.GetHashCode\n  - System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  - System.Device.Location.GeoCoordinate.IsUnknown\n  - System.Device.Location.GeoCoordinate.Latitude\n  - System.Device.Location.GeoCoordinate.Longitude\n  - System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.Speed\n  - System.Device.Location.GeoCoordinate.ToString\n  - System.Device.Location.GeoCoordinate.Unknown\n  - System.Device.Location.GeoCoordinate.VerticalAccuracy\n  langs:\n  - csharp\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate\n  fullName: System.Device.Location.GeoCoordinate\n  type: Class\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.\n  syntax:\n    content: 'public class GeoCoordinate : IEquatable<System.Device.Location.GeoCoordinate>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Device.Location.GeoCoordinate}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.#ctor\n  commentId: M:System.Device.Location.GeoCoordinate.#ctor\n  id: '#ctor'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate()\n  nameWithType: GeoCoordinate.GeoCoordinate()\n  fullName: GeoCoordinate.GeoCoordinate()\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of <xref href=\"System.Device.Location.GeoCoordinate\"></xref> that has no data fields set.\n  remarks: \"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.  \\n  \\n This constructor should be used for serialization.\"\n  syntax:\n    content: public GeoCoordinate ();\n    parameters: []\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  commentId: M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate(Double, Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double)\n  fullName: GeoCoordinate.GeoCoordinate(Double, Double)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude and longitude data.\n  remarks: The latitude and longitude values must correspond to an actual location on the globe.\n  syntax:\n    content: public GeoCoordinate (double latitude, double longitude);\n    parameters:\n    - id: latitude\n      type: System.Double\n      description: The latitude of the location. May range from -90.0 to 90.0.\n    - id: longitude\n      type: System.Double\n      description: The longitude of the location. May range from -180.0 to 180.0.\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Latitude or longitude is out of range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  commentId: M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double)'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate(Double, Double, Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double, Double)\n  fullName: GeoCoordinate.GeoCoordinate(Double, Double, Double)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, and altitude data.\n  remarks: The latitude and longitude values must correspond to an actual location on the globe.\n  syntax:\n    content: public GeoCoordinate (double latitude, double longitude, double altitude);\n    parameters:\n    - id: latitude\n      type: System.Double\n      description: Latitude. May range from -90.0 to 90.0.\n    - id: longitude\n      type: System.Double\n      description: Longitude. May range from -180.0 to 180.0\n    - id: altitude\n      type: System.Double\n      description: The altitude in meters. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>latitude</code>, <code>longitude</code>, or <code>altitude</code> is out of range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  commentId: M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate(Double, Double, Double, Double, Double, Double, Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double, Double, Double, Double, Double, Double)\n  fullName: GeoCoordinate.GeoCoordinate(Double, Double, Double, Double, Double, Double, Double)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course.\n  syntax:\n    content: public GeoCoordinate (double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);\n    parameters:\n    - id: latitude\n      type: System.Double\n      description: The latitude of the location. May range from -90.0 to 90.0.\n    - id: longitude\n      type: System.Double\n      description: The longitude of the location. May range from -180.0 to 180.0.\n    - id: altitude\n      type: System.Double\n      description: The altitude in meters. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.\n    - id: horizontalAccuracy\n      type: System.Double\n      description: The accuracy of the latitude and longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>.\n    - id: verticalAccuracy\n      type: System.Double\n      description: The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> property will be set to <xref href=\"System.Double.NaN\"></xref>.\n    - id: speed\n      type: System.Double\n      description: The speed measured in meters per second. May be negative, 0, positive, or <xref href=\"System.Double.NaN\"></xref>, if unknown.  A negative speed can indicate moving in reverse.\n    - id: course\n      type: System.Double\n      description: The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <xref href=\"System.Double.NaN\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Altitude\n  commentId: P:System.Device.Location.GeoCoordinate.Altitude\n  id: Altitude\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Altitude\n  nameWithType: GeoCoordinate.Altitude\n  fullName: GeoCoordinate.Altitude\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets the altitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.\n  remarks: The altitude is given relative to sea level.\n  syntax:\n    content: public double Altitude { get; set; }\n    return:\n      type: System.Double\n      description: The altitude, in meters.\n  overload: System.Device.Location.GeoCoordinate.Altitude*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Course\n  commentId: P:System.Device.Location.GeoCoordinate.Course\n  id: Course\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Course\n  nameWithType: GeoCoordinate.Course\n  fullName: GeoCoordinate.Course\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the heading in degrees, relative to true north.\n  remarks: The valid range includes values from 0.0 to 360.0, and `Double.NaN` if the heading is not defined.\n  example:\n  - \"The following example prints the <xref:System.Device.Location.GeoCoordinate.Course%2A> and <xref:System.Device.Location.GeoCoordinate.Speed%2A> properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-csharp[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.courseandspeed/cs/courseandspeed.cs#2)]\\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.courseandspeed/vb/courseandspeed.vb#2)]\"\n  syntax:\n    content: public double Course { get; set; }\n    return:\n      type: System.Double\n      description: The heading in degrees, relative to true north.\n  overload: System.Device.Location.GeoCoordinate.Course*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Device.Location.GeoCoordinate.Course\"></xref> is set outside the valid range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  commentId: M:System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  id: Equals(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Equals(GeoCoordinate)\n  nameWithType: GeoCoordinate.Equals(GeoCoordinate)\n  fullName: GeoCoordinate.Equals(GeoCoordinate)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object is equivalent to the parameter, based solely on latitude and longitude.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public bool Equals (System.Device.Location.GeoCoordinate other);\n    parameters:\n    - id: other\n      type: System.Device.Location.GeoCoordinate\n      description: The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object to compare to the calling object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, `false`.'\n  overload: System.Device.Location.GeoCoordinate.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)\n  commentId: M:System.Device.Location.GeoCoordinate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: GeoCoordinate.Equals(Object)\n  fullName: GeoCoordinate.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines if a specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref> is equal to the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, based solely on latitude and longitude.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to.\n    return:\n      type: System.Boolean\n      description: '`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, `false`.'\n  overload: System.Device.Location.GeoCoordinate.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  commentId: M:System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  id: GetDistanceTo(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GetDistanceTo(GeoCoordinate)\n  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)\n  fullName: GeoCoordinate.GetDistanceTo(GeoCoordinate)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Returns the distance between the latitude and longitude coordinates that are specified by this <xref href=\"System.Device.Location.GeoCoordinate\"></xref> and another specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: \"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.  \\n  \\n Altitude is not used to calculate the distance.\"\n  syntax:\n    content: public double GetDistanceTo (System.Device.Location.GeoCoordinate other);\n    parameters:\n    - id: other\n      type: System.Device.Location.GeoCoordinate\n      description: The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> for the location to calculate the distance to.\n    return:\n      type: System.Double\n      description: The distance between the two coordinates, in meters.\n  overload: System.Device.Location.GeoCoordinate.GetDistanceTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.GetHashCode\n  commentId: M:System.Device.Location.GeoCoordinate.GetHashCode\n  id: GetHashCode\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: GeoCoordinate.GetHashCode()\n  fullName: GeoCoordinate.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Serves as a hash function for the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: <xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  commentId: P:System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  id: HorizontalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: HorizontalAccuracy\n  nameWithType: GeoCoordinate.HorizontalAccuracy\n  fullName: GeoCoordinate.HorizontalAccuracy\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the accuracy of the latitude and longitude that is given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.\n  remarks: The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.\n  syntax:\n    content: public double HorizontalAccuracy { get; set; }\n    return:\n      type: System.Double\n      description: The accuracy of the latitude and longitude, in meters.\n  overload: System.Device.Location.GeoCoordinate.HorizontalAccuracy*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Device.Location.GeoCoordinate.HorizontalAccuracy\"></xref> is set outside the valid range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.IsUnknown\n  commentId: P:System.Device.Location.GeoCoordinate.IsUnknown\n  id: IsUnknown\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: GeoCoordinate.IsUnknown\n  fullName: GeoCoordinate.IsUnknown\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets a value that indicates whether the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data.\n  remarks: A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>.\n  example:\n  - \"The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is <xref:System.Device.Location.GeoCoordinate.Unknown> before printing out its latitude and longitude.  \\n  \\n [!code-csharp[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/cs/getlocationdatasynchandleunknown.cs#1)]\\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/vb/GetLocationDataSyncHandleUnknown.vb#1)]\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data; otherwise, `false`.'\n  overload: System.Device.Location.GeoCoordinate.IsUnknown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Latitude\n  commentId: P:System.Device.Location.GeoCoordinate.Latitude\n  id: Latitude\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Latitude\n  nameWithType: GeoCoordinate.Latitude\n  fullName: GeoCoordinate.Latitude\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the latitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.\n  example:\n  - \"The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-csharp[System.Device.Location.LocationEvent1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.locationevent1/cs/locationevent.cs#1)]\\n [!code-vb[System.Device.Location.LocationEvent1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.locationevent1/vb/locationevent.vb#1)]\"\n  syntax:\n    content: public double Latitude { get; set; }\n    return:\n      type: System.Double\n      description: Latitude of the location.\n  overload: System.Device.Location.GeoCoordinate.Latitude*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Device.Location.GeoCoordinate.Latitude\"></xref> is set outside the valid range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Longitude\n  commentId: P:System.Device.Location.GeoCoordinate.Longitude\n  id: Longitude\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Longitude\n  nameWithType: GeoCoordinate.Longitude\n  fullName: GeoCoordinate.Longitude\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the longitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.\n  example:\n  - \"The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-csharp[System.Device.Location.LocationEvent1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.locationevent1/cs/locationevent.cs#1)]\\n [!code-vb[System.Device.Location.LocationEvent1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.locationevent1/vb/locationevent.vb#1)]\"\n  syntax:\n    content: public double Longitude { get; set; }\n    return:\n      type: System.Double\n      description: The longitude.\n  overload: System.Device.Location.GeoCoordinate.Longitude*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Device.Location.GeoCoordinate.Longitude\"></xref> is set outside the valid range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  commentId: M:System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  id: op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: op_Equality(GeoCoordinate, GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate, GeoCoordinate)\n  fullName: GeoCoordinate.op_Equality(GeoCoordinate, GeoCoordinate)\n  type: Operator\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects refer to the same location.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public static bool op_Equality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);\n    parameters:\n    - id: left\n      type: System.Device.Location.GeoCoordinate\n      description: The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    - id: right\n      type: System.Device.Location.GeoCoordinate\n      description: The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be equivalent; otherwise, `false`.'\n  overload: System.Device.Location.GeoCoordinate.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  commentId: M:System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  id: op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: op_Inequality(GeoCoordinate, GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate, GeoCoordinate)\n  fullName: GeoCoordinate.op_Inequality(GeoCoordinate, GeoCoordinate)\n  type: Operator\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects correspond to different locations.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public static bool op_Inequality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);\n    parameters:\n    - id: left\n      type: System.Device.Location.GeoCoordinate\n      description: The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    - id: right\n      type: System.Device.Location.GeoCoordinate\n      description: The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true`, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be different; otherwise, `false`.'\n  overload: System.Device.Location.GeoCoordinate.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Speed\n  commentId: P:System.Device.Location.GeoCoordinate.Speed\n  id: Speed\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Speed\n  nameWithType: GeoCoordinate.Speed\n  fullName: GeoCoordinate.Speed\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the speed in meters per second.\n  remarks: ''\n  example:\n  - \"The following example prints the <xref:System.Device.Location.GeoCoordinate.Course%2A> and <xref:System.Device.Location.GeoCoordinate.Speed%2A> properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-csharp[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.courseandspeed/cs/courseandspeed.cs#2)]\\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.courseandspeed/vb/courseandspeed.vb#2)]\"\n  syntax:\n    content: public double Speed { get; set; }\n    return:\n      type: System.Double\n      description: The speed in meters per second. The speed must be greater than or equal to zero, or <xref href=\"System.Double.NaN\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.Speed*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Device.Location.GeoCoordinate.Speed\"></xref> is set outside the valid range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.ToString\n  commentId: M:System.Device.Location.GeoCoordinate.ToString\n  id: ToString\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: GeoCoordinate.ToString()\n  fullName: GeoCoordinate.ToString()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Returns a string that contains the latitude and longitude.\n  remarks: The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the latitude and longitude, separated by a comma.\n  overload: System.Device.Location.GeoCoordinate.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.Unknown\n  commentId: F:System.Device.Location.GeoCoordinate.Unknown\n  id: Unknown\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: GeoCoordinate.Unknown\n  fullName: GeoCoordinate.Unknown\n  type: Field\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Represents a <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object that has unknown latitude and longitude fields.\n  remarks: The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data.\n  example:\n  - \"The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is <xref:System.Device.Location.GeoCoordinate.Unknown> before printingout its latitude and longitude.  \\n  \\n [!code-csharp[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/cs/getlocationdatasynchandleunknown.cs#1)]\\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/vb/GetLocationDataSyncHandleUnknown.vb#1)]\"\n  syntax:\n    content: public static readonly System.Device.Location.GeoCoordinate Unknown;\n    return:\n      type: System.Device.Location.GeoCoordinate\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy\n  commentId: P:System.Device.Location.GeoCoordinate.VerticalAccuracy\n  id: VerticalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: VerticalAccuracy\n  nameWithType: GeoCoordinate.VerticalAccuracy\n  fullName: GeoCoordinate.VerticalAccuracy\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the accuracy of the altitude given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.\n  syntax:\n    content: public double VerticalAccuracy { get; set; }\n    return:\n      type: System.Double\n      description: The accuracy of the altitude, in meters.\n  overload: System.Device.Location.GeoCoordinate.VerticalAccuracy*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Device.Location.GeoCoordinate.VerticalAccuracy\"></xref> is set outside the valid range.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Device.Location.GeoCoordinate.#ctor\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate()\n  nameWithType: GeoCoordinate.GeoCoordinate()\n  fullName: GeoCoordinate.GeoCoordinate()\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate(Double, Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double)\n  fullName: GeoCoordinate.GeoCoordinate(Double, Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate(Double, Double, Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double, Double)\n  fullName: GeoCoordinate.GeoCoordinate(Double, Double, Double)\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate(Double, Double, Double, Double, Double, Double, Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double, Double, Double, Double, Double, Double)\n  fullName: GeoCoordinate.GeoCoordinate(Double, Double, Double, Double, Double, Double, Double)\n- uid: System.Device.Location.GeoCoordinate.Altitude\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Altitude\n  nameWithType: GeoCoordinate.Altitude\n  fullName: GeoCoordinate.Altitude\n- uid: System.Device.Location.GeoCoordinate.Course\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Course\n  nameWithType: GeoCoordinate.Course\n  fullName: GeoCoordinate.Course\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Equals(GeoCoordinate)\n  nameWithType: GeoCoordinate.Equals(GeoCoordinate)\n  fullName: GeoCoordinate.Equals(GeoCoordinate)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Device.Location.GeoCoordinate\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate\n  fullName: System.Device.Location.GeoCoordinate\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GeoCoordinate.Equals(Object)\n  fullName: GeoCoordinate.Equals(Object)\n- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetDistanceTo(GeoCoordinate)\n  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)\n  fullName: GeoCoordinate.GetDistanceTo(GeoCoordinate)\n- uid: System.Device.Location.GeoCoordinate.GetHashCode\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GeoCoordinate.GetHashCode()\n  fullName: GeoCoordinate.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: HorizontalAccuracy\n  nameWithType: GeoCoordinate.HorizontalAccuracy\n  fullName: GeoCoordinate.HorizontalAccuracy\n- uid: System.Device.Location.GeoCoordinate.IsUnknown\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: IsUnknown\n  nameWithType: GeoCoordinate.IsUnknown\n  fullName: GeoCoordinate.IsUnknown\n- uid: System.Device.Location.GeoCoordinate.Latitude\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Latitude\n  nameWithType: GeoCoordinate.Latitude\n  fullName: GeoCoordinate.Latitude\n- uid: System.Device.Location.GeoCoordinate.Longitude\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Longitude\n  nameWithType: GeoCoordinate.Longitude\n  fullName: GeoCoordinate.Longitude\n- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Equality(GeoCoordinate, GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate, GeoCoordinate)\n  fullName: GeoCoordinate.op_Equality(GeoCoordinate, GeoCoordinate)\n- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Inequality(GeoCoordinate, GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate, GeoCoordinate)\n  fullName: GeoCoordinate.op_Inequality(GeoCoordinate, GeoCoordinate)\n- uid: System.Device.Location.GeoCoordinate.Speed\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Speed\n  nameWithType: GeoCoordinate.Speed\n  fullName: GeoCoordinate.Speed\n- uid: System.Device.Location.GeoCoordinate.ToString\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: ToString()\n  nameWithType: GeoCoordinate.ToString()\n  fullName: GeoCoordinate.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Device.Location.GeoCoordinate.Unknown\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Unknown\n  nameWithType: GeoCoordinate.Unknown\n  fullName: GeoCoordinate.Unknown\n- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: VerticalAccuracy\n  nameWithType: GeoCoordinate.VerticalAccuracy\n  fullName: GeoCoordinate.VerticalAccuracy\n- uid: System.Device.Location.GeoCoordinate.#ctor*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate.GeoCoordinate\n  fullName: GeoCoordinate.GeoCoordinate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.Altitude*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Altitude\n  nameWithType: GeoCoordinate.Altitude\n  fullName: GeoCoordinate.Altitude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.Course*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Course\n  nameWithType: GeoCoordinate.Course\n  fullName: GeoCoordinate.Course\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.Equals*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Equals\n  nameWithType: GeoCoordinate.Equals\n  fullName: GeoCoordinate.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.GetDistanceTo*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetDistanceTo\n  nameWithType: GeoCoordinate.GetDistanceTo\n  fullName: GeoCoordinate.GetDistanceTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.GetHashCode*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetHashCode\n  nameWithType: GeoCoordinate.GetHashCode\n  fullName: GeoCoordinate.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: HorizontalAccuracy\n  nameWithType: GeoCoordinate.HorizontalAccuracy\n  fullName: GeoCoordinate.HorizontalAccuracy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.IsUnknown*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: IsUnknown\n  nameWithType: GeoCoordinate.IsUnknown\n  fullName: GeoCoordinate.IsUnknown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.Latitude*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Latitude\n  nameWithType: GeoCoordinate.Latitude\n  fullName: GeoCoordinate.Latitude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.Longitude*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Longitude\n  nameWithType: GeoCoordinate.Longitude\n  fullName: GeoCoordinate.Longitude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.op_Equality*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Equality\n  nameWithType: GeoCoordinate.op_Equality\n  fullName: GeoCoordinate.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.op_Inequality*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Inequality\n  nameWithType: GeoCoordinate.op_Inequality\n  fullName: GeoCoordinate.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.Speed*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Speed\n  nameWithType: GeoCoordinate.Speed\n  fullName: GeoCoordinate.Speed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.ToString*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: ToString\n  nameWithType: GeoCoordinate.ToString\n  fullName: GeoCoordinate.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: VerticalAccuracy\n  nameWithType: GeoCoordinate.VerticalAccuracy\n  fullName: GeoCoordinate.VerticalAccuracy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/GeoCoordinate.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Device.Location.GeoCoordinate}\n  parent: System\n  isExternal: false\n  name: IEquatable<GeoCoordinate>\n  nameWithType: IEquatable<GeoCoordinate>\n  fullName: System.IEquatable<System.Device.Location.GeoCoordinate>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Device.Location.GeoCoordinate\n    name: GeoCoordinate\n    nameWithType: GeoCoordinate\n    fullName: System.Device.Location.GeoCoordinate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}