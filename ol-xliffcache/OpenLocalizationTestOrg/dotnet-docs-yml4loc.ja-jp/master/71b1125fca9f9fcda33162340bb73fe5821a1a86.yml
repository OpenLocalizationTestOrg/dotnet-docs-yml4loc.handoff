### YamlMime:ManagedReference
items:
- uid: System.Reflection.ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
  id: ConstructorInfo
  children:
  - System.Reflection.ConstructorInfo.#ctor
  - System.Reflection.ConstructorInfo.ConstructorName
  - System.Reflection.ConstructorInfo.Equals(System.Object)
  - System.Reflection.ConstructorInfo.GetHashCode
  - System.Reflection.ConstructorInfo.Invoke(System.Object[])
  - System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.ConstructorInfo.MemberType
  - System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  - System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  - System.Reflection.ConstructorInfo.TypeConstructorName
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  langs:
  - csharp
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
  type: Class
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Discovers the attributes of a class constructor and provides access to constructor metadata.
  remarks: "`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor. Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.  \n  \n> [!NOTE]\n>  <xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods. In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`."
  example:
  - "The following example uses `ConstructorInfo` with <xref:System.Type.GetConstructor%2A> and <xref:System.Reflection.BindingFlags> to find the constructors that match the specified search criteria.  \n  \n [!code-cpp[type_getconstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]\n [!code-csharp[type_getconstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]\n [!code-vb[type_getconstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class ConstructorInfo : System.Reflection.MethodBase, System.Runtime.InteropServices._ConstructorInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.MethodBase
  derivedClasses:
  - Microsoft.JScript.JSConstructor
  - System.Reflection.Emit.ConstructorBuilder
  implements:
  - System.Runtime.InteropServices._ConstructorInfo
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.DeclaringType
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.Module
  - System.Reflection.MemberInfo.Name
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.ReflectedType
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MethodBase.Attributes
  - System.Reflection.MethodBase.CallingConvention
  - System.Reflection.MethodBase.ContainsGenericParameters
  - System.Reflection.MethodBase.GetCurrentMethod
  - System.Reflection.MethodBase.GetGenericArguments
  - System.Reflection.MethodBase.GetMethodBody
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  - System.Reflection.MethodBase.GetMethodImplementationFlags
  - System.Reflection.MethodBase.GetParameters
  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  - System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.MethodBase.IsAbstract
  - System.Reflection.MethodBase.IsAssembly
  - System.Reflection.MethodBase.IsConstructor
  - System.Reflection.MethodBase.IsFamily
  - System.Reflection.MethodBase.IsFamilyAndAssembly
  - System.Reflection.MethodBase.IsFamilyOrAssembly
  - System.Reflection.MethodBase.IsFinal
  - System.Reflection.MethodBase.IsGenericMethod
  - System.Reflection.MethodBase.IsGenericMethodDefinition
  - System.Reflection.MethodBase.IsHideBySig
  - System.Reflection.MethodBase.IsPrivate
  - System.Reflection.MethodBase.IsPublic
  - System.Reflection.MethodBase.IsSecurityCritical
  - System.Reflection.MethodBase.IsSecuritySafeCritical
  - System.Reflection.MethodBase.IsSecurityTransparent
  - System.Reflection.MethodBase.IsSpecialName
  - System.Reflection.MethodBase.IsStatic
  - System.Reflection.MethodBase.IsVirtual
  - System.Reflection.MethodBase.MethodHandle
  - System.Reflection.MethodBase.MethodImplementationFlags
  - System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  - System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
  extensionMethods:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.#ctor
  commentId: M:System.Reflection.ConstructorInfo.#ctor
  id: '#ctor'
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: ConstructorInfo()
  nameWithType: ConstructorInfo.ConstructorInfo()
  fullName: ConstructorInfo.ConstructorInfo()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Initializes a new instance of the <xref href="System.Reflection.ConstructorInfo"></xref> class.
  syntax:
    content: protected ConstructorInfo ();
    parameters: []
  overload: System.Reflection.ConstructorInfo.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.ConstructorName
  commentId: F:System.Reflection.ConstructorInfo.ConstructorName
  id: ConstructorName
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: ConstructorName
  nameWithType: ConstructorInfo.ConstructorName
  fullName: ConstructorInfo.ConstructorName
  type: Field
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Represents the name of the class constructor method as it is stored in metadata. This name is always ".ctor". This field is read-only.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static readonly string ConstructorName;
    return:
      type: System.String
      description: ''
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.Equals(System.Object)
  commentId: M:System.Reflection.ConstructorInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConstructorInfo.Equals(Object)
  fullName: ConstructorInfo.Equals(Object)
  type: Method
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance, or `null`.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'
  overload: System.Reflection.ConstructorInfo.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.GetHashCode
  commentId: M:System.Reflection.ConstructorInfo.GetHashCode
  id: GetHashCode
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConstructorInfo.GetHashCode()
  fullName: ConstructorInfo.GetHashCode()
  type: Method
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overload: System.Reflection.ConstructorInfo.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])
  commentId: M:System.Reflection.ConstructorInfo.Invoke(System.Object[])
  id: Invoke(System.Object[])
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: Invoke(Object[])
  nameWithType: ConstructorInfo.Invoke(Object[])
  fullName: ConstructorInfo.Invoke(Object[])
  type: Method
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.
  remarks: "The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance. Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.  \n  \n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.  \n  \n> [!NOTE]\n>  To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.  \n  \n This method is a convenience method for the following overloaded version, using default values. This method cannot be overridden.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \n>   \n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."
  syntax:
    content: public object Invoke (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or `null`, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.
    return:
      type: System.Object
      description: An instance of the class associated with the constructor.
  overload: System.Reflection.ConstructorInfo.Invoke*
  exceptions:
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "The class is abstract.  \n  \n -or-  \n  \n The constructor is a class initializer."
  - type: System.MethodAccessException
    commentId: T:System.MethodAccessException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The constructor is private or protected, and the caller lacks <xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>parameters</code> array does not contain values that match the types accepted by this constructor.
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: The invoked constructor throws an exception.
  - type: System.Reflection.TargetParameterCountException
    commentId: T:System.Reflection.TargetParameterCountException
    description: An incorrect number of parameters was passed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Creation of <xref href="System.TypedReference"></xref>, <xref href="System.ArgIterator"></xref>, and <xref href="System.RuntimeArgumentHandle"></xref> types is not supported.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the necessary code access permission.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: When implemented in a derived class, invokes the constructor reflected by this `ConstructorInfo` with the specified arguments, under the constraints of the specified `Binder`.
  remarks: "The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \n  \n Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.  \n  \n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.  \n  \n> [!NOTE]\n>  To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \n>   \n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."
  syntax:
    content: public abstract object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: One of the `BindingFlags` values that specifies the type of binding.
    - id: binder
      type: System.Reflection.Binder
      description: A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.
    - id: parameters
      type: System.Object[]
      description: An array of type `Object` used to match the number, order and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> used to govern the coercion of types. If this is `null`, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used.
    return:
      type: System.Object
      description: An instance of the class associated with the constructor.
  overload: System.Reflection.ConstructorInfo.Invoke*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>parameters</code> array does not contain values that match the types accepted by this constructor, under the constraints of the <code>binder</code>.
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: The invoked constructor throws an exception.
  - type: System.Reflection.TargetParameterCountException
    commentId: T:System.Reflection.TargetParameterCountException
    description: An incorrect number of parameters was passed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Creation of <xref href="System.TypedReference"></xref>, <xref href="System.ArgIterator"></xref>, and <xref href="System.RuntimeArgumentHandle"></xref> types is not supported.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the necessary code access permissions.
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "The class is abstract.  \n  \n -or-  \n  \n The constructor is a class initializer."
  - type: System.MethodAccessException
    commentId: T:System.MethodAccessException
    description: The constructor is private or protected, and the caller lacks <xref href="System.Security.Permissions.ReflectionPermissionFlag.MemberAccess"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.MemberType
  commentId: P:System.Reflection.ConstructorInfo.MemberType
  id: MemberType
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: ConstructorInfo.MemberType
  fullName: ConstructorInfo.MemberType
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a <xref href="System.Reflection.MemberTypes"></xref> value indicating that this member is a constructor.
  remarks: This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>. Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects — for example, the array returned by <xref:System.Type.GetMembers%2A> — the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.
  example:
  - "The following example uses the <xref:System.Reflection.ConstructorInfo.MemberType%2A> property to identify a <xref:System.Reflection.MemberInfo> object as a constructor.  \n  \n [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]\n [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]\n [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public override System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: A <xref href="System.Reflection.MemberTypes"></xref> value indicating that this member is a constructor.
  overload: System.Reflection.ConstructorInfo.MemberType*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  commentId: M:System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  id: op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: op_Equality(ConstructorInfo, ConstructorInfo)
  nameWithType: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)
  fullName: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)
  type: Operator
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether two <xref href="System.Reflection.ConstructorInfo"></xref> objects are equal.
  syntax:
    content: public static bool op_Equality (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);
    parameters:
    - id: left
      type: System.Reflection.ConstructorInfo
      description: The first <xref href="System.Reflection.ConstructorInfo"></xref> to compare.
    - id: right
      type: System.Reflection.ConstructorInfo
      description: The second <xref href="System.Reflection.ConstructorInfo"></xref> to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>left</code> is equal to <code>right</code>; otherwise `false`.'
  overload: System.Reflection.ConstructorInfo.op_Equality*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  commentId: M:System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  id: op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: op_Inequality(ConstructorInfo, ConstructorInfo)
  nameWithType: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)
  fullName: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)
  type: Operator
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether two <xref href="System.Reflection.ConstructorInfo"></xref> objects are not equal.
  syntax:
    content: public static bool op_Inequality (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);
    parameters:
    - id: left
      type: System.Reflection.ConstructorInfo
      description: The first <xref href="System.Reflection.ConstructorInfo"></xref> to compare.
    - id: right
      type: System.Reflection.ConstructorInfo
      description: The second <xref href="System.Reflection.ConstructorInfo"></xref> to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>left</code> is not equal to <code>right</code>; otherwise `false`.'
  overload: System.Reflection.ConstructorInfo.op_Inequality*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.TypeConstructorName
  commentId: F:System.Reflection.ConstructorInfo.TypeConstructorName
  id: TypeConstructorName
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: TypeConstructorName
  nameWithType: ConstructorInfo.TypeConstructorName
  fullName: ConstructorInfo.TypeConstructorName
  type: Field
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Represents the name of the type constructor method as it is stored in metadata. This name is always ".cctor". This property is read-only.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static readonly string TypeConstructorName;
    return:
      type: System.String
      description: ''
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _ConstructorInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType
  id: System#Runtime#InteropServices#_ConstructorInfo#GetType
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.GetType()
  nameWithType: ConstructorInfo._ConstructorInfo.GetType()
  fullName: ConstructorInfo._ConstructorInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets a <xref href="System.Type"></xref> object representing the <xref href="System.Reflection.ConstructorInfo"></xref> type.
  syntax:
    content: Type _ConstructorInfo.GetType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object representing the <xref href="System.Reflection.ConstructorInfo"></xref> type.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _ConstructorInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.GetTypeInfoCount(UInt32)
  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _ConstructorInfo.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _ConstructorInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></xref> method.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.
  syntax:
    content: object _ConstructorInfo.Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: The instance that created this method.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: One of the <xref href="System.Reflection.BindingFlags"></xref> values that specifies the type of binding.
    - id: binder
      type: System.Reflection.Binder
      description: A <xref href="System.Reflection.Binder"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href="System.Type.DefaultBinder"></xref> is used.
    - id: parameters
      type: System.Object[]
      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> used to govern the coercion of types. If this is `null`, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used.
    return:
      type: System.Object
      description: An instance of the type.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.Invoke_3(Object, Object[])
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])
  fullName: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MethodBase.Invoke(System.Object,System.Object[])"></xref> method.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.
  syntax:
    content: object _ConstructorInfo.Invoke_3 (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: The instance that created this method.
    - id: parameters
      type: System.Object[]
      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.
    return:
      type: System.Object
      description: An instance of the type.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></xref> method.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.
  syntax:
    content: object _ConstructorInfo.Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: One of the <xref href="System.Reflection.BindingFlags"></xref> values that specifies the type of binding.
    - id: binder
      type: System.Reflection.Binder
      description: A <xref href="System.Reflection.Binder"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href="System.Type.DefaultBinder"></xref> is used.
    - id: parameters
      type: System.Object[]
      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> used to govern the coercion of types. If this is `null`, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used.
    return:
      type: System.Object
      description: An instance of the type.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  isEii: true
  parent: System.Reflection.ConstructorInfo
  langs:
  - csharp
  name: _ConstructorInfo.Invoke_5(Object[])
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])
  fullName: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.ConstructorInfo.Invoke(System.Object[])"></xref> method.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.
  syntax:
    content: object _ConstructorInfo.Invoke_5 (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.
    return:
      type: System.Object
      description: An instance of the type.
  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.MemberAccessException
  parent: System
  isExternal: false
  name: MemberAccessException
  nameWithType: MemberAccessException
  fullName: System.MemberAccessException
- uid: System.MethodAccessException
  parent: System
  isExternal: false
  name: MethodAccessException
  nameWithType: MethodAccessException
  fullName: System.MethodAccessException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Reflection.TargetInvocationException
  parent: System.Reflection
  isExternal: false
  name: TargetInvocationException
  nameWithType: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
- uid: System.Reflection.TargetParameterCountException
  parent: System.Reflection
  isExternal: false
  name: TargetParameterCountException
  nameWithType: TargetParameterCountException
  fullName: System.Reflection.TargetParameterCountException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.ConstructorInfo.#ctor
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: ConstructorInfo()
  nameWithType: ConstructorInfo.ConstructorInfo()
  fullName: ConstructorInfo.ConstructorInfo()
- uid: System.Reflection.ConstructorInfo.ConstructorName
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: ConstructorName
  nameWithType: ConstructorInfo.ConstructorName
  fullName: ConstructorInfo.ConstructorName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.ConstructorInfo.Equals(System.Object)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConstructorInfo.Equals(Object)
  fullName: ConstructorInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.ConstructorInfo.GetHashCode
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConstructorInfo.GetHashCode()
  fullName: ConstructorInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Invoke(Object[])
  nameWithType: ConstructorInfo.Invoke(Object[])
  fullName: ConstructorInfo.Invoke(Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Reflection.ConstructorInfo.MemberType
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: ConstructorInfo.MemberType
  fullName: ConstructorInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: op_Equality(ConstructorInfo, ConstructorInfo)
  nameWithType: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)
  fullName: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: op_Inequality(ConstructorInfo, ConstructorInfo)
  nameWithType: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)
  fullName: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)
- uid: System.Reflection.ConstructorInfo.TypeConstructorName
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: TypeConstructorName
  nameWithType: ConstructorInfo.TypeConstructorName
  fullName: ConstructorInfo.TypeConstructorName
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetType()
  nameWithType: ConstructorInfo._ConstructorInfo.GetType()
  fullName: ConstructorInfo._ConstructorInfo.GetType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetTypeInfoCount(UInt32)
  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_3(Object, Object[])
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])
  fullName: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_5(Object[])
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])
  fullName: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])
- uid: System.Reflection.ConstructorInfo.#ctor*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo.ConstructorInfo
  fullName: ConstructorInfo.ConstructorInfo
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.Equals*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Equals
  nameWithType: ConstructorInfo.Equals
  fullName: ConstructorInfo.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.GetHashCode*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: GetHashCode
  nameWithType: ConstructorInfo.GetHashCode
  fullName: ConstructorInfo.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.Invoke*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Invoke
  nameWithType: ConstructorInfo.Invoke
  fullName: ConstructorInfo.Invoke
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.MemberType*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: ConstructorInfo.MemberType
  fullName: ConstructorInfo.MemberType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.op_Equality*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: op_Equality
  nameWithType: ConstructorInfo.op_Equality
  fullName: ConstructorInfo.op_Equality
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.op_Inequality*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: op_Inequality
  nameWithType: ConstructorInfo.op_Inequality
  fullName: ConstructorInfo.op_Inequality
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.GetType
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetType
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.Invoke
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_2
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_2
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_2
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_3
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_3
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_3
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_4
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_4
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_4
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5*
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_5
  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_5
  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_5
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: DeclaringType
  nameWithType: MemberInfo.DeclaringType
  fullName: MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: MemberInfo.GetCustomAttributes(Boolean)
  fullName: MemberInfo.GetCustomAttributes(Boolean)
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)
  fullName: MemberInfo.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: MemberInfo.GetCustomAttributesData()
  fullName: MemberInfo.GetCustomAttributesData()
- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: MemberInfo.IsDefined(Type, Boolean)
  fullName: MemberInfo.IsDefined(Type, Boolean)
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  nameWithType: MemberInfo.MetadataToken
  fullName: MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Module
  nameWithType: MemberInfo.Module
  fullName: MemberInfo.Module
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Name
  nameWithType: MemberInfo.Name
  fullName: MemberInfo.Name
- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Equality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Inequality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.ReflectedType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ReflectedType
  nameWithType: MemberInfo.ReflectedType
  fullName: MemberInfo.ReflectedType
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetType()
  nameWithType: MemberInfo._MemberInfo.GetType()
  fullName: MemberInfo._MemberInfo.GetType()
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.MethodBase.Attributes
  parent: System.Reflection.MethodBase
  isExternal: false
  name: Attributes
  nameWithType: MethodBase.Attributes
  fullName: MethodBase.Attributes
- uid: System.Reflection.MethodBase.CallingConvention
  parent: System.Reflection.MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: MethodBase.CallingConvention
  fullName: MethodBase.CallingConvention
- uid: System.Reflection.MethodBase.ContainsGenericParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: MethodBase.ContainsGenericParameters
  fullName: MethodBase.ContainsGenericParameters
- uid: System.Reflection.MethodBase.GetCurrentMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetCurrentMethod()
  nameWithType: MethodBase.GetCurrentMethod()
  fullName: MethodBase.GetCurrentMethod()
- uid: System.Reflection.MethodBase.GetGenericArguments
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetGenericArguments()
  nameWithType: MethodBase.GetGenericArguments()
  fullName: MethodBase.GetGenericArguments()
- uid: System.Reflection.MethodBase.GetMethodBody
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodBody()
  nameWithType: MethodBase.GetMethodBody()
  fullName: MethodBase.GetMethodBody()
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodFromHandle(RuntimeMethodHandle)
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)
  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
- uid: System.Reflection.MethodBase.GetMethodImplementationFlags
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: MethodBase.GetMethodImplementationFlags()
  fullName: MethodBase.GetMethodImplementationFlags()
- uid: System.Reflection.MethodBase.GetParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetParameters()
  nameWithType: MethodBase.GetParameters()
  fullName: MethodBase.GetParameters()
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Reflection.MethodBase
  isExternal: false
  name: Invoke(Object, Object[])
  nameWithType: MethodBase.Invoke(Object, Object[])
  fullName: MethodBase.Invoke(Object, Object[])
- uid: System.Reflection.MethodBase.IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: MethodBase.IsAbstract
  fullName: MethodBase.IsAbstract
- uid: System.Reflection.MethodBase.IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: MethodBase.IsAssembly
  fullName: MethodBase.IsAssembly
- uid: System.Reflection.MethodBase.IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: MethodBase.IsConstructor
  fullName: MethodBase.IsConstructor
- uid: System.Reflection.MethodBase.IsFamily
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: MethodBase.IsFamily
  fullName: MethodBase.IsFamily
- uid: System.Reflection.MethodBase.IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: MethodBase.IsFamilyAndAssembly
  fullName: MethodBase.IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: MethodBase.IsFamilyOrAssembly
  fullName: MethodBase.IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.IsFinal
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: MethodBase.IsFinal
  fullName: MethodBase.IsFinal
- uid: System.Reflection.MethodBase.IsGenericMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsGenericMethod
  nameWithType: MethodBase.IsGenericMethod
  fullName: MethodBase.IsGenericMethod
- uid: System.Reflection.MethodBase.IsGenericMethodDefinition
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsGenericMethodDefinition
  nameWithType: MethodBase.IsGenericMethodDefinition
  fullName: MethodBase.IsGenericMethodDefinition
- uid: System.Reflection.MethodBase.IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: MethodBase.IsHideBySig
  fullName: MethodBase.IsHideBySig
- uid: System.Reflection.MethodBase.IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: MethodBase.IsPrivate
  fullName: MethodBase.IsPrivate
- uid: System.Reflection.MethodBase.IsPublic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: MethodBase.IsPublic
  fullName: MethodBase.IsPublic
- uid: System.Reflection.MethodBase.IsSecurityCritical
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSecurityCritical
  nameWithType: MethodBase.IsSecurityCritical
  fullName: MethodBase.IsSecurityCritical
- uid: System.Reflection.MethodBase.IsSecuritySafeCritical
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSecuritySafeCritical
  nameWithType: MethodBase.IsSecuritySafeCritical
  fullName: MethodBase.IsSecuritySafeCritical
- uid: System.Reflection.MethodBase.IsSecurityTransparent
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSecurityTransparent
  nameWithType: MethodBase.IsSecurityTransparent
  fullName: MethodBase.IsSecurityTransparent
- uid: System.Reflection.MethodBase.IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: MethodBase.IsSpecialName
  fullName: MethodBase.IsSpecialName
- uid: System.Reflection.MethodBase.IsStatic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: MethodBase.IsStatic
  fullName: MethodBase.IsStatic
- uid: System.Reflection.MethodBase.IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: MethodBase.IsVirtual
  fullName: MethodBase.IsVirtual
- uid: System.Reflection.MethodBase.MethodHandle
  parent: System.Reflection.MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: MethodBase.MethodHandle
  fullName: MethodBase.MethodHandle
- uid: System.Reflection.MethodBase.MethodImplementationFlags
  parent: System.Reflection.MethodBase
  isExternal: false
  name: MethodImplementationFlags
  nameWithType: MethodBase.MethodImplementationFlags
  fullName: MethodBase.MethodImplementationFlags
- uid: System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: op_Equality(MethodBase, MethodBase)
  nameWithType: MethodBase.op_Equality(MethodBase, MethodBase)
  fullName: MethodBase.op_Equality(MethodBase, MethodBase)
- uid: System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: op_Inequality(MethodBase, MethodBase)
  nameWithType: MethodBase.op_Inequality(MethodBase, MethodBase)
  fullName: MethodBase.op_Inequality(MethodBase, MethodBase)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetType()
  nameWithType: MethodBase._MethodBase.GetType()
  fullName: MethodBase._MethodBase.GetType()
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetTypeInfoCount(UInt32)
  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)
  fullName: MethodBase._MethodBase.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsAbstract
  nameWithType: MethodBase._MethodBase.IsAbstract
  fullName: MethodBase._MethodBase.IsAbstract
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsAssembly
  nameWithType: MethodBase._MethodBase.IsAssembly
  fullName: MethodBase._MethodBase.IsAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsConstructor
  nameWithType: MethodBase._MethodBase.IsConstructor
  fullName: MethodBase._MethodBase.IsConstructor
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFamily
  nameWithType: MethodBase._MethodBase.IsFamily
  fullName: MethodBase._MethodBase.IsFamily
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFamilyAndAssembly
  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly
  fullName: MethodBase._MethodBase.IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFamilyOrAssembly
  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly
  fullName: MethodBase._MethodBase.IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFinal
  nameWithType: MethodBase._MethodBase.IsFinal
  fullName: MethodBase._MethodBase.IsFinal
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsHideBySig
  nameWithType: MethodBase._MethodBase.IsHideBySig
  fullName: MethodBase._MethodBase.IsHideBySig
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsPrivate
  nameWithType: MethodBase._MethodBase.IsPrivate
  fullName: MethodBase._MethodBase.IsPrivate
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsPublic
  nameWithType: MethodBase._MethodBase.IsPublic
  fullName: MethodBase._MethodBase.IsPublic
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsSpecialName
  nameWithType: MethodBase._MethodBase.IsSpecialName
  fullName: MethodBase._MethodBase.IsSpecialName
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsStatic
  nameWithType: MethodBase._MethodBase.IsStatic
  fullName: MethodBase._MethodBase.IsStatic
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsVirtual
  nameWithType: MethodBase._MethodBase.IsVirtual
  fullName: MethodBase._MethodBase.IsVirtual
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: GetMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: HasMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)
- uid: System.Runtime.InteropServices._ConstructorInfo
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _ConstructorInfo
  nameWithType: _ConstructorInfo
  fullName: System.Runtime.InteropServices._ConstructorInfo
