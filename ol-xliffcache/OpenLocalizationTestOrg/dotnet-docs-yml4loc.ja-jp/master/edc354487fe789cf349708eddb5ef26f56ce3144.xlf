<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edc354487fe789cf349708eddb5ef26f56ce3144</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.ConstructorArgumentAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfbc933d7f23bec03801bd0a1ed130f9dcd6562a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b63a980d3597c744b7b53071a904d4680fc253d2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies that an object can be initialized by using a non-default constructor syntax, and that a property of the specified name supplies construction information.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This information is primarily for XAML serialization.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute specifies that the associated property can be initialized by a constructor parameter and should be ignored for XAML serialization if the constructor is used to construct the instance.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides better round trip representations for parameterized constructor syntax rather than default constructor instantiation plus specific attributes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A framework can potentially support preserving markup extension usages and reconstituting them rather than relying on <ph id="ph1">`ProvideValue`</ph> output in the object tree for serialization.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> information is useful during serialization for producing an accurate representation of the typical markup extension usage.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to be valid for a <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> attribution, a type's public non-default constructor must support exactly one parameter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of the parameter must correspond to a read/write property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property must be otherwise serializable.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use this attribute to create the correspondence between the name of the parameter in the constructor, and the property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, you apply this attribute to the property-level definition of the connecting read/write property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consumers of <ph id="ph1">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> may throw in cases where <ph id="ph2">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A&gt;</ph> does not resolve to type backing, or when applied to a type that does not have the appropriate construction arguments and arity.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.ConstructorArgumentAttribute&gt;</ph> is in the System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF Usage Notes</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about markup extensions and WPF, see <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.ConstructorArgumentAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the constructor that will initialize the associated property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the name parameter of the constructor that will initialize the associated property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the constructor.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Assuming CLR backing, this corresponds to the <ph id="ph1">&lt;xref href="System.Reflection.ParameterInfo.Name"&gt;&lt;/xref&gt;</ph> of the relevant constructor parameter.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>