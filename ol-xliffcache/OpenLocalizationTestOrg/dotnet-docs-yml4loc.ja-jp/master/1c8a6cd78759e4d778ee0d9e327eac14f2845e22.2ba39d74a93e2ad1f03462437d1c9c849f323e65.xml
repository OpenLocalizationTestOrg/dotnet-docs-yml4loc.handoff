{"nodes":[{"content":"This interface extends IBuildEngine to provide a mechanism allowing tasks to share data between task invocations.","nodes":[{"pos":[0,113],"content":"This interface extends IBuildEngine to provide a mechanism allowing tasks to share data between task invocations.","nodes":[{"content":"This interface extends IBuildEngine to provide a mechanism allowing tasks to share data between task invocations.","pos":[0,113]}]}],"pos":[841,955],"yaml":true},{"content":"Retrieves a previously registered task object stored with the specified key.","nodes":[{"pos":[0,76],"content":"Retrieves a previously registered task object stored with the specified key.","nodes":[{"content":"Retrieves a previously registered task object stored with the specified key.","pos":[0,76]}]}],"pos":[2411,2488],"yaml":true},{"content":"The key used to retrieve the object.","nodes":[{"pos":[0,36],"content":"The key used to retrieve the object.","nodes":[{"content":"The key used to retrieve the object.","pos":[0,36]}]}],"pos":[2703,2740],"yaml":true},{"content":"The lifetime of the object.","nodes":[{"pos":[0,27],"content":"The lifetime of the object.","nodes":[{"content":"The lifetime of the object.","pos":[0,27]}]}],"pos":[2845,2873],"yaml":true},{"content":"Returns a registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.","nodes":[{"pos":[0,146],"content":"Returns a registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.","nodes":[{"content":"Returns a registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.","pos":[0,146]}]}],"pos":[2930,3077],"yaml":true},{"content":"Registers an object with the system that will be disposed of at some specified time in the future.","nodes":[{"pos":[0,98],"content":"Registers an object with the system that will be disposed of at some specified time in the future.","nodes":[{"content":"Registers an object with the system that will be disposed of at some specified time in the future.","pos":[0,98]}]}],"pos":[4579,4678],"yaml":true},{"content":"This method may be called by tasks which need to maintain state across task invocations, such as data caching tasks. It is strongly recommended that `allowEarlyCollection` be set to `true` if the object will retain any significant amount of data.  \n  \n The thread on which the object is disposed may be arbitrarily, but it will not be disposed while the task is executing, even if `allowEarlyCollection` is set to `true`.  \n  \n If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before discarding it.","nodes":[{"pos":[0,246],"content":"This method may be called by tasks which need to maintain state across task invocations, such as data caching tasks. It is strongly recommended that `allowEarlyCollection` be set to `true` if the object will retain any significant amount of data.","nodes":[{"content":"This method may be called by tasks which need to maintain state across task invocations, such as data caching tasks.","pos":[0,116]},{"content":"It is strongly recommended that <ph id=\"ph1\">`allowEarlyCollection`</ph> be set to <ph id=\"ph2\">`true`</ph> if the object will retain any significant amount of data.","pos":[117,246],"source":" It is strongly recommended that `allowEarlyCollection` be set to `true` if the object will retain any significant amount of data."}]},{"pos":[253,421],"content":"The thread on which the object is disposed may be arbitrarily, but it will not be disposed while the task is executing, even if <ph id=\"ph1\">`allowEarlyCollection`</ph> is set to <ph id=\"ph2\">`true`</ph>.","source":"The thread on which the object is disposed may be arbitrarily, but it will not be disposed while the task is executing, even if `allowEarlyCollection` is set to `true`."},{"pos":[428,537],"content":"If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before discarding it.","nodes":[{"content":"If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before discarding it.","pos":[0,109]}]}],"pos":[4689,5233],"yaml":true,"extradata":"MT"},{"content":"The key used to retrieve the object.","nodes":[{"pos":[0,36],"content":"The key used to retrieve the object.","nodes":[{"content":"The key used to retrieve the object.","pos":[0,36]}]}],"pos":[5480,5517],"yaml":true},{"content":"The object to be held for later disposal.","nodes":[{"pos":[0,41],"content":"The object to be held for later disposal.","nodes":[{"content":"The object to be held for later disposal.","pos":[0,41]}]}],"pos":[5576,5618],"yaml":true},{"content":"The lifetime of the object.","nodes":[{"pos":[0,27],"content":"The lifetime of the object.","nodes":[{"content":"The lifetime of the object.","pos":[0,27]}]}],"pos":[5723,5751],"yaml":true},{"content":"Flag that determines whether the object can be disposed earlier than the requested time.","nodes":[{"pos":[0,88],"content":"Flag that determines whether the object can be disposed earlier than the requested time.","nodes":[{"content":"Flag that determines whether the object can be disposed earlier than the requested time.","pos":[0,88]}]}],"pos":[5828,5917],"yaml":true},{"content":"Unregisters a previously registered task object.","nodes":[{"pos":[0,48],"content":"Unregisters a previously registered task object.","nodes":[{"content":"Unregisters a previously registered task object.","pos":[0,48]}]}],"pos":[7288,7337],"yaml":true},{"content":"The key used to retrieve the object.","nodes":[{"pos":[0,36],"content":"The key used to retrieve the object.","nodes":[{"content":"The key used to retrieve the object.","pos":[0,36]}]}],"pos":[7549,7586],"yaml":true},{"content":"The lifetime of the object.","nodes":[{"pos":[0,27],"content":"The lifetime of the object.","nodes":[{"content":"The lifetime of the object.","pos":[0,27]}]}],"pos":[7691,7719],"yaml":true},{"content":"Returns a previously registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.","nodes":[{"pos":[0,157],"content":"Returns a previously registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.","nodes":[{"content":"Returns a previously registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.","pos":[0,157]}]}],"pos":[7776,7934],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Framework.IBuildEngine4\n  commentId: T:Microsoft.Build.Framework.IBuildEngine4\n  id: IBuildEngine4\n  children:\n  - Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  - Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)\n  - Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  langs:\n  - csharp\n  name: IBuildEngine4\n  nameWithType: IBuildEngine4\n  fullName: Microsoft.Build.Framework.IBuildEngine4\n  type: Interface\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  summary: This interface extends IBuildEngine to provide a mechanism allowing tasks to share data between task invocations.\n  syntax:\n    content: 'public interface IBuildEngine4 : Microsoft.Build.Framework.IBuildEngine3'\n  implements:\n  - Microsoft.Build.Framework.IBuildEngine3\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  commentId: M:Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  id: GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  langs:\n  - csharp\n  name: GetRegisteredTaskObject(Object, RegisteredTaskObjectLifetime)\n  nameWithType: IBuildEngine4.GetRegisteredTaskObject(Object, RegisteredTaskObjectLifetime)\n  fullName: IBuildEngine4.GetRegisteredTaskObject(Object, RegisteredTaskObjectLifetime)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  summary: Retrieves a previously registered task object stored with the specified key.\n  syntax:\n    content: public object GetRegisteredTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key used to retrieve the object.\n    - id: lifetime\n      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime\n      description: The lifetime of the object.\n    return:\n      type: System.Object\n      description: Returns a registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.\n  overload: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)\n  commentId: M:Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)\n  id: RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  langs:\n  - csharp\n  name: RegisterTaskObject(Object, Object, RegisteredTaskObjectLifetime, Boolean)\n  nameWithType: IBuildEngine4.RegisterTaskObject(Object, Object, RegisteredTaskObjectLifetime, Boolean)\n  fullName: IBuildEngine4.RegisterTaskObject(Object, Object, RegisteredTaskObjectLifetime, Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  summary: Registers an object with the system that will be disposed of at some specified time in the future.\n  remarks: \"This method may be called by tasks which need to maintain state across task invocations, such as data caching tasks. It is strongly recommended that `allowEarlyCollection` be set to `true` if the object will retain any significant amount of data.  \\n  \\n The thread on which the object is disposed may be arbitrarily, but it will not be disposed while the task is executing, even if `allowEarlyCollection` is set to `true`.  \\n  \\n If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before discarding it.\"\n  syntax:\n    content: public void RegisterTaskObject (object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key used to retrieve the object.\n    - id: obj\n      type: System.Object\n      description: The object to be held for later disposal.\n    - id: lifetime\n      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime\n      description: The lifetime of the object.\n    - id: allowEarlyCollection\n      type: System.Boolean\n      description: Flag that determines whether the object can be disposed earlier than the requested time.\n  overload: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  commentId: M:Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  id: UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  langs:\n  - csharp\n  name: UnregisterTaskObject(Object, RegisteredTaskObjectLifetime)\n  nameWithType: IBuildEngine4.UnregisterTaskObject(Object, RegisteredTaskObjectLifetime)\n  fullName: IBuildEngine4.UnregisterTaskObject(Object, RegisteredTaskObjectLifetime)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  summary: Unregisters a previously registered task object.\n  syntax:\n    content: public object UnregisterTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key used to retrieve the object.\n    - id: lifetime\n      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime\n      description: The lifetime of the object.\n    return:\n      type: System.Object\n      description: Returns a previously registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.\n  overload: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n  ms.author: susanno\n  manager: douge\nreferences:\n- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  isExternal: false\n  name: GetRegisteredTaskObject(Object, RegisteredTaskObjectLifetime)\n  nameWithType: IBuildEngine4.GetRegisteredTaskObject(Object, RegisteredTaskObjectLifetime)\n  fullName: IBuildEngine4.GetRegisteredTaskObject(Object, RegisteredTaskObjectLifetime)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.Build.Framework.RegisteredTaskObjectLifetime\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: RegisteredTaskObjectLifetime\n  nameWithType: RegisteredTaskObjectLifetime\n  fullName: Microsoft.Build.Framework.RegisteredTaskObjectLifetime\n- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  isExternal: false\n  name: RegisterTaskObject(Object, Object, RegisteredTaskObjectLifetime, Boolean)\n  nameWithType: IBuildEngine4.RegisterTaskObject(Object, Object, RegisteredTaskObjectLifetime, Boolean)\n  fullName: IBuildEngine4.RegisterTaskObject(Object, Object, RegisteredTaskObjectLifetime, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  isExternal: false\n  name: UnregisterTaskObject(Object, RegisteredTaskObjectLifetime)\n  nameWithType: IBuildEngine4.UnregisterTaskObject(Object, RegisteredTaskObjectLifetime)\n  fullName: IBuildEngine4.UnregisterTaskObject(Object, RegisteredTaskObjectLifetime)\n- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject*\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  isExternal: false\n  name: GetRegisteredTaskObject\n  nameWithType: IBuildEngine4.GetRegisteredTaskObject\n  fullName: IBuildEngine4.GetRegisteredTaskObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject*\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  isExternal: false\n  name: RegisterTaskObject\n  nameWithType: IBuildEngine4.RegisterTaskObject\n  fullName: IBuildEngine4.RegisterTaskObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject*\n  parent: Microsoft.Build.Framework.IBuildEngine4\n  isExternal: false\n  name: UnregisterTaskObject\n  nameWithType: IBuildEngine4.UnregisterTaskObject\n  fullName: IBuildEngine4.UnregisterTaskObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Framework/IBuildEngine4.xml\n- uid: Microsoft.Build.Framework.IBuildEngine3\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine3\n  nameWithType: IBuildEngine3\n  fullName: Microsoft.Build.Framework.IBuildEngine3\n"}