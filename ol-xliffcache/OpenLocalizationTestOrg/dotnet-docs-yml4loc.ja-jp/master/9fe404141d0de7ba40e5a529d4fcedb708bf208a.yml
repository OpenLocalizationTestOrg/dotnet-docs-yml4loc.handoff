### YamlMime:ManagedReference
items:
- uid: System.Drawing.Graphics.DrawImageAbort
  commentId: T:System.Drawing.Graphics.DrawImageAbort
  id: Graphics.DrawImageAbort
  langs:
  - csharp
  name: Graphics.DrawImageAbort
  nameWithType: Graphics.DrawImageAbort
  fullName: System.Drawing.Graphics.DrawImageAbort
  type: Delegate
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Provides a callback method for deciding when the <xref href="System.Drawing.Graphics.DrawImage*"></xref> method should prematurely cancel execution and stop drawing an image.
  remarks: "This method is used in conjunction with the <xref:System.Drawing.Graphics.DrawImage%2A> method of the <xref:System.Drawing.Graphics> class. Certain overloads of the <xref:System.Drawing.Graphics.DrawImage%2A> method call an application-defined callback method of this type to find out if the overloads should stop or continue execution.  \n  \n During execution, the relevant <xref:System.Drawing.Graphics.DrawImage%2A> overloads frequently call this callback method to find out if they should stop drawing the specified image or if they should continue drawing the image. The <xref:System.Drawing.Graphics.DrawImageAbort> callback method can determine whether to continue or not based on a chosen algorithm included in it, optionally using the data passed to it by the callbackdata parameter. For example, an algorithm might determine if the image has scrolled off the screen and signal a cancellation to the <xref:System.Drawing.Graphics.DrawImage%2A> method to stop drawing.  \n  \n A user declaration of this event-handling method must have the same parameters as the <xref:System.Drawing.Graphics.DrawImageAbort> delegate declaration."
  example:
  - "This example is a simplistic implementation of the <xref:System.Drawing.Graphics.DrawImageAbort> delegate. It merely checks to see if the <xref:System.Drawing.Graphics.DrawImage%2A> method has passed it data using the callbackdata parameter. (Some <xref:System.Drawing.Graphics.DrawImage%2A> overloads have only a `DrawImageAbort` parameter and pass no data; some overloads have both `DrawImageAbort` and `callbackdata` parameters and can pass data.) If no data was passed, it returns `true` to signal to the calling <xref:System.Drawing.Graphics.DrawImage%2A> method that it should cancel the drawing. If data was passed, it returns `false` to signal that drawing should continue.  \n  \n A realistic implementation of this callback would involve the actual scrutiny of some criteria to cancel or continue the execution.  \n  \n```vb  \nPrivate Function DrawImageCallback(callBackData As IntPtr) As Boolean  \n     ' Test for call that passes callBackData parameter.  \n     If callBackData.Equals(IntPtr.Zero) Then  \n         ' If no callBackData passed, abort DrawImage method.  \n         Return True  \n     Else  \n         ' If callBackData passed, continue DrawImage method.  \n         Return False  \n     End If  \n End Function 'DrawImageCallback  \n```  \n  \n```csharp  \n// Define DrawImageAbort callback method.  \n private bool DrawImageCallback(IntPtr callbackdata)  \n {  \n    // Test for call that passes callBackData parameter.  \n    if(callbackdata==IntPtr.Zero)  \n    {  \n       // If no callbackdata passed, cancel DrawImage method.  \n       return true;  \n    }  \n    else  \n    {  \n       // If callbackdata passed, continue DrawImage method.  \n       return false;  \n    }  \n }  \n```"
  syntax:
    content: public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);
  inheritance:
  - System.Object
  - System.Delegate
  extensionMethods:
  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Graphics+DrawImageAbort.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  parent: System.Reflection.RuntimeReflectionExtensions
  isExternal: false
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
