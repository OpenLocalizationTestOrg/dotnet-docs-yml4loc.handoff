{"nodes":[{"content":"Describes the constraints on a generic type parameter of a generic type or method.","nodes":[{"pos":[0,82],"content":"Describes the constraints on a generic type parameter of a generic type or method.","nodes":[{"content":"Describes the constraints on a generic type parameter of a generic type or method.","pos":[0,82]}]}],"pos":[1038,1121],"yaml":true},{"content":"The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group. To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask. If the result is None, there are no variance flags. Similarly, use SpecialConstraintMask to test for constraint flags.","nodes":[{"pos":[0,429],"content":"The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group. To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask. If the result is None, there are no variance flags. Similarly, use SpecialConstraintMask to test for constraint flags.","nodes":[{"content":"The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group. To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask. If the result is None, there are no variance flags. Similarly, use SpecialConstraintMask to test for constraint flags.","pos":[0,429],"nodes":[{"content":"The members of the <ph id=\"ph1\">&lt;xref:System.Reflection.GenericParameterAttributes&gt;</ph> enumeration are divided into two groups, the variance group and the special constraints group.","pos":[0,165],"source":"The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group."},{"content":"To test a <ph id=\"ph1\">&lt;xref:System.Reflection.GenericParameterAttributes&gt;</ph> value for variance flags, first perform a bitwise AND operation with VarianceMask.","pos":[166,310],"source":" To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask."},{"content":"If the result is None, there are no variance flags.","pos":[311,362]},{"content":"Similarly, use SpecialConstraintMask to test for constraint flags.","pos":[363,429]}]}]}],"pos":[1132,1562],"yaml":true,"extradata":"MT"},{"content":"The generic type parameter is contravariant. A contravariant type parameter can appear as a parameter type in method signatures.","nodes":[{"pos":[0,128],"content":"The generic type parameter is contravariant. A contravariant type parameter can appear as a parameter type in method signatures.","nodes":[{"content":"The generic type parameter is contravariant. A contravariant type parameter can appear as a parameter type in method signatures.","pos":[0,128],"nodes":[{"content":"The generic type parameter is contravariant.","pos":[0,44]},{"content":"A contravariant type parameter can appear as a parameter type in method signatures.","pos":[45,128]}]}]}],"pos":[4280,4409],"yaml":true},{"content":"The generic type parameter is covariant. A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.","nodes":[{"pos":[0,192],"content":"The generic type parameter is covariant. A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.","nodes":[{"content":"The generic type parameter is covariant. A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.","pos":[0,192],"nodes":[{"content":"The generic type parameter is covariant.","pos":[0,40]},{"content":"A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.","pos":[41,192]}]}]}],"pos":[5996,6189],"yaml":true},{"content":"A type can be substituted for the generic type parameter only if it has a parameterless constructor.","nodes":[{"pos":[0,100],"content":"A type can be substituted for the generic type parameter only if it has a parameterless constructor.","nodes":[{"content":"A type can be substituted for the generic type parameter only if it has a parameterless constructor.","pos":[0,100]}]}],"pos":[7886,7987],"yaml":true},{"content":"There are no special flags.","nodes":[{"pos":[0,27],"content":"There are no special flags.","nodes":[{"content":"There are no special flags.","pos":[0,27]}]}],"pos":[9559,9587],"yaml":true},{"content":"A type can be substituted for the generic type parameter only if it is a value type and is not nullable.","nodes":[{"pos":[0,104],"content":"A type can be substituted for the generic type parameter only if it is a value type and is not nullable.","nodes":[{"content":"A type can be substituted for the generic type parameter only if it is a value type and is not nullable.","pos":[0,104]}]}],"pos":[11291,11396],"yaml":true},{"content":"A type can be substituted for the generic type parameter only if it is a reference type.","nodes":[{"pos":[0,88],"content":"A type can be substituted for the generic type parameter only if it is a reference type.","nodes":[{"content":"A type can be substituted for the generic type parameter only if it is a reference type.","pos":[0,88]}]}],"pos":[13084,13173],"yaml":true},{"content":"Selects the combination of all special constraint flags. This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\"></xref>, <xref href=\"System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\"></xref>, and <xref href=\"System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\"></xref>.","nodes":[{"pos":[0,422],"content":"Selects the combination of all special constraint flags. This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\"></xref>, <xref href=\"System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\"></xref>, and <xref href=\"System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\"></xref>.","nodes":[{"content":"Selects the combination of all special constraint flags.","pos":[0,56]},{"content":"This value is the result of using logical OR to combine the following flags: <ph id=\"ph1\">&lt;xref href=\"System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\"&gt;&lt;/xref&gt;</ph>.","pos":[57,422],"source":" This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\"></xref>, <xref href=\"System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\"></xref>, and <xref href=\"System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\"></xref>."}]}],"pos":[14842,15267],"yaml":true},{"content":"Selects the combination of all variance flags. This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.Contravariant\"></xref> and <xref href=\"System.Reflection.GenericParameterAttributes.Covariant\"></xref>.","nodes":[{"pos":[0,284],"content":"Selects the combination of all variance flags. This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.Contravariant\"></xref> and <xref href=\"System.Reflection.GenericParameterAttributes.Covariant\"></xref>.","nodes":[{"content":"Selects the combination of all variance flags.","pos":[0,46]},{"content":"This value is the result of using logical OR to combine the following flags: <ph id=\"ph1\">&lt;xref href=\"System.Reflection.GenericParameterAttributes.Contravariant\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Reflection.GenericParameterAttributes.Covariant\"&gt;&lt;/xref&gt;</ph>.","pos":[47,284],"source":" This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.Contravariant\"></xref> and <xref href=\"System.Reflection.GenericParameterAttributes.Covariant\"></xref>."}]}],"pos":[16880,17167],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.GenericParameterAttributes\n  commentId: T:System.Reflection.GenericParameterAttributes\n  id: GenericParameterAttributes\n  children:\n  - System.Reflection.GenericParameterAttributes.Contravariant\n  - System.Reflection.GenericParameterAttributes.Covariant\n  - System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\n  - System.Reflection.GenericParameterAttributes.None\n  - System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\n  - System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\n  - System.Reflection.GenericParameterAttributes.SpecialConstraintMask\n  - System.Reflection.GenericParameterAttributes.VarianceMask\n  langs:\n  - csharp\n  name: GenericParameterAttributes\n  nameWithType: GenericParameterAttributes\n  fullName: System.Reflection.GenericParameterAttributes\n  type: Enum\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Describes the constraints on a generic type parameter of a generic type or method.\n  remarks: The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group. To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask. If the result is None, there are no variance flags. Similarly, use SpecialConstraintMask to test for constraint flags.\n  example:\n  - \"The following code example defines a generic type `Test` with two type parameters. The second type parameter has a base class constraint and a reference type constraint. When the program executes, the constraints are examined using the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=fullName> property and the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=fullName> method.  \\n  \\n [!code-cpp[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/CPP/source.cpp#1)]\\n [!code-csharp[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/CS/source.cs#1)]\\n [!code-vb[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum GenericParameterAttributes\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.GenericParameterAttributes.Contravariant\n  commentId: F:System.Reflection.GenericParameterAttributes.Contravariant\n  id: Contravariant\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: Contravariant\n  nameWithType: GenericParameterAttributes.Contravariant\n  fullName: GenericParameterAttributes.Contravariant\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The generic type parameter is contravariant. A contravariant type parameter can appear as a parameter type in method signatures.\n  syntax:\n    content: Contravariant\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.Covariant\n  commentId: F:System.Reflection.GenericParameterAttributes.Covariant\n  id: Covariant\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: Covariant\n  nameWithType: GenericParameterAttributes.Covariant\n  fullName: GenericParameterAttributes.Covariant\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The generic type parameter is covariant. A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.\n  syntax:\n    content: Covariant\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\n  commentId: F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\n  id: DefaultConstructorConstraint\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: DefaultConstructorConstraint\n  nameWithType: GenericParameterAttributes.DefaultConstructorConstraint\n  fullName: GenericParameterAttributes.DefaultConstructorConstraint\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: A type can be substituted for the generic type parameter only if it has a parameterless constructor.\n  syntax:\n    content: DefaultConstructorConstraint\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.None\n  commentId: F:System.Reflection.GenericParameterAttributes.None\n  id: None\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: None\n  nameWithType: GenericParameterAttributes.None\n  fullName: GenericParameterAttributes.None\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: There are no special flags.\n  syntax:\n    content: None\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\n  commentId: F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\n  id: NotNullableValueTypeConstraint\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: NotNullableValueTypeConstraint\n  nameWithType: GenericParameterAttributes.NotNullableValueTypeConstraint\n  fullName: GenericParameterAttributes.NotNullableValueTypeConstraint\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: A type can be substituted for the generic type parameter only if it is a value type and is not nullable.\n  syntax:\n    content: NotNullableValueTypeConstraint\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\n  commentId: F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\n  id: ReferenceTypeConstraint\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: ReferenceTypeConstraint\n  nameWithType: GenericParameterAttributes.ReferenceTypeConstraint\n  fullName: GenericParameterAttributes.ReferenceTypeConstraint\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: A type can be substituted for the generic type parameter only if it is a reference type.\n  syntax:\n    content: ReferenceTypeConstraint\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.SpecialConstraintMask\n  commentId: F:System.Reflection.GenericParameterAttributes.SpecialConstraintMask\n  id: SpecialConstraintMask\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: SpecialConstraintMask\n  nameWithType: GenericParameterAttributes.SpecialConstraintMask\n  fullName: GenericParameterAttributes.SpecialConstraintMask\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: 'Selects the combination of all special constraint flags. This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\"></xref>, <xref href=\"System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\"></xref>, and <xref href=\"System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\"></xref>.'\n  syntax:\n    content: SpecialConstraintMask\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\n- uid: System.Reflection.GenericParameterAttributes.VarianceMask\n  commentId: F:System.Reflection.GenericParameterAttributes.VarianceMask\n  id: VarianceMask\n  parent: System.Reflection.GenericParameterAttributes\n  langs:\n  - csharp\n  name: VarianceMask\n  nameWithType: GenericParameterAttributes.VarianceMask\n  fullName: GenericParameterAttributes.VarianceMask\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: 'Selects the combination of all variance flags. This value is the result of using logical OR to combine the following flags: <xref href=\"System.Reflection.GenericParameterAttributes.Contravariant\"></xref> and <xref href=\"System.Reflection.GenericParameterAttributes.Covariant\"></xref>.'\n  syntax:\n    content: VarianceMask\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/GenericParameterAttributes.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Reflection.GenericParameterAttributes.Contravariant\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: Contravariant\n  nameWithType: GenericParameterAttributes.Contravariant\n  fullName: GenericParameterAttributes.Contravariant\n- uid: System.Reflection.GenericParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: GenericParameterAttributes\n  nameWithType: GenericParameterAttributes\n  fullName: System.Reflection.GenericParameterAttributes\n- uid: System.Reflection.GenericParameterAttributes.Covariant\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: Covariant\n  nameWithType: GenericParameterAttributes.Covariant\n  fullName: GenericParameterAttributes.Covariant\n- uid: System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: DefaultConstructorConstraint\n  nameWithType: GenericParameterAttributes.DefaultConstructorConstraint\n  fullName: GenericParameterAttributes.DefaultConstructorConstraint\n- uid: System.Reflection.GenericParameterAttributes.None\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: None\n  nameWithType: GenericParameterAttributes.None\n  fullName: GenericParameterAttributes.None\n- uid: System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: NotNullableValueTypeConstraint\n  nameWithType: GenericParameterAttributes.NotNullableValueTypeConstraint\n  fullName: GenericParameterAttributes.NotNullableValueTypeConstraint\n- uid: System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: ReferenceTypeConstraint\n  nameWithType: GenericParameterAttributes.ReferenceTypeConstraint\n  fullName: GenericParameterAttributes.ReferenceTypeConstraint\n- uid: System.Reflection.GenericParameterAttributes.SpecialConstraintMask\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: SpecialConstraintMask\n  nameWithType: GenericParameterAttributes.SpecialConstraintMask\n  fullName: GenericParameterAttributes.SpecialConstraintMask\n- uid: System.Reflection.GenericParameterAttributes.VarianceMask\n  parent: System.Reflection.GenericParameterAttributes\n  isExternal: false\n  name: VarianceMask\n  nameWithType: GenericParameterAttributes.VarianceMask\n  fullName: GenericParameterAttributes.VarianceMask\n"}