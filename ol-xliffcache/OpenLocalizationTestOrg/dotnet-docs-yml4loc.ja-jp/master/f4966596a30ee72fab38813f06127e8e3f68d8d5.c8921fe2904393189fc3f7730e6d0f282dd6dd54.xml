{"nodes":[{"content":"The <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"&gt;&lt;/xref&gt;</ph> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.","source":"The <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel."}],"pos":[767,968],"yaml":true},{"content":"The channel binding token in a <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> class instance is used to provide extended protection for integrated windows authentication.","nodes":[{"pos":[0,195],"content":"The channel binding token in a <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> class instance is used to provide extended protection for integrated windows authentication.","nodes":[{"content":"The channel binding token in a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> class instance is used to provide extended protection for integrated windows authentication.","pos":[0,195],"source":"The channel binding token in a <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> class instance is used to provide extended protection for integrated windows authentication."}]}],"pos":[979,1175],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class."}],"pos":[3907,4034],"yaml":true},{"content":"The channel binding token is used to provide extended protection for integrated windows authentication.","nodes":[{"pos":[0,103],"content":"The channel binding token is used to provide extended protection for integrated windows authentication.","nodes":[{"content":"The channel binding token is used to provide extended protection for integrated windows authentication.","pos":[0,103]}]}],"pos":[4045,4149],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class."}],"pos":[5863,5990],"yaml":true},{"content":"The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding.%23ctor%2A> constructor is designed to deal with how the channel binding is acquired to compensate for allocation and deallocation semantics in the native calls that provide extended protection for integrated windows authentication.","nodes":[{"pos":[0,307],"content":"The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding.%23ctor%2A> constructor is designed to deal with how the channel binding is acquired to compensate for allocation and deallocation semantics in the native calls that provide extended protection for integrated windows authentication.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding.%23ctor%2A&gt;</ph> constructor is designed to deal with how the channel binding is acquired to compensate for allocation and deallocation semantics in the native calls that provide extended protection for integrated windows authentication.","pos":[0,307],"source":"The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding.%23ctor%2A> constructor is designed to deal with how the channel binding is acquired to compensate for allocation and deallocation semantics in the native calls that provide extended protection for integrated windows authentication."}]}],"pos":[6001,6309],"yaml":true,"extradata":"MT"},{"content":"A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.","nodes":[{"pos":[0,230],"content":"A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.","nodes":[{"content":"A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.","pos":[0,230]}]}],"pos":[6459,6690],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\"></xref> property gets the size, in bytes, of the channel binding token associated with the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> instance.","nodes":[{"pos":[0,273],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\"&gt;&lt;/xref&gt;</ph> property gets the size, in bytes, of the channel binding token associated with the <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\"></xref> property gets the size, in bytes, of the channel binding token associated with the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> instance."}],"pos":[8220,8494],"yaml":true},{"content":"The size of the channel binding token may be used by derived classes when passing the <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> instance that contains a channel binding token to other classes or to the native Windows security functions that implement extended protection. The channel binding token is used to provide extended protection for integrated Windows authentication.","nodes":[{"pos":[0,405],"content":"The size of the channel binding token may be used by derived classes when passing the <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> instance that contains a channel binding token to other classes or to the native Windows security functions that implement extended protection. The channel binding token is used to provide extended protection for integrated Windows authentication.","nodes":[{"content":"The size of the channel binding token may be used by derived classes when passing the <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> instance that contains a channel binding token to other classes or to the native Windows security functions that implement extended protection. The channel binding token is used to provide extended protection for integrated Windows authentication.","pos":[0,405],"nodes":[{"content":"The size of the channel binding token may be used by derived classes when passing the <ph id=\"ph1\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> instance that contains a channel binding token to other classes or to the native Windows security functions that implement extended protection.","pos":[0,301],"source":"The size of the channel binding token may be used by derived classes when passing the <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> instance that contains a channel binding token to other classes or to the native Windows security functions that implement extended protection."},{"content":"The channel binding token is used to provide extended protection for integrated Windows authentication.","pos":[302,405]}]}]}],"pos":[8505,8911],"yaml":true,"extradata":"MT"},{"content":"The size, in bytes, of the channel binding token in the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> instance.","nodes":[{"pos":[0,151],"content":"The size, in bytes, of the channel binding token in the <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"&gt;&lt;/xref&gt;</ph> instance.","source":"The size, in bytes, of the channel binding token in the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> instance."}],"pos":[9024,9176],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  id: ChannelBinding\n  children:\n  - System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  - System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  - System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  langs:\n  - csharp\n  name: ChannelBinding\n  nameWithType: ChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  type: Class\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: The <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.\n  remarks: The channel binding token in a <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> class instance is used to provide extended protection for integrated windows authentication.\n  syntax:\n    content: 'public abstract class ChannelBinding : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid'\n  inheritance:\n  - System.Object\n  - System.Runtime.InteropServices.SafeHandle\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Runtime.InteropServices.SafeHandle.Close\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Runtime.InteropServices.SafeHandle.IsInvalid\n  - System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Authentication.ExtendedProtection/ChannelBinding.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  commentId: M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  id: '#ctor'\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  langs:\n  - csharp\n  name: ChannelBinding()\n  nameWithType: ChannelBinding.ChannelBinding()\n  fullName: ChannelBinding.ChannelBinding()\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class.\n  remarks: The channel binding token is used to provide extended protection for integrated windows authentication.\n  syntax:\n    content: protected ChannelBinding ();\n    parameters: []\n  overload: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Authentication.ExtendedProtection/ChannelBinding.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  commentId: M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  langs:\n  - csharp\n  name: ChannelBinding(Boolean)\n  nameWithType: ChannelBinding.ChannelBinding(Boolean)\n  fullName: ChannelBinding.ChannelBinding(Boolean)\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> class.\n  remarks: The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding.%23ctor%2A> constructor is designed to deal with how the channel binding is acquired to compensate for allocation and deallocation semantics in the native calls that provide extended protection for integrated windows authentication.\n  syntax:\n    content: protected ChannelBinding (bool ownsHandle);\n    parameters:\n    - id: ownsHandle\n      type: System.Boolean\n      description: A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.\n  overload: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Authentication.ExtendedProtection/ChannelBinding.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  commentId: P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  id: Size\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  langs:\n  - csharp\n  name: Size\n  nameWithType: ChannelBinding.Size\n  fullName: ChannelBinding.Size\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: The <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\"></xref> property gets the size, in bytes, of the channel binding token associated with the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> instance.\n  remarks: The size of the channel binding token may be used by derived classes when passing the <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> instance that contains a channel binding token to other classes or to the native Windows security functions that implement extended protection. The channel binding token is used to provide extended protection for integrated Windows authentication.\n  syntax:\n    content: public abstract int Size { get; }\n    return:\n      type: System.Int32\n      description: The size, in bytes, of the channel binding token in the <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref> instance.\n  overload: System.Security.Authentication.ExtendedProtection.ChannelBinding.Size*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Authentication.ExtendedProtection/ChannelBinding.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  isExternal: false\n  name: ChannelBinding()\n  nameWithType: ChannelBinding.ChannelBinding()\n  fullName: ChannelBinding.ChannelBinding()\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  isExternal: false\n  name: ChannelBinding(Boolean)\n  nameWithType: ChannelBinding.ChannelBinding(Boolean)\n  fullName: ChannelBinding.ChannelBinding(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.Size\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  isExternal: false\n  name: Size\n  nameWithType: ChannelBinding.Size\n  fullName: ChannelBinding.Size\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor*\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  isExternal: false\n  name: ChannelBinding\n  nameWithType: ChannelBinding.ChannelBinding\n  fullName: ChannelBinding.ChannelBinding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Authentication.ExtendedProtection/ChannelBinding.xml\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding.Size*\n  parent: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  isExternal: false\n  name: Size\n  nameWithType: ChannelBinding.Size\n  fullName: ChannelBinding.Size\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Authentication.ExtendedProtection/ChannelBinding.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.InteropServices.SafeHandle.Close\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Close()\n  nameWithType: SafeHandle.Close()\n  fullName: SafeHandle.Close()\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousAddRef(Boolean)\n  nameWithType: SafeHandle.DangerousAddRef(Boolean)\n  fullName: SafeHandle.DangerousAddRef(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousGetHandle()\n  nameWithType: SafeHandle.DangerousGetHandle()\n  fullName: SafeHandle.DangerousGetHandle()\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousRelease()\n  nameWithType: SafeHandle.DangerousRelease()\n  fullName: SafeHandle.DangerousRelease()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose()\n  nameWithType: SafeHandle.Dispose()\n  fullName: SafeHandle.Dispose()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SafeHandle.Dispose(Boolean)\n  fullName: SafeHandle.Dispose(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.handle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: handle\n  nameWithType: SafeHandle.handle\n  fullName: SafeHandle.handle\n- uid: System.Runtime.InteropServices.SafeHandle.IsClosed\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsClosed\n  nameWithType: SafeHandle.IsClosed\n  fullName: SafeHandle.IsClosed\n- uid: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsInvalid\n  nameWithType: SafeHandle.IsInvalid\n  fullName: SafeHandle.IsInvalid\n- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: ReleaseHandle()\n  nameWithType: SafeHandle.ReleaseHandle()\n  fullName: SafeHandle.ReleaseHandle()\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandle(IntPtr)\n  nameWithType: SafeHandle.SetHandle(IntPtr)\n  fullName: SafeHandle.SetHandle(IntPtr)\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  nameWithType: SafeHandle.SetHandleAsInvalid()\n  fullName: SafeHandle.SetHandleAsInvalid()\n"}