{"nodes":[{"content":"Provides extension methods for retrieving <xref href=\"System.Security.Cryptography.DSA\"></xref> implementations for the public and private keys of an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>.","nodes":[{"pos":[0,234],"content":"Provides extension methods for retrieving <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> implementations for the public and private keys of an <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph>.","source":"Provides extension methods for retrieving <xref href=\"System.Security.Cryptography.DSA\"></xref> implementations for the public and private keys of an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>."}],"pos":[1086,1321],"yaml":true},{"content":"Gets the <xref href=\"System.Security.Cryptography.DSA\"></xref> private key from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>.","nodes":[{"pos":[0,168],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> private key from the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Security.Cryptography.DSA\"></xref> private key from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>."}],"pos":[4845,5014],"yaml":true},{"content":"The certificate.","nodes":[{"pos":[0,16],"content":"The certificate.","nodes":[{"content":"The certificate.","pos":[0,16]}]}],"pos":[5316,5333],"yaml":true},{"content":"The private key, or `null` if the certificate does not have a DSA private key.","nodes":[{"pos":[0,78],"content":"The private key, or <ph id=\"ph1\">`null`</ph> if the certificate does not have a DSA private key.","source":"The private key, or `null` if the certificate does not have a DSA private key."}],"pos":[5409,5488],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[5705,5741],"yaml":true},{"content":"Gets the <xref href=\"System.Security.Cryptography.DSA\"></xref> public key from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>.","nodes":[{"pos":[0,167],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> public key from the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Security.Cryptography.DSA\"></xref> public key from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>."}],"pos":[7000,7168],"yaml":true},{"content":"The certificate.","nodes":[{"pos":[0,16],"content":"The certificate.","nodes":[{"content":"The certificate.","pos":[0,16]}]}],"pos":[7469,7486],"yaml":true},{"content":"The public key, or `null` if the certificate does not have a DSA public key.","nodes":[{"pos":[0,76],"content":"The public key, or <ph id=\"ph1\">`null`</ph> if the certificate does not have a DSA public key.","source":"The public key, or `null` if the certificate does not have a DSA public key."}],"pos":[7562,7639],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[7855,7891],"yaml":true},{"content":"Windows reports an error. See the <xref href=\"System.Exception.Message\"></xref> property for more information.","nodes":[{"pos":[0,110],"content":"Windows reports an error. See the <xref href=\"System.Exception.Message\"></xref> property for more information.","nodes":[{"content":"Windows reports an error.","pos":[0,25]},{"content":"See the <ph id=\"ph1\">&lt;xref href=\"System.Exception.Message\"&gt;&lt;/xref&gt;</ph> property for more information.","pos":[26,110],"source":" See the <xref href=\"System.Exception.Message\"></xref> property for more information."}]}],"pos":[8039,8150],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  commentId: T:System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  id: DSACertificateExtensions\n  children:\n  - System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)\n  - System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  langs:\n  - csharp\n  name: DSACertificateExtensions\n  nameWithType: DSACertificateExtensions\n  fullName: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  type: Class\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Provides extension methods for retrieving <xref href=\"System.Security.Cryptography.DSA\"></xref> implementations for the public and private keys of an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>.\n  syntax:\n    content: public static class DSACertificateExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)\n  commentId: M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)\n  id: CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  langs:\n  - csharp\n  name: CopyWithPrivateKey(X509Certificate2, DSA)\n  nameWithType: DSACertificateExtensions.CopyWithPrivateKey(X509Certificate2, DSA)\n  fullName: DSACertificateExtensions.CopyWithPrivateKey(X509Certificate2, DSA)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public static System.Security.Cryptography.X509Certificates.X509Certificate2 CopyWithPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Security.Cryptography.DSA privateKey);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: ''\n    - id: privateKey\n      type: System.Security.Cryptography.DSA\n      description: ''\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: ''\n  overload: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  langs:\n  - csharp\n  name: GetDSAPrivateKey(X509Certificate2)\n  nameWithType: DSACertificateExtensions.GetDSAPrivateKey(X509Certificate2)\n  fullName: DSACertificateExtensions.GetDSAPrivateKey(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets the <xref href=\"System.Security.Cryptography.DSA\"></xref> private key from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>.\n  syntax:\n    content: public static System.Security.Cryptography.DSA GetDSAPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The certificate.\n    return:\n      type: System.Security.Cryptography.DSA\n      description: The private key, or `null` if the certificate does not have a DSA private key.\n  overload: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  langs:\n  - csharp\n  name: GetDSAPublicKey(X509Certificate2)\n  nameWithType: DSACertificateExtensions.GetDSAPublicKey(X509Certificate2)\n  fullName: DSACertificateExtensions.GetDSAPublicKey(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets the <xref href=\"System.Security.Cryptography.DSA\"></xref> public key from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref>.\n  syntax:\n    content: public static System.Security.Cryptography.DSA GetDSAPublicKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The certificate.\n    return:\n      type: System.Security.Cryptography.DSA\n      description: The public key, or `null` if the certificate does not have a DSA public key.\n  overload: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: Windows reports an error. See the <xref href=\"System.Exception.Message\"></xref> property for more information.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  isExternal: false\n  name: CopyWithPrivateKey(X509Certificate2, DSA)\n  nameWithType: DSACertificateExtensions.CopyWithPrivateKey(X509Certificate2, DSA)\n  fullName: DSACertificateExtensions.CopyWithPrivateKey(X509Certificate2, DSA)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Security.Cryptography.DSA\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: DSA\n  nameWithType: DSA\n  fullName: System.Security.Cryptography.DSA\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  isExternal: false\n  name: GetDSAPrivateKey(X509Certificate2)\n  nameWithType: DSACertificateExtensions.GetDSAPrivateKey(X509Certificate2)\n  fullName: DSACertificateExtensions.GetDSAPrivateKey(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  isExternal: false\n  name: GetDSAPublicKey(X509Certificate2)\n  nameWithType: DSACertificateExtensions.GetDSAPublicKey(X509Certificate2)\n  fullName: DSACertificateExtensions.GetDSAPublicKey(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey*\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  isExternal: false\n  name: CopyWithPrivateKey\n  nameWithType: DSACertificateExtensions.CopyWithPrivateKey\n  fullName: DSACertificateExtensions.CopyWithPrivateKey\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey*\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  isExternal: false\n  name: GetDSAPrivateKey\n  nameWithType: DSACertificateExtensions.GetDSAPrivateKey\n  fullName: DSACertificateExtensions.GetDSAPrivateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n- uid: System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey*\n  parent: System.Security.Cryptography.X509Certificates.DSACertificateExtensions\n  isExternal: false\n  name: GetDSAPublicKey\n  nameWithType: DSACertificateExtensions.GetDSAPublicKey\n  fullName: DSACertificateExtensions.GetDSAPublicKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/DSACertificateExtensions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}