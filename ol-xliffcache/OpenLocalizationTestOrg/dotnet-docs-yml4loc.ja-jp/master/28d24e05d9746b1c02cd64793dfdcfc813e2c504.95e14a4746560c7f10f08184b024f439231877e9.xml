{"nodes":[{"content":"Provides validation of an <xref href=\"System.Int32\"></xref> value.","nodes":[{"pos":[0,66],"content":"Provides validation of an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value.","source":"Provides validation of an <xref href=\"System.Int32\"></xref> value."}],"pos":[842,909],"yaml":true},{"content":"The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.  \n  \n The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","nodes":[{"pos":[0,876],"content":"The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.","nodes":[{"content":"The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.","pos":[0,876],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator&gt;</ph> class is used to ensure that an integer meets specific criteria.","pos":[0,113],"source":"The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria."},{"content":"The criteria for validation are established when an instance of the <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator&gt;</ph> class is created.","pos":[114,244],"source":" The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt;</ph> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.","pos":[245,423],"source":" The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt;</ph> constructor with three parameters checks both the minimum and maximum <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> values, as well as whether the value to be validated is within the specified range.","pos":[424,657],"source":" The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt;</ph> constructor with four parameters checks the previous three parameters and also checks whether the <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value is equal to a specific resolution.","pos":[658,876],"source":" The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution."}]}]},{"pos":[883,1155],"content":"The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","nodes":[{"content":"The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","pos":[0,272],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.CanValidate%2A&gt;</ph> method determines whether the object type being validated matches the expected type.","pos":[0,148],"source":"The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type."},{"content":"The object being validated is passed as a parameter of the <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.Validate%2A&gt;</ph> method.","pos":[149,272],"source":" The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method."}]}]}],"pos":[920,2080],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.IntegerValidator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class."}],"pos":[4219,4319],"yaml":true},{"content":"This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.","nodes":[{"pos":[0,160],"content":"This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt;</ph> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.","pos":[0,160],"source":"This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length."}]}],"pos":[4330,4491],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies the minimum value.","nodes":[{"pos":[0,77],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies the minimum value.","source":"An <xref href=\"System.Int32\"></xref> object that specifies the minimum value."}],"pos":[4647,4725],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies the maximum value.","nodes":[{"pos":[0,77],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies the maximum value.","source":"An <xref href=\"System.Int32\"></xref> object that specifies the maximum value."}],"pos":[4788,4866],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.IntegerValidator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class."}],"pos":[6186,6286],"yaml":true},{"content":"When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.","nodes":[{"pos":[0,430],"content":"When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.","nodes":[{"content":"When creating an instance of  the <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator&gt;</ph> class, this <ph id=\"ph2\">&lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt;</ph> constructor checks both the minimum and maximum <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> values, as well as whether the validation range is exclusive.","pos":[0,276],"source":"When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive."},{"content":"When the <ph id=\"ph1\">`rangeIsExclusive`</ph> parameter is set to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> value must not be between the <ph id=\"ph4\">`minValue`</ph> and <ph id=\"ph5\">`maxValue`</ph> parameter values.","pos":[277,430],"source":" When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values."}]}],"pos":[6297,6728],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies the minimum value.","nodes":[{"pos":[0,77],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies the minimum value.","source":"An <xref href=\"System.Int32\"></xref> object that specifies the minimum value."}],"pos":[7504,7582],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies the maximum value.","nodes":[{"pos":[0,77],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies the maximum value.","source":"An <xref href=\"System.Int32\"></xref> object that specifies the maximum value."}],"pos":[7645,7723],"yaml":true},{"content":"`true` to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.","nodes":[{"pos":[0,207],"content":"`true` to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to specify that the validation range is exclusive.","pos":[0,57],"source":"`true` to specify that the validation range is exclusive."},{"content":"Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.","pos":[58,207]}]}],"pos":[7796,8006],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.IntegerValidator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class."}],"pos":[9386,9486],"yaml":true},{"content":"The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value being validated must be equal to the <ph id=\"ph2\">`resolution`</ph> value in order to pass validation.","source":"The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation."}],"pos":[9497,9612],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies the minimum length of the integer value.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies the minimum length of the integer value.","source":"An <xref href=\"System.Int32\"></xref> object that specifies the minimum length of the integer value."}],"pos":[9807,9907],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies the maximum length of the integer value.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies the maximum length of the integer value.","source":"An <xref href=\"System.Int32\"></xref> object that specifies the maximum length of the integer value."}],"pos":[9970,10070],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the validation range is exclusive.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the validation range is exclusive.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the validation range is exclusive."}],"pos":[10143,10245],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> object that specifies a value that must be matched.","nodes":[{"pos":[0,88],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object that specifies a value that must be matched.","source":"An <xref href=\"System.Int32\"></xref> object that specifies a value that must be matched."}],"pos":[10310,10399],"yaml":true},{"content":"<code>resolution</code> is less than `0`.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;resolution&lt;/code&gt;</ph> is less than <ph id=\"ph2\">`0`</ph>.","source":"<code>resolution</code> is less than `0`."},{"pos":[48,55],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[62,122],"content":"<ph id=\"ph1\">&lt;code&gt;minValue&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;maxValue&lt;/code&gt;</ph>.","source":"<code>minValue</code> is greater than <code>maxValue</code>."}],"pos":[10584,10714],"yaml":true},{"content":"Determines whether the type of the object can be validated.","nodes":[{"pos":[0,59],"content":"Determines whether the type of the object can be validated.","nodes":[{"content":"Determines whether the type of the object can be validated.","pos":[0,59]}]}],"pos":[11818,11878],"yaml":true},{"content":"The type of the object.","nodes":[{"pos":[0,23],"content":"The type of the object.","nodes":[{"content":"The type of the object.","pos":[0,23]}]}],"pos":[12631,12655],"yaml":true},{"content":"`true` if the <code>type</code> parameter matches an <xref href=\"System.Int32\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter matches an <ph id=\"ph3\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>type</code> parameter matches an <xref href=\"System.Int32\"></xref> value; otherwise, `false`."}],"pos":[12713,12829],"yaml":true},{"content":"Determines whether the value of an object is valid.","nodes":[{"pos":[0,51],"content":"Determines whether the value of an object is valid.","nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]}],"pos":[14007,14059],"yaml":true},{"content":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","nodes":[{"pos":[0,355],"content":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","nodes":[{"content":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","pos":[0,355],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator&gt;</ph> object contains the rules necessary to validate an integer object.","pos":[0,114],"source":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object."},{"content":"The rules are established when an instance of the <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator&gt;</ph> class is created.","pos":[115,227],"source":" The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created."},{"content":"The integer object to validate is passed as a parameter of the <ph id=\"ph1\">&lt;xref:System.Configuration.IntegerValidator.Validate%2A&gt;</ph> method.","pos":[228,355],"source":" The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method."}]}]}],"pos":[14070,14426],"yaml":true,"extradata":"MT"},{"content":"The value to be validated.","nodes":[{"pos":[0,26],"content":"The value to be validated.","nodes":[{"content":"The value to be validated.","pos":[0,26]}]}],"pos":[15165,15192],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.IntegerValidator\n  commentId: T:System.Configuration.IntegerValidator\n  id: IntegerValidator\n  children:\n  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  - System.Configuration.IntegerValidator.CanValidate(System.Type)\n  - System.Configuration.IntegerValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: IntegerValidator\n  nameWithType: IntegerValidator\n  fullName: System.Configuration.IntegerValidator\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Provides validation of an <xref href=\"System.Int32\"></xref> value.\n  remarks: \"The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.  \\n  \\n The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.  \\n  \\n [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]\\n [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]\"\n  syntax:\n    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  commentId: M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: IntegerValidator(Int32, Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32)\n  fullName: IntegerValidator.IntegerValidator(Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.\n  remarks: This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.\n  syntax:\n    content: public IntegerValidator (int minValue, int maxValue);\n    parameters:\n    - id: minValue\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies the minimum value.\n    - id: maxValue\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies the maximum value.\n  overload: System.Configuration.IntegerValidator.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  commentId: M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  id: '#ctor(System.Int32,System.Int32,System.Boolean)'\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: IntegerValidator(Int32, Int32, Boolean)\n  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)\n  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.\n  remarks: When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \\n  \\n [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]\\n [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]\"\n  syntax:\n    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);\n    parameters:\n    - id: minValue\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies the minimum value.\n    - id: maxValue\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies the maximum value.\n    - id: rangeIsExclusive\n      type: System.Boolean\n      description: '`true` to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.'\n  overload: System.Configuration.IntegerValidator.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  commentId: M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: IntegerValidator(Int32, Int32, Boolean, Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)\n  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.\n  remarks: The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.\n  syntax:\n    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);\n    parameters:\n    - id: minValue\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies the minimum length of the integer value.\n    - id: maxValue\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies the maximum length of the integer value.\n    - id: rangeIsExclusive\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the validation range is exclusive.\n    - id: resolution\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> object that specifies a value that must be matched.\n  overload: System.Configuration.IntegerValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>resolution</code> is less than `0`.  \\n  \\n \\\\- or -  \\n  \\n <code>minValue</code> is greater than <code>maxValue</code>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)\n  commentId: M:System.Configuration.IntegerValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: IntegerValidator.CanValidate(Type)\n  fullName: IntegerValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Determines whether the type of the object can be validated.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \\n  \\n [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]\\n [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]\"\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>type</code> parameter matches an <xref href=\"System.Int32\"></xref> value; otherwise, `false`.'\n  overload: System.Configuration.IntegerValidator.CanValidate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.IntegerValidator.Validate(System.Object)\n  commentId: M:System.Configuration.IntegerValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: IntegerValidator.Validate(Object)\n  fullName: IntegerValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \\n  \\n [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]\\n [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]\"\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to be validated.\n  overload: System.Configuration.IntegerValidator.Validate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationValidatorBase\n  nameWithType: ConfigurationValidatorBase\n  fullName: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator(Int32, Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32)\n  fullName: IntegerValidator.IntegerValidator(Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator(Int32, Int32, Boolean)\n  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)\n  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator(Int32, Int32, Boolean, Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)\n  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)\n- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: IntegerValidator.CanValidate(Type)\n  fullName: IntegerValidator.CanValidate(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.IntegerValidator.Validate(System.Object)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: IntegerValidator.Validate(Object)\n  fullName: IntegerValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.IntegerValidator.#ctor*\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator\n  nameWithType: IntegerValidator.IntegerValidator\n  fullName: IntegerValidator.IntegerValidator\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n- uid: System.Configuration.IntegerValidator.CanValidate*\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: IntegerValidator.CanValidate\n  fullName: IntegerValidator.CanValidate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n- uid: System.Configuration.IntegerValidator.Validate*\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: Validate\n  nameWithType: IntegerValidator.Validate\n  fullName: IntegerValidator.Validate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}