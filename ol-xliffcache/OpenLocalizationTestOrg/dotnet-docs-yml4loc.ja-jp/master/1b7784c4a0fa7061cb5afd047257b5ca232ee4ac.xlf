<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b7784c4a0fa7061cb5afd047257b5ca232ee4ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.ICustomTypeDescriptor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15d2d2ade8d232243b4957fdfcd2988b43035528</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d626733efacc2bc4fe712dfc6377858158ca5ef</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface that supplies dynamic custom type information for an object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface allows an object to provide type information about itself.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this interface is used when an object needs dynamic type information.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class provides static type information that is obtained from metadata.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> is used in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> to provide type information for COM objects.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>COM objects do not support properties or attributes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> uses <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> to implement properties and attributes for COM objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide dynamic custom type information, a class can implement <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> or derive from the <ph id="ph2">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class, which provides a simple implementation of this interface.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no design-time support for data binding to objects that implement the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, when binding to a runtime instance of <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, the public properties of the underlying type are ignored.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns a collection of custom attributes for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is never <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementers can return an empty <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph> if no custom attributes are specified for an object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;&lt;/xref&gt;</ph> containing the attributes for this object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the class name of this instance of a component.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is returned, use the type name from the <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The class name of the object, or <ph id="ph1">`null`</ph> if the class does not have a name.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns the name of this instance of a component.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is returned, use the default name.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the object, or <ph id="ph1">`null`</ph> if the object does not have a name.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns a type converter for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is returned, use the default <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> that is the converter for this object, or <ph id="ph2">`null`</ph> if there is no <ph id="ph3">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> for this object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns the default event for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;&lt;/xref&gt;</ph> that represents the default event for this object, or <ph id="ph2">`null`</ph> if this object does not have events.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns the default property for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that represents the default property for this object, or <ph id="ph2">`null`</ph> if this object does not have properties.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns an editor of the specified type for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the <ph id="ph1">`editorBaseType`</ph> parameter is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example, <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that represents the editor for this object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> of the specified type that is the editor for this object, or <ph id="ph2">`null`</ph> if the editor cannot be found.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns the events for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The events for this instance can differ from the set of events that the class provides.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the component is site-based, the site can add or remove additional events.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementors can return <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName&gt;</ph> if no properties are specified.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should never return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the events for this component instance.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns the events for this instance of a component using the specified attribute array as a filter.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The events for this instance can differ from the set of events that the class provides.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the component is site-based, the site can add or remove additional events.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> is specified in the <ph id="ph2">`attributes`</ph> array and the event does not have an instance of the class for that attribute, the returned array includes the event if the <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> is the default event.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Attribute"&gt;&lt;/xref&gt;</ph> that is used as a filter.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the filtered events for this component instance.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the properties for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for this instance can differ from the set of properties that the class provides.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the component is sited, the site can add or remove additional properties.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementers can return <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName&gt;</ph> if no properties are specified.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should never return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the properties for this component instance.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns the properties for this instance of a component using the attribute array as a filter.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties for this instance can differ from the set of properties that the class provides.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the component is sited, the site can add or remove additional properties.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> is specified in the <ph id="ph2">`attributes`</ph> array and the property does not have an instance of the class for that attribute, the returned collection will include the property if the <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> is the default property.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For filtering rules, see <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Attribute"&gt;&lt;/xref&gt;</ph> that is used as a filter.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the filtered properties for this component instance.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns an object that contains the property described by the specified property descriptor.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner%2A&gt;</ph> method retrieves the object that contains the property member that is described by <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this object is required for the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should return an object that you can use as follows:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`myPd`</ph> is <ph id="ph2">`null`</ph>, your implementation of the <ph id="ph3">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface should return the default object (typically, the base object that exposes the properties and attributes).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that represents the property whose owner is to be found.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the owner of the specified property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>