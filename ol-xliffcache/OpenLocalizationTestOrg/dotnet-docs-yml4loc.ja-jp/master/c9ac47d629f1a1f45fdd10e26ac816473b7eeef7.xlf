<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9ac47d629f1a1f45fdd10e26ac816473b7eeef7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Resources.IResourceWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">faa0f20cf6d8ab77101a333087fef1abf7031df8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c61a7230481ac6325df73bbf23ab355dc08a7ac8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base functionality for writing resources to an output file or stream.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resource writers are used to write resources to files in a particular file format.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, use the default <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, which writes resources to a binary .resources file, or the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> class, which writes resources to an XML resource (.resx) file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resources are not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name of a resource.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Value of a resource as an 8-bit unsigned integer array.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Adds a named resource of type <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `value`</ph> might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds a named resource of type <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Closes the underlying resource file or stream, ensuring all the data has been written to the file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If necessary, <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will call the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method to output the resources to the underlying file or stream before closing it.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Writes all the resources added by the <ph id="ph1">&lt;xref href="System.Resources.IResourceWriter.AddResource(System.String,System.String)"&gt;&lt;/xref&gt;</ph> method to the output file or stream.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> does not close the output file or output stream.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, consider calling the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> is useful when you want to create a resource file, but you don't want to close the output stream.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> can be called only once.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you call <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>, all <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> methods other than <ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will throw an exception.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>