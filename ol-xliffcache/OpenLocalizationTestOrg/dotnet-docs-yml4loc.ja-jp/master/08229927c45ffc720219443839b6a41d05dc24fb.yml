### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories
  commentId: T:Microsoft.VisualBasic.FileIO.SpecialDirectories
  id: SpecialDirectories
  children:
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  langs:
  - csharp
  name: SpecialDirectories
  nameWithType: SpecialDirectories
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Provides properties for accessing commonly referenced directories.
  remarks: "If the path for the referenced directory is empty, usually due to the operating system not supporting the directory, a <xref:System.IO.DirectoryNotFoundException> exception is thrown.  \n  \n No backslash (\\\\) appears at the end of the path.  \n  \n The following table lists examples of tasks involving the `My.Computer.FileSystem.SpecialDirectories` object.  \n  \n|To|See|  \n|-|-|  \n|Read from the MyDocuments directory|[How to: Retrieve the Contents of the My Documents Directory](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-retrieve-the-contents-of-the-my-documents-directory.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example returns the `filePath` for the user's Desktop directory and displays it.  \n  \n [!code-vb[VbVbcnMyFileSystem#80](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#80)]"
  syntax:
    content: public class SpecialDirectories
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  commentId: M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: SpecialDirectories()
  nameWithType: SpecialDirectories.SpecialDirectories()
  fullName: SpecialDirectories.SpecialDirectories()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Returns an instance of the <xref href="Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories"></xref> class.
  syntax:
    content: public SpecialDirectories ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  id: AllUsersApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: AllUsersApplicationData
  nameWithType: SpecialDirectories.AllUsersApplicationData
  fullName: SpecialDirectories.AllUsersApplicationData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the Application Data directory for the all users.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories.
  example:
  - "This example displays the path to the Application Data directory for the all users in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#79](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#79)]"
  syntax:
    content: public static string AllUsersApplicationData { get; }
    return:
      type: System.String
      description: The path to the Application Data directory for the all users.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData*
  exceptions:
  - type: System.Security.Permissions.EnvironmentPermission
    commentId: T:System.Security.Permissions.EnvironmentPermission
    description: 'Controls access to system and user environment variables. Associated enumeration: <xref href="System.Security.Permissions.PermissionState.Unrestricted"></xref>.'
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  id: CurrentUserApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: CurrentUserApplicationData
  nameWithType: SpecialDirectories.CurrentUserApplicationData
  fullName: SpecialDirectories.CurrentUserApplicationData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the Application Data directory for the current user.
  remarks: The SpecialDirectories object contains paths to commonly referenced directories.
  example:
  - "This example displays the path to the Application Data directory for the current user in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#48)]"
  syntax:
    content: public static string CurrentUserApplicationData { get; }
    return:
      type: System.String
      description: The path to the Application Data directory for the current user.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  id: Desktop
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: Desktop
  nameWithType: SpecialDirectories.Desktop
  fullName: SpecialDirectories.Desktop
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the Desktop directory.
  remarks: The SpecialDirectories object contains paths to commonly referenced directories.
  example:
  - "This example displays the path for the Desktop directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#60)]"
  syntax:
    content: public static string Desktop { get; }
    return:
      type: System.String
      description: The path to the Desktop directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  id: MyDocuments
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: MyDocuments
  nameWithType: SpecialDirectories.MyDocuments
  fullName: SpecialDirectories.MyDocuments
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the My Documents directory.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories.
  example:
  - "This example displays the path for the My Documents directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#53)]"
  syntax:
    content: public static string MyDocuments { get; }
    return:
      type: System.String
      description: The path to the My Documents directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  id: MyMusic
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: MyMusic
  nameWithType: SpecialDirectories.MyMusic
  fullName: SpecialDirectories.MyMusic
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the My Music directory.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories.
  example:
  - "This example displays the path for the My Music directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#26)]"
  syntax:
    content: public static string MyMusic { get; }
    return:
      type: System.String
      description: The path to the My Music directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  id: MyPictures
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: MyPictures
  nameWithType: SpecialDirectories.MyPictures
  fullName: SpecialDirectories.MyPictures
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the My Pictures directory.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories.
  example:
  - "This example displays the path for the MyPictures directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#77](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#77)]"
  syntax:
    content: public static string MyPictures { get; }
    return:
      type: System.String
      description: The path to the My Pictures directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  id: ProgramFiles
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: ProgramFiles
  nameWithType: SpecialDirectories.ProgramFiles
  fullName: SpecialDirectories.ProgramFiles
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path pointing to the **Program Files** directory.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories. The **Program Files** directory contains the computer's program files.
  example:
  - "This example displays the path for the **Program Files** directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#90](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#90)]"
  syntax:
    content: public static string ProgramFiles { get; }
    return:
      type: System.String
      description: The path to the **Program Files** directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  id: Programs
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: Programs
  nameWithType: SpecialDirectories.Programs
  fullName: SpecialDirectories.Programs
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the Programs directory.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories. The Programs directory contains the user's program groups.
  example:
  - "This example displays the path for the Programs directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#61)]"
  syntax:
    content: public static string Programs { get; }
    return:
      type: System.String
      description: The path to the Programs directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  commentId: P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  id: Temp
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: Temp
  nameWithType: SpecialDirectories.Temp
  fullName: SpecialDirectories.Temp
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: Gets a path name pointing to the Temp directory.
  remarks: The `SpecialDirectories` object contains paths to commonly referenced directories.
  example:
  - "This example displays the path for the Temp directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#31)]"
  syntax:
    content: public static string Temp { get; }
    return:
      type: System.String
      description: The path to the Temp directory.
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The path is empty, usually because the operating system does not support the directory.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Permissions.EnvironmentPermission
  parent: System.Security.Permissions
  isExternal: false
  name: EnvironmentPermission
  nameWithType: EnvironmentPermission
  fullName: System.Security.Permissions.EnvironmentPermission
- uid: System.IO.DirectoryNotFoundException
  parent: System.IO
  isExternal: false
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: SpecialDirectories()
  nameWithType: SpecialDirectories.SpecialDirectories()
  fullName: SpecialDirectories.SpecialDirectories()
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: AllUsersApplicationData
  nameWithType: SpecialDirectories.AllUsersApplicationData
  fullName: SpecialDirectories.AllUsersApplicationData
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: CurrentUserApplicationData
  nameWithType: SpecialDirectories.CurrentUserApplicationData
  fullName: SpecialDirectories.CurrentUserApplicationData
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Desktop
  nameWithType: SpecialDirectories.Desktop
  fullName: SpecialDirectories.Desktop
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyDocuments
  nameWithType: SpecialDirectories.MyDocuments
  fullName: SpecialDirectories.MyDocuments
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyMusic
  nameWithType: SpecialDirectories.MyMusic
  fullName: SpecialDirectories.MyMusic
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyPictures
  nameWithType: SpecialDirectories.MyPictures
  fullName: SpecialDirectories.MyPictures
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: ProgramFiles
  nameWithType: SpecialDirectories.ProgramFiles
  fullName: SpecialDirectories.ProgramFiles
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Programs
  nameWithType: SpecialDirectories.Programs
  fullName: SpecialDirectories.Programs
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Temp
  nameWithType: SpecialDirectories.Temp
  fullName: SpecialDirectories.Temp
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: SpecialDirectories
  nameWithType: SpecialDirectories.SpecialDirectories
  fullName: SpecialDirectories.SpecialDirectories
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: AllUsersApplicationData
  nameWithType: SpecialDirectories.AllUsersApplicationData
  fullName: SpecialDirectories.AllUsersApplicationData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: CurrentUserApplicationData
  nameWithType: SpecialDirectories.CurrentUserApplicationData
  fullName: SpecialDirectories.CurrentUserApplicationData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Desktop
  nameWithType: SpecialDirectories.Desktop
  fullName: SpecialDirectories.Desktop
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyDocuments
  nameWithType: SpecialDirectories.MyDocuments
  fullName: SpecialDirectories.MyDocuments
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyMusic
  nameWithType: SpecialDirectories.MyMusic
  fullName: SpecialDirectories.MyMusic
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyPictures
  nameWithType: SpecialDirectories.MyPictures
  fullName: SpecialDirectories.MyPictures
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: ProgramFiles
  nameWithType: SpecialDirectories.ProgramFiles
  fullName: SpecialDirectories.ProgramFiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Programs
  nameWithType: SpecialDirectories.Programs
  fullName: SpecialDirectories.Programs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Temp
  nameWithType: SpecialDirectories.Temp
  fullName: SpecialDirectories.Temp
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/SpecialDirectories.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
