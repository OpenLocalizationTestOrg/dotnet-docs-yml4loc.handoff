{"nodes":[{"content":"Visits each element of an expression tree from a given root expression. If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.","nodes":[{"pos":[0,225],"content":"Visits each element of an expression tree from a given root expression. If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.","nodes":[{"content":"Visits each element of an expression tree from a given root expression. If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.","pos":[0,225],"nodes":[{"content":"Visits each element of an expression tree from a given root expression.","pos":[0,71]},{"content":"If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.","pos":[72,225]}]}]}],"pos":[8306,8532],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.DefaultExpressionVisitor\"></xref> class.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DefaultExpressionVisitor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.DefaultExpressionVisitor\"></xref> class."}],"pos":[10184,10303],"yaml":true},{"content":"Represents an event when entering the scope for the expression visitor with specified scope variables.","nodes":[{"pos":[0,102],"content":"Represents an event when entering the scope for the expression visitor with specified scope variables.","nodes":[{"content":"Represents an event when entering the scope for the expression visitor with specified scope variables.","pos":[0,102]}]}],"pos":[11977,12080],"yaml":true},{"content":"The collection of scope variables.","nodes":[{"pos":[0,34],"content":"The collection of scope variables.","nodes":[{"content":"The collection of scope variables.","pos":[0,34]}]}],"pos":[12433,12468],"yaml":true},{"content":"Exits the scope for the expression visitor.","nodes":[{"pos":[0,43],"content":"Exits the scope for the expression visitor.","nodes":[{"content":"Exits the scope for the expression visitor.","pos":[0,43]}]}],"pos":[13627,13671],"yaml":true},{"content":"Replaces an old expression with a new one for the expression visitor.","nodes":[{"pos":[0,69],"content":"Replaces an old expression with a new one for the expression visitor.","nodes":[{"content":"Replaces an old expression with a new one for the expression visitor.","pos":[0,69]}]}],"pos":[15315,15385],"yaml":true},{"content":"The old expression.","nodes":[{"pos":[0,19],"content":"The old expression.","nodes":[{"content":"The old expression.","pos":[0,19]}]}],"pos":[15690,15710],"yaml":true},{"content":"The new expression.","nodes":[{"pos":[0,19],"content":"The new expression.","nodes":[{"content":"The new expression.","pos":[0,19]}]}],"pos":[15810,15830],"yaml":true},{"content":"Represents an event when the variable is rebound for the expression visitor.","nodes":[{"pos":[0,76],"content":"Represents an event when the variable is rebound for the expression visitor.","nodes":[{"content":"Represents an event when the variable is rebound for the expression visitor.","pos":[0,76]}]}],"pos":[17588,17665],"yaml":true},{"content":"The location of the variable.","nodes":[{"pos":[0,29],"content":"The location of the variable.","nodes":[{"content":"The location of the variable.","pos":[0,29]}]}],"pos":[18007,18037],"yaml":true},{"content":"The reference of the variable where it is rebounded.","nodes":[{"pos":[0,52],"content":"The reference of the variable where it is rebounded.","nodes":[{"content":"The reference of the variable where it is rebounded.","pos":[0,52]}]}],"pos":[18149,18202],"yaml":true},{"content":"Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.","nodes":[{"pos":[0,116],"content":"Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.","nodes":[{"content":"Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.","pos":[0,116]}]}],"pos":[19528,19645],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[19915,19931],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[20019,20044],"yaml":true},{"content":"Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.","nodes":[{"pos":[0,133],"content":"Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.","nodes":[{"content":"Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.","pos":[0,133]}]}],"pos":[21364,21498],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[21770,21786],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[21874,21899],"yaml":true},{"content":"Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.","nodes":[{"pos":[0,118],"content":"Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.","nodes":[{"content":"Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.","pos":[0,118]}]}],"pos":[23255,23374],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[23658,23674],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[23762,23787],"yaml":true},{"content":"Implements the visitor pattern for a reference to a typed null literal.","nodes":[{"pos":[0,71],"content":"Implements the visitor pattern for a reference to a typed null literal.","nodes":[{"content":"Implements the visitor pattern for a reference to a typed null literal.","pos":[0,71]}]}],"pos":[25101,25173],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[25443,25459],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[25547,25572],"yaml":true},{"content":"Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.","nodes":[{"pos":[0,111],"content":"Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.","nodes":[{"content":"Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.","pos":[0,111]}]}],"pos":[26898,27010],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[27284,27300],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[27388,27413],"yaml":true},{"content":"Implements the visitor pattern for the logical OR of two Boolean arguments.","nodes":[{"pos":[0,75],"content":"Implements the visitor pattern for the logical OR of two Boolean arguments.","nodes":[{"content":"Implements the visitor pattern for the logical OR of two Boolean arguments.","pos":[0,75]}]}],"pos":[28715,28791],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[29057,29073],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[29161,29186],"yaml":true},{"content":"Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.","nodes":[{"pos":[0,121],"content":"Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.","nodes":[{"content":"Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.","pos":[0,121]}]}],"pos":[30584,30706],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[31004,31020],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[31108,31133],"yaml":true},{"content":"Implements the visitor pattern for the projection of a given input set over the specified expression.","nodes":[{"pos":[0,101],"content":"Implements the visitor pattern for the projection of a given input set over the specified expression.","nodes":[{"content":"Implements the visitor pattern for the projection of a given input set over the specified expression.","pos":[0,101]}]}],"pos":[32465,32567],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[32843,32859],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[32947,32972],"yaml":true},{"content":"Implements the visitor pattern for retrieving an instance property.","nodes":[{"pos":[0,67],"content":"Implements the visitor pattern for retrieving an instance property.","nodes":[{"content":"Implements the visitor pattern for retrieving an instance property.","pos":[0,67]}]}],"pos":[34310,34378],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[34656,34672],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[34760,34785],"yaml":true},{"content":"Implements the visitor pattern for the retrieval of the key value from the underlying reference value.","nodes":[{"pos":[0,102],"content":"Implements the visitor pattern for the retrieval of the key value from the underlying reference value.","nodes":[{"content":"Implements the visitor pattern for the retrieval of the key value from the underlying reference value.","pos":[0,102]}]}],"pos":[36111,36214],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[36488,36504],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[36592,36617],"yaml":true},{"content":"Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.","nodes":[{"pos":[0,106],"content":"Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.","nodes":[{"content":"Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.","pos":[0,106]}]}],"pos":[37925,38032],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[38300,38316],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[38404,38429],"yaml":true},{"content":"Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.","nodes":[{"pos":[0,121],"content":"Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.","nodes":[{"content":"Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.","pos":[0,121]}]}],"pos":[39755,39877],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[40151,40167],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[40255,40280],"yaml":true},{"content":"Implements the visitor pattern for the navigation of a relationship.","nodes":[{"pos":[0,68],"content":"Implements the visitor pattern for the navigation of a relationship.","nodes":[{"content":"Implements the visitor pattern for the navigation of a relationship.","pos":[0,68]}]}],"pos":[41702,41771],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[42077,42093],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[42181,42206],"yaml":true},{"content":"Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.","nodes":[{"pos":[0,118],"content":"Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.","nodes":[{"content":"Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.","pos":[0,118]}]}],"pos":[43520,43639],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[43909,43925],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[44013,44038],"yaml":true},{"content":"Implements the visitor pattern for the skip expression.","nodes":[{"pos":[0,55],"content":"Implements the visitor pattern for the skip expression.","nodes":[{"content":"Implements the visitor pattern for the skip expression.","pos":[0,55]}]}],"pos":[45352,45408],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[45678,45694],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[45782,45807],"yaml":true},{"content":"Implements the visitor pattern for a sort key that can be used as part of the sort order.","nodes":[{"pos":[0,89],"content":"Implements the visitor pattern for a sort key that can be used as part of the sort order.","nodes":[{"content":"Implements the visitor pattern for a sort key that can be used as part of the sort order.","pos":[0,89]}]}],"pos":[47121,47211],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[47481,47497],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[47585,47610],"yaml":true},{"content":"Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.","nodes":[{"pos":[0,97],"content":"Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.","nodes":[{"content":"Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.","pos":[0,97]}]}],"pos":[48930,49028],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[49300,49316],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[49404,49429],"yaml":true},{"content":"Implements the visitor pattern for the set union operation between the left and right operands.","nodes":[{"pos":[0,95],"content":"Implements the visitor pattern for the set union operation between the left and right operands.","nodes":[{"content":"Implements the visitor pattern for the set union operation between the left and right operands.","pos":[0,95]}]}],"pos":[50767,50863],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[51141,51157],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[51245,51270],"yaml":true},{"content":"Implements the visitor pattern for a reference to a variable that is currently in scope.","nodes":[{"pos":[0,88],"content":"Implements the visitor pattern for a reference to a variable that is currently in scope.","nodes":[{"content":"Implements the visitor pattern for a reference to a variable that is currently in scope.","pos":[0,88]}]}],"pos":[52662,52751],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[53047,53063],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[53151,53176],"yaml":true},{"content":"Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.","nodes":[{"pos":[0,125],"content":"Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.","nodes":[{"content":"Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.","pos":[0,125]}]}],"pos":[54526,54652],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[54934,54950],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[55038,55063],"yaml":true},{"content":"Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.","nodes":[{"pos":[0,157],"content":"Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.","nodes":[{"content":"Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.","pos":[0,157]}]}],"pos":[56377,56535],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[56805,56821],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[56909,56934],"yaml":true},{"content":"Implements the visitor pattern for the logical NOT of a single Boolean argument.","nodes":[{"pos":[0,80],"content":"Implements the visitor pattern for the logical NOT of a single Boolean argument.","nodes":[{"content":"Implements the visitor pattern for the logical NOT of a single Boolean argument.","pos":[0,80]}]}],"pos":[58242,58323],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[58591,58607],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[58695,58720],"yaml":true},{"content":"Implements the visitor pattern for the null determination applied to a single argument.","nodes":[{"pos":[0,87],"content":"Implements the visitor pattern for the null determination applied to a single argument.","nodes":[{"content":"Implements the visitor pattern for the null determination applied to a single argument.","pos":[0,87]}]}],"pos":[60046,60134],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[60408,60424],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[60512,60537],"yaml":true},{"content":"Implements the visitor pattern for the logical AND expression.","nodes":[{"pos":[0,62],"content":"Implements the visitor pattern for the logical AND expression.","nodes":[{"content":"Implements the visitor pattern for the logical AND expression.","pos":[0,62]}]}],"pos":[61845,61908],"yaml":true},{"content":"The logical AND expression.","nodes":[{"pos":[0,27],"content":"The logical AND expression.","nodes":[{"content":"The logical AND expression.","pos":[0,27]}]}],"pos":[62176,62204],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[62292,62317],"yaml":true},{"content":"Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.","nodes":[{"pos":[0,120],"content":"Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.","nodes":[{"content":"Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.","pos":[0,120]}]}],"pos":[63637,63758],"yaml":true},{"content":"The APPLY expression.","nodes":[{"pos":[0,21],"content":"The APPLY expression.","nodes":[{"content":"The APPLY expression.","pos":[0,21]}]}],"pos":[64030,64052],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[64140,64165],"yaml":true},{"content":"Implements the visitor pattern for the arithmetic operation applied to numeric arguments.","nodes":[{"pos":[0,89],"content":"Implements the visitor pattern for the arithmetic operation applied to numeric arguments.","nodes":[{"content":"Implements the visitor pattern for the arithmetic operation applied to numeric arguments.","pos":[0,89]}]}],"pos":[65515,65605],"yaml":true},{"content":"The arithmetic expression.","nodes":[{"pos":[0,26],"content":"The arithmetic expression.","nodes":[{"content":"The arithmetic expression.","pos":[0,26]}]}],"pos":[65887,65914],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[66002,66027],"yaml":true},{"content":"Implements the visitor pattern for the type comparison of a single argument against the specified type.","nodes":[{"pos":[0,103],"content":"Implements the visitor pattern for the type comparison of a single argument against the specified type.","nodes":[{"content":"Implements the visitor pattern for the type comparison of a single argument against the specified type.","pos":[0,103]}]}],"pos":[67341,67445],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[67715,67731],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[67819,67844],"yaml":true},{"content":"Implements the visitor pattern for the type conversion of a single argument to the specified type.","nodes":[{"pos":[0,98],"content":"Implements the visitor pattern for the type conversion of a single argument to the specified type.","nodes":[{"content":"Implements the visitor pattern for the type conversion of a single argument to the specified type.","pos":[0,98]}]}],"pos":[69158,69257],"yaml":true},{"content":"The cast expression.","nodes":[{"pos":[0,20],"content":"The cast expression.","nodes":[{"content":"The cast expression.","pos":[0,20]}]}],"pos":[69527,69548],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[69636,69661],"yaml":true},{"content":"Implements the visitor pattern for the comparison operation applied to two arguments.","nodes":[{"pos":[0,85],"content":"Implements the visitor pattern for the comparison operation applied to two arguments.","nodes":[{"content":"Implements the visitor pattern for the comparison operation applied to two arguments.","pos":[0,85]}]}],"pos":[71011,71097],"yaml":true},{"content":"The cast expression.","nodes":[{"pos":[0,20],"content":"The cast expression.","nodes":[{"content":"The cast expression.","pos":[0,20]}]}],"pos":[71379,71400],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[71488,71513],"yaml":true},{"content":"Implements the visitor pattern for the different kinds of constants.","nodes":[{"pos":[0,68],"content":"Implements the visitor pattern for the different kinds of constants.","nodes":[{"content":"Implements the visitor pattern for the different kinds of constants.","pos":[0,68]}]}],"pos":[72851,72920],"yaml":true},{"content":"The constant expression.","nodes":[{"pos":[0,24],"content":"The constant expression.","nodes":[{"content":"The constant expression.","pos":[0,24]}]}],"pos":[73198,73223],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[73311,73336],"yaml":true},{"content":"Implements the visitor pattern for the unconditional join operation between the given collection arguments.","nodes":[{"pos":[0,107],"content":"Implements the visitor pattern for the unconditional join operation between the given collection arguments.","nodes":[{"content":"Implements the visitor pattern for the unconditional join operation between the given collection arguments.","pos":[0,107]}]}],"pos":[74680,74788],"yaml":true},{"content":"The join expression.","nodes":[{"pos":[0,20],"content":"The join expression.","nodes":[{"content":"The join expression.","pos":[0,20]}]}],"pos":[75068,75089],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[75177,75202],"yaml":true},{"content":"Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.","nodes":[{"pos":[0,108],"content":"Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.","nodes":[{"content":"Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.","pos":[0,108]}]}],"pos":[76522,76631],"yaml":true},{"content":"The DEREF expression.","nodes":[{"pos":[0,21],"content":"The DEREF expression.","nodes":[{"content":"The DEREF expression.","pos":[0,21]}]}],"pos":[76903,76925],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[77013,77038],"yaml":true},{"content":"Implements the visitor pattern for the removed duplicate elements from the specified set argument.","nodes":[{"pos":[0,98],"content":"Implements the visitor pattern for the removed duplicate elements from the specified set argument.","nodes":[{"content":"Implements the visitor pattern for the removed duplicate elements from the specified set argument.","pos":[0,98]}]}],"pos":[78376,78475],"yaml":true},{"content":"The distinct expression.","nodes":[{"pos":[0,24],"content":"The distinct expression.","nodes":[{"content":"The distinct expression.","pos":[0,24]}]}],"pos":[78753,78778],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[78866,78891],"yaml":true},{"content":"Implements the visitor pattern for the When, Then, and Else clauses.","nodes":[{"pos":[0,68],"content":"Implements the visitor pattern for the When, Then, and Else clauses.","nodes":[{"content":"Implements the visitor pattern for the When, Then, and Else clauses.","pos":[0,68]}]}],"pos":[80205,80274],"yaml":true},{"content":"The case expression.","nodes":[{"pos":[0,20],"content":"The case expression.","nodes":[{"content":"The case expression.","pos":[0,20]}]}],"pos":[80544,80565],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[80653,80678],"yaml":true},{"content":"Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.","nodes":[{"pos":[0,112],"content":"Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.","nodes":[{"content":"Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.","pos":[0,112]}]}],"pos":[82022,82135],"yaml":true},{"content":"The entity reference expression.","nodes":[{"pos":[0,32],"content":"The entity reference expression.","nodes":[{"content":"The entity reference expression.","pos":[0,32]}]}],"pos":[82415,82448],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[82536,82561],"yaml":true},{"content":"Implements the visitor pattern for the set subtraction operation between the left and right operands.","nodes":[{"pos":[0,101],"content":"Implements the visitor pattern for the set subtraction operation between the left and right operands.","nodes":[{"content":"Implements the visitor pattern for the set subtraction operation between the left and right operands.","pos":[0,101]}]}],"pos":[83887,83989],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[84263,84279],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[84367,84392],"yaml":true},{"content":"Implements the visitor pattern for the basic functionality required by expression types.","nodes":[{"pos":[0,88],"content":"Implements the visitor pattern for the basic functionality required by expression types.","nodes":[{"content":"Implements the visitor pattern for the basic functionality required by expression types.","pos":[0,88]}]}],"pos":[85682,85771],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[86033,86049],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[86137,86162],"yaml":true},{"content":"Implements the visitor pattern for a predicate applied to filter an input set.","nodes":[{"pos":[0,78],"content":"Implements the visitor pattern for a predicate applied to filter an input set.","nodes":[{"content":"Implements the visitor pattern for a predicate applied to filter an input set.","pos":[0,78]}]}],"pos":[87488,87567],"yaml":true},{"content":"The filter expression.","nodes":[{"pos":[0,22],"content":"The filter expression.","nodes":[{"content":"The filter expression.","pos":[0,22]}]}],"pos":[87841,87864],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[87952,87977],"yaml":true},{"content":"Implements the visitor pattern for an invocation of a function.","nodes":[{"pos":[0,63],"content":"Implements the visitor pattern for an invocation of a function.","nodes":[{"content":"Implements the visitor pattern for an invocation of a function.","pos":[0,63]}]}],"pos":[89315,89379],"yaml":true},{"content":"The function expression.","nodes":[{"pos":[0,24],"content":"The function expression.","nodes":[{"content":"The function expression.","pos":[0,24]}]}],"pos":[89657,89682],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[89770,89795],"yaml":true},{"content":"Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.","nodes":[{"pos":[0,155],"content":"Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.","nodes":[{"content":"Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.","pos":[0,155]}]}],"pos":[91127,91283],"yaml":true},{"content":"The element expression.","nodes":[{"pos":[0,23],"content":"The element expression.","nodes":[{"content":"The element expression.","pos":[0,23]}]}],"pos":[91559,91583],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[91671,91696],"yaml":true},{"content":"Implements the visitor pattern for a group by operation.","nodes":[{"pos":[0,56],"content":"Implements the visitor pattern for a group by operation.","nodes":[{"content":"Implements the visitor pattern for a group by operation.","pos":[0,56]}]}],"pos":[93028,93085],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[93361,93377],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[93465,93490],"yaml":true},{"content":"Implements the visitor pattern for the set intersection operation between the left and right operands.","nodes":[{"pos":[0,102],"content":"Implements the visitor pattern for the set intersection operation between the left and right operands.","nodes":[{"content":"Implements the visitor pattern for the set intersection operation between the left and right operands.","pos":[0,102]}]}],"pos":[94834,94937],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[95217,95233],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[95321,95346],"yaml":true},{"content":"Implements the visitor pattern for an empty set determination applied to a single set argument.","nodes":[{"pos":[0,95],"content":"Implements the visitor pattern for an empty set determination applied to a single set argument.","nodes":[{"content":"Implements the visitor pattern for an empty set determination applied to a single set argument.","pos":[0,95]}]}],"pos":[96678,96774],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[97050,97066],"yaml":true},{"content":"The implemented visitor.","nodes":[{"pos":[0,24],"content":"The implemented visitor.","nodes":[{"content":"The implemented visitor.","pos":[0,24]}]}],"pos":[97154,97179],"yaml":true},{"content":"Implements the visitor pattern for the aggregate.","nodes":[{"pos":[0,49],"content":"Implements the visitor pattern for the aggregate.","nodes":[{"content":"Implements the visitor pattern for the aggregate.","pos":[0,49]}]}],"pos":[98517,98567],"yaml":true},{"content":"The aggregate.","nodes":[{"pos":[0,14],"content":"The aggregate.","nodes":[{"content":"The aggregate.","pos":[0,14]}]}],"pos":[98835,98850],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[98937,98970],"yaml":true},{"content":"Implements the visitor pattern for the entity set.","nodes":[{"pos":[0,50],"content":"Implements the visitor pattern for the entity set.","nodes":[{"content":"Implements the visitor pattern for the entity set.","pos":[0,50]}]}],"pos":[100308,100359],"yaml":true},{"content":"The entity set.","nodes":[{"pos":[0,15],"content":"The entity set.","nodes":[{"content":"The entity set.","pos":[0,15]}]}],"pos":[100612,100628],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[100710,100743],"yaml":true},{"content":"Implements the visitor pattern for the expression.","nodes":[{"pos":[0,50],"content":"Implements the visitor pattern for the expression.","nodes":[{"content":"Implements the visitor pattern for the expression.","pos":[0,50]}]}],"pos":[102102,102153],"yaml":true},{"content":"The expression.","nodes":[{"pos":[0,15],"content":"The expression.","nodes":[{"content":"The expression.","pos":[0,15]}]}],"pos":[102427,102443],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[102531,102564],"yaml":true},{"content":"Implements the visitor pattern for expression binding.","nodes":[{"pos":[0,54],"content":"Implements the visitor pattern for expression binding.","nodes":[{"content":"Implements the visitor pattern for expression binding.","pos":[0,54]}]}],"pos":[104008,104063],"yaml":true},{"content":"The expression binding.","nodes":[{"pos":[0,23],"content":"The expression binding.","nodes":[{"content":"The expression binding.","pos":[0,23]}]}],"pos":[104359,104383],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[104478,104511],"yaml":true},{"content":"Implements the visitor pattern for the expression binding list.","nodes":[{"pos":[0,63],"content":"Implements the visitor pattern for the expression binding list.","nodes":[{"content":"Implements the visitor pattern for the expression binding list.","pos":[0,63]}]}],"pos":[106109,106173],"yaml":true},{"content":"The expression binding list.","nodes":[{"pos":[0,28],"content":"The expression binding list.","nodes":[{"content":"The expression binding list.","pos":[0,28]}]}],"pos":[106569,106598],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[106727,106760],"yaml":true},{"content":"Implements the visitor pattern for the expression list.","nodes":[{"pos":[0,55],"content":"Implements the visitor pattern for the expression list.","nodes":[{"content":"Implements the visitor pattern for the expression list.","pos":[0,55]}]}],"pos":[108278,108334],"yaml":true},{"content":"The expression list.","nodes":[{"pos":[0,20],"content":"The expression list.","nodes":[{"content":"The expression list.","pos":[0,20]}]}],"pos":[108702,108723],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[108845,108878],"yaml":true},{"content":"Implements the visitor pattern for the function.","nodes":[{"pos":[0,48],"content":"Implements the visitor pattern for the function.","nodes":[{"content":"Implements the visitor pattern for the function.","pos":[0,48]}]}],"pos":[110203,110252],"yaml":true},{"content":"The function metadata.","nodes":[{"pos":[0,22],"content":"The function metadata.","nodes":[{"content":"The function metadata.","pos":[0,22]}]}],"pos":[110512,110535],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[110615,110648],"yaml":true},{"content":"Implements the visitor pattern for the function aggregate.","nodes":[{"pos":[0,58],"content":"Implements the visitor pattern for the function aggregate.","nodes":[{"content":"Implements the visitor pattern for the function aggregate.","pos":[0,58]}]}],"pos":[112090,112149],"yaml":true},{"content":"The aggregate.","nodes":[{"pos":[0,14],"content":"The aggregate.","nodes":[{"content":"The aggregate.","pos":[0,14]}]}],"pos":[112449,112464],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[112559,112592],"yaml":true},{"content":"Implements the visitor pattern for the group aggregate.","nodes":[{"pos":[0,55],"content":"Implements the visitor pattern for the group aggregate.","nodes":[{"content":"Implements the visitor pattern for the group aggregate.","pos":[0,55]}]}],"pos":[114007,114063],"yaml":true},{"content":"The aggregate.","nodes":[{"pos":[0,14],"content":"The aggregate.","nodes":[{"content":"The aggregate.","pos":[0,14]}]}],"pos":[114351,114366],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[114458,114491],"yaml":true},{"content":"Implements the visitor pattern for the group expression binding.","nodes":[{"pos":[0,64],"content":"Implements the visitor pattern for the group expression binding.","nodes":[{"content":"Implements the visitor pattern for the group expression binding.","pos":[0,64]}]}],"pos":[115999,116064],"yaml":true},{"content":"The binding.","nodes":[{"pos":[0,12],"content":"The binding.","nodes":[{"content":"The binding.","pos":[0,12]}]}],"pos":[116380,116393],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[116493,116526],"yaml":true},{"content":"Implements the visitor pattern for the Lambda function.","nodes":[{"pos":[0,55],"content":"Implements the visitor pattern for the Lambda function.","nodes":[{"content":"Implements the visitor pattern for the Lambda function.","pos":[0,55]}]}],"pos":[117850,117906],"yaml":true},{"content":"The lambda function.","nodes":[{"pos":[0,20],"content":"The lambda function.","nodes":[{"content":"The lambda function.","pos":[0,20]}]}],"pos":[118156,118177],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[118261,118294],"yaml":true},{"content":"Implements the visitor pattern for the sort clause.","nodes":[{"pos":[0,51],"content":"Implements the visitor pattern for the sort clause.","nodes":[{"content":"Implements the visitor pattern for the sort clause.","pos":[0,51]}]}],"pos":[119650,119702],"yaml":true},{"content":"The sort clause.","nodes":[{"pos":[0,16],"content":"The sort clause.","nodes":[{"content":"The sort clause.","pos":[0,16]}]}],"pos":[119968,119985],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[120073,120106],"yaml":true},{"content":"Implements the visitor pattern for the sort order.","nodes":[{"pos":[0,50],"content":"Implements the visitor pattern for the sort order.","nodes":[{"content":"Implements the visitor pattern for the sort order.","pos":[0,50]}]}],"pos":[121583,121634],"yaml":true},{"content":"The sort order.","nodes":[{"pos":[0,15],"content":"The sort order.","nodes":[{"content":"The sort order.","pos":[0,15]}]}],"pos":[122007,122023],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[122145,122178],"yaml":true},{"content":"Implements the visitor pattern for the type.","nodes":[{"pos":[0,44],"content":"Implements the visitor pattern for the type.","nodes":[{"content":"Implements the visitor pattern for the type.","pos":[0,44]}]}],"pos":[123450,123495],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[123715,123725],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[123801,123834],"yaml":true},{"content":"Implements the visitor pattern for the type usage.","nodes":[{"pos":[0,50],"content":"Implements the visitor pattern for the type usage.","nodes":[{"content":"Implements the visitor pattern for the type usage.","pos":[0,50]}]}],"pos":[125143,125194],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[125425,125435],"yaml":true},{"content":"The implemented visitor pattern.","nodes":[{"pos":[0,32],"content":"The implemented visitor pattern.","nodes":[{"content":"The implemented visitor pattern.","pos":[0,32]}]}],"pos":[125513,125546],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  commentId: T:System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  id: DefaultExpressionVisitor\n  children:\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)\n  - System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)\n  langs:\n  - csharp\n  name: DefaultExpressionVisitor\n  nameWithType: DefaultExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Visits each element of an expression tree from a given root expression. If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.\n  syntax:\n    content: 'public class DefaultExpressionVisitor : System.Data.Common.CommandTrees.DbExpressionVisitor<System.Data.Common.CommandTrees.DbExpression>'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: DefaultExpressionVisitor()\n  nameWithType: DefaultExpressionVisitor.DefaultExpressionVisitor()\n  fullName: DefaultExpressionVisitor.DefaultExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.DefaultExpressionVisitor\"></xref> class.\n  syntax:\n    content: protected DefaultExpressionVisitor ();\n    parameters: []\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  id: OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: OnEnterScope(IEnumerable<DbVariableReferenceExpression>)\n  nameWithType: DefaultExpressionVisitor.OnEnterScope(IEnumerable<DbVariableReferenceExpression>)\n  fullName: DefaultExpressionVisitor.OnEnterScope(IEnumerable<DbVariableReferenceExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Represents an event when entering the scope for the expression visitor with specified scope variables.\n  syntax:\n    content: protected virtual void OnEnterScope (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> scopeVariables);\n    parameters:\n    - id: scopeVariables\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}\n      description: The collection of scope variables.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope\n  id: OnExitScope\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: OnExitScope()\n  nameWithType: DefaultExpressionVisitor.OnExitScope()\n  fullName: DefaultExpressionVisitor.OnExitScope()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Exits the scope for the expression visitor.\n  syntax:\n    content: protected virtual void OnExitScope ();\n    parameters: []\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: OnExpressionReplaced(DbExpression, DbExpression)\n  nameWithType: DefaultExpressionVisitor.OnExpressionReplaced(DbExpression, DbExpression)\n  fullName: DefaultExpressionVisitor.OnExpressionReplaced(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Replaces an old expression with a new one for the expression visitor.\n  syntax:\n    content: protected virtual void OnExpressionReplaced (System.Data.Common.CommandTrees.DbExpression oldExpression, System.Data.Common.CommandTrees.DbExpression newExpression);\n    parameters:\n    - id: oldExpression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The old expression.\n    - id: newExpression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The new expression.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  id: OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: OnVariableRebound(DbVariableReferenceExpression, DbVariableReferenceExpression)\n  nameWithType: DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression, DbVariableReferenceExpression)\n  fullName: DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression, DbVariableReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Represents an event when the variable is rebound for the expression visitor.\n  syntax:\n    content: protected virtual void OnVariableRebound (System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef);\n    parameters:\n    - id: fromVarRef\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: The location of the variable.\n    - id: toVarRef\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: The reference of the variable where it is rebounded.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbLikeExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbLikeExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbLikeExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbLimitExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbLimitExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbLimitExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbNewInstanceExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbNewInstanceExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbNewInstanceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbNullExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbNullExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbNullExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a reference to a typed null literal.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNullExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNullExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbOfTypeExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbOfTypeExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbOfTypeExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbOrExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbOrExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbOrExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the logical OR of two Boolean arguments.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOrExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbOrExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbParameterReferenceExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbParameterReferenceExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbParameterReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbProjectExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbProjectExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbProjectExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the projection of a given input set over the specified expression.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbPropertyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbPropertyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbPropertyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for retrieving an instance property.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbRefKeyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbRefKeyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbRefKeyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the retrieval of the key value from the underlying reference value.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRefKeyExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbRefExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbRefExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbRefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbLambdaExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbLambdaExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbLambdaExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbRelationshipNavigationExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the navigation of a relationship.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbScanExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbScanExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbScanExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbScanExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbScanExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbSkipExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbSkipExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbSkipExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the skip expression.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbSortExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbSortExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbSortExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a sort key that can be used as part of the sort order.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSortExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbTreatExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbTreatExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbTreatExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbTreatExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbUnionAllExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbUnionAllExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbUnionAllExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the set union operation between the left and right operands.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbUnionAllExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbVariableReferenceExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbVariableReferenceExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbVariableReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a reference to a variable that is currently in scope.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbQuantifierExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbQuantifierExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbQuantifierExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbJoinExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbJoinExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbJoinExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbNotExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbNotExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbNotExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the logical NOT of a single Boolean argument.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNotExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNotExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbIsNullExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIsNullExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIsNullExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the null determination applied to a single argument.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsNullExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbAndExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbAndExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbAndExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the logical AND expression.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbAndExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbAndExpression\n      description: The logical AND expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbApplyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbApplyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbApplyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: The APPLY expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbArithmeticExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbArithmeticExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbArithmeticExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the arithmetic operation applied to numeric arguments.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: The arithmetic expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbIsOfExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIsOfExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIsOfExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the type comparison of a single argument against the specified type.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbCastExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbCastExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbCastExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the type conversion of a single argument to the specified type.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCastExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCastExpression\n      description: The cast expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbComparisonExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbComparisonExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbComparisonExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the comparison operation applied to two arguments.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: The cast expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbConstantExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbConstantExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbConstantExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the different kinds of constants.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: The constant expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbCrossJoinExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbCrossJoinExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbCrossJoinExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the unconditional join operation between the given collection arguments.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCrossJoinExpression\n      description: The join expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbDerefExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbDerefExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbDerefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbDerefExpression\n      description: The DEREF expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbDistinctExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbDistinctExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbDistinctExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the removed duplicate elements from the specified set argument.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbDistinctExpression\n      description: The distinct expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbCaseExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbCaseExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbCaseExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the When, Then, and Else clauses.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCaseExpression\n      description: The case expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbEntityRefExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbEntityRefExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbEntityRefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbEntityRefExpression\n      description: The entity reference expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbExceptExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbExceptExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbExceptExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the set subtraction operation between the left and right operands.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExceptExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the basic functionality required by expression types.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbFilterExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbFilterExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbFilterExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a predicate applied to filter an input set.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: The filter expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbFunctionExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbFunctionExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbFunctionExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for an invocation of a function.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: The function expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbElementExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbElementExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbElementExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbElementExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbElementExpression\n      description: The element expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbGroupByExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbGroupByExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbGroupByExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for a group by operation.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbGroupByExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbIntersectExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIntersectExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIntersectExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the set intersection operation between the left and right operands.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIntersectExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(DbIsEmptyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIsEmptyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIsEmptyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for an empty set determination applied to a single set argument.\n  syntax:\n    content: public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsEmptyExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)\n  id: VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitAggregate(DbAggregate)\n  nameWithType: DefaultExpressionVisitor.VisitAggregate(DbAggregate)\n  fullName: DefaultExpressionVisitor.VisitAggregate(DbAggregate)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the aggregate.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbAggregate VisitAggregate (System.Data.Common.CommandTrees.DbAggregate aggregate);\n    parameters:\n    - id: aggregate\n      type: System.Data.Common.CommandTrees.DbAggregate\n      description: The aggregate.\n    return:\n      type: System.Data.Common.CommandTrees.DbAggregate\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)\n  id: VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitEntitySet(EntitySetBase)\n  nameWithType: DefaultExpressionVisitor.VisitEntitySet(EntitySetBase)\n  fullName: DefaultExpressionVisitor.VisitEntitySet(EntitySetBase)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the entity set.\n  syntax:\n    content: protected virtual System.Data.Metadata.Edm.EntitySetBase VisitEntitySet (System.Data.Metadata.Edm.EntitySetBase entitySet);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySetBase\n      description: The entity set.\n    return:\n      type: System.Data.Metadata.Edm.EntitySetBase\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)\n  id: VisitExpression(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitExpression(DbExpression)\n  nameWithType: DefaultExpressionVisitor.VisitExpression(DbExpression)\n  fullName: DefaultExpressionVisitor.VisitExpression(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the expression.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbExpression VisitExpression (System.Data.Common.CommandTrees.DbExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)\n  id: VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitExpressionBinding(DbExpressionBinding)\n  nameWithType: DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding)\n  fullName: DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expression binding.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding (System.Data.Common.CommandTrees.DbExpressionBinding binding);\n    parameters:\n    - id: binding\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: The expression binding.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})\n  id: VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitExpressionBindingList(IList<DbExpressionBinding>)\n  nameWithType: DefaultExpressionVisitor.VisitExpressionBindingList(IList<DbExpressionBinding>)\n  fullName: DefaultExpressionVisitor.VisitExpressionBindingList(IList<DbExpressionBinding>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the expression binding list.\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpressionBinding> VisitExpressionBindingList (System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpressionBinding> list);\n    parameters:\n    - id: list\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding}\n      description: The expression binding list.\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding}\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})\n  id: VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitExpressionList(IList<DbExpression>)\n  nameWithType: DefaultExpressionVisitor.VisitExpressionList(IList<DbExpression>)\n  fullName: DefaultExpressionVisitor.VisitExpressionList(IList<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the expression list.\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> VisitExpressionList (System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> list);\n    parameters:\n    - id: list\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n      description: The expression list.\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)\n  id: VisitFunction(System.Data.Metadata.Edm.EdmFunction)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitFunction(EdmFunction)\n  nameWithType: DefaultExpressionVisitor.VisitFunction(EdmFunction)\n  fullName: DefaultExpressionVisitor.VisitFunction(EdmFunction)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the function.\n  syntax:\n    content: protected virtual System.Data.Metadata.Edm.EdmFunction VisitFunction (System.Data.Metadata.Edm.EdmFunction functionMetadata);\n    parameters:\n    - id: functionMetadata\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: The function metadata.\n    return:\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)\n  id: VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitFunctionAggregate(DbFunctionAggregate)\n  nameWithType: DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate)\n  fullName: DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the function aggregate.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate (System.Data.Common.CommandTrees.DbFunctionAggregate aggregate);\n    parameters:\n    - id: aggregate\n      type: System.Data.Common.CommandTrees.DbFunctionAggregate\n      description: The aggregate.\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionAggregate\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)\n  id: VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitGroupAggregate(DbGroupAggregate)\n  nameWithType: DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate)\n  fullName: DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the group aggregate.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate (System.Data.Common.CommandTrees.DbGroupAggregate aggregate);\n    parameters:\n    - id: aggregate\n      type: System.Data.Common.CommandTrees.DbGroupAggregate\n      description: The aggregate.\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupAggregate\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)\n  id: VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitGroupExpressionBinding(DbGroupExpressionBinding)\n  nameWithType: DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding)\n  fullName: DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the group expression binding.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding (System.Data.Common.CommandTrees.DbGroupExpressionBinding binding);\n    parameters:\n    - id: binding\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: The binding.\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)\n  id: VisitLambda(System.Data.Common.CommandTrees.DbLambda)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLambda(DbLambda)\n  nameWithType: DefaultExpressionVisitor.VisitLambda(DbLambda)\n  fullName: DefaultExpressionVisitor.VisitLambda(DbLambda)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the Lambda function.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbLambda VisitLambda (System.Data.Common.CommandTrees.DbLambda lambda);\n    parameters:\n    - id: lambda\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: The lambda function.\n    return:\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)\n  id: VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitSortClause(DbSortClause)\n  nameWithType: DefaultExpressionVisitor.VisitSortClause(DbSortClause)\n  fullName: DefaultExpressionVisitor.VisitSortClause(DbSortClause)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the sort clause.\n  syntax:\n    content: protected virtual System.Data.Common.CommandTrees.DbSortClause VisitSortClause (System.Data.Common.CommandTrees.DbSortClause clause);\n    parameters:\n    - id: clause\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: The sort clause.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})\n  id: VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitSortOrder(IList<DbSortClause>)\n  nameWithType: DefaultExpressionVisitor.VisitSortOrder(IList<DbSortClause>)\n  fullName: DefaultExpressionVisitor.VisitSortOrder(IList<DbSortClause>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the sort order.\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause> VisitSortOrder (System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause> sortOrder);\n    parameters:\n    - id: sortOrder\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}\n      description: The sort order.\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)\n  id: VisitType(System.Data.Metadata.Edm.EdmType)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitType(EdmType)\n  nameWithType: DefaultExpressionVisitor.VisitType(EdmType)\n  fullName: DefaultExpressionVisitor.VisitType(EdmType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the type.\n  syntax:\n    content: protected virtual System.Data.Metadata.Edm.EdmType VisitType (System.Data.Metadata.Edm.EdmType type);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.EdmType\n      description: The type.\n    return:\n      type: System.Data.Metadata.Edm.EdmType\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)\n  id: VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  langs:\n  - csharp\n  name: VisitTypeUsage(TypeUsage)\n  nameWithType: DefaultExpressionVisitor.VisitTypeUsage(TypeUsage)\n  fullName: DefaultExpressionVisitor.VisitTypeUsage(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for the type usage.\n  syntax:\n    content: protected virtual System.Data.Metadata.Edm.TypeUsage VisitTypeUsage (System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type.\n    return:\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The implemented visitor pattern.\n  overload: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbExpression\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<DbExpression>\n  nameWithType: DbExpressionVisitor<DbExpression>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n    name: DbExpressionVisitor\n    nameWithType: DbExpressionVisitor\n    fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: DefaultExpressionVisitor()\n  nameWithType: DefaultExpressionVisitor.DefaultExpressionVisitor()\n  fullName: DefaultExpressionVisitor.DefaultExpressionVisitor()\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnEnterScope(IEnumerable<DbVariableReferenceExpression>)\n  nameWithType: DefaultExpressionVisitor.OnEnterScope(IEnumerable<DbVariableReferenceExpression>)\n  fullName: DefaultExpressionVisitor.OnEnterScope(IEnumerable<DbVariableReferenceExpression>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  name: DbVariableReferenceExpression\n  nameWithType: DbVariableReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbVariableReferenceExpression>\n  nameWithType: IEnumerable<DbVariableReferenceExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n    name: DbVariableReferenceExpression\n    nameWithType: DbVariableReferenceExpression\n    fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnExitScope()\n  nameWithType: DefaultExpressionVisitor.OnExitScope()\n  fullName: DefaultExpressionVisitor.OnExitScope()\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnExpressionReplaced(DbExpression, DbExpression)\n  nameWithType: DefaultExpressionVisitor.OnExpressionReplaced(DbExpression, DbExpression)\n  fullName: DefaultExpressionVisitor.OnExpressionReplaced(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnVariableRebound(DbVariableReferenceExpression, DbVariableReferenceExpression)\n  nameWithType: DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression, DbVariableReferenceExpression)\n  fullName: DefaultExpressionVisitor.OnVariableRebound(DbVariableReferenceExpression, DbVariableReferenceExpression)\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbLikeExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbLikeExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbLikeExpression)\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbLimitExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbLimitExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbLimitExpression)\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbNewInstanceExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbNewInstanceExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbNewInstanceExpression)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbNullExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbNullExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbNullExpression)\n- uid: System.Data.Common.CommandTrees.DbNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNullExpression\n  nameWithType: DbNullExpression\n  fullName: System.Data.Common.CommandTrees.DbNullExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbOfTypeExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbOfTypeExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbOfTypeExpression)\n- uid: System.Data.Common.CommandTrees.DbOfTypeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOfTypeExpression\n  nameWithType: DbOfTypeExpression\n  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbOrExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbOrExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbOrExpression)\n- uid: System.Data.Common.CommandTrees.DbOrExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOrExpression\n  nameWithType: DbOrExpression\n  fullName: System.Data.Common.CommandTrees.DbOrExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbParameterReferenceExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbParameterReferenceExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbParameterReferenceExpression)\n- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbParameterReferenceExpression\n  nameWithType: DbParameterReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbProjectExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbProjectExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbProjectExpression)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbPropertyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbPropertyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbPropertyExpression)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbRefKeyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbRefKeyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbRefKeyExpression)\n- uid: System.Data.Common.CommandTrees.DbRefKeyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefKeyExpression\n  nameWithType: DbRefKeyExpression\n  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbRefExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbRefExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbRefExpression)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbLambdaExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbLambdaExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbLambdaExpression)\n- uid: System.Data.Common.CommandTrees.DbLambdaExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambdaExpression\n  nameWithType: DbLambdaExpression\n  fullName: System.Data.Common.CommandTrees.DbLambdaExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbRelationshipNavigationExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbRelationshipNavigationExpression)\n- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRelationshipNavigationExpression\n  nameWithType: DbRelationshipNavigationExpression\n  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbScanExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbScanExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbScanExpression)\n- uid: System.Data.Common.CommandTrees.DbScanExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbScanExpression\n  nameWithType: DbScanExpression\n  fullName: System.Data.Common.CommandTrees.DbScanExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbSkipExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbSkipExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbSkipExpression)\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbSortExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbSortExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbSortExpression)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbTreatExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbTreatExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbTreatExpression)\n- uid: System.Data.Common.CommandTrees.DbTreatExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbTreatExpression\n  nameWithType: DbTreatExpression\n  fullName: System.Data.Common.CommandTrees.DbTreatExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbUnionAllExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbUnionAllExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbUnionAllExpression)\n- uid: System.Data.Common.CommandTrees.DbUnionAllExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbUnionAllExpression\n  nameWithType: DbUnionAllExpression\n  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbVariableReferenceExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbVariableReferenceExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbVariableReferenceExpression)\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbQuantifierExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbQuantifierExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbQuantifierExpression)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbJoinExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbJoinExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbJoinExpression)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbNotExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbNotExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbNotExpression)\n- uid: System.Data.Common.CommandTrees.DbNotExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNotExpression\n  nameWithType: DbNotExpression\n  fullName: System.Data.Common.CommandTrees.DbNotExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbIsNullExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIsNullExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIsNullExpression)\n- uid: System.Data.Common.CommandTrees.DbIsNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsNullExpression\n  nameWithType: DbIsNullExpression\n  fullName: System.Data.Common.CommandTrees.DbIsNullExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbAndExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbAndExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbAndExpression)\n- uid: System.Data.Common.CommandTrees.DbAndExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAndExpression\n  nameWithType: DbAndExpression\n  fullName: System.Data.Common.CommandTrees.DbAndExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbApplyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbApplyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbApplyExpression)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbArithmeticExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbArithmeticExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbArithmeticExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbIsOfExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIsOfExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIsOfExpression)\n- uid: System.Data.Common.CommandTrees.DbIsOfExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsOfExpression\n  nameWithType: DbIsOfExpression\n  fullName: System.Data.Common.CommandTrees.DbIsOfExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbCastExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbCastExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbCastExpression)\n- uid: System.Data.Common.CommandTrees.DbCastExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCastExpression\n  nameWithType: DbCastExpression\n  fullName: System.Data.Common.CommandTrees.DbCastExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbComparisonExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbComparisonExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbComparisonExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbConstantExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbConstantExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbConstantExpression)\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbCrossJoinExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbCrossJoinExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbCrossJoinExpression)\n- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCrossJoinExpression\n  nameWithType: DbCrossJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbDerefExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbDerefExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbDerefExpression)\n- uid: System.Data.Common.CommandTrees.DbDerefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDerefExpression\n  nameWithType: DbDerefExpression\n  fullName: System.Data.Common.CommandTrees.DbDerefExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbDistinctExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbDistinctExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbDistinctExpression)\n- uid: System.Data.Common.CommandTrees.DbDistinctExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDistinctExpression\n  nameWithType: DbDistinctExpression\n  fullName: System.Data.Common.CommandTrees.DbDistinctExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbCaseExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbCaseExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbCaseExpression)\n- uid: System.Data.Common.CommandTrees.DbCaseExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCaseExpression\n  nameWithType: DbCaseExpression\n  fullName: System.Data.Common.CommandTrees.DbCaseExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbEntityRefExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbEntityRefExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbEntityRefExpression)\n- uid: System.Data.Common.CommandTrees.DbEntityRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbEntityRefExpression\n  nameWithType: DbEntityRefExpression\n  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbExceptExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbExceptExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbExceptExpression)\n- uid: System.Data.Common.CommandTrees.DbExceptExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExceptExpression\n  nameWithType: DbExceptExpression\n  fullName: System.Data.Common.CommandTrees.DbExceptExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbExpression)\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbFilterExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbFilterExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbFilterExpression)\n- uid: System.Data.Common.CommandTrees.DbFilterExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFilterExpression\n  nameWithType: DbFilterExpression\n  fullName: System.Data.Common.CommandTrees.DbFilterExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbFunctionExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbFunctionExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbFunctionExpression)\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbElementExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbElementExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbElementExpression)\n- uid: System.Data.Common.CommandTrees.DbElementExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbElementExpression\n  nameWithType: DbElementExpression\n  fullName: System.Data.Common.CommandTrees.DbElementExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbGroupByExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbGroupByExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbGroupByExpression)\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbIntersectExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIntersectExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIntersectExpression)\n- uid: System.Data.Common.CommandTrees.DbIntersectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIntersectExpression\n  nameWithType: DbIntersectExpression\n  fullName: System.Data.Common.CommandTrees.DbIntersectExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit(DbIsEmptyExpression)\n  nameWithType: DefaultExpressionVisitor.Visit(DbIsEmptyExpression)\n  fullName: DefaultExpressionVisitor.Visit(DbIsEmptyExpression)\n- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsEmptyExpression\n  nameWithType: DbIsEmptyExpression\n  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitAggregate(DbAggregate)\n  nameWithType: DefaultExpressionVisitor.VisitAggregate(DbAggregate)\n  fullName: DefaultExpressionVisitor.VisitAggregate(DbAggregate)\n- uid: System.Data.Common.CommandTrees.DbAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAggregate\n  nameWithType: DbAggregate\n  fullName: System.Data.Common.CommandTrees.DbAggregate\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitEntitySet(EntitySetBase)\n  nameWithType: DefaultExpressionVisitor.VisitEntitySet(EntitySetBase)\n  fullName: DefaultExpressionVisitor.VisitEntitySet(EntitySetBase)\n- uid: System.Data.Metadata.Edm.EntitySetBase\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySetBase\n  nameWithType: EntitySetBase\n  fullName: System.Data.Metadata.Edm.EntitySetBase\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpression(DbExpression)\n  nameWithType: DefaultExpressionVisitor.VisitExpression(DbExpression)\n  fullName: DefaultExpressionVisitor.VisitExpression(DbExpression)\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpressionBinding(DbExpressionBinding)\n  nameWithType: DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding)\n  fullName: DefaultExpressionVisitor.VisitExpressionBinding(DbExpressionBinding)\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpressionBindingList(IList<DbExpressionBinding>)\n  nameWithType: DefaultExpressionVisitor.VisitExpressionBindingList(IList<DbExpressionBinding>)\n  fullName: DefaultExpressionVisitor.VisitExpressionBindingList(IList<DbExpressionBinding>)\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbExpressionBinding>\n  nameWithType: IList<DbExpressionBinding>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpressionBinding>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpressionBinding\n    name: DbExpressionBinding\n    nameWithType: DbExpressionBinding\n    fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpressionList(IList<DbExpression>)\n  nameWithType: DefaultExpressionVisitor.VisitExpressionList(IList<DbExpression>)\n  fullName: DefaultExpressionVisitor.VisitExpressionList(IList<DbExpression>)\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbExpression>\n  nameWithType: IList<DbExpression>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitFunction(EdmFunction)\n  nameWithType: DefaultExpressionVisitor.VisitFunction(EdmFunction)\n  fullName: DefaultExpressionVisitor.VisitFunction(EdmFunction)\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitFunctionAggregate(DbFunctionAggregate)\n  nameWithType: DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate)\n  fullName: DefaultExpressionVisitor.VisitFunctionAggregate(DbFunctionAggregate)\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionAggregate\n  nameWithType: DbFunctionAggregate\n  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitGroupAggregate(DbGroupAggregate)\n  nameWithType: DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate)\n  fullName: DefaultExpressionVisitor.VisitGroupAggregate(DbGroupAggregate)\n- uid: System.Data.Common.CommandTrees.DbGroupAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupAggregate\n  nameWithType: DbGroupAggregate\n  fullName: System.Data.Common.CommandTrees.DbGroupAggregate\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitGroupExpressionBinding(DbGroupExpressionBinding)\n  nameWithType: DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding)\n  fullName: DefaultExpressionVisitor.VisitGroupExpressionBinding(DbGroupExpressionBinding)\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitLambda(DbLambda)\n  nameWithType: DefaultExpressionVisitor.VisitLambda(DbLambda)\n  fullName: DefaultExpressionVisitor.VisitLambda(DbLambda)\n- uid: System.Data.Common.CommandTrees.DbLambda\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambda\n  nameWithType: DbLambda\n  fullName: System.Data.Common.CommandTrees.DbLambda\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitSortClause(DbSortClause)\n  nameWithType: DefaultExpressionVisitor.VisitSortClause(DbSortClause)\n  fullName: DefaultExpressionVisitor.VisitSortClause(DbSortClause)\n- uid: System.Data.Common.CommandTrees.DbSortClause\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortClause\n  nameWithType: DbSortClause\n  fullName: System.Data.Common.CommandTrees.DbSortClause\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitSortOrder(IList<DbSortClause>)\n  nameWithType: DefaultExpressionVisitor.VisitSortOrder(IList<DbSortClause>)\n  fullName: DefaultExpressionVisitor.VisitSortOrder(IList<DbSortClause>)\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbSortClause>\n  nameWithType: IList<DbSortClause>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbSortClause\n    name: DbSortClause\n    nameWithType: DbSortClause\n    fullName: System.Data.Common.CommandTrees.DbSortClause\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitType(EdmType)\n  nameWithType: DefaultExpressionVisitor.VisitType(EdmType)\n  fullName: DefaultExpressionVisitor.VisitType(EdmType)\n- uid: System.Data.Metadata.Edm.EdmType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmType\n  nameWithType: EdmType\n  fullName: System.Data.Metadata.Edm.EdmType\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitTypeUsage(TypeUsage)\n  nameWithType: DefaultExpressionVisitor.VisitTypeUsage(TypeUsage)\n  fullName: DefaultExpressionVisitor.VisitTypeUsage(TypeUsage)\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: DefaultExpressionVisitor\n  nameWithType: DefaultExpressionVisitor.DefaultExpressionVisitor\n  fullName: DefaultExpressionVisitor.DefaultExpressionVisitor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnEnterScope\n  nameWithType: DefaultExpressionVisitor.OnEnterScope\n  fullName: DefaultExpressionVisitor.OnEnterScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnExitScope\n  nameWithType: DefaultExpressionVisitor.OnExitScope\n  fullName: DefaultExpressionVisitor.OnExitScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnExpressionReplaced\n  nameWithType: DefaultExpressionVisitor.OnExpressionReplaced\n  fullName: DefaultExpressionVisitor.OnExpressionReplaced\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: OnVariableRebound\n  nameWithType: DefaultExpressionVisitor.OnVariableRebound\n  fullName: DefaultExpressionVisitor.OnVariableRebound\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: Visit\n  nameWithType: DefaultExpressionVisitor.Visit\n  fullName: DefaultExpressionVisitor.Visit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitAggregate\n  nameWithType: DefaultExpressionVisitor.VisitAggregate\n  fullName: DefaultExpressionVisitor.VisitAggregate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitEntitySet\n  nameWithType: DefaultExpressionVisitor.VisitEntitySet\n  fullName: DefaultExpressionVisitor.VisitEntitySet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpression\n  nameWithType: DefaultExpressionVisitor.VisitExpression\n  fullName: DefaultExpressionVisitor.VisitExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpressionBinding\n  nameWithType: DefaultExpressionVisitor.VisitExpressionBinding\n  fullName: DefaultExpressionVisitor.VisitExpressionBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpressionBindingList\n  nameWithType: DefaultExpressionVisitor.VisitExpressionBindingList\n  fullName: DefaultExpressionVisitor.VisitExpressionBindingList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitExpressionList\n  nameWithType: DefaultExpressionVisitor.VisitExpressionList\n  fullName: DefaultExpressionVisitor.VisitExpressionList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitFunction\n  nameWithType: DefaultExpressionVisitor.VisitFunction\n  fullName: DefaultExpressionVisitor.VisitFunction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitFunctionAggregate\n  nameWithType: DefaultExpressionVisitor.VisitFunctionAggregate\n  fullName: DefaultExpressionVisitor.VisitFunctionAggregate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitGroupAggregate\n  nameWithType: DefaultExpressionVisitor.VisitGroupAggregate\n  fullName: DefaultExpressionVisitor.VisitGroupAggregate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitGroupExpressionBinding\n  nameWithType: DefaultExpressionVisitor.VisitGroupExpressionBinding\n  fullName: DefaultExpressionVisitor.VisitGroupExpressionBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitLambda\n  nameWithType: DefaultExpressionVisitor.VisitLambda\n  fullName: DefaultExpressionVisitor.VisitLambda\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitSortClause\n  nameWithType: DefaultExpressionVisitor.VisitSortClause\n  fullName: DefaultExpressionVisitor.VisitSortClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitSortOrder\n  nameWithType: DefaultExpressionVisitor.VisitSortOrder\n  fullName: DefaultExpressionVisitor.VisitSortOrder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitType\n  nameWithType: DefaultExpressionVisitor.VisitType\n  fullName: DefaultExpressionVisitor.VisitType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage*\n  parent: System.Data.Common.CommandTrees.DefaultExpressionVisitor\n  isExternal: false\n  name: VisitTypeUsage\n  nameWithType: DefaultExpressionVisitor.VisitTypeUsage\n  fullName: DefaultExpressionVisitor.VisitTypeUsage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DefaultExpressionVisitor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}