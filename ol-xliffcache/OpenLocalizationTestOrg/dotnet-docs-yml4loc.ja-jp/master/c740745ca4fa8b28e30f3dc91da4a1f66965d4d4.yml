### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ObjectChangeConflict
  commentId: T:System.Data.Linq.ObjectChangeConflict
  id: ObjectChangeConflict
  children:
  - System.Data.Linq.ObjectChangeConflict.IsDeleted
  - System.Data.Linq.ObjectChangeConflict.IsResolved
  - System.Data.Linq.ObjectChangeConflict.MemberConflicts
  - System.Data.Linq.ObjectChangeConflict.Object
  - System.Data.Linq.ObjectChangeConflict.Resolve
  - System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)
  - System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)
  langs:
  - csharp
  name: ObjectChangeConflict
  nameWithType: ObjectChangeConflict
  fullName: System.Data.Linq.ObjectChangeConflict
  type: Class
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Represents an update attempt with one or more optimistic concurrency conflicts.
  remarks: "This scenario is one in which an attempted update fails because database values have been updated since the client last read them.  \n  \n The following example shows how to retrieve information about objects in conflict."
  example:
  - >-
    [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
     [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]
  syntax:
    content: public sealed class ObjectChangeConflict
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.IsDeleted
  commentId: P:System.Data.Linq.ObjectChangeConflict.IsDeleted
  id: IsDeleted
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: IsDeleted
  nameWithType: ObjectChangeConflict.IsDeleted
  fullName: ObjectChangeConflict.IsDeleted
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets a value that indicates whether the object in conflict has been deleted from the database.
  syntax:
    content: public bool IsDeleted { get; }
    return:
      type: System.Boolean
      description: '`True` if the object has been deleted.'
  overload: System.Data.Linq.ObjectChangeConflict.IsDeleted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.IsResolved
  commentId: P:System.Data.Linq.ObjectChangeConflict.IsResolved
  id: IsResolved
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: IsResolved
  nameWithType: ObjectChangeConflict.IsResolved
  fullName: ObjectChangeConflict.IsResolved
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets a value that indicates whether the conflicts for this object have already been resolved.
  remarks: This property is read-only and is automatically updated as conflicts are resolved.
  syntax:
    content: public bool IsResolved { get; }
    return:
      type: System.Boolean
      description: '`True` if the conflicts have been resolved.'
  overload: System.Data.Linq.ObjectChangeConflict.IsResolved*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.MemberConflicts
  commentId: P:System.Data.Linq.ObjectChangeConflict.MemberConflicts
  id: MemberConflicts
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: MemberConflicts
  nameWithType: ObjectChangeConflict.MemberConflicts
  fullName: ObjectChangeConflict.MemberConflicts
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets a collection of all member conflicts that caused the update to fail.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.MemberChangeConflict> MemberConflicts { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.MemberChangeConflict}
      description: A collection of member conflicts.
  overload: System.Data.Linq.ObjectChangeConflict.MemberConflicts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.Object
  commentId: P:System.Data.Linq.ObjectChangeConflict.Object
  id: Object
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: Object
  nameWithType: ObjectChangeConflict.Object
  fullName: ObjectChangeConflict.Object
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets the object in conflict.
  syntax:
    content: public object Object { get; }
    return:
      type: System.Object
      description: The object in conflict.
  overload: System.Data.Linq.ObjectChangeConflict.Object*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.Resolve
  commentId: M:System.Data.Linq.ObjectChangeConflict.Resolve
  id: Resolve
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: Resolve()
  nameWithType: ObjectChangeConflict.Resolve()
  fullName: ObjectChangeConflict.Resolve()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.
  syntax:
    content: public void Resolve ();
    parameters: []
  overload: System.Data.Linq.ObjectChangeConflict.Resolve*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)
  commentId: M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)
  id: Resolve(System.Data.Linq.RefreshMode)
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: Resolve(RefreshMode)
  nameWithType: ObjectChangeConflict.Resolve(RefreshMode)
  fullName: ObjectChangeConflict.Resolve(RefreshMode)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Resolves member conflicts by using the specified <xref href="System.Data.Linq.RefreshMode"></xref>.
  remarks: The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.
  example:
  - "The following example overwrites current values with values from the database.  \n  \n [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]\n [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  \n  \n The following example shows how to swap the original value with the values retrieved from the dtabase. No current value is modified.  \n  \n [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]\n [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  \n  \n The following example keeps the current values that have been changed, but updates the other values with database values.  \n  \n [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]\n [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]"
  syntax:
    content: public void Resolve (System.Data.Linq.RefreshMode refreshMode);
    parameters:
    - id: refreshMode
      type: System.Data.Linq.RefreshMode
      description: The appropriate option from <xref href="System.Data.Linq.RefreshMode"></xref>.
  overload: System.Data.Linq.ObjectChangeConflict.Resolve*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)
  commentId: M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)
  id: Resolve(System.Data.Linq.RefreshMode,System.Boolean)
  parent: System.Data.Linq.ObjectChangeConflict
  langs:
  - csharp
  name: Resolve(RefreshMode, Boolean)
  nameWithType: ObjectChangeConflict.Resolve(RefreshMode, Boolean)
  fullName: ObjectChangeConflict.Resolve(RefreshMode, Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Resolve member conflicts keeping current values and resetting the baseline original values.
  syntax:
    content: public void Resolve (System.Data.Linq.RefreshMode refreshMode, bool autoResolveDeletes);
    parameters:
    - id: refreshMode
      type: System.Data.Linq.RefreshMode
      description: The appropriate option from <xref href="System.Data.Linq.RefreshMode"></xref>.
    - id: autoResolveDeletes
      type: System.Boolean
      description: When `true`, automatically resolves conflicts resulting from a modified object that is no longer in the database.
  overload: System.Data.Linq.ObjectChangeConflict.Resolve*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.ObjectChangeConflict.IsDeleted
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: IsDeleted
  nameWithType: ObjectChangeConflict.IsDeleted
  fullName: ObjectChangeConflict.IsDeleted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ObjectChangeConflict.IsResolved
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: IsResolved
  nameWithType: ObjectChangeConflict.IsResolved
  fullName: ObjectChangeConflict.IsResolved
- uid: System.Data.Linq.ObjectChangeConflict.MemberConflicts
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: MemberConflicts
  nameWithType: ObjectChangeConflict.MemberConflicts
  fullName: ObjectChangeConflict.MemberConflicts
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Data.Linq.MemberChangeConflict
  name: MemberChangeConflict
  nameWithType: MemberChangeConflict
  fullName: System.Data.Linq.MemberChangeConflict
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.MemberChangeConflict}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<MemberChangeConflict>
  nameWithType: ReadOnlyCollection<MemberChangeConflict>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.MemberChangeConflict>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Linq.MemberChangeConflict
    name: MemberChangeConflict
    nameWithType: MemberChangeConflict
    fullName: System.Data.Linq.MemberChangeConflict
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.ObjectChangeConflict.Object
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: Object
  nameWithType: ObjectChangeConflict.Object
  fullName: ObjectChangeConflict.Object
- uid: System.Data.Linq.ObjectChangeConflict.Resolve
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: Resolve()
  nameWithType: ObjectChangeConflict.Resolve()
  fullName: ObjectChangeConflict.Resolve()
- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: Resolve(RefreshMode)
  nameWithType: ObjectChangeConflict.Resolve(RefreshMode)
  fullName: ObjectChangeConflict.Resolve(RefreshMode)
- uid: System.Data.Linq.RefreshMode
  parent: System.Data.Linq
  isExternal: false
  name: RefreshMode
  nameWithType: RefreshMode
  fullName: System.Data.Linq.RefreshMode
- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: Resolve(RefreshMode, Boolean)
  nameWithType: ObjectChangeConflict.Resolve(RefreshMode, Boolean)
  fullName: ObjectChangeConflict.Resolve(RefreshMode, Boolean)
- uid: System.Data.Linq.ObjectChangeConflict.IsDeleted*
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: IsDeleted
  nameWithType: ObjectChangeConflict.IsDeleted
  fullName: ObjectChangeConflict.IsDeleted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
- uid: System.Data.Linq.ObjectChangeConflict.IsResolved*
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: IsResolved
  nameWithType: ObjectChangeConflict.IsResolved
  fullName: ObjectChangeConflict.IsResolved
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
- uid: System.Data.Linq.ObjectChangeConflict.MemberConflicts*
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: MemberConflicts
  nameWithType: ObjectChangeConflict.MemberConflicts
  fullName: ObjectChangeConflict.MemberConflicts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
- uid: System.Data.Linq.ObjectChangeConflict.Object*
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: Object
  nameWithType: ObjectChangeConflict.Object
  fullName: ObjectChangeConflict.Object
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
- uid: System.Data.Linq.ObjectChangeConflict.Resolve*
  parent: System.Data.Linq.ObjectChangeConflict
  isExternal: false
  name: Resolve
  nameWithType: ObjectChangeConflict.Resolve
  fullName: ObjectChangeConflict.Resolve
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
