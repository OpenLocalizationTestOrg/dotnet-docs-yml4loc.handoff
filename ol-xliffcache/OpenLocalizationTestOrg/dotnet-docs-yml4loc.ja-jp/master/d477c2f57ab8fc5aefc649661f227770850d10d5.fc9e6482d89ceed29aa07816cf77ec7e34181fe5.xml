{"nodes":[{"content":"The <xref href=\"System.Web.ClientServices.Providers\"></xref> namespace contains client service providers and other classes that support access in Windows-based applications to the Microsoft Ajax authentication, roles, and profile services.","nodes":[{"pos":[0,239],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.ClientServices.Providers\"&gt;&lt;/xref&gt;</ph> namespace contains client service providers and other classes that support access in Windows-based applications to the Microsoft Ajax authentication, roles, and profile services.","source":"The <xref href=\"System.Web.ClientServices.Providers\"></xref> namespace contains client service providers and other classes that support access in Windows-based applications to the Microsoft Ajax authentication, roles, and profile services."}],"pos":[907,1147],"yaml":true},{"content":"The classes in the <xref:System.Web.ClientServices.Providers> namespace include client application service providers that enable Windows-based applications to use the [!INCLUDE[ajax_current_short](~/includes/ajax-current-short-md.md)] authentication, roles, and profile services. You can enable these services and specify client service providers in your application configuration file, and then access the services through existing [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] membership, identity, and application settings infrastructures. The client service providers also support occasional connectivity by storing and retrieving user information in a local data cache when the application is offline. For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).  \n  \n To access the login service, you can use either Windows or Forms authentication by specifying the <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> or <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> in your application configuration. Windows authentication uses the identity supplied when a user logs in to the operating system. Forms authentication requires that you to retrieve login information from the user and pass it to the service. You can do this by specifying an <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider> implementation with your <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> configuration. The <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A?displayProperty=fullName> method returns a <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> object that contains user login information. You can populate this object, for example, by displaying a login dialog box in the <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> method.  \n  \n To access the roles and profile services, specify the <xref:System.Web.ClientServices.Providers.ClientRoleProvider> and <xref:System.Web.ClientServices.Providers.ClientSettingsProvider> in your application configuration.","nodes":[{"pos":[0,845],"content":"The classes in the <xref:System.Web.ClientServices.Providers> namespace include client application service providers that enable Windows-based applications to use the [!INCLUDE[ajax_current_short](~/includes/ajax-current-short-md.md)] authentication, roles, and profile services. You can enable these services and specify client service providers in your application configuration file, and then access the services through existing [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] membership, identity, and application settings infrastructures. The client service providers also support occasional connectivity by storing and retrieving user information in a local data cache when the application is offline. For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).","nodes":[{"content":"The classes in the <ph id=\"ph1\">&lt;xref:System.Web.ClientServices.Providers&gt;</ph> namespace include client application service providers that enable Windows-based applications to use the <ph id=\"ph2\">[!INCLUDE[ajax_current_short](~/includes/ajax-current-short-md.md)]</ph> authentication, roles, and profile services.","pos":[0,279],"source":"The classes in the <xref:System.Web.ClientServices.Providers> namespace include client application service providers that enable Windows-based applications to use the [!INCLUDE[ajax_current_short](~/includes/ajax-current-short-md.md)] authentication, roles, and profile services."},{"content":"You can enable these services and specify client service providers in your application configuration file, and then access the services through existing <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> membership, identity, and application settings infrastructures.","pos":[280,548],"source":" You can enable these services and specify client service providers in your application configuration file, and then access the services through existing [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] membership, identity, and application settings infrastructures."},{"content":"The client service providers also support occasional connectivity by storing and retrieving user information in a local data cache when the application is offline.","pos":[549,712]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Client Application Services<ept id=\"p1\">](~/docs/framework/common-client-technologies/client-application-services.md)</ept>.","pos":[713,845],"source":" For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md)."}]},{"pos":[852,2094],"content":"To access the login service, you can use either Windows or Forms authentication by specifying the <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> or <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> in your application configuration. Windows authentication uses the identity supplied when a user logs in to the operating system. Forms authentication requires that you to retrieve login information from the user and pass it to the service. You can do this by specifying an <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider> implementation with your <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> configuration. The <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A?displayProperty=fullName> method returns a <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> object that contains user login information. You can populate this object, for example, by displaying a login dialog box in the <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> method.","nodes":[{"content":"To access the login service, you can use either Windows or Forms authentication by specifying the <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> or <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> in your application configuration. Windows authentication uses the identity supplied when a user logs in to the operating system. Forms authentication requires that you to retrieve login information from the user and pass it to the service. You can do this by specifying an <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider> implementation with your <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> configuration. The <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A?displayProperty=fullName> method returns a <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> object that contains user login information. You can populate this object, for example, by displaying a login dialog box in the <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> method.","pos":[0,1242],"nodes":[{"content":"To access the login service, you can use either Windows or Forms authentication by specifying the <ph id=\"ph1\">&lt;xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider&gt;</ph> in your application configuration.","pos":[0,311],"source":"To access the login service, you can use either Windows or Forms authentication by specifying the <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> or <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> in your application configuration."},{"content":"Windows authentication uses the identity supplied when a user logs in to the operating system.","pos":[312,406]},{"content":"Forms authentication requires that you to retrieve login information from the user and pass it to the service.","pos":[407,517]},{"content":"You can do this by specifying an <ph id=\"ph1\">&lt;xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider&gt;</ph> implementation with your <ph id=\"ph2\">&lt;xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider&gt;</ph> configuration.","pos":[518,766],"source":" You can do this by specifying an <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider> implementation with your <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> configuration."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials&gt;</ph> object that contains user login information.","pos":[767,1044],"source":" The <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A?displayProperty=fullName> method returns a <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> object that contains user login information."},{"content":"You can populate this object, for example, by displaying a login dialog box in the <ph id=\"ph1\">&lt;xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A&gt;</ph> method.","pos":[1045,1242],"source":" You can populate this object, for example, by displaying a login dialog box in the <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> method."}]}]},{"pos":[2101,2321],"content":"To access the roles and profile services, specify the <xref:System.Web.ClientServices.Providers.ClientRoleProvider> and <xref:System.Web.ClientServices.Providers.ClientSettingsProvider> in your application configuration.","nodes":[{"content":"To access the roles and profile services, specify the <ph id=\"ph1\">&lt;xref:System.Web.ClientServices.Providers.ClientRoleProvider&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.ClientServices.Providers.ClientSettingsProvider&gt;</ph> in your application configuration.","pos":[0,220],"source":"To access the roles and profile services, specify the <xref:System.Web.ClientServices.Providers.ClientRoleProvider> and <xref:System.Web.ClientServices.Providers.ClientSettingsProvider> in your application configuration."}]}],"pos":[1158,3486],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.ClientServices.Providers\n  id: System.Web.ClientServices.Providers\n  children:\n  - System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials\n  - System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider\n  - System.Web.ClientServices.Providers.ClientRoleProvider\n  - System.Web.ClientServices.Providers.ClientSettingsProvider\n  - System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider\n  - System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider\n  - System.Web.ClientServices.Providers.SettingsSavedEventArgs\n  - System.Web.ClientServices.Providers.UserValidatedEventArgs\n  langs:\n  - csharp\n  name: System.Web.ClientServices.Providers\n  nameWithType: System.Web.ClientServices.Providers\n  fullName: System.Web.ClientServices.Providers\n  type: Namespace\n  summary: The <xref href=\"System.Web.ClientServices.Providers\"></xref> namespace contains client service providers and other classes that support access in Windows-based applications to the Microsoft Ajax authentication, roles, and profile services.\n  remarks: \"The classes in the <xref:System.Web.ClientServices.Providers> namespace include client application service providers that enable Windows-based applications to use the [!INCLUDE[ajax_current_short](~/includes/ajax-current-short-md.md)] authentication, roles, and profile services. You can enable these services and specify client service providers in your application configuration file, and then access the services through existing [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] membership, identity, and application settings infrastructures. The client service providers also support occasional connectivity by storing and retrieving user information in a local data cache when the application is offline. For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).  \\n  \\n To access the login service, you can use either Windows or Forms authentication by specifying the <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> or <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> in your application configuration. Windows authentication uses the identity supplied when a user logs in to the operating system. Forms authentication requires that you to retrieve login information from the user and pass it to the service. You can do this by specifying an <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider> implementation with your <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> configuration. The <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A?displayProperty=fullName> method returns a <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> object that contains user login information. You can populate this object, for example, by displaying a login dialog box in the <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> method.  \\n  \\n To access the roles and profile services, specify the <xref:System.Web.ClientServices.Providers.ClientRoleProvider> and <xref:System.Web.ClientServices.Providers.ClientSettingsProvider> in your application configuration.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Web.ClientServices.Providers.xml\n  ms.technology:\n  - dotnet-webforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: ClientFormsAuthenticationCredentials\n  nameWithType: ClientFormsAuthenticationCredentials\n  fullName: System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials\n- uid: System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: ClientFormsAuthenticationMembershipProvider\n  nameWithType: ClientFormsAuthenticationMembershipProvider\n  fullName: System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider\n- uid: System.Web.ClientServices.Providers.ClientRoleProvider\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: ClientRoleProvider\n  nameWithType: ClientRoleProvider\n  fullName: System.Web.ClientServices.Providers.ClientRoleProvider\n- uid: System.Web.ClientServices.Providers.ClientSettingsProvider\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: ClientSettingsProvider\n  nameWithType: ClientSettingsProvider\n  fullName: System.Web.ClientServices.Providers.ClientSettingsProvider\n- uid: System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: ClientWindowsAuthenticationMembershipProvider\n  nameWithType: ClientWindowsAuthenticationMembershipProvider\n  fullName: System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider\n- uid: System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: IClientFormsAuthenticationCredentialsProvider\n  nameWithType: IClientFormsAuthenticationCredentialsProvider\n  fullName: System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider\n- uid: System.Web.ClientServices.Providers.SettingsSavedEventArgs\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: SettingsSavedEventArgs\n  nameWithType: SettingsSavedEventArgs\n  fullName: System.Web.ClientServices.Providers.SettingsSavedEventArgs\n- uid: System.Web.ClientServices.Providers.UserValidatedEventArgs\n  parent: System.Web.ClientServices.Providers\n  isExternal: false\n  name: UserValidatedEventArgs\n  nameWithType: UserValidatedEventArgs\n  fullName: System.Web.ClientServices.Providers.UserValidatedEventArgs\n"}