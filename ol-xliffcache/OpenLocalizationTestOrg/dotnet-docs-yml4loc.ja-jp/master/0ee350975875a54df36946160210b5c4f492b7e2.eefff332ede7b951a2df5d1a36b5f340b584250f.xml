{"nodes":[{"content":"Verifies a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS#1 v1.5 signature.","nodes":[{"pos":[0,117],"content":"Verifies a Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) PKCS#1 v1.5 signature.","source":"Verifies a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS#1 v1.5 signature."}],"pos":[998,1116],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class."}],"pos":[3840,3955],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class with the specified key.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"&gt;&lt;/xref&gt;</ph> class with the specified key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class with the specified key."}],"pos":[6243,6381],"yaml":true},{"content":"The instance of Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key.","nodes":[{"pos":[0,119],"content":"The instance of Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) that holds the key.","source":"The instance of Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key."}],"pos":[6601,6721],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[6909,6937],"yaml":true},{"content":"Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter.","nodes":[{"pos":[0,143],"content":"Specifies the hash algorithm for the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) signature deformatter.","source":"Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter."}],"pos":[8310,8454],"yaml":true},{"content":"The name of the hash algorithm to use for the signature deformatter.","nodes":[{"pos":[0,68],"content":"The name of the hash algorithm to use for the signature deformatter.","nodes":[{"content":"The name of the hash algorithm to use for the signature deformatter.","pos":[0,68]}]}],"pos":[9222,9291],"yaml":true},{"content":"The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm.","nodes":[{"pos":[0,125],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">strName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not map to the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SHA1\"&gt;&lt;/xref&gt;</ph> hash algorithm.","source":"The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm."}],"pos":[9574,9700],"yaml":true},{"content":"Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter.","nodes":[{"pos":[0,143],"content":"Specifies the key to be used for the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) signature deformatter.","source":"Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter."}],"pos":[11157,11301],"yaml":true},{"content":"The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key.","nodes":[{"pos":[0,89],"content":"The instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> that holds the key.","source":"The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key."}],"pos":[11518,11608],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[11797,11825],"yaml":true},{"content":"Verifies the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature on the data.","nodes":[{"pos":[0,119],"content":"Verifies the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) signature on the data.","source":"Verifies the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature on the data."}],"pos":[13258,13378],"yaml":true},{"content":"The data signed with <code>rgbSignature</code>.","nodes":[{"pos":[0,47],"content":"The data signed with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbSignature</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The data signed with <code>rgbSignature</code>."}],"pos":[14166,14214],"yaml":true},{"content":"The signature to be verified for <code>rgbHash</code>.","nodes":[{"pos":[0,54],"content":"The signature to be verified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbHash</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The signature to be verified for <code>rgbHash</code>."}],"pos":[14282,14337],"yaml":true},{"content":"`true` if the signature is valid for the data; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the signature is valid for the data; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature is valid for the data; otherwise, `false`."}],"pos":[14395,14464],"yaml":true},{"content":"<code>rgbHash</code> is `null`.  \n  \n -or-  \n  \n <code>rgbSignature</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;rgbHash&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbHash</code> is `null`."},{"pos":[38,42],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[49,85],"content":"<ph id=\"ph1\">&lt;code&gt;rgbSignature&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbSignature</code> is `null`."}],"pos":[14662,14754],"yaml":true},{"content":"The DSA key is missing.","nodes":[{"pos":[0,23],"content":"The DSA key is missing.","nodes":[{"content":"The DSA key is missing.","pos":[0,23]}]}],"pos":[14940,14964],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DSASignatureDeformatter\n  commentId: T:System.Security.Cryptography.DSASignatureDeformatter\n  id: DSASignatureDeformatter\n  children:\n  - System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  - System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  langs:\n  - csharp\n  name: DSASignatureDeformatter\n  nameWithType: DSASignatureDeformatter\n  fullName: System.Security.Cryptography.DSASignatureDeformatter\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Verifies a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS#1 v1.5 signature.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DSASignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: DSASignatureDeformatter()\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()\n  fullName: DSASignatureDeformatter.DSASignatureDeformatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]\n  syntax:\n    content: public DSASignatureDeformatter ();\n    parameters: []\n  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: DSASignatureDeformatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  fullName: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class with the specified key.\n  syntax:\n    content: public DSASignatureDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)\n  fullName: DSASignatureDeformatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]\n  syntax:\n    content: public override void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: The name of the hash algorithm to use for the signature deformatter.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter.\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.SetKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  id: VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: VerifySignature(Byte[], Byte[])\n  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])\n  fullName: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Verifies the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature on the data.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]\n  syntax:\n    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: The data signed with <code>rgbSignature</code>.\n    - id: rgbSignature\n      type: System.Byte[]\n      description: The signature to be verified for <code>rgbHash</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature is valid for the data; otherwise, `false`.'\n  overload: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>rgbHash</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>rgbSignature</code> is `null`.\"\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The DSA key is missing.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureDeformatter\n  nameWithType: AsymmetricSignatureDeformatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter()\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()\n  fullName: DSASignatureDeformatter.DSASignatureDeformatter()\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  fullName: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)\n  fullName: DSASignatureDeformatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: VerifySignature(Byte[], Byte[])\n  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])\n  fullName: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter\n  fullName: DSASignatureDeformatter.DSASignatureDeformatter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetHashAlgorithm\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm\n  fullName: DSASignatureDeformatter.SetHashAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetKey\n  nameWithType: DSASignatureDeformatter.SetKey\n  fullName: DSASignatureDeformatter.SetKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: VerifySignature\n  nameWithType: DSASignatureDeformatter.VerifySignature\n  fullName: DSASignatureDeformatter.VerifySignature\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: VerifySignature(HashAlgorithm, Byte[])\n  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm, Byte[])\n  fullName: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm, Byte[])\n"}