{"nodes":[{"content":"Provides a graphics buffer for double buffering.","nodes":[{"pos":[0,48],"content":"Provides a graphics buffer for double buffering.","nodes":[{"content":"Provides a graphics buffer for double buffering.","pos":[0,48]}]}],"pos":[668,717],"yaml":true},{"content":"The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics. It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.  \n  \n Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface. When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface. This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.  \n  \n> [!NOTE]\n>  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.  \n  \n The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property.  \n  \n The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer. This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.  \n  \n The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated. Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.  \n  \n For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).","nodes":[{"pos":[0,264],"content":"The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics. It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.","nodes":[{"content":"The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics. It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.","pos":[0,264],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class allows you to implement custom double buffering for your graphics.","pos":[0,115],"source":"The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics."},{"content":"It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.","pos":[116,264]}]}]},{"pos":[271,720],"content":"Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface. When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface. This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.","nodes":[{"content":"Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface. When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface. This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.","pos":[0,449],"nodes":[{"content":"Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.","pos":[0,113]},{"content":"When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.","pos":[114,298]},{"content":"This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.","pos":[299,449]}]}]},{"pos":[728,1202],"content":"[!NOTE]\n The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.","leadings":["","> "],"nodes":[{"content":" The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.","pos":[8,472],"nodes":[{"content":"The simplest way to use double buffering is to set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.","pos":[1,217],"source":" The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.","pos":[218,425],"source":" Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code."},{"content":"This flag is set to <ph id=\"ph1\">`true`</ph> by default.","pos":[426,464],"source":" This flag is set to `true` by default."}]}]},{"pos":[1209,1668],"content":"The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property.","nodes":[{"content":"The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property.","pos":[0,459],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class has no public constructor and must be created by the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for an application domain using its <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.","pos":[0,249],"source":"The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method."},{"content":"You can retrieve the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</ph> property.","pos":[250,459],"source":" You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property."}]}]},{"pos":[1675,1961],"content":"The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer. This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.","nodes":[{"content":"The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer. This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property can be used for drawing to the graphics buffer.","pos":[0,111],"source":"The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer."},{"content":"This property provides access to the <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.","pos":[112,286],"source":" This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object."}]}]},{"pos":[1968,2403],"content":"The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated. Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.","nodes":[{"content":"The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated. Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.","pos":[0,435],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.","pos":[0,175],"source":"The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated."},{"content":"Other overloads of the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method allow you to specify a <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> object or an <ph id=\"ph3\">&lt;xref:System.IntPtr&gt;</ph> object that points to a device context to which to draw the contents of the graphics buffer.","pos":[176,435],"source":" Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer."}]}]},{"pos":[2410,2566],"content":"For more information about drawing double-buffered graphics, see <bpt id=\"p1\">[</bpt>Double Buffered Graphics<ept id=\"p1\">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.","source":"For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md)."}],"pos":[728,3310],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphics\"></xref> object.","nodes":[{"pos":[0,95],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.BufferedGraphics\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphics\"></xref> object."}],"pos":[6106,6202],"yaml":true},{"content":"Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object. The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state. After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.","nodes":[{"pos":[0,747],"content":"Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object. The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state. After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.","pos":[0,133],"source":"Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object in an unusable state.","pos":[134,273],"source":" The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object was occupying.","pos":[274,541],"source":" After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[542,747],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[755,1080],"content":"[!NOTE]\n Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.","pos":[8,323],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.","pos":[1,155],"source":" Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[156,315],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method."}]}]}],"pos":[6213,7299],"yaml":true,"extradata":"MT"},{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"pos":[0,124],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]}],"pos":[8337,8462],"yaml":true},{"content":"Gets a <xref href=\"System.Drawing.Graphics\"></xref> object that outputs to the graphics buffer.","nodes":[{"pos":[0,95],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> object that outputs to the graphics buffer.","source":"Gets a <xref href=\"System.Drawing.Graphics\"></xref> object that outputs to the graphics buffer."}],"pos":[9495,9591],"yaml":true},{"content":"This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.","nodes":[{"pos":[0,162],"content":"This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.","nodes":[{"content":"This property provides a <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.","pos":[0,162],"source":"This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object."}]}],"pos":[9602,9765],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Graphics\"></xref> object that outputs to the graphics buffer.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> object that outputs to the graphics buffer.","source":"A <xref href=\"System.Drawing.Graphics\"></xref> object that outputs to the graphics buffer."}],"pos":[9904,9995],"yaml":true},{"content":"Writes the contents of the graphics buffer to the default device.","nodes":[{"pos":[0,65],"content":"Writes the contents of the graphics buffer to the default device.","nodes":[{"content":"Writes the contents of the graphics buffer to the default device.","pos":[0,65]}]}],"pos":[10956,11022],"yaml":true},{"content":"This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.","nodes":[{"pos":[0,278],"content":"This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.","nodes":[{"content":"This method writes the contents of the graphics buffer to the device specified by calling the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> used to create this <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.","pos":[0,278],"source":"This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object."}]}],"pos":[11033,11312],"yaml":true,"extradata":"MT"},{"content":"Writes the contents of the graphics buffer to the specified <xref href=\"System.Drawing.Graphics\"></xref> object.","nodes":[{"pos":[0,112],"content":"Writes the contents of the graphics buffer to the specified <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> object.","source":"Writes the contents of the graphics buffer to the specified <xref href=\"System.Drawing.Graphics\"></xref> object."}],"pos":[12435,12548],"yaml":true},{"content":"This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.","nodes":[{"pos":[0,110],"content":"This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.","nodes":[{"content":"This method writes the contents of the graphics buffer to the specified <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object.","pos":[0,110],"source":"This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object."}]}],"pos":[12559,12670],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Graphics\"></xref> object to which to write the contents of the graphics buffer.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> object to which to write the contents of the graphics buffer.","source":"A <xref href=\"System.Drawing.Graphics\"></xref> object to which to write the contents of the graphics buffer."}],"pos":[13485,13594],"yaml":true},{"content":"Writes the contents of the graphics buffer to the device context associated with the specified <xref href=\"System.IntPtr\"></xref> handle.","nodes":[{"pos":[0,137],"content":"Writes the contents of the graphics buffer to the device context associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> handle.","source":"Writes the contents of the graphics buffer to the device context associated with the specified <xref href=\"System.IntPtr\"></xref> handle."}],"pos":[14616,14754],"yaml":true},{"content":"This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.","nodes":[{"pos":[0,135],"content":"This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.","nodes":[{"content":"This method writes the contents of the graphics buffer to the device context associated with the specified <ph id=\"ph1\">&lt;xref:System.IntPtr&gt;</ph> handle.","pos":[0,135],"source":"This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle."}]}],"pos":[14765,14901],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IntPtr\"></xref> that points to the device context to which to write the contents of the graphics buffer.","nodes":[{"pos":[0,126],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> that points to the device context to which to write the contents of the graphics buffer.","source":"An <xref href=\"System.IntPtr\"></xref> that points to the device context to which to write the contents of the graphics buffer."}],"pos":[15682,15809],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.BufferedGraphics\n  commentId: T:System.Drawing.BufferedGraphics\n  id: BufferedGraphics\n  children:\n  - System.Drawing.BufferedGraphics.Dispose\n  - System.Drawing.BufferedGraphics.Finalize\n  - System.Drawing.BufferedGraphics.Graphics\n  - System.Drawing.BufferedGraphics.Render\n  - System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)\n  - System.Drawing.BufferedGraphics.Render(System.IntPtr)\n  langs:\n  - csharp\n  name: BufferedGraphics\n  nameWithType: BufferedGraphics\n  fullName: System.Drawing.BufferedGraphics\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Provides a graphics buffer for double buffering.\n  remarks: \"The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics. It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.  \\n  \\n Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface. When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface. This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.  \\n  \\n> [!NOTE]\\n>  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.  \\n  \\n The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property.  \\n  \\n The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer. This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.  \\n  \\n The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated. Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.  \\n  \\n For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).\"\n  example:\n  - \"The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations. Clicking the form alternately starts and stops a timer that causes draw updates. The draw updates allow you to observe the effect of double buffering. Right-clicking the form cycles through the following drawing modes:  \\n  \\n-   Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.  \\n  \\n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.  \\n  \\n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.  \\n  \\n In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.  \\n  \\n [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]\\n [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]\\n [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]\"\n  syntax:\n    content: 'public sealed class BufferedGraphics : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphics.Dispose\n  commentId: M:System.Drawing.BufferedGraphics.Dispose\n  id: Dispose\n  parent: System.Drawing.BufferedGraphics\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: BufferedGraphics.Dispose()\n  fullName: BufferedGraphics.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphics\"></xref> object.\n  remarks: \"Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object. The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state. After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphics.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphics.Finalize\n  commentId: M:System.Drawing.BufferedGraphics.Finalize\n  id: Finalize\n  parent: System.Drawing.BufferedGraphics\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: BufferedGraphics.Finalize()\n  fullName: BufferedGraphics.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~BufferedGraphics ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphics.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphics.Graphics\n  commentId: P:System.Drawing.BufferedGraphics.Graphics\n  id: Graphics\n  parent: System.Drawing.BufferedGraphics\n  langs:\n  - csharp\n  name: Graphics\n  nameWithType: BufferedGraphics.Graphics\n  fullName: BufferedGraphics.Graphics\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a <xref href=\"System.Drawing.Graphics\"></xref> object that outputs to the graphics buffer.\n  remarks: This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.\n  syntax:\n    content: public System.Drawing.Graphics Graphics { get; }\n    return:\n      type: System.Drawing.Graphics\n      description: A <xref href=\"System.Drawing.Graphics\"></xref> object that outputs to the graphics buffer.\n  overload: System.Drawing.BufferedGraphics.Graphics*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphics.Render\n  commentId: M:System.Drawing.BufferedGraphics.Render\n  id: Render\n  parent: System.Drawing.BufferedGraphics\n  langs:\n  - csharp\n  name: Render()\n  nameWithType: BufferedGraphics.Render()\n  fullName: BufferedGraphics.Render()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Writes the contents of the graphics buffer to the default device.\n  remarks: This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.\n  syntax:\n    content: public void Render ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphics.Render*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)\n  commentId: M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)\n  id: Render(System.Drawing.Graphics)\n  parent: System.Drawing.BufferedGraphics\n  langs:\n  - csharp\n  name: Render(Graphics)\n  nameWithType: BufferedGraphics.Render(Graphics)\n  fullName: BufferedGraphics.Render(Graphics)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Writes the contents of the graphics buffer to the specified <xref href=\"System.Drawing.Graphics\"></xref> object.\n  remarks: This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.\n  example:\n  - \"The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]\\n [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]\\n [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]\"\n  syntax:\n    content: public void Render (System.Drawing.Graphics target);\n    parameters:\n    - id: target\n      type: System.Drawing.Graphics\n      description: A <xref href=\"System.Drawing.Graphics\"></xref> object to which to write the contents of the graphics buffer.\n  overload: System.Drawing.BufferedGraphics.Render*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)\n  commentId: M:System.Drawing.BufferedGraphics.Render(System.IntPtr)\n  id: Render(System.IntPtr)\n  parent: System.Drawing.BufferedGraphics\n  langs:\n  - csharp\n  name: Render(IntPtr)\n  nameWithType: BufferedGraphics.Render(IntPtr)\n  fullName: BufferedGraphics.Render(IntPtr)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Writes the contents of the graphics buffer to the device context associated with the specified <xref href=\"System.IntPtr\"></xref> handle.\n  remarks: This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.\n  example:\n  - \"The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]\\n [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]\\n [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]\"\n  syntax:\n    content: public void Render (IntPtr targetDC);\n    parameters:\n    - id: targetDC\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> that points to the device context to which to write the contents of the graphics buffer.\n  overload: System.Drawing.BufferedGraphics.Render*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.BufferedGraphics.Dispose\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Dispose()\n  nameWithType: BufferedGraphics.Dispose()\n  fullName: BufferedGraphics.Dispose()\n- uid: System.Drawing.BufferedGraphics.Finalize\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Finalize()\n  nameWithType: BufferedGraphics.Finalize()\n  fullName: BufferedGraphics.Finalize()\n- uid: System.Drawing.BufferedGraphics.Graphics\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Graphics\n  nameWithType: BufferedGraphics.Graphics\n  fullName: BufferedGraphics.Graphics\n- uid: System.Drawing.Graphics\n  parent: System.Drawing\n  isExternal: false\n  name: Graphics\n  nameWithType: Graphics\n  fullName: System.Drawing.Graphics\n- uid: System.Drawing.BufferedGraphics.Render\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Render()\n  nameWithType: BufferedGraphics.Render()\n  fullName: BufferedGraphics.Render()\n- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Render(Graphics)\n  nameWithType: BufferedGraphics.Render(Graphics)\n  fullName: BufferedGraphics.Render(Graphics)\n- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Render(IntPtr)\n  nameWithType: BufferedGraphics.Render(IntPtr)\n  fullName: BufferedGraphics.Render(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.BufferedGraphics.Dispose*\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Dispose\n  nameWithType: BufferedGraphics.Dispose\n  fullName: BufferedGraphics.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n- uid: System.Drawing.BufferedGraphics.Finalize*\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Finalize\n  nameWithType: BufferedGraphics.Finalize\n  fullName: BufferedGraphics.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n- uid: System.Drawing.BufferedGraphics.Graphics*\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Graphics\n  nameWithType: BufferedGraphics.Graphics\n  fullName: BufferedGraphics.Graphics\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n- uid: System.Drawing.BufferedGraphics.Render*\n  parent: System.Drawing.BufferedGraphics\n  isExternal: false\n  name: Render\n  nameWithType: BufferedGraphics.Render\n  fullName: BufferedGraphics.Render\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphics.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}