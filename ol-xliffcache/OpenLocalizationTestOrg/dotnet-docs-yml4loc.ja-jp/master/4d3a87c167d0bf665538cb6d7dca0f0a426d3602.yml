### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DSASignatureFormatter
  commentId: T:System.Security.Cryptography.DSASignatureFormatter
  id: DSASignatureFormatter
  children:
  - System.Security.Cryptography.DSASignatureFormatter.#ctor
  - System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])
  - System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  name: DSASignatureFormatter
  nameWithType: DSASignatureFormatter
  fullName: System.Security.Cryptography.DSASignatureFormatter
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Creates a Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) signature.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DSASignatureFormatter : System.Security.Cryptography.AsymmetricSignatureFormatter
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricSignatureFormatter
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor
  commentId: M:System.Security.Cryptography.DSASignatureFormatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DSASignatureFormatter
  langs:
  - csharp
  name: DSASignatureFormatter()
  nameWithType: DSASignatureFormatter.DSASignatureFormatter()
  fullName: DSASignatureFormatter.DSASignatureFormatter()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.DSASignatureFormatter"></xref> class.
  syntax:
    content: public DSASignatureFormatter ();
    parameters: []
  overload: System.Security.Cryptography.DSASignatureFormatter.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  commentId: M:System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'
  parent: System.Security.Cryptography.DSASignatureFormatter
  langs:
  - csharp
  name: DSASignatureFormatter(AsymmetricAlgorithm)
  nameWithType: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)
  fullName: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.DSASignatureFormatter"></xref> class with the specified key.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]
  syntax:
    content: public DSASignatureFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The instance of the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) that holds the key.
  overload: System.Security.Cryptography.DSASignatureFormatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>key</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])
  commentId: M:System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSASignatureFormatter
  langs:
  - csharp
  name: CreateSignature(Byte[])
  nameWithType: DSASignatureFormatter.CreateSignature(Byte[])
  fullName: DSASignatureFormatter.CreateSignature(Byte[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: 'Creates the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) PKCS #1 signature for the specified data.'
  remarks: The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>.
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]
  syntax:
    content: public override byte[] CreateSignature (byte[] rgbHash);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: The data to be signed.
    return:
      type: System.Byte[]
      description: The digital signature for the specified data.
  overload: System.Security.Cryptography.DSASignatureFormatter.CreateSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>rgbHash</code> is `null`.
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "The OID is `null`.  \n  \n -or-  \n  \n The DSA key is `null`."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)
  commentId: M:System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.DSASignatureFormatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: DSASignatureFormatter.SetHashAlgorithm(String)
  fullName: DSASignatureFormatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Specifies the hash algorithm for the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) signature formatter.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]
  syntax:
    content: public override void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: The name of the hash algorithm to use for the signature formatter.
  overload: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: The <code>strName</code> parameter does not map to the <xref href="System.Security.Cryptography.SHA1"></xref> hash algorithm.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  commentId: M:System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureFormatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)
  fullName: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Specifies the key to be used for the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) signature formatter.
  syntax:
    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The instance of <xref href="System.Security.Cryptography.DSA"></xref> that holds the key.
  overload: System.Security.Cryptography.DSASignatureFormatter.SetKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>key</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: DSASignatureFormatter()
  nameWithType: DSASignatureFormatter.DSASignatureFormatter()
  fullName: DSASignatureFormatter.DSASignatureFormatter()
- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: DSASignatureFormatter(AsymmetricAlgorithm)
  nameWithType: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)
  fullName: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: CreateSignature(Byte[])
  nameWithType: DSASignatureFormatter.CreateSignature(Byte[])
  fullName: DSASignatureFormatter.CreateSignature(Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: DSASignatureFormatter.SetHashAlgorithm(String)
  fullName: DSASignatureFormatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)
  fullName: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor*
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: DSASignatureFormatter
  nameWithType: DSASignatureFormatter.DSASignatureFormatter
  fullName: DSASignatureFormatter.DSASignatureFormatter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature*
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: CreateSignature
  nameWithType: DSASignatureFormatter.CreateSignature
  fullName: DSASignatureFormatter.CreateSignature
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: DSASignatureFormatter.SetHashAlgorithm
  fullName: DSASignatureFormatter.SetHashAlgorithm
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey*
  parent: System.Security.Cryptography.DSASignatureFormatter
  isExternal: false
  name: SetKey
  nameWithType: DSASignatureFormatter.SetKey
  fullName: DSASignatureFormatter.SetKey
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: CreateSignature(HashAlgorithm)
  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)
  fullName: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)
