{"nodes":[{"content":"Performs a cryptographic transformation of data. This class cannot be inherited.","nodes":[{"pos":[0,80],"content":"Performs a cryptographic transformation of data. This class cannot be inherited.","nodes":[{"content":"Performs a cryptographic transformation of data. This class cannot be inherited.","pos":[0,80],"nodes":[{"content":"Performs a cryptographic transformation of data.","pos":[0,48]},{"content":"This class cannot be inherited.","pos":[49,80]}]}]}],"pos":[1197,1278],"yaml":true},{"content":"Gets a value indicating whether the current transform can be reused.","nodes":[{"pos":[0,68],"content":"Gets a value indicating whether the current transform can be reused.","nodes":[{"content":"Gets a value indicating whether the current transform can be reused.","pos":[0,68]}]}],"pos":[3778,3847],"yaml":true},{"content":"Always `true`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`true`</ph>.","source":"Always `true`."}],"pos":[4866,4881],"yaml":true},{"content":"Gets a value indicating whether multiple blocks can be transformed.","nodes":[{"pos":[0,67],"content":"Gets a value indicating whether multiple blocks can be transformed.","nodes":[{"content":"Gets a value indicating whether multiple blocks can be transformed.","pos":[0,67]}]}],"pos":[6181,6249],"yaml":true},{"content":"`true` if multiple blocks can be transformed; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if multiple blocks can be transformed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if multiple blocks can be transformed; otherwise, `false`."}],"pos":[7285,7353],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> method.","nodes":[{"pos":[0,111],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptoAPITransform\"&gt;&lt;/xref&gt;</ph> method.","source":"Releases all resources used by the <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> method."}],"pos":[8540,8652],"yaml":true},{"content":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.  \n  \n Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).","nodes":[{"pos":[0,94],"content":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.","nodes":[{"content":"This method is a simple call to <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;</ph>.","pos":[0,94],"source":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>."}]},{"pos":[101,370],"content":"Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).","nodes":[{"content":"Calling <ph id=\"ph1\">`Dispose`</ph> allows the resources used by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> to be reallocated for other purposes.","pos":[0,143],"source":"Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes."},{"content":"For more information about <ph id=\"ph1\">`Dispose`</ph>, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.","pos":[144,269],"source":" For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md)."}]}],"pos":[8663,9038],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> class.","nodes":[{"pos":[0,134],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptoAPITransform\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> class."}],"pos":[11154,11289],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.","nodes":[{"pos":[0,457],"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph>.","pos":[0,102],"source":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> in an unusable state.","pos":[103,211],"source":" The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> was occupying.","pos":[212,457],"source":" After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying."}]},{"pos":[464,669],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[677,987],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.","pos":[8,308],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph>.","pos":[1,124],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[125,300],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method."}]}]}],"pos":[11300,12295],"yaml":true,"extradata":"MT"},{"content":"Gets the input block size.","nodes":[{"pos":[0,26],"content":"Gets the input block size.","nodes":[{"content":"Gets the input block size.","pos":[0,26]}]}],"pos":[13579,13606],"yaml":true},{"content":"The input block size in bytes.","nodes":[{"pos":[0,30],"content":"The input block size in bytes.","nodes":[{"content":"The input block size in bytes.","pos":[0,30]}]}],"pos":[14597,14628],"yaml":true},{"content":"Gets the key handle.","nodes":[{"pos":[0,20],"content":"Gets the key handle.","nodes":[{"content":"Gets the key handle.","pos":[0,20]}]}],"pos":[15823,15844],"yaml":true},{"content":"The key handle.","nodes":[{"pos":[0,15],"content":"The key handle.","nodes":[{"content":"The key handle.","pos":[0,15]}]}],"pos":[15957,15973],"yaml":true},{"content":"Gets the output block size.","nodes":[{"pos":[0,27],"content":"Gets the output block size.","nodes":[{"content":"Gets the output block size.","pos":[0,27]}]}],"pos":[17199,17227],"yaml":true},{"content":"The output block size in bytes.","nodes":[{"pos":[0,31],"content":"The output block size in bytes.","nodes":[{"content":"The output block size in bytes.","pos":[0,31]}]}],"pos":[18221,18253],"yaml":true},{"content":"Resets the internal state of <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> so that it can be used again to do a different encryption or decryption.","nodes":[{"pos":[0,170],"content":"Resets the internal state of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptoAPITransform\"&gt;&lt;/xref&gt;</ph> so that it can be used again to do a different encryption or decryption.","source":"Resets the internal state of <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> so that it can be used again to do a different encryption or decryption."}],"pos":[19429,19600],"yaml":true},{"content":"The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock. The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and `Reset` is not called. You can choose to manually call the `Reset` method in this case.","nodes":[{"pos":[0,375],"content":"The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock. The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and `Reset` is not called. You can choose to manually call the `Reset` method in this case.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A&gt;</ph> method is called automatically when you call TransformFinalBlock.","pos":[0,133],"source":"The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock."},{"content":"The <ph id=\"ph1\">`Reset`</ph> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.","pos":[134,246],"source":" The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted."},{"content":"In this case, an exception is thrown and <ph id=\"ph1\">`Reset`</ph> is not called.","pos":[247,310],"source":" In this case, an exception is thrown and `Reset` is not called."},{"content":"You can choose to manually call the <ph id=\"ph1\">`Reset`</ph> method in this case.","pos":[311,375],"source":" You can choose to manually call the `Reset` method in this case."}]}],"pos":[19611,19987],"yaml":true,"extradata":"MT"},{"content":"Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.","nodes":[{"pos":[0,166],"content":"Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.","nodes":[{"content":"Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.","pos":[0,166]}]}],"pos":[21722,21889],"yaml":true},{"content":"The input on which to perform the operation on.","nodes":[{"pos":[0,47],"content":"The input on which to perform the operation on.","nodes":[{"content":"The input on which to perform the operation on.","pos":[0,47]}]}],"pos":[23076,23124],"yaml":true},{"content":"The offset into the input byte array from which to begin using data from.","nodes":[{"pos":[0,73],"content":"The offset into the input byte array from which to begin using data from.","nodes":[{"content":"The offset into the input byte array from which to begin using data from.","pos":[0,73]}]}],"pos":[23190,23264],"yaml":true},{"content":"The number of bytes in the input byte array to use as data.","nodes":[{"pos":[0,59],"content":"The number of bytes in the input byte array to use as data.","nodes":[{"content":"The number of bytes in the input byte array to use as data.","pos":[0,59]}]}],"pos":[23329,23389],"yaml":true},{"content":"The output to which to write the data to.","nodes":[{"pos":[0,41],"content":"The output to which to write the data to.","nodes":[{"content":"The output to which to write the data to.","pos":[0,41]}]}],"pos":[23457,23499],"yaml":true},{"content":"The offset into the output byte array from which to begin writing data from.","nodes":[{"pos":[0,76],"content":"The offset into the output byte array from which to begin writing data from.","nodes":[{"content":"The offset into the output byte array from which to begin writing data from.","pos":[0,76]}]}],"pos":[23566,23643],"yaml":true},{"content":"The number of bytes written.","nodes":[{"pos":[0,28],"content":"The number of bytes written.","nodes":[{"content":"The number of bytes written.","pos":[0,28]}]}],"pos":[23699,23728],"yaml":true},{"content":"The <code>inputBuffer</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>outputBuffer</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>inputBuffer</code> parameter is `null`."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,117],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">outputBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>outputBuffer</code> parameter is `null`."}],"pos":[23920,24044],"yaml":true},{"content":"The length of the input buffer is less than the sum of the input offset and the input count.","nodes":[{"pos":[0,92],"content":"The length of the input buffer is less than the sum of the input offset and the input count.","nodes":[{"content":"The length of the input buffer is less than the sum of the input offset and the input count.","pos":[0,92]}]}],"pos":[24138,24231],"yaml":true},{"content":"<code>inputOffset</code> is out of range. This parameter requires a non-negative number.","nodes":[{"pos":[0,88],"content":"<code>inputOffset</code> is out of range. This parameter requires a non-negative number.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.","pos":[0,41],"source":"<code>inputOffset</code> is out of range."},{"content":"This parameter requires a non-negative number.","pos":[42,88]}]}],"pos":[24345,24434],"yaml":true},{"content":"Computes the transformation for the specified region of the specified byte array.","nodes":[{"pos":[0,81],"content":"Computes the transformation for the specified region of the specified byte array.","nodes":[{"content":"Computes the transformation for the specified region of the specified byte array.","pos":[0,81]}]}],"pos":[25783,25865],"yaml":true},{"content":"The input on which to perform the operation on.","nodes":[{"pos":[0,47],"content":"The input on which to perform the operation on.","nodes":[{"content":"The input on which to perform the operation on.","pos":[0,47]}]}],"pos":[26945,26993],"yaml":true},{"content":"The offset into the byte array from which to begin using data from.","nodes":[{"pos":[0,67],"content":"The offset into the byte array from which to begin using data from.","nodes":[{"content":"The offset into the byte array from which to begin using data from.","pos":[0,67]}]}],"pos":[27059,27127],"yaml":true},{"content":"The number of bytes in the byte array to use as data.","nodes":[{"pos":[0,53],"content":"The number of bytes in the byte array to use as data.","nodes":[{"content":"The number of bytes in the byte array to use as data.","pos":[0,53]}]}],"pos":[27192,27246],"yaml":true},{"content":"The computed transformation.","nodes":[{"pos":[0,28],"content":"The computed transformation.","nodes":[{"content":"The computed transformation.","pos":[0,28]}]}],"pos":[27303,27332],"yaml":true},{"content":"The <code>inputBuffer</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>inputBuffer</code> parameter is `null`."}],"pos":[27529,27579],"yaml":true},{"content":"The <code>inputOffset</code> parameter is less than zero.  \n  \n -or-  \n  \n The <code>inputCount</code> parameter is less than zero.  \n  \n -or-  \n  \n The length of the input buffer is less than the sum of the input offset and the input count.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero.","source":"The <code>inputOffset</code> parameter is less than zero."},{"pos":[64,68],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[75,131],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero.","source":"The <code>inputCount</code> parameter is less than zero."},{"pos":[138,142],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[149,241],"content":"The length of the input buffer is less than the sum of the input offset and the input count.","nodes":[{"content":"The length of the input buffer is less than the sum of the input offset and the input count.","pos":[0,92]}]}],"pos":[27673,27925],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref> padding is invalid.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"&gt;&lt;/xref&gt;</ph> padding is invalid.","source":"The <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref> padding is invalid."}],"pos":[28073,28165],"yaml":true},{"content":"The <code>inputOffset</code> parameter is out of range. This parameter requires a non-negative number.","nodes":[{"pos":[0,102],"content":"The <code>inputOffset</code> parameter is out of range. This parameter requires a non-negative number.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is out of range.","pos":[0,55],"source":"The <code>inputOffset</code> parameter is out of range."},{"content":"This parameter requires a non-negative number.","pos":[56,102]}]}],"pos":[28279,28382],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CryptoAPITransform\n  commentId: T:System.Security.Cryptography.CryptoAPITransform\n  id: CryptoAPITransform\n  children:\n  - System.Security.Cryptography.CryptoAPITransform.CanReuseTransform\n  - System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks\n  - System.Security.Cryptography.CryptoAPITransform.Clear\n  - System.Security.Cryptography.CryptoAPITransform.Dispose\n  - System.Security.Cryptography.CryptoAPITransform.InputBlockSize\n  - System.Security.Cryptography.CryptoAPITransform.KeyHandle\n  - System.Security.Cryptography.CryptoAPITransform.OutputBlockSize\n  - System.Security.Cryptography.CryptoAPITransform.Reset\n  - System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: CryptoAPITransform\n  nameWithType: CryptoAPITransform\n  fullName: System.Security.Cryptography.CryptoAPITransform\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Performs a cryptographic transformation of data. This class cannot be inherited.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#1)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class CryptoAPITransform : System.Security.Cryptography.ICryptoTransform\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.Cryptography.ICryptoTransform\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform\n  commentId: P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform\n  id: CanReuseTransform\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: CanReuseTransform\n  nameWithType: CryptoAPITransform.CanReuseTransform\n  fullName: CryptoAPITransform.CanReuseTransform\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether the current transform can be reused.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A> property to determine if the current transform can be reused. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#2)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#2)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#2)]\"\n  syntax:\n    content: public bool CanReuseTransform { get; }\n    return:\n      type: System.Boolean\n      description: Always `true`.\n  overload: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks\n  commentId: P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks\n  id: CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: CanTransformMultipleBlocks\n  nameWithType: CryptoAPITransform.CanTransformMultipleBlocks\n  fullName: CryptoAPITransform.CanTransformMultipleBlocks\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether multiple blocks can be transformed.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A> property to determine if multiple blocks can be transformed. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#3)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#3)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#3)]\"\n  syntax:\n    content: public bool CanTransformMultipleBlocks { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if multiple blocks can be transformed; otherwise, `false`.'\n  overload: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.Clear\n  commentId: M:System.Security.Cryptography.CryptoAPITransform.Clear\n  id: Clear\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: CryptoAPITransform.Clear()\n  fullName: CryptoAPITransform.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> method.\n  remarks: \"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.  \\n  \\n Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).\"\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A> method to release the resources used by the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#7)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#7)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#7)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Security.Cryptography.CryptoAPITransform.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.Dispose\n  commentId: M:System.Security.Cryptography.CryptoAPITransform.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CryptoAPITransform.Dispose()\n  fullName: CryptoAPITransform.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.CryptoAPITransform.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.InputBlockSize\n  commentId: P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize\n  id: InputBlockSize\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: InputBlockSize\n  nameWithType: CryptoAPITransform.InputBlockSize\n  fullName: CryptoAPITransform.InputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the input block size.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A> property to retrieve the input block size. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#4)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#4)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#4)]\"\n  syntax:\n    content: public int InputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: The input block size in bytes.\n  overload: System.Security.Cryptography.CryptoAPITransform.InputBlockSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.KeyHandle\n  commentId: P:System.Security.Cryptography.CryptoAPITransform.KeyHandle\n  id: KeyHandle\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: KeyHandle\n  nameWithType: CryptoAPITransform.KeyHandle\n  fullName: CryptoAPITransform.KeyHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the key handle.\n  syntax:\n    content: public IntPtr KeyHandle { get; }\n    return:\n      type: System.IntPtr\n      description: The key handle.\n  overload: System.Security.Cryptography.CryptoAPITransform.KeyHandle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize\n  commentId: P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize\n  id: OutputBlockSize\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: OutputBlockSize\n  nameWithType: CryptoAPITransform.OutputBlockSize\n  fullName: CryptoAPITransform.OutputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the output block size.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A> property to retrieve the output block size. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#6)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#6)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#6)]\"\n  syntax:\n    content: public int OutputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: The output block size in bytes.\n  overload: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.Reset\n  commentId: M:System.Security.Cryptography.CryptoAPITransform.Reset\n  id: Reset\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: CryptoAPITransform.Reset()\n  fullName: CryptoAPITransform.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Resets the internal state of <xref href=\"System.Security.Cryptography.CryptoAPITransform\"></xref> so that it can be used again to do a different encryption or decryption.\n  remarks: The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock. The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and `Reset` is not called. You can choose to manually call the `Reset` method in this case.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public void Reset ();\n    parameters: []\n  overload: System.Security.Cryptography.CryptoAPITransform.Reset*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  commentId: M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: CryptoAPITransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: CryptoAPITransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A> method to transform the bytes from `currentPosition` in the `sourceBytes` array, writing the bytes to the `targetBytes` array. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#8)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#8)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#8)]\"\n  syntax:\n    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: The input on which to perform the operation on.\n    - id: inputOffset\n      type: System.Int32\n      description: The offset into the input byte array from which to begin using data from.\n    - id: inputCount\n      type: System.Int32\n      description: The number of bytes in the input byte array to use as data.\n    - id: outputBuffer\n      type: System.Byte[]\n      description: The output to which to write the data to.\n    - id: outputOffset\n      type: System.Int32\n      description: The offset into the output byte array from which to begin writing data from.\n    return:\n      type: System.Int32\n      description: The number of bytes written.\n  overload: System.Security.Cryptography.CryptoAPITransform.TransformBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>inputBuffer</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>outputBuffer</code> parameter is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The length of the input buffer is less than the sum of the input offset and the input count.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>inputOffset</code> is out of range. This parameter requires a non-negative number.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoAPITransform\n  langs:\n  - csharp\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: CryptoAPITransform.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: CryptoAPITransform.TransformFinalBlock(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Computes the transformation for the specified region of the specified byte array.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A> method to transform the final block of bytes. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#9)]\\n [!code-csharp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#9)]\\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#9)]\"\n  syntax:\n    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: The input on which to perform the operation on.\n    - id: inputOffset\n      type: System.Int32\n      description: The offset into the byte array from which to begin using data from.\n    - id: inputCount\n      type: System.Int32\n      description: The number of bytes in the byte array to use as data.\n    return:\n      type: System.Byte[]\n      description: The computed transformation.\n  overload: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>inputBuffer</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>inputOffset</code> parameter is less than zero.  \\n  \\n -or-  \\n  \\n The <code>inputCount</code> parameter is less than zero.  \\n  \\n -or-  \\n  \\n The length of the input buffer is less than the sum of the input offset and the input count.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref> padding is invalid.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>inputOffset</code> parameter is out of range. This parameter requires a non-negative number.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: CryptoAPITransform.CanReuseTransform\n  fullName: CryptoAPITransform.CanReuseTransform\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: CryptoAPITransform.CanTransformMultipleBlocks\n  fullName: CryptoAPITransform.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.CryptoAPITransform.Clear\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: Clear()\n  nameWithType: CryptoAPITransform.Clear()\n  fullName: CryptoAPITransform.Clear()\n- uid: System.Security.Cryptography.CryptoAPITransform.Dispose\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: Dispose()\n  nameWithType: CryptoAPITransform.Dispose()\n  fullName: CryptoAPITransform.Dispose()\n- uid: System.Security.Cryptography.CryptoAPITransform.InputBlockSize\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: CryptoAPITransform.InputBlockSize\n  fullName: CryptoAPITransform.InputBlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CryptoAPITransform.KeyHandle\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: KeyHandle\n  nameWithType: CryptoAPITransform.KeyHandle\n  fullName: CryptoAPITransform.KeyHandle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: CryptoAPITransform.OutputBlockSize\n  fullName: CryptoAPITransform.OutputBlockSize\n- uid: System.Security.Cryptography.CryptoAPITransform.Reset\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: Reset()\n  nameWithType: CryptoAPITransform.Reset()\n  fullName: CryptoAPITransform.Reset()\n- uid: System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: CryptoAPITransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: CryptoAPITransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: CryptoAPITransform.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: CryptoAPITransform.TransformFinalBlock(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: CryptoAPITransform.CanReuseTransform\n  fullName: CryptoAPITransform.CanReuseTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: CryptoAPITransform.CanTransformMultipleBlocks\n  fullName: CryptoAPITransform.CanTransformMultipleBlocks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.Clear*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: Clear\n  nameWithType: CryptoAPITransform.Clear\n  fullName: CryptoAPITransform.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.Dispose*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: Dispose\n  nameWithType: CryptoAPITransform.Dispose\n  fullName: CryptoAPITransform.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.InputBlockSize*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: CryptoAPITransform.InputBlockSize\n  fullName: CryptoAPITransform.InputBlockSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.KeyHandle*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: KeyHandle\n  nameWithType: CryptoAPITransform.KeyHandle\n  fullName: CryptoAPITransform.KeyHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: CryptoAPITransform.OutputBlockSize\n  fullName: CryptoAPITransform.OutputBlockSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.Reset*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: Reset\n  nameWithType: CryptoAPITransform.Reset\n  fullName: CryptoAPITransform.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.TransformBlock*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: TransformBlock\n  nameWithType: CryptoAPITransform.TransformBlock\n  fullName: CryptoAPITransform.TransformBlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock*\n  parent: System.Security.Cryptography.CryptoAPITransform\n  isExternal: false\n  name: TransformFinalBlock\n  nameWithType: CryptoAPITransform.TransformFinalBlock\n  fullName: CryptoAPITransform.TransformFinalBlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CryptoAPITransform.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n"}