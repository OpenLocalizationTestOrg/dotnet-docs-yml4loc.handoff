{"nodes":[{"content":"Represents a group by operation. A group by operation is a grouping of the elements in the input set based on the specified key expressions followed by the application of the specified aggregates. This class cannot be inherited.","nodes":[{"pos":[0,228],"content":"Represents a group by operation. A group by operation is a grouping of the elements in the input set based on the specified key expressions followed by the application of the specified aggregates. This class cannot be inherited.","nodes":[{"content":"Represents a group by operation. A group by operation is a grouping of the elements in the input set based on the specified key expressions followed by the application of the specified aggregates. This class cannot be inherited.","pos":[0,228],"nodes":[{"content":"Represents a group by operation.","pos":[0,32]},{"content":"A group by operation is a grouping of the elements in the input set based on the specified key expressions followed by the application of the specified aggregates.","pos":[33,196]},{"content":"This class cannot be inherited.","pos":[197,228]}]}]}],"pos":[885,1114],"yaml":true},{"content":"Implements the visitor pattern for expressions that do not produce a result value.","nodes":[{"pos":[0,82],"content":"Implements the visitor pattern for expressions that do not produce a result value.","nodes":[{"content":"Implements the visitor pattern for expressions that do not produce a result value.","pos":[0,82]}]}],"pos":[36833,36916],"yaml":true},{"content":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.","nodes":[{"pos":[0,88],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;&lt;/xref&gt;</ph>.","source":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."}],"pos":[37147,37236],"yaml":true},{"content":"<code>visitor</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;visitor&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>visitor</code> is `null`."}],"pos":[37424,37456],"yaml":true},{"content":"Implements the visitor pattern for expressions that produce a result value of a specific type.","nodes":[{"pos":[0,94],"content":"Implements the visitor pattern for expressions that produce a result value of a specific type.","nodes":[{"content":"Implements the visitor pattern for expressions that produce a result value of a specific type.","pos":[0,94]}]}],"pos":[38773,38868],"yaml":true},{"content":"An instance of a typed <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref> that produces a result value of a specific type.","nodes":[{"pos":[0,144],"content":"An instance of a typed <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;&lt;/xref&gt;</ph> that produces a result value of a specific type.","source":"An instance of a typed <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref> that produces a result value of a specific type."}],"pos":[39134,39279],"yaml":true},{"content":"The type of the result produced by <code>visitor</code>.","nodes":[{"pos":[0,56],"content":"The type of the result produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">visitor</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the result produced by <code>visitor</code>."}],"pos":[39340,39397],"yaml":true},{"content":"A result value of a specific type produced by <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.","nodes":[{"pos":[0,119],"content":"A result value of a specific type produced by <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;&lt;/xref&gt;</ph>.","source":"A result value of a specific type produced by <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."}],"pos":[39452,39572],"yaml":true},{"content":"<code>visitor</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;visitor&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>visitor</code> is `null`."}],"pos":[39763,39795],"yaml":true},{"content":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbAggregate\"></xref> list that provides the aggregates to apply.","nodes":[{"pos":[0,115],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbAggregate\"&gt;&lt;/xref&gt;</ph> list that provides the aggregates to apply.","source":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbAggregate\"></xref> list that provides the aggregates to apply."}],"pos":[40814,40930],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbAggregate\"></xref> list that provides the aggregates to apply.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbAggregate\"&gt;&lt;/xref&gt;</ph> list that provides the aggregates to apply.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbAggregate\"></xref> list that provides the aggregates to apply."}],"pos":[41179,41290],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set and provides access to the set element and group element variables.","nodes":[{"pos":[0,183],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the input set and provides access to the set element and group element variables.","source":"Gets the <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set and provides access to the set element and group element variables."}],"pos":[42372,42556],"yaml":true},{"content":"The <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set and provides access to the set element and group element variables.","nodes":[{"pos":[0,178],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the input set and provides access to the set element and group element variables.","source":"The <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set and provides access to the set element and group element variables."}],"pos":[42758,42937],"yaml":true},{"content":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides grouping keys.","nodes":[{"pos":[0,106],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> list that provides grouping keys.","source":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides grouping keys."}],"pos":[44008,44115],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides grouping keys.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> list that provides grouping keys.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides grouping keys."}],"pos":[44360,44462],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  commentId: T:System.Data.Common.CommandTrees.DbGroupByExpression\n  id: DbGroupByExpression\n  children:\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  langs:\n  - csharp\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Represents a group by operation. A group by operation is a grouping of the elements in the input set based on the specified key expressions followed by the application of the specified aggregates. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class DbGroupByExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[] to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single} to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  commentId: M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor)\n  fullName: DbGroupByExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that do not produce a result value.\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Accept*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>visitor</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})\n  commentId: M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Accept<TResultType>(DbExpressionVisitor<TResultType>)\n  nameWithType: DbGroupByExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)\n  fullName: DbGroupByExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that produce a result value of a specific type.\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: An instance of a typed <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref> that produces a result value of a specific type.\n    typeParameters:\n    - id: TResultType\n      description: The type of the result produced by <code>visitor</code>.\n    return:\n      type: TResultType\n      description: A result value of a specific type produced by <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>visitor</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  commentId: P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  id: Aggregates\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Aggregates\n  nameWithType: DbGroupByExpression.Aggregates\n  fullName: DbGroupByExpression.Aggregates\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets a <xref href=\"System.Data.Common.CommandTrees.DbAggregate\"></xref> list that provides the aggregates to apply.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbAggregate> Aggregates { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate}\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbAggregate\"></xref> list that provides the aggregates to apply.\n  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  commentId: P:System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  id: Input\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Input\n  nameWithType: DbGroupByExpression.Input\n  fullName: DbGroupByExpression.Input\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set and provides access to the set element and group element variables.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbGroupExpressionBinding Input { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: The <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set and provides access to the set element and group element variables.\n  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Input*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  commentId: P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  id: Keys\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: DbGroupByExpression.Keys\n  fullName: DbGroupByExpression.Keys\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides grouping keys.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> Keys { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> list that provides grouping keys.\n  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Keys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor)\n  fullName: DbGroupByExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Accept<TResultType>(DbExpressionVisitor<TResultType>)\n  nameWithType: DbGroupByExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)\n  fullName: DbGroupByExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Aggregates\n  nameWithType: DbGroupByExpression.Aggregates\n  fullName: DbGroupByExpression.Aggregates\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Data.Common.CommandTrees.DbAggregate\n  name: DbAggregate\n  nameWithType: DbAggregate\n  fullName: System.Data.Common.CommandTrees.DbAggregate\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbAggregate>\n  nameWithType: IList<DbAggregate>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbAggregate>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbAggregate\n    name: DbAggregate\n    nameWithType: DbAggregate\n    fullName: System.Data.Common.CommandTrees.DbAggregate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Input\n  nameWithType: DbGroupByExpression.Input\n  fullName: DbGroupByExpression.Input\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Keys\n  nameWithType: DbGroupByExpression.Keys\n  fullName: DbGroupByExpression.Keys\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbExpression>\n  nameWithType: IList<DbExpression>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept*\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Accept\n  nameWithType: DbGroupByExpression.Accept\n  fullName: DbGroupByExpression.Accept\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1*\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Accept<TResultType>\n  nameWithType: DbGroupByExpression.Accept<TResultType>\n  fullName: DbGroupByExpression.Accept<TResultType>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates*\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Aggregates\n  nameWithType: DbGroupByExpression.Aggregates\n  fullName: DbGroupByExpression.Aggregates\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input*\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Input\n  nameWithType: DbGroupByExpression.Input\n  fullName: DbGroupByExpression.Input\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys*\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Keys\n  nameWithType: DbGroupByExpression.Keys\n  fullName: DbGroupByExpression.Keys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbGroupByExpression.xml\n- uid: System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DbExpression.Equals(Object)\n  fullName: DbExpression.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DbExpression.GetHashCode()\n  fullName: DbExpression.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: ExpressionKind\n  nameWithType: DbExpression.ExpressionKind\n  fullName: DbExpression.ExpressionKind\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromBinary(Byte[])\n  nameWithType: DbExpression.FromBinary(Byte[])\n  fullName: DbExpression.FromBinary(Byte[])\n- uid: System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromBoolean(Nullable<Boolean>)\n  nameWithType: DbExpression.FromBoolean(Nullable<Boolean>)\n  fullName: DbExpression.FromBoolean(Nullable<Boolean>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromByte(Nullable<Byte>)\n  nameWithType: DbExpression.FromByte(Nullable<Byte>)\n  fullName: DbExpression.FromByte(Nullable<Byte>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDateTime(Nullable<DateTime>)\n  nameWithType: DbExpression.FromDateTime(Nullable<DateTime>)\n  fullName: DbExpression.FromDateTime(Nullable<DateTime>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDateTimeOffset(Nullable<DateTimeOffset>)\n  nameWithType: DbExpression.FromDateTimeOffset(Nullable<DateTimeOffset>)\n  fullName: DbExpression.FromDateTimeOffset(Nullable<DateTimeOffset>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDecimal(Nullable<Decimal>)\n  nameWithType: DbExpression.FromDecimal(Nullable<Decimal>)\n  fullName: DbExpression.FromDecimal(Nullable<Decimal>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromDouble(Nullable<Double>)\n  nameWithType: DbExpression.FromDouble(Nullable<Double>)\n  fullName: DbExpression.FromDouble(Nullable<Double>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGeography(DbGeography)\n  nameWithType: DbExpression.FromGeography(DbGeography)\n  fullName: DbExpression.FromGeography(DbGeography)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGeometry(DbGeometry)\n  nameWithType: DbExpression.FromGeometry(DbGeometry)\n  fullName: DbExpression.FromGeometry(DbGeometry)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromGuid(Nullable<Guid>)\n  nameWithType: DbExpression.FromGuid(Nullable<Guid>)\n  fullName: DbExpression.FromGuid(Nullable<Guid>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt16(Nullable<Int16>)\n  nameWithType: DbExpression.FromInt16(Nullable<Int16>)\n  fullName: DbExpression.FromInt16(Nullable<Int16>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt32(Nullable<Int32>)\n  nameWithType: DbExpression.FromInt32(Nullable<Int32>)\n  fullName: DbExpression.FromInt32(Nullable<Int32>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromInt64(Nullable<Int64>)\n  nameWithType: DbExpression.FromInt64(Nullable<Int64>)\n  fullName: DbExpression.FromInt64(Nullable<Int64>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromSingle(Nullable<Single>)\n  nameWithType: DbExpression.FromSingle(Nullable<Single>)\n  fullName: DbExpression.FromSingle(Nullable<Single>)\n- uid: System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: FromString(String)\n  nameWithType: DbExpression.FromString(String)\n  fullName: DbExpression.FromString(String)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Single> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Single> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Single> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Int64> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int64> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Int64> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Int32> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int32> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Int32> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Int16> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Int16> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Int16> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Guid> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Guid> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Guid> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Double> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Double> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Double> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Decimal> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Decimal> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Decimal> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<DateTimeOffset> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<DateTimeOffset> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<DateTimeOffset> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<DateTime> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<DateTime> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<DateTime> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Byte> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Byte> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Byte> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean} to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Nullable<Boolean> to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Nullable<Boolean> to DbExpression)\n  fullName: DbExpression.op_Implicit(Nullable<Boolean> to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(DbGeometry to DbExpression)\n  nameWithType: DbExpression.op_Implicit(DbGeometry to DbExpression)\n  fullName: DbExpression.op_Implicit(DbGeometry to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(DbGeography to DbExpression)\n  nameWithType: DbExpression.op_Implicit(DbGeography to DbExpression)\n  fullName: DbExpression.op_Implicit(DbGeography to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[] to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(Byte[] to DbExpression)\n  nameWithType: DbExpression.op_Implicit(Byte[] to DbExpression)\n  fullName: DbExpression.op_Implicit(Byte[] to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: op_Implicit(String to DbExpression)\n  nameWithType: DbExpression.op_Implicit(String to DbExpression)\n  fullName: DbExpression.op_Implicit(String to DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression.ResultType\n  parent: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: ResultType\n  nameWithType: DbExpression.ResultType\n  fullName: DbExpression.ResultType\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: All(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.All(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.All(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: And(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.And(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.And(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpression)\n  fullName: DbExpressionBuilder.Any(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Any(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Any(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As(DbExpression, String)\n  nameWithType: DbExpressionBuilder.As(DbExpression, String)\n  fullName: DbExpressionBuilder.As(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Bind(DbExpression)\n  nameWithType: DbExpressionBuilder.Bind(DbExpression)\n  fullName: DbExpressionBuilder.Bind(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: BindAs(DbExpression, String)\n  nameWithType: DbExpressionBuilder.BindAs(DbExpression, String)\n  fullName: DbExpressionBuilder.BindAs(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CastTo(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.CastTo(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.CastTo(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Deref(DbExpression)\n  nameWithType: DbExpressionBuilder.Deref(DbExpression)\n  fullName: DbExpressionBuilder.Deref(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Distinct(DbExpression)\n  nameWithType: DbExpressionBuilder.Distinct(DbExpression)\n  fullName: DbExpressionBuilder.Distinct(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Divide(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Divide(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Divide(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Element(DbExpression)\n  nameWithType: DbExpressionBuilder.Element(DbExpression)\n  fullName: DbExpressionBuilder.Element(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Equal(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Equal(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Equal(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Except(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Except(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Except(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Exists(DbExpression)\n  nameWithType: DbExpressionBuilder.Exists(DbExpression)\n  fullName: DbExpressionBuilder.Exists(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetEntityRef(DbExpression)\n  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)\n  fullName: DbExpressionBuilder.GetEntityRef(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetRefKey(DbExpression)\n  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)\n  fullName: DbExpressionBuilder.GetRefKey(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThan(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.GreaterThan(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThanOrEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.GreaterThanOrEqual(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBind(DbExpression)\n  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)\n  fullName: DbExpressionBuilder.GroupBind(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBindAs(DbExpression, String, String)\n  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression, String, String)\n  fullName: DbExpressionBuilder.GroupBindAs(DbExpression, String, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Intersect(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Intersect(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Intersect(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsEmpty(DbExpression)\n  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)\n  fullName: DbExpressionBuilder.IsEmpty(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsNull(DbExpression)\n  nameWithType: DbExpressionBuilder.IsNull(DbExpression)\n  fullName: DbExpressionBuilder.IsNull(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOf(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOf(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.IsOf(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOfOnly(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.IsOfOnly(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  fullName: DbExpressionBuilder.Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThan(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.LessThan(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.LessThan(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThanOrEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.LessThanOrEqual(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Like(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like(DbExpression, DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression, DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Like(DbExpression, DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Limit(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Limit(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Limit(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Minus(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Minus(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Minus(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Modulo(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Modulo(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Modulo(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Multiply(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Multiply(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Multiply(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  fullName: DbExpressionBuilder.Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Negate(DbExpression)\n  nameWithType: DbExpressionBuilder.Negate(DbExpression)\n  fullName: DbExpressionBuilder.Negate(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Not(DbExpression)\n  nameWithType: DbExpressionBuilder.Not(DbExpression)\n  fullName: DbExpressionBuilder.Not(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NotEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.NotEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.NotEqual(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfType(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.OfType(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.OfType(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfTypeOnly(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.OfTypeOnly(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Or(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Or(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Or(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Plus(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Plus(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Plus(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, EdmProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, EdmProperty)\n  fullName: DbExpressionBuilder.Property(DbExpression, EdmProperty)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, NavigationProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, NavigationProperty)\n  fullName: DbExpressionBuilder.Property(DbExpression, NavigationProperty)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, RelationshipEndMember)\n  fullName: DbExpressionBuilder.Property(DbExpression, RelationshipEndMember)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, String)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, String)\n  fullName: DbExpressionBuilder.Property(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  nameWithType: DbExpressionBuilder.Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  fullName: DbExpressionBuilder.Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  fullName: DbExpressionBuilder.SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Take(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Take(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Take(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)\n  fullName: DbExpressionBuilder.ToSortClause(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause(DbExpression, String)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression, String)\n  fullName: DbExpressionBuilder.ToSortClause(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  fullName: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending(DbExpression, String)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression, String)\n  fullName: DbExpressionBuilder.ToSortClauseDescending(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: TreatAs(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.TreatAs(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.TreatAs(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnaryMinus(DbExpression)\n  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)\n  fullName: DbExpressionBuilder.UnaryMinus(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Union(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Union(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Union(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnionAll(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.UnionAll(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.UnionAll(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Where(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Where(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Where(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Abs(DbExpression)\n  nameWithType: EdmFunctions.Abs(DbExpression)\n  fullName: EdmFunctions.Abs(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddDays(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddDays(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddDays(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddHours(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddHours(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddHours(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddMicroseconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddMicroseconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddMicroseconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddMilliseconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddMilliseconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddMilliseconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddMinutes(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddMinutes(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddMinutes(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddMonths(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddMonths(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddMonths(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddNanoseconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddNanoseconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddNanoseconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddSeconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddSeconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddSeconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: AddYears(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.AddYears(DbExpression, DbExpression)\n  fullName: EdmFunctions.AddYears(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Average(DbExpression)\n  nameWithType: EdmFunctions.Average(DbExpression)\n  fullName: EdmFunctions.Average(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: BitwiseAnd(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.BitwiseAnd(DbExpression, DbExpression)\n  fullName: EdmFunctions.BitwiseAnd(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: BitwiseNot(DbExpression)\n  nameWithType: EdmFunctions.BitwiseNot(DbExpression)\n  fullName: EdmFunctions.BitwiseNot(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: BitwiseOr(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.BitwiseOr(DbExpression, DbExpression)\n  fullName: EdmFunctions.BitwiseOr(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: BitwiseXor(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.BitwiseXor(DbExpression, DbExpression)\n  fullName: EdmFunctions.BitwiseXor(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Ceiling(DbExpression)\n  nameWithType: EdmFunctions.Ceiling(DbExpression)\n  fullName: EdmFunctions.Ceiling(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Concat(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Concat(DbExpression, DbExpression)\n  fullName: EdmFunctions.Concat(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Contains(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Contains(DbExpression, DbExpression)\n  fullName: EdmFunctions.Contains(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Count(DbExpression)\n  nameWithType: EdmFunctions.Count(DbExpression)\n  fullName: EdmFunctions.Count(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Day(DbExpression)\n  nameWithType: EdmFunctions.Day(DbExpression)\n  fullName: EdmFunctions.Day(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DayOfYear(DbExpression)\n  nameWithType: EdmFunctions.DayOfYear(DbExpression)\n  fullName: EdmFunctions.DayOfYear(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffDays(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffDays(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffDays(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffHours(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffHours(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffHours(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffMicroseconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffMicroseconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffMicroseconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffMilliseconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffMilliseconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffMilliseconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffMinutes(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffMinutes(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffMinutes(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffMonths(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffMonths(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffMonths(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffNanoseconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffNanoseconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffNanoseconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffSeconds(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffSeconds(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffSeconds(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: DiffYears(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.DiffYears(DbExpression, DbExpression)\n  fullName: EdmFunctions.DiffYears(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: EndsWith(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.EndsWith(DbExpression, DbExpression)\n  fullName: EdmFunctions.EndsWith(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Floor(DbExpression)\n  nameWithType: EdmFunctions.Floor(DbExpression)\n  fullName: EdmFunctions.Floor(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: GetTotalOffsetMinutes(DbExpression)\n  nameWithType: EdmFunctions.GetTotalOffsetMinutes(DbExpression)\n  fullName: EdmFunctions.GetTotalOffsetMinutes(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Hour(DbExpression)\n  nameWithType: EdmFunctions.Hour(DbExpression)\n  fullName: EdmFunctions.Hour(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: IndexOf(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.IndexOf(DbExpression, DbExpression)\n  fullName: EdmFunctions.IndexOf(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Left(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Left(DbExpression, DbExpression)\n  fullName: EdmFunctions.Left(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Length(DbExpression)\n  nameWithType: EdmFunctions.Length(DbExpression)\n  fullName: EdmFunctions.Length(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: LongCount(DbExpression)\n  nameWithType: EdmFunctions.LongCount(DbExpression)\n  fullName: EdmFunctions.LongCount(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Max(DbExpression)\n  nameWithType: EdmFunctions.Max(DbExpression)\n  fullName: EdmFunctions.Max(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Millisecond(DbExpression)\n  nameWithType: EdmFunctions.Millisecond(DbExpression)\n  fullName: EdmFunctions.Millisecond(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Min(DbExpression)\n  nameWithType: EdmFunctions.Min(DbExpression)\n  fullName: EdmFunctions.Min(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Minute(DbExpression)\n  nameWithType: EdmFunctions.Minute(DbExpression)\n  fullName: EdmFunctions.Minute(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Month(DbExpression)\n  nameWithType: EdmFunctions.Month(DbExpression)\n  fullName: EdmFunctions.Month(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Power(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Power(DbExpression, DbExpression)\n  fullName: EdmFunctions.Power(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Replace(DbExpression, DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Replace(DbExpression, DbExpression, DbExpression)\n  fullName: EdmFunctions.Replace(DbExpression, DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Reverse(DbExpression)\n  nameWithType: EdmFunctions.Reverse(DbExpression)\n  fullName: EdmFunctions.Reverse(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Right(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Right(DbExpression, DbExpression)\n  fullName: EdmFunctions.Right(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Round(DbExpression)\n  nameWithType: EdmFunctions.Round(DbExpression)\n  fullName: EdmFunctions.Round(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Round(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Round(DbExpression, DbExpression)\n  fullName: EdmFunctions.Round(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Second(DbExpression)\n  nameWithType: EdmFunctions.Second(DbExpression)\n  fullName: EdmFunctions.Second(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: StartsWith(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.StartsWith(DbExpression, DbExpression)\n  fullName: EdmFunctions.StartsWith(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: StDev(DbExpression)\n  nameWithType: EdmFunctions.StDev(DbExpression)\n  fullName: EdmFunctions.StDev(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: StDevP(DbExpression)\n  nameWithType: EdmFunctions.StDevP(DbExpression)\n  fullName: EdmFunctions.StDevP(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Substring(DbExpression, DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Substring(DbExpression, DbExpression, DbExpression)\n  fullName: EdmFunctions.Substring(DbExpression, DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Sum(DbExpression)\n  nameWithType: EdmFunctions.Sum(DbExpression)\n  fullName: EdmFunctions.Sum(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: ToLower(DbExpression)\n  nameWithType: EdmFunctions.ToLower(DbExpression)\n  fullName: EdmFunctions.ToLower(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: ToUpper(DbExpression)\n  nameWithType: EdmFunctions.ToUpper(DbExpression)\n  fullName: EdmFunctions.ToUpper(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Trim(DbExpression)\n  nameWithType: EdmFunctions.Trim(DbExpression)\n  fullName: EdmFunctions.Trim(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: TrimEnd(DbExpression)\n  nameWithType: EdmFunctions.TrimEnd(DbExpression)\n  fullName: EdmFunctions.TrimEnd(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: TrimStart(DbExpression)\n  nameWithType: EdmFunctions.TrimStart(DbExpression)\n  fullName: EdmFunctions.TrimStart(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Truncate(DbExpression, DbExpression)\n  nameWithType: EdmFunctions.Truncate(DbExpression, DbExpression)\n  fullName: EdmFunctions.Truncate(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: TruncateTime(DbExpression)\n  nameWithType: EdmFunctions.TruncateTime(DbExpression)\n  fullName: EdmFunctions.TruncateTime(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Var(DbExpression)\n  nameWithType: EdmFunctions.Var(DbExpression)\n  fullName: EdmFunctions.Var(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: VarP(DbExpression)\n  nameWithType: EdmFunctions.VarP(DbExpression)\n  fullName: EdmFunctions.VarP(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions\n  isExternal: false\n  name: Year(DbExpression)\n  nameWithType: EdmFunctions.Year(DbExpression)\n  fullName: EdmFunctions.Year(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Area(DbExpression)\n  nameWithType: SpatialEdmFunctions.Area(DbExpression)\n  fullName: SpatialEdmFunctions.Area(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: AsBinary(DbExpression)\n  nameWithType: SpatialEdmFunctions.AsBinary(DbExpression)\n  fullName: SpatialEdmFunctions.AsBinary(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: AsGml(DbExpression)\n  nameWithType: SpatialEdmFunctions.AsGml(DbExpression)\n  fullName: SpatialEdmFunctions.AsGml(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: AsText(DbExpression)\n  nameWithType: SpatialEdmFunctions.AsText(DbExpression)\n  fullName: SpatialEdmFunctions.AsText(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Centroid(DbExpression)\n  nameWithType: SpatialEdmFunctions.Centroid(DbExpression)\n  fullName: SpatialEdmFunctions.Centroid(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: CoordinateSystemId(DbExpression)\n  nameWithType: SpatialEdmFunctions.CoordinateSystemId(DbExpression)\n  fullName: SpatialEdmFunctions.CoordinateSystemId(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Distance(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.Distance(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.Distance(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Elevation(DbExpression)\n  nameWithType: SpatialEdmFunctions.Elevation(DbExpression)\n  fullName: SpatialEdmFunctions.Elevation(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: EndPoint(DbExpression)\n  nameWithType: SpatialEdmFunctions.EndPoint(DbExpression)\n  fullName: SpatialEdmFunctions.EndPoint(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: ExteriorRing(DbExpression)\n  nameWithType: SpatialEdmFunctions.ExteriorRing(DbExpression)\n  fullName: SpatialEdmFunctions.ExteriorRing(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: InteriorRingAt(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.InteriorRingAt(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.InteriorRingAt(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: InteriorRingCount(DbExpression)\n  nameWithType: SpatialEdmFunctions.InteriorRingCount(DbExpression)\n  fullName: SpatialEdmFunctions.InteriorRingCount(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: IsClosedSpatial(DbExpression)\n  nameWithType: SpatialEdmFunctions.IsClosedSpatial(DbExpression)\n  fullName: SpatialEdmFunctions.IsClosedSpatial(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: IsEmptySpatial(DbExpression)\n  nameWithType: SpatialEdmFunctions.IsEmptySpatial(DbExpression)\n  fullName: SpatialEdmFunctions.IsEmptySpatial(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: IsRing(DbExpression)\n  nameWithType: SpatialEdmFunctions.IsRing(DbExpression)\n  fullName: SpatialEdmFunctions.IsRing(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: IsSimpleGeometry(DbExpression)\n  nameWithType: SpatialEdmFunctions.IsSimpleGeometry(DbExpression)\n  fullName: SpatialEdmFunctions.IsSimpleGeometry(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: IsValidGeometry(DbExpression)\n  nameWithType: SpatialEdmFunctions.IsValidGeometry(DbExpression)\n  fullName: SpatialEdmFunctions.IsValidGeometry(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Latitude(DbExpression)\n  nameWithType: SpatialEdmFunctions.Latitude(DbExpression)\n  fullName: SpatialEdmFunctions.Latitude(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Longitude(DbExpression)\n  nameWithType: SpatialEdmFunctions.Longitude(DbExpression)\n  fullName: SpatialEdmFunctions.Longitude(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: Measure(DbExpression)\n  nameWithType: SpatialEdmFunctions.Measure(DbExpression)\n  fullName: SpatialEdmFunctions.Measure(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: PointAt(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.PointAt(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.PointAt(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: PointCount(DbExpression)\n  nameWithType: SpatialEdmFunctions.PointCount(DbExpression)\n  fullName: SpatialEdmFunctions.PointCount(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: PointOnSurface(DbExpression)\n  nameWithType: SpatialEdmFunctions.PointOnSurface(DbExpression)\n  fullName: SpatialEdmFunctions.PointOnSurface(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialBoundary(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialBoundary(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialBoundary(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialBuffer(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialBuffer(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialBuffer(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialContains(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialContains(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialContains(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialConvexHull(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialConvexHull(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialConvexHull(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialCrosses(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialCrosses(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialCrosses(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialDifference(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialDifference(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialDifference(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialDimension(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialDimension(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialDimension(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialDisjoint(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialDisjoint(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialDisjoint(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialElementAt(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialElementAt(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialElementAt(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialElementCount(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialElementCount(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialElementCount(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialEnvelope(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialEnvelope(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialEnvelope(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialEquals(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialEquals(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialEquals(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialIntersection(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialIntersection(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialIntersection(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialIntersects(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialIntersects(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialIntersects(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialLength(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialLength(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialLength(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialOverlaps(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialOverlaps(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialOverlaps(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialRelate(DbExpression, DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialRelate(DbExpression, DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialRelate(DbExpression, DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialSymmetricDifference(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialSymmetricDifference(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialSymmetricDifference(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialTouches(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialTouches(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialTouches(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialTypeName(DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialTypeName(DbExpression)\n  fullName: SpatialEdmFunctions.SpatialTypeName(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialUnion(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialUnion(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialUnion(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: SpatialWithin(DbExpression, DbExpression)\n  nameWithType: SpatialEdmFunctions.SpatialWithin(DbExpression, DbExpression)\n  fullName: SpatialEdmFunctions.SpatialWithin(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: StartPoint(DbExpression)\n  nameWithType: SpatialEdmFunctions.StartPoint(DbExpression)\n  fullName: SpatialEdmFunctions.StartPoint(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: XCoordinate(DbExpression)\n  nameWithType: SpatialEdmFunctions.XCoordinate(DbExpression)\n  fullName: SpatialEdmFunctions.XCoordinate(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions\n  isExternal: false\n  name: YCoordinate(DbExpression)\n  nameWithType: SpatialEdmFunctions.YCoordinate(DbExpression)\n  fullName: SpatialEdmFunctions.YCoordinate(DbExpression)\n"}