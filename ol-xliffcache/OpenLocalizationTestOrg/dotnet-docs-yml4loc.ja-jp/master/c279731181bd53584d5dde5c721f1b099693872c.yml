### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.IDeque`1
  commentId: T:Microsoft.VisualC.StlClr.IDeque`1
  id: IDeque`1
  children:
  - Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)
  - Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)
  - Microsoft.VisualC.StlClr.IDeque`1.back
  - Microsoft.VisualC.StlClr.IDeque`1.back_item
  - Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.IDeque`1.begin_bias
  - Microsoft.VisualC.StlClr.IDeque`1.clear
  - Microsoft.VisualC.StlClr.IDeque`1.empty
  - Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.IDeque`1.end_bias
  - Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.IDeque`1.front
  - Microsoft.VisualC.StlClr.IDeque`1.front_item
  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)
  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)
  - Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)
  - Microsoft.VisualC.StlClr.IDeque`1.pop_back
  - Microsoft.VisualC.StlClr.IDeque`1.pop_front
  - Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)
  - Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)
  - Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)
  - Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)
  - Microsoft.VisualC.StlClr.IDeque`1.size
  - Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})
  langs:
  - csharp
  name: IDeque<TValue>
  nameWithType: IDeque<TValue>
  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>
  type: Interface
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Defines the interface of an STL/CLR <code>deque</code> object.
  remarks: "[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  \n  \n For more information, see [deque (STL/CLR)](http://msdn.microsoft.com/library/dd669da3-3c0e-45e9-8596-f6b483720941)."
  syntax:
    content: 'public interface IDeque<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>, System.Collections.ICollection'
    typeParameters:
    - id: TValue
      description: The type that is contained.
  implements:
  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{TValue}
  - System.Collections.ICollection
  - System.ICloneable
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)
  id: assign(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: assign(IEnumerable)
  nameWithType: IDeque<TValue>.assign(IEnumerable)
  fullName: IDeque<TValue>.assign(IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Replaces all elements of the container with the elements in the given <xref href="System.Collections.IEnumerable"></xref> object.
  remarks: For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).
  syntax:
    content: public void assign (System.Collections.IEnumerable _Right);
    parameters:
    - id: _Right
      type: System.Collections.IEnumerable
      description: The enumeration to insert into the container.
  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Replaces all elements of the container with the elements specified by the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> objects.
  remarks: For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).
  syntax:
    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The starting position of the range to insert into the container.
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The first position beyond the end of the range to insert into the container.
  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)
  id: assign(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: assign(Int32, TValue)
  nameWithType: IDeque<TValue>.assign(Int32, TValue)
  fullName: IDeque<TValue>.assign(Int32, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Replaces all elements of the container with the given number of specified elements.
  remarks: For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).
  syntax:
    content: public void assign (int _Count, TValue _Val);
    parameters:
    - id: _Count
      type: System.Int32
      description: The number of elements to insert into the container.
    - id: _Val
      type: TValue
      description: The value of the element to insert into the container.
  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)
  id: at(System.Int32)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: at(Int32)
  nameWithType: IDeque<TValue>.at(Int32)
  fullName: IDeque<TValue>.at(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses an element at a specified position in the container.
  remarks: For more information, see [deque::at (STL/CLR)](http://msdn.microsoft.com/library/9af83d8a-c519-4b2a-a25f-d3dc8bbb87fb).
  syntax:
    content: public TValue at (int _Pos);
    parameters:
    - id: _Pos
      type: System.Int32
      description: Position of element to access.
    return:
      type: TValue@
      description: The element of the controlled sequence at position <code>pos</code>.
  overload: Microsoft.VisualC.StlClr.IDeque`1.at*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.back
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.back
  id: back
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: back()
  nameWithType: IDeque<TValue>.back()
  fullName: IDeque<TValue>.back()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the last element of the container.
  remarks: For more information, see [deque::back (STL/CLR)](http://msdn.microsoft.com/library/5608cdda-212d-42f6-866b-b04aec04ef8e).
  syntax:
    content: public TValue back ();
    parameters: []
    return:
      type: TValue@
      description: The last element of the controlled sequence, which must be non-empty.
  overload: Microsoft.VisualC.StlClr.IDeque`1.back*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item
  commentId: P:Microsoft.VisualC.StlClr.IDeque`1.back_item
  id: back_item
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: back_item
  nameWithType: IDeque<TValue>.back_item
  fullName: IDeque<TValue>.back_item
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the last element of a non-empty <code>deque</code> collection.
  remarks: For more information, see [deque::back_item (STL/CLR)](http://msdn.microsoft.com/library/b112636a-2f18-4eb0-abd6-076acdabeff7).
  syntax:
    content: public TValue back_item { get; set; }
    return:
      type: TValue
      description: The last element of the controlled sequence.
  overload: Microsoft.VisualC.StlClr.IDeque`1.back_item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: begin(ContainerRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the beginning of the controlled sequence.
  remarks: For more information, see [deque::begin (STL/CLR)](http://msdn.microsoft.com/library/e99d20d2-bb33-415f-9bd6-fe331d8c2ba2).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IDeque`1.begin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias
  id: begin_bias
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: begin_bias()
  nameWithType: IDeque<TValue>.begin_bias()
  fullName: IDeque<TValue>.begin_bias()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.
  syntax:
    content: public int begin_bias ();
    parameters: []
    return:
      type: System.Int32
      description: The bias of the beginning of the current sequence.
  overload: Microsoft.VisualC.StlClr.IDeque`1.begin_bias*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.clear
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.clear
  id: clear
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: clear()
  nameWithType: IDeque<TValue>.clear()
  fullName: IDeque<TValue>.clear()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes all elements in the container.
  remarks: For more information, see [deque::clear (STL/CLR)](http://msdn.microsoft.com/library/1d9a3d11-b3fa-43a7-a508-7a05cbcd91bf).
  syntax:
    content: public void clear ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IDeque`1.clear*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.empty
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.empty
  id: empty
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: empty()
  nameWithType: IDeque<TValue>.empty()
  fullName: IDeque<TValue>.empty()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Tests whether the container holds no elements.
  remarks: For more information, see [deque::empty (STL/CLR)](http://msdn.microsoft.com/library/6ff3dd07-ebdf-47f9-b0d2-8a3229390d3b).
  syntax:
    content: public bool empty ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the container is empty; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.IDeque`1.empty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  id: end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: end(ContainerRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the end of the controlled sequence.
  remarks: For more information, see [deque::end (STL/CLR)](http://msdn.microsoft.com/library/3de3e816-3334-4b39-97ad-6f8771e9b4e9).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IDeque`1.end*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.end_bias
  id: end_bias
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: end_bias()
  nameWithType: IDeque<TValue>.end_bias()
  fullName: IDeque<TValue>.end_bias()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.
  syntax:
    content: public int end_bias ();
    parameters: []
    return:
      type: System.Int32
      description: The bias of the end of the current sequence.
  overload: Microsoft.VisualC.StlClr.IDeque`1.end_bias*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.IDeque`1.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)
  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)
  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Last_iter);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: _First_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    - id: _Last_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.IDeque`1.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.front
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.front
  id: front
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: front()
  nameWithType: IDeque<TValue>.front()
  fullName: IDeque<TValue>.front()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the first element of the container.
  remarks: For more information, see [deque::front (STL/CLR)](http://msdn.microsoft.com/library/eb8cb5f2-346d-4d7a-bb7b-cf67fe4318e8).
  syntax:
    content: public TValue front ();
    parameters: []
    return:
      type: TValue@
      description: The first element of the controlled sequence, which must be non-empty.
  overload: Microsoft.VisualC.StlClr.IDeque`1.front*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item
  commentId: P:Microsoft.VisualC.StlClr.IDeque`1.front_item
  id: front_item
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: front_item
  nameWithType: IDeque<TValue>.front_item
  fullName: IDeque<TValue>.front_item
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the first element of a non-empty <code>deque</code> collection.
  remarks: For more information, see [deque::front_item (STL/CLR)](http://msdn.microsoft.com/library/6243e52d-47fb-45d8-ade8-70debd97887d).
  syntax:
    content: public TValue front_item { get; set; }
    return:
      type: TValue
      description: The first element of the controlled sequence.
  overload: Microsoft.VisualC.StlClr.IDeque`1.front_item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: insert(ContainerRandomAccessIterator, IEnumerable)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where_iter, System.Collections.IEnumerable _Right);
    parameters:
    - id: _Where_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    - id: _Right
      type: System.Collections.IEnumerable
      description: ''
  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: ''
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: ''
  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: insert(ContainerRandomAccessIterator, Int32, TValue)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, int _Count, TValue _Val);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    - id: _Count
      type: System.Int32
      description: ''
    - id: _Val
      type: TValue
      description: ''
  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    - id: _Val
      type: TValue
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)
  commentId: P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IDeque<TValue>.Item(Int32)
  fullName: IDeque<TValue>.Item(Int32)
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Gets or sets the element at the indicated position in the container.
  remarks: For more information, see [deque::operator(STL/CLR)](http://msdn.microsoft.com/library/d7653bb5-db48-4637-a25c-e7303e5d28da).
  syntax:
    content: public TValue this[int _Pos] { get; set; }
    parameters:
    - id: _Pos
      type: System.Int32
      description: The position of the element to get or set.
    return:
      type: TValue
      description: The element at the indicated position.
  overload: Microsoft.VisualC.StlClr.IDeque`1.Item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.pop_back
  id: pop_back
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: pop_back()
  nameWithType: IDeque<TValue>.pop_back()
  fullName: IDeque<TValue>.pop_back()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes the last element of a non-empty container.
  remarks: For more information, see [deque::pop_back (STL/CLR)](http://msdn.microsoft.com/library/528d2c89-104c-45f7-8f05-41fe217ee37c).
  syntax:
    content: public void pop_back ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IDeque`1.pop_back*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.pop_front
  id: pop_front
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: pop_front()
  nameWithType: IDeque<TValue>.pop_front()
  fullName: IDeque<TValue>.pop_front()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes the first element of a non-empty container.
  remarks: For more information, see [deque::pop_front (STL/CLR)](http://msdn.microsoft.com/library/5042df47-b226-4b16-982e-6a4543b8e00b).
  syntax:
    content: public void pop_front ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IDeque`1.pop_front*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)
  id: push_back(`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: push_back(TValue)
  nameWithType: IDeque<TValue>.push_back(TValue)
  fullName: IDeque<TValue>.push_back(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds an element to the end of a container.
  remarks: For more information, see [deque::push_back (STL/CLR)](http://msdn.microsoft.com/library/dafd5a4d-1fc7-434c-b129-a523099f8701).
  syntax:
    content: public void push_back (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: The element to append to the end of the container.
  overload: Microsoft.VisualC.StlClr.IDeque`1.push_back*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)
  id: push_front(`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: push_front(TValue)
  nameWithType: IDeque<TValue>.push_front(TValue)
  fullName: IDeque<TValue>.push_front(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds an element to the beginning of a container.
  remarks: For more information, see [deque::push_front (STL/CLR)](http://msdn.microsoft.com/library/a452c94e-abad-4e28-af41-c73ec805ec6f).
  syntax:
    content: public void push_front (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: The element to add to the beginning of the container.
  overload: Microsoft.VisualC.StlClr.IDeque`1.push_front*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: rbegin(ReverseRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the beginning of the reversed controlled sequence.
  remarks: For more information, see [deque::rbegin (STL/CLR)](http://msdn.microsoft.com/library/5d399c1d-bd7e-4b2e-bde0-11a000e29679).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IDeque`1.rbegin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: rend(ReverseRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the end of the reversed controlled sequence.
  remarks: For more information, see [deque::rend (STL/CLR)](http://msdn.microsoft.com/library/c2977998-3cf1-4c6f-9710-6cf6a3aae5e5).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IDeque`1.rend*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)
  id: resize(System.Int32)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: resize(Int32)
  nameWithType: IDeque<TValue>.resize(Int32)
  fullName: IDeque<TValue>.resize(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Changes the number of elements.
  remarks: For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484).
  syntax:
    content: public void resize (int _Newsize);
    parameters:
    - id: _Newsize
      type: System.Int32
      description: The new size of the controlled sequence.
  overload: Microsoft.VisualC.StlClr.IDeque`1.resize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)
  id: resize(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: resize(Int32, TValue)
  nameWithType: IDeque<TValue>.resize(Int32, TValue)
  fullName: IDeque<TValue>.resize(Int32, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Changes the number of elements.
  remarks: For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484).
  syntax:
    content: public void resize (int _Newsize, TValue _Val);
    parameters:
    - id: _Newsize
      type: System.Int32
      description: The new size of the controlled sequence.
    - id: _Val
      type: TValue
      description: The value of the padding element.
  overload: Microsoft.VisualC.StlClr.IDeque`1.resize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.size
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.size
  id: size
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: size()
  nameWithType: IDeque<TValue>.size()
  fullName: IDeque<TValue>.size()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Counts the number of elements.
  remarks: For more information, see [deque::size (STL/CLR)](http://msdn.microsoft.com/library/81db82c1-7fe7-4eb4-8785-6d36197e4681).
  syntax:
    content: public int size ();
    parameters: []
    return:
      type: System.Int32
      description: The length of the controlled sequence.
  overload: Microsoft.VisualC.StlClr.IDeque`1.size*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})
  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})
  id: swap(Microsoft.VisualC.StlClr.IDeque{`0})
  parent: Microsoft.VisualC.StlClr.IDeque`1
  langs:
  - csharp
  name: swap(IDeque<TValue>)
  nameWithType: IDeque<TValue>.swap(IDeque<TValue>)
  fullName: IDeque<TValue>.swap(IDeque<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Swaps the contents of two containers.
  remarks: For more information, see [deque::swap (STL/CLR)](http://msdn.microsoft.com/library/511e1aa8-3069-43f3-aa77-150f1de1e195).
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.IDeque<TValue> A_0);
    parameters:
    - id: A_0
      type: Microsoft.VisualC.StlClr.IDeque`1
      description: Container to swap contents with.
  overload: Microsoft.VisualC.StlClr.IDeque`1.swap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: assign(IEnumerable)
  nameWithType: IDeque<TValue>.assign(IEnumerable)
  fullName: IDeque<TValue>.assign(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: assign(Int32, TValue)
  nameWithType: IDeque<TValue>.assign(Int32, TValue)
  fullName: IDeque<TValue>.assign(Int32, TValue)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: at(Int32)
  nameWithType: IDeque<TValue>.at(Int32)
  fullName: IDeque<TValue>.at(Int32)
- uid: Microsoft.VisualC.StlClr.IDeque`1.back
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: back()
  nameWithType: IDeque<TValue>.back()
  fullName: IDeque<TValue>.back()
- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: back_item
  nameWithType: IDeque<TValue>.back_item
  fullName: IDeque<TValue>.back_item
- uid: Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: begin(ContainerRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerRandomAccessIterator<TValue>
  nameWithType: ContainerRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: begin_bias()
  nameWithType: IDeque<TValue>.begin_bias()
  fullName: IDeque<TValue>.begin_bias()
- uid: Microsoft.VisualC.StlClr.IDeque`1.clear
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: clear()
  nameWithType: IDeque<TValue>.clear()
  fullName: IDeque<TValue>.clear()
- uid: Microsoft.VisualC.StlClr.IDeque`1.empty
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: empty()
  nameWithType: IDeque<TValue>.empty()
  fullName: IDeque<TValue>.empty()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: end(ContainerRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: end_bias()
  nameWithType: IDeque<TValue>.end_bias()
  fullName: IDeque<TValue>.end_bias()
- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ContainerRandomAccessIterator
  nameWithType: ContainerRandomAccessIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)
  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)
  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.IDeque`1.front
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: front()
  nameWithType: IDeque<TValue>.front()
  fullName: IDeque<TValue>.front()
- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: front_item
  nameWithType: IDeque<TValue>.front_item
  fullName: IDeque<TValue>.front_item
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: insert(ContainerRandomAccessIterator, IEnumerable)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: insert(ContainerRandomAccessIterator, Int32, TValue)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)
  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)
  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)
- uid: Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: Item(Int32)
  nameWithType: IDeque<TValue>.Item(Int32)
  fullName: IDeque<TValue>.Item(Int32)
- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: pop_back()
  nameWithType: IDeque<TValue>.pop_back()
  fullName: IDeque<TValue>.pop_back()
- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: pop_front()
  nameWithType: IDeque<TValue>.pop_front()
  fullName: IDeque<TValue>.pop_front()
- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: push_back(TValue)
  nameWithType: IDeque<TValue>.push_back(TValue)
  fullName: IDeque<TValue>.push_back(TValue)
- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: push_front(TValue)
  nameWithType: IDeque<TValue>.push_front(TValue)
  fullName: IDeque<TValue>.push_front(TValue)
- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: rbegin(ReverseRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseRandomAccessIterator<TValue>
  nameWithType: ReverseRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: rend(ReverseRandomAccessIterator<TValue>)
  nameWithType: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)
  fullName: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: resize(Int32)
  nameWithType: IDeque<TValue>.resize(Int32)
  fullName: IDeque<TValue>.resize(Int32)
- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: resize(Int32, TValue)
  nameWithType: IDeque<TValue>.resize(Int32, TValue)
  fullName: IDeque<TValue>.resize(Int32, TValue)
- uid: Microsoft.VisualC.StlClr.IDeque`1.size
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: size()
  nameWithType: IDeque<TValue>.size()
  fullName: IDeque<TValue>.size()
- uid: Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: swap(IDeque<TValue>)
  nameWithType: IDeque<TValue>.swap(IDeque<TValue>)
  fullName: IDeque<TValue>.swap(IDeque<TValue>)
- uid: Microsoft.VisualC.StlClr.IDeque`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IDeque<TValue>
  nameWithType: IDeque<TValue>
  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>
- uid: Microsoft.VisualC.StlClr.IDeque`1.assign*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: assign
  nameWithType: IDeque<TValue>.assign
  fullName: IDeque<TValue>.assign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.erase*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: erase
  nameWithType: IDeque<TValue>.erase
  fullName: IDeque<TValue>.erase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.insert*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: insert
  nameWithType: IDeque<TValue>.insert
  fullName: IDeque<TValue>.insert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.resize*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: resize
  nameWithType: IDeque<TValue>.resize
  fullName: IDeque<TValue>.resize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.at*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: at
  nameWithType: IDeque<TValue>.at
  fullName: IDeque<TValue>.at
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.back*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: back
  nameWithType: IDeque<TValue>.back
  fullName: IDeque<TValue>.back
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: back_item
  nameWithType: IDeque<TValue>.back_item
  fullName: IDeque<TValue>.back_item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.begin*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: begin
  nameWithType: IDeque<TValue>.begin
  fullName: IDeque<TValue>.begin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: begin_bias
  nameWithType: IDeque<TValue>.begin_bias
  fullName: IDeque<TValue>.begin_bias
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.clear*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: clear
  nameWithType: IDeque<TValue>.clear
  fullName: IDeque<TValue>.clear
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.empty*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: empty
  nameWithType: IDeque<TValue>.empty
  fullName: IDeque<TValue>.empty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.end*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: end
  nameWithType: IDeque<TValue>.end
  fullName: IDeque<TValue>.end
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: end_bias
  nameWithType: IDeque<TValue>.end_bias
  fullName: IDeque<TValue>.end_bias
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.front*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: front
  nameWithType: IDeque<TValue>.front
  fullName: IDeque<TValue>.front
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: front_item
  nameWithType: IDeque<TValue>.front_item
  fullName: IDeque<TValue>.front_item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.Item*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: Item
  nameWithType: IDeque<TValue>.Item
  fullName: IDeque<TValue>.Item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: pop_back
  nameWithType: IDeque<TValue>.pop_back
  fullName: IDeque<TValue>.pop_back
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: pop_front
  nameWithType: IDeque<TValue>.pop_front
  fullName: IDeque<TValue>.pop_front
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: push_back
  nameWithType: IDeque<TValue>.push_back
  fullName: IDeque<TValue>.push_back
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: push_front
  nameWithType: IDeque<TValue>.push_front
  fullName: IDeque<TValue>.push_front
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: rbegin
  nameWithType: IDeque<TValue>.rbegin
  fullName: IDeque<TValue>.rbegin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.rend*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: rend
  nameWithType: IDeque<TValue>.rend
  fullName: IDeque<TValue>.rend
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.size*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: size
  nameWithType: IDeque<TValue>.size
  fullName: IDeque<TValue>.size
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: Microsoft.VisualC.StlClr.IDeque`1.swap*
  parent: Microsoft.VisualC.StlClr.IDeque`1
  isExternal: false
  name: swap
  nameWithType: IDeque<TValue>.swap
  fullName: IDeque<TValue>.swap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IRandomAccessContainer<TValue>
  nameWithType: IRandomAccessContainer<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ICloneable
  parent: System
  isExternal: false
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
