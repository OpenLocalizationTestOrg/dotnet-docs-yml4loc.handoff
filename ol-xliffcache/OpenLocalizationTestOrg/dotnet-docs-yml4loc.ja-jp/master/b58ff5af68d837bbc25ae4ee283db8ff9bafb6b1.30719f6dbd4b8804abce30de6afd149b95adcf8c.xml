{"nodes":[{"content":"Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.","nodes":[{"pos":[0,117],"content":"Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.","nodes":[{"content":"Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.","pos":[0,117]}]}],"pos":[3853,3971],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> class."}],"pos":[10188,10299],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> object that represents an access right for this object.","nodes":[{"pos":[0,97],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that represents an access right for this object.","source":"Gets the <xref href=\"System.Type\"></xref> object that represents an access right for this object."}],"pos":[11505,11603],"yaml":true},{"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration.","nodes":[{"pos":[0,125],"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration.","nodes":[{"content":"This property always returns the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.ActiveDirectoryRights&gt;</ph> enumeration.","pos":[0,125],"source":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration."}]}],"pos":[11614,11740],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the access right.","nodes":[{"pos":[0,57],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the access right.","source":"The <xref href=\"System.Type\"></xref> of the access right."}],"pos":[11864,11922],"yaml":true},{"content":"Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values.","nodes":[{"pos":[0,106],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> object with the specified values.","source":"Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values."}],"pos":[13986,14093],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID).","nodes":[{"pos":[0,148],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object such as an NTAccount object that resolves to a security identifier (SID).","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID)."}],"pos":[14600,14749],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> bitmask that shows the access privileges to use.","source":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use."}],"pos":[14814,14900],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object that indicates whether ACEs are inherited.","pos":[0,87],"source":"A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited."},{"content":"<ph id=\"ph1\">`true`</ph> if ACEs are inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[88,137],"source":"`true` if ACEs are inherited; otherwise, `false`."}]}],"pos":[14968,15106],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance flags on a directory object.","source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object."}],"pos":[15211,15344],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance propagation flags on a directory object.","source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object."}],"pos":[15449,15593],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> object that contains the ACE type.","source":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type."}],"pos":[15687,15794],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> that corresponds to the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."}],"pos":[15878,16046],"yaml":true},{"content":"Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values.","nodes":[{"pos":[0,106],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> object with the specified values.","source":"Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values."}],"pos":[18220,18327],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object, such as an NTAccount object, that resolves to a security identifier (SID).","nodes":[{"pos":[0,150],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object, such as an NTAccount object, that resolves to a security identifier (SID).","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object, such as an NTAccount object, that resolves to a security identifier (SID)."}],"pos":[18877,19028],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> bitmask that shows the access privileges to use.","source":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use."}],"pos":[19093,19179],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object that indicates if ACEs are inherited.","pos":[0,82],"source":"A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited."},{"content":"<ph id=\"ph1\">`true`</ph> if ACEs are inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[83,132],"source":"`true` if ACEs are inherited; otherwise, `false`."}]}],"pos":[19247,19380],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags for a directory object.","nodes":[{"pos":[0,133],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance flags for a directory object.","source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags for a directory object."}],"pos":[19485,19619],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags for a directory object.","nodes":[{"pos":[0,144],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance propagation flags for a directory object.","source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags for a directory object."}],"pos":[19724,19869],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> object that contains the ACE type.","source":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type."}],"pos":[19963,20070],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> object that contains the GUID of the directory object.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> object that contains the GUID of the directory object.","source":"A <xref href=\"System.Guid\"></xref> object that contains the GUID of the directory object."}],"pos":[20134,20224],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> object that contains the GUID of the inherited directory object.","nodes":[{"pos":[0,99],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> object that contains the GUID of the inherited directory object.","source":"A <xref href=\"System.Guid\"></xref> object that contains the GUID of the inherited directory object."}],"pos":[20297,20397],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> that corresponds to the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."}],"pos":[20481,20649],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> that represents an access rule for this object.","nodes":[{"pos":[0,89],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents an access rule for this object.","source":"Gets the <xref href=\"System.Type\"></xref> that represents an access rule for this object."}],"pos":[21784,21874],"yaml":true},{"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class.","nodes":[{"pos":[0,123],"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class.","nodes":[{"content":"This property always returns the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.ActiveDirectoryAccessRule&gt;</ph> class.","pos":[0,123],"source":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class."}]}],"pos":[21885,22009],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the access rule.","nodes":[{"pos":[0,56],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the access rule.","source":"The <xref href=\"System.Type\"></xref> of the access rule."}],"pos":[22132,22189],"yaml":true},{"content":"Adds an access rule to the DACL of an object.","nodes":[{"pos":[0,45],"content":"Adds an access rule to the DACL of an object.","nodes":[{"content":"Adds an access rule to the DACL of an object.","pos":[0,45]}]}],"pos":[23550,23596],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\"></xref> object to which this operation applies.","nodes":[{"pos":[0,180],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\"></xref> object to which this operation applies."}],"pos":[23817,23998],"yaml":true},{"content":"Adds an audit rule to the SACL of an object.","nodes":[{"pos":[0,44],"content":"Adds an audit rule to the SACL of an object.","nodes":[{"content":"Adds an audit rule to the SACL of an object.","pos":[0,44]}]}],"pos":[25346,25391],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"></xref> object to which this operation applies."}],"pos":[25609,25724],"yaml":true},{"content":"Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values.","nodes":[{"pos":[0,105],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> object with the specified values.","source":"Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values."}],"pos":[27737,27843],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).","nodes":[{"pos":[0,149],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object such as an NTAccount object, that resolves to a security identifier (SID).","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID)."}],"pos":[28342,28492],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> bitmask that shows the access privileges to use.","source":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use."}],"pos":[28557,28643],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object that indicates if ACEs are inherited.","pos":[0,82],"source":"A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited."},{"content":"<ph id=\"ph1\">`true`</ph> if ACEs are inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[83,132],"source":"`true` if ACEs are inherited; otherwise, `false`."}]}],"pos":[28711,28844],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance flags on a directory object.","source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object."}],"pos":[28949,29082],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance propagation flags on a directory object.","source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object."}],"pos":[29187,29331],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.","nodes":[{"pos":[0,188],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> object that contains the audit flags for this <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."}],"pos":[29419,29608],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> that corresponds to the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."}],"pos":[29691,29858],"yaml":true},{"content":"Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values.","nodes":[{"pos":[0,105],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> object with the specified values.","source":"Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values."}],"pos":[31983,32089],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID).","nodes":[{"pos":[0,148],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object such as an NTAccount object that resolves to a security identifier (SID).","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID)."}],"pos":[32631,32780],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> bitmask that shows the access privileges to use.","source":"An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use."}],"pos":[32845,32931],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object that indicates whether ACEs are inherited.","pos":[0,87],"source":"A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited."},{"content":"<ph id=\"ph1\">`true`</ph> if ACEs are inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[88,137],"source":"`true` if ACEs are inherited; otherwise, `false`."}]}],"pos":[32999,33137],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance flags on a directory object.","source":"An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object."}],"pos":[33242,33375],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> object that contains inheritance propagation flags on a directory object.","source":"A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object."}],"pos":[33480,33624],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.","nodes":[{"pos":[0,188],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> object that contains the audit flags for this <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."}],"pos":[33712,33901],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> object that contains the Guido of the directory object.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> object that contains the Guido of the directory object.","source":"A <xref href=\"System.Guid\"></xref> object that contains the Guido of the directory object."}],"pos":[33965,34056],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> object that contains the Guido of the inherited directory object.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> object that contains the Guido of the inherited directory object.","source":"A <xref href=\"System.Guid\"></xref> object that contains the Guido of the inherited directory object."}],"pos":[34129,34230],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> that corresponds to the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object."}],"pos":[34313,34480],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> that represents an audit rule for this object.","nodes":[{"pos":[0,88],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents an audit rule for this object.","source":"Gets the <xref href=\"System.Type\"></xref> that represents an audit rule for this object."}],"pos":[35608,35697],"yaml":true},{"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class.","nodes":[{"pos":[0,122],"content":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class.","nodes":[{"content":"This property always returns the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.ActiveDirectoryAuditRule&gt;</ph> class.","pos":[0,122],"source":"This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class."}]}],"pos":[35708,35831],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the audit rule.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the audit rule.","source":"The <xref href=\"System.Type\"></xref> of the audit rule."}],"pos":[35953,36009],"yaml":true},{"content":"Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AccessRule\"></xref>.","nodes":[{"pos":[0,114],"content":"Applies the specified modification to the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph>.","source":"Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AccessRule\"></xref>."}],"pos":[37636,37751],"yaml":true},{"content":"The type of access control modification to perform.","nodes":[{"pos":[0,51],"content":"The type of access control modification to perform.","nodes":[{"content":"The type of access control modification to perform.","pos":[0,51]}]}],"pos":[38076,38128],"yaml":true},{"content":"The access rule to modify.","nodes":[{"pos":[0,26],"content":"The access rule to modify.","nodes":[{"content":"The access rule to modify.","pos":[0,26]}]}],"pos":[38215,38242],"yaml":true},{"content":"`true` if successfully modified; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if successfully modified; otherwise, `false`."}],"pos":[38307,38362],"yaml":true},{"content":"`true` if successfully modified; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if successfully modified; otherwise, `false`."}],"pos":[38420,38475],"yaml":true},{"content":"Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AuditRule\"></xref>.","nodes":[{"pos":[0,113],"content":"Applies the specified modification to the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph>.","source":"Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AuditRule\"></xref>."}],"pos":[40093,40207],"yaml":true},{"content":"The modification to apply.","nodes":[{"pos":[0,26],"content":"The modification to apply.","nodes":[{"content":"The modification to apply.","pos":[0,26]}]}],"pos":[40530,40557],"yaml":true},{"content":"The audit rule to modify.","nodes":[{"pos":[0,25],"content":"The audit rule to modify.","nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]}],"pos":[40643,40669],"yaml":true},{"content":"`true` if successfully modified; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if successfully modified; otherwise, `false`."}],"pos":[40734,40789],"yaml":true},{"content":"`true` if successfully modified; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if successfully modified; otherwise, `false`."}],"pos":[40847,40902],"yaml":true},{"content":"Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.","nodes":[{"pos":[0,120],"content":"Removes all access rules associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."}],"pos":[42237,42358],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> for which to remove all access rules.","source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules."}],"pos":[42585,42692],"yaml":true},{"content":"All access rules are not in canonical order.","nodes":[{"pos":[0,44],"content":"All access rules are not in canonical order.","nodes":[{"content":"All access rules are not in canonical order.","pos":[0,44]}]}],"pos":[42895,42940],"yaml":true},{"content":"Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.","nodes":[{"pos":[0,119],"content":"Removes all audit rules associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."}],"pos":[44174,44294],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules.","nodes":[{"pos":[0,105],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> for which to remove all audit rules.","source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules."}],"pos":[44520,44626],"yaml":true},{"content":"All audit rules are not in canonical order.","nodes":[{"pos":[0,43],"content":"All audit rules are not in canonical order.","nodes":[{"content":"All audit rules are not in canonical order.","pos":[0,43]}]}],"pos":[44828,44872],"yaml":true},{"content":"Removes all access rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object and <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object from the DACL of an object.","nodes":[{"pos":[0,228],"content":"Removes all access rules that have the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object and <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> object from the DACL of an object.","source":"Removes all access rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object and <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object from the DACL of an object."}],"pos":[46289,46518],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).","nodes":[{"pos":[0,149],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object such as an NTAccount object, that resolves to a security identifier (SID).","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID)."}],"pos":[46786,46936],"yaml":true},{"content":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> object that contains the ACE type.","source":"An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type."}],"pos":[47030,47137],"yaml":true},{"content":"Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.","nodes":[{"pos":[0,139],"content":"Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.","nodes":[{"content":"Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.","pos":[0,139]}]}],"pos":[48514,48654],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[48878,48994],"yaml":true},{"content":"`true` if the operation is successful; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the operation is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the operation is successful; otherwise, `false`."}],"pos":[49052,49113],"yaml":true},{"content":"Removes all access rules that exactly match the specified access rule from the DACL of an object.","nodes":[{"pos":[0,97],"content":"Removes all access rules that exactly match the specified access rule from the DACL of an object.","nodes":[{"content":"Removes all access rules that exactly match the specified access rule from the DACL of an object.","pos":[0,97]}]}],"pos":[50542,50640],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[50872,50988],"yaml":true},{"content":"Removes all audit rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object from the SACL of an object.","nodes":[{"pos":[0,147],"content":"Removes all audit rules that have the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object from the SACL of an object.","source":"Removes all audit rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object from the SACL of an object."}],"pos":[52302,52450],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).","nodes":[{"pos":[0,149],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object such as an NTAccount object, that resolves to a security identifier (SID).","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID)."}],"pos":[52663,52813],"yaml":true},{"content":"Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.","nodes":[{"pos":[0,166],"content":"Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.","nodes":[{"content":"Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.","pos":[0,166]}]}],"pos":[54177,54344],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[54565,54681],"yaml":true},{"content":"`true` if the operation is successful; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the operation is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the operation is successful; otherwise, `false`."}],"pos":[54739,54800],"yaml":true},{"content":"Removes all audit rules that exactly match the specified audit rule from the SACL of an object.","nodes":[{"pos":[0,95],"content":"Removes all audit rules that exactly match the specified audit rule from the SACL of an object.","nodes":[{"content":"Removes all audit rules that exactly match the specified audit rule from the SACL of an object.","pos":[0,95]}]}],"pos":[56216,56312],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[56541,56657],"yaml":true},{"content":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object.","nodes":[{"pos":[0,264],"content":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> object, and replaces all of those access rules with the access rules that are contained in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">rule</ph><ept id=\"p2\">&lt;/code&gt;</ept> object.","source":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object."}],"pos":[58039,58304],"yaml":true},{"content":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.","nodes":[{"pos":[0,406],"content":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.","nodes":[{"content":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.","pos":[0,406],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A&gt;</ph> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.","pos":[0,205],"source":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced."},{"content":"To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A&gt;</ph> instead.","pos":[207,406],"source":"  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead."}]}]}],"pos":[58315,58722],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[58945,59061],"yaml":true},{"content":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and an access control type (Allow or Deny) that matches the type specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object.","nodes":[{"pos":[0,372],"content":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> object, and an access control type (Allow or Deny) that matches the type specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">rule</ph><ept id=\"p2\">&lt;/code&gt;</ept> object, and replaces all of those access rules with the access rules that are contained in the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">rule</ph><ept id=\"p3\">&lt;/code&gt;</ept> object.","source":"Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and an access control type (Allow or Deny) that matches the type specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object."}],"pos":[60423,60796],"yaml":true},{"content":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced.  Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead.","nodes":[{"pos":[0,737],"content":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced.  Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead.","nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A&gt;</ph> is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the <ph id=\"ph2\">`rule`</ph> object are replaced.","pos":[0,335],"source":"When <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced."},{"content":"Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.","pos":[337,558]},{"content":"To replace all rules for that object pertaining to the specified SID, regardless of type, use <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A&gt;</ph> instead.","pos":[560,737],"source":"  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead."}]}],"pos":[60807,61545],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[61766,61882],"yaml":true},{"content":"Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.","nodes":[{"pos":[0,150],"content":"Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.","nodes":[{"content":"Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.","pos":[0,150]}]}],"pos":[63230,63381],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"&gt;&lt;/xref&gt;</ph> object to which this operation applies.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies."}],"pos":[63599,63715],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectorySecurity\n  commentId: T:System.DirectoryServices.ActiveDirectorySecurity\n  id: ActiveDirectorySecurity\n  children:\n  - System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  - System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  - System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  langs:\n  - csharp\n  name: ActiveDirectorySecurity\n  nameWithType: ActiveDirectorySecurity\n  fullName: System.DirectoryServices.ActiveDirectorySecurity\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.\n  syntax:\n    content: 'public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.DirectoryObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ActiveDirectorySecurity()\n  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()\n  fullName: ActiveDirectorySecurity.ActiveDirectorySecurity()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> class.\n  syntax:\n    content: public ActiveDirectorySecurity ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectorySecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  commentId: P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  id: AccessRightType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: ActiveDirectorySecurity.AccessRightType\n  fullName: ActiveDirectorySecurity.AccessRightType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the <xref href=\"System.Type\"></xref> object that represents an access right for this object.\n  remarks: This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the access right.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  fullName: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object, such as an NTAccount object, that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags for a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags for a directory object.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.\n    - id: objectGuid\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> object that contains the GUID of the directory object.\n    - id: inheritedObjectGuid\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> object that contains the GUID of the inherited directory object.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  commentId: P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: ActiveDirectorySecurity.AccessRuleType\n  fullName: ActiveDirectorySecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the <xref href=\"System.Type\"></xref> that represents an access rule for this object.\n  remarks: This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the access rule.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AddAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Adds an access rule to the DACL of an object.\n  syntax:\n    content: public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AddAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Adds an audit rule to the SACL of an object.\n  syntax:\n    content: public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAuditRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> object that indicates if ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  fullName: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates an <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object that resolves to a security identifier (SID).\n    - id: accessMask\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> bitmask that shows the access privileges to use.\n    - id: isInherited\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> object that indicates whether ACEs are inherited. `true` if ACEs are inherited; otherwise, `false`.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: An <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> object that contains inheritance flags on a directory object.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: A <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> object that contains inheritance propagation flags on a directory object.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: An <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> object that contains the audit flags for this <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n    - id: objectGuid\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> object that contains the Guido of the directory object.\n    - id: inheritedObjectGuid\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> object that contains the Guido of the inherited directory object.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> that corresponds to the <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  commentId: P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: ActiveDirectorySecurity.AuditRuleType\n  fullName: ActiveDirectorySecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the <xref href=\"System.Type\"></xref> that represents an audit rule for this object.\n  remarks: This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the audit rule.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AccessRule\"></xref>.\n  syntax:\n    content: public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The type of access control modification to perform.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if successfully modified; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Applies the specified modification to the specified <xref href=\"System.Security.AccessControl.AuditRule\"></xref>.\n  syntax:\n    content: public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if successfully modified; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  id: PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n  fullName: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All access rules are not in canonical order.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  id: PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n  fullName: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All audit rules are not in canonical order.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  id: RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAccess(IdentityReference, AccessControlType)\n  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference, AccessControlType)\n  fullName: ActiveDirectorySecurity.RemoveAccess(IdentityReference, AccessControlType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object and <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object from the DACL of an object.\n  syntax:\n    content: public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: An <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> object that contains the ACE type.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.\n  syntax:\n    content: public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n    return:\n      type: System.Boolean\n      description: '`true` if the operation is successful; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all access rules that exactly match the specified access rule from the DACL of an object.\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  id: RemoveAudit(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAudit(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n  fullName: ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules that have the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref> object from the SACL of an object.\n  syntax:\n    content: public void RemoveAudit (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object such as an NTAccount object, that resolves to a security identifier (SID).\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.\n  syntax:\n    content: public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n    return:\n      type: System.Boolean\n      description: '`true` if the operation is successful; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes all audit rules that exactly match the specified audit rule from the SACL of an object.\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object.\n  remarks: When <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.  To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.\n  syntax:\n    content: public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  id: SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: SetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <code>rule</code> object, and an access control type (Allow or Deny) that matches the type specified in the <code>rule</code> object, and replaces all of those access rules with the access rules that are contained in the <code>rule</code> object.\n  remarks: When <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced.  Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.  To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead.\n  syntax:\n    content: public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAccessRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  commentId: M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  id: SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  langs:\n  - csharp\n  name: SetAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.\n  syntax:\n    content: public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.DirectoryServices.ActiveDirectoryAuditRule\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectoryAccessRule\"></xref> object to which this operation applies.\n  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Security.AccessControl.DirectoryObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: DirectoryObjectSecurity\n  nameWithType: DirectoryObjectSecurity\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ActiveDirectorySecurity()\n  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()\n  fullName: ActiveDirectorySecurity.ActiveDirectorySecurity()\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ActiveDirectorySecurity.AccessRightType\n  fullName: ActiveDirectorySecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  fullName: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ActiveDirectorySecurity.AccessRuleType\n  fullName: ActiveDirectorySecurity.AccessRuleType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectoryAccessRule\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ActiveDirectoryAccessRule\n  nameWithType: ActiveDirectoryAccessRule\n  fullName: System.DirectoryServices.ActiveDirectoryAccessRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectoryAuditRule\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ActiveDirectoryAuditRule\n  nameWithType: ActiveDirectoryAuditRule\n  fullName: System.DirectoryServices.ActiveDirectoryAuditRule\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  fullName: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ActiveDirectorySecurity.AuditRuleType\n  fullName: ActiveDirectorySecurity.AuditRuleType\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n  fullName: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n  fullName: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccess(IdentityReference, AccessControlType)\n  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference, AccessControlType)\n  fullName: ActiveDirectorySecurity.RemoveAccess(IdentityReference, AccessControlType)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAudit(IdentityReference)\n  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n  fullName: ActiveDirectorySecurity.RemoveAudit(IdentityReference)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ResetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAccessRule(ActiveDirectoryAccessRule)\n  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n  fullName: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAuditRule(ActiveDirectoryAuditRule)\n  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n  fullName: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)\n- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ActiveDirectorySecurity\n  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity\n  fullName: ActiveDirectorySecurity.ActiveDirectorySecurity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ActiveDirectorySecurity.AccessRightType\n  fullName: ActiveDirectorySecurity.AccessRightType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: ActiveDirectorySecurity.AccessRuleFactory\n  fullName: ActiveDirectorySecurity.AccessRuleFactory\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ActiveDirectorySecurity.AccessRuleType\n  fullName: ActiveDirectorySecurity.AccessRuleType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: ActiveDirectorySecurity.AddAccessRule\n  fullName: ActiveDirectorySecurity.AddAccessRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: ActiveDirectorySecurity.AddAuditRule\n  fullName: ActiveDirectorySecurity.AddAuditRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: ActiveDirectorySecurity.AuditRuleFactory\n  fullName: ActiveDirectorySecurity.AuditRuleFactory\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ActiveDirectorySecurity.AuditRuleType\n  fullName: ActiveDirectorySecurity.AuditRuleType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAccessRule\n  nameWithType: ActiveDirectorySecurity.ModifyAccessRule\n  fullName: ActiveDirectorySecurity.ModifyAccessRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ModifyAuditRule\n  nameWithType: ActiveDirectorySecurity.ModifyAuditRule\n  fullName: ActiveDirectorySecurity.ModifyAuditRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAccessRules\n  nameWithType: ActiveDirectorySecurity.PurgeAccessRules\n  fullName: ActiveDirectorySecurity.PurgeAccessRules\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: PurgeAuditRules\n  nameWithType: ActiveDirectorySecurity.PurgeAuditRules\n  fullName: ActiveDirectorySecurity.PurgeAuditRules\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccess\n  nameWithType: ActiveDirectorySecurity.RemoveAccess\n  fullName: ActiveDirectorySecurity.RemoveAccess\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRule\n  fullName: ActiveDirectorySecurity.RemoveAccessRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific\n  fullName: ActiveDirectorySecurity.RemoveAccessRuleSpecific\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAudit\n  nameWithType: ActiveDirectorySecurity.RemoveAudit\n  fullName: ActiveDirectorySecurity.RemoveAudit\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRule\n  fullName: ActiveDirectorySecurity.RemoveAuditRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific\n  fullName: ActiveDirectorySecurity.RemoveAuditRuleSpecific\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: ActiveDirectorySecurity.ResetAccessRule\n  fullName: ActiveDirectorySecurity.ResetAccessRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: ActiveDirectorySecurity.SetAccessRule\n  fullName: ActiveDirectorySecurity.SetAccessRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*\n  parent: System.DirectoryServices.ActiveDirectorySecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: ActiveDirectorySecurity.SetAuditRule\n  fullName: ActiveDirectorySecurity.SetAuditRule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ActiveDirectorySecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n"}