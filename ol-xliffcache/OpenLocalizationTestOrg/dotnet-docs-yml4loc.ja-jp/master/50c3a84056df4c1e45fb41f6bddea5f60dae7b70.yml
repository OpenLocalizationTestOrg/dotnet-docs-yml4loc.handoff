### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.AttributeCollection
  commentId: T:System.ComponentModel.AttributeCollection
  id: AttributeCollection
  children:
  - System.ComponentModel.AttributeCollection.#ctor
  - System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  - System.ComponentModel.AttributeCollection.Attributes
  - System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  - System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  - System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.AttributeCollection.Count
  - System.ComponentModel.AttributeCollection.Empty
  - System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  - System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  - System.ComponentModel.AttributeCollection.GetEnumerator
  - System.ComponentModel.AttributeCollection.Item(System.Int32)
  - System.ComponentModel.AttributeCollection.Item(System.Type)
  - System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  - System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  - System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count
  - System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized
  - System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot
  - System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
  type: Class
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Represents a collection of attributes.
  remarks: "The <xref:System.ComponentModel.AttributeCollection> class is read-only; it does not implement methods to add or remove attributes. You must inherit from this class to implement these methods.  \n  \n Use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to find the number of attributes that exist in the collection.  \n  \n You can also use the methods of this class to query the collection about its contents. Call the <xref:System.ComponentModel.AttributeCollection.Contains%2A> method to verify that a specified attribute or attribute array exists in the collection. Call the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.  \n  \n While most attributes have default values, default values are not required. If an attribute has no default value, `null` is returned from the indexed property that takes a type. When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named \"Default\"."
  example:
  - "The first code example checks to see whether the <xref:System.ComponentModel.BrowsableAttribute> has been set in this collection. The second code example gets the actual value of the <xref:System.ComponentModel.DescriptionAttribute> for a button. Both examples require that `button1` and `textBox1` have been created on a form. When using attributes, verify that an attribute has been set, or access its value.  \n  \n [!code-cpp[Classic AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#1)]  \n  \n [!code-cpp[Classic AttributeCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#2)]\n [!code-csharp[Classic AttributeCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#2)]\n [!code-vb[Classic AttributeCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#2)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class AttributeCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.#ctor
  commentId: M:System.ComponentModel.AttributeCollection.#ctor
  id: '#ctor'
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: AttributeCollection()
  nameWithType: AttributeCollection.AttributeCollection()
  fullName: AttributeCollection.AttributeCollection()
  type: Constructor
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.AttributeCollection"></xref> class.
  syntax:
    content: protected AttributeCollection ();
    parameters: []
  overload: System.ComponentModel.AttributeCollection.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  id: '#ctor(System.Attribute[])'
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: AttributeCollection(Attribute[])
  nameWithType: AttributeCollection.AttributeCollection(Attribute[])
  fullName: AttributeCollection.AttributeCollection(Attribute[])
  type: Constructor
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.AttributeCollection"></xref> class.
  remarks: ''
  example:
  - "The following code example creates a new <xref:System.ComponentModel.AttributeCollection> using the attributes on `button1`. It assumes that `button1` has been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/VB/source.vb#1)]"
  syntax:
    content: public AttributeCollection (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: An array of type <xref href="System.Attribute"></xref> that provides the attributes for this collection.
  overload: System.ComponentModel.AttributeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>attributes</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Attributes
  commentId: P:System.ComponentModel.AttributeCollection.Attributes
  id: Attributes
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Attributes
  nameWithType: AttributeCollection.Attributes
  fullName: AttributeCollection.Attributes
  type: Property
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets the attribute collection.
  syntax:
    content: protected virtual Attribute[] Attributes { get; }
    return:
      type: System.Attribute[]
      description: The attribute collection.
  overload: System.ComponentModel.AttributeCollection.Attributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  commentId: M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  id: Contains(System.Attribute)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Contains(Attribute)
  nameWithType: AttributeCollection.Contains(Attribute)
  fullName: AttributeCollection.Contains(Attribute)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Determines whether this collection of attributes has the specified attribute.
  remarks: "This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.  \n  \n The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.  \n  \n For most attributes, these methods do the same thing. For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied. For example, consider a data binding attribute with the Boolean flags \"SupportsSql\", \"SupportsOleDb\", and \"SupportsXml\". This attribute may be present on a property that supports all three data-binding approaches. It will often be the case that a programmer needs to know only if a particular approach is available, not all three. Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs."
  example:
  - "The following code example checks to see whether the collection has a <xref:System.ComponentModel.BrowsableAttribute> set to `true`. It assumes that `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/VB/source.vb#1)]"
  syntax:
    content: public bool Contains (Attribute attribute);
    parameters:
    - id: attribute
      type: System.Attribute
      description: An <xref href="System.Attribute"></xref> to find in the collection.
    return:
      type: System.Boolean
      description: '`true` if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, `false`.'
  overload: System.ComponentModel.AttributeCollection.Contains*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  id: Contains(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Contains(Attribute[])
  nameWithType: AttributeCollection.Contains(Attribute[])
  fullName: AttributeCollection.Contains(Attribute[])
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Determines whether this attribute collection contains all the specified attributes in the attribute array.
  remarks: This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.
  example:
  - "The following code example compares the attributes in `button1` and `textBox1` to see whether the attributes for the button are contained in the attributes for the text box. It assumes that both `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/VB/source.vb#1)]"
  syntax:
    content: public bool Contains (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: An array of type <xref href="System.Attribute"></xref> to find in the collection.
    return:
      type: System.Boolean
      description: '`true` if the collection contains all the attributes; otherwise, `false`.'
  overload: System.ComponentModel.AttributeCollection.Contains*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: CopyTo(Array, Int32)
  nameWithType: AttributeCollection.CopyTo(Array, Int32)
  fullName: AttributeCollection.CopyTo(Array, Int32)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Copies the collection to an array, starting at the specified index.
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: The <xref href="System.Array"></xref> to copy the collection to.
    - id: index
      type: System.Int32
      description: The index to start from.
  overload: System.ComponentModel.AttributeCollection.CopyTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Count
  commentId: P:System.ComponentModel.AttributeCollection.Count
  id: Count
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: AttributeCollection.Count
  type: Property
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets the number of attributes.
  remarks: You can use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects. If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.
  example:
  - "The following code example uses the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to print the number of properties on `button1` in a text box. It assumes that `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/VB/source.vb#1)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: The number of attributes.
  overload: System.ComponentModel.AttributeCollection.Count*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Empty
  commentId: F:System.ComponentModel.AttributeCollection.Empty
  id: Empty
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Empty
  nameWithType: AttributeCollection.Empty
  fullName: AttributeCollection.Empty
  type: Field
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Specifies an empty collection that you can use, rather than creating a new one. This field is read-only.
  syntax:
    content: public static readonly System.ComponentModel.AttributeCollection Empty;
    return:
      type: System.ComponentModel.AttributeCollection
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  id: FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: FromExisting(AttributeCollection, Attribute[])
  nameWithType: AttributeCollection.FromExisting(AttributeCollection, Attribute[])
  fullName: AttributeCollection.FromExisting(AttributeCollection, Attribute[])
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Creates a new <xref href="System.ComponentModel.AttributeCollection"></xref> from an existing <xref href="System.ComponentModel.AttributeCollection"></xref>.
  remarks: If the `newAttributes` parameter is provided, its <xref:System.Attribute> entries are merged with those of the `existing` parameter.
  syntax:
    content: public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, Attribute[] newAttributes);
    parameters:
    - id: existing
      type: System.ComponentModel.AttributeCollection
      description: An <xref href="System.ComponentModel.AttributeCollection"></xref> from which to create the copy.
    - id: newAttributes
      type: System.Attribute[]
      description: An array of type <xref href="System.Attribute"></xref> that provides the attributes for this collection. Can be `null`.
    return:
      type: System.ComponentModel.AttributeCollection
      description: A new <xref href="System.ComponentModel.AttributeCollection"></xref> that is a copy of <code>existing</code>.
  overload: System.ComponentModel.AttributeCollection.FromExisting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>existing</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  commentId: M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  id: GetDefaultAttribute(System.Type)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: GetDefaultAttribute(Type)
  nameWithType: AttributeCollection.GetDefaultAttribute(Type)
  fullName: AttributeCollection.GetDefaultAttribute(Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns the default <xref href="System.Attribute"></xref> of a given <xref href="System.Type"></xref>.
  syntax:
    content: protected Attribute GetDefaultAttribute (Type attributeType);
    parameters:
    - id: attributeType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the attribute to retrieve.
    return:
      type: System.Attribute
      description: The default <xref href="System.Attribute"></xref> of a given <code>attributeType</code>.
  overload: System.ComponentModel.AttributeCollection.GetDefaultAttribute*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.GetEnumerator
  commentId: M:System.ComponentModel.AttributeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: AttributeCollection.GetEnumerator()
  fullName: AttributeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets an enumerator for this collection.
  remarks: ''
  example:
  - "The following code example gets an enumerator for the attributes on `button1`. It uses the enumerator to print the names of the attributes in the collection. It assumes that `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CPP/Source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/VB/source.vb#1)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An enumerator of type <xref href="System.Collections.IEnumerator"></xref>.
  overload: System.ComponentModel.AttributeCollection.GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Item(System.Int32)
  commentId: P:System.ComponentModel.AttributeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: AttributeCollection.Item(Int32)
  fullName: AttributeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets the attribute with the specified index number.
  remarks: The index number is zero-based. Therefore, you must subtract 1 from the numerical position of a particular <xref:System.Attribute> to access that <xref:System.Attribute>. For example, to get the third <xref:System.Attribute>, you need to specify `myColl[2]`.
  example:
  - "The following code example uses the <xref:System.ComponentModel.AttributeCollection.Item%2A> property to print the name of the <xref:System.Attribute> specified by the index number in a text box. Because the index number is zero-based, this code example prints the name of the second <xref:System.Attribute> in a text box. It assumes `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this Example/VB/source.vb#1)]"
  syntax:
    content: public virtual Attribute this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of <xref href="System.ComponentModel.AttributeCollection"></xref>.
    return:
      type: System.Attribute
      description: The <xref href="System.Attribute"></xref> with the specified index number.
  overload: System.ComponentModel.AttributeCollection.Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Item(System.Type)
  commentId: P:System.ComponentModel.AttributeCollection.Item(System.Type)
  id: Item(System.Type)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Item(Type)
  nameWithType: AttributeCollection.Item(Type)
  fullName: AttributeCollection.Item(Type)
  type: Property
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets the attribute with the specified type.
  remarks: If the attribute does not exist in the collection, this property returns the default value for the attribute type.
  example:
  - "The following code example gets the <xref:System.ComponentModel.DesignerAttribute> from the collection and prints its value. It assumes that `button1` and `textBox1` have been created on a form.  \n  \n For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).  \n  \n [!code-cpp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/VB/source.vb#1)]"
  syntax:
    content: public virtual Attribute this[Type attributeType] { get; }
    parameters:
    - id: attributeType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the <xref href="System.Attribute"></xref> to get from the collection.
    return:
      type: System.Attribute
      description: The <xref href="System.Attribute"></xref> with the specified type or, if the attribute does not exist, the default value for the attribute type.
  overload: System.ComponentModel.AttributeCollection.Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  commentId: M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  id: Matches(System.Attribute)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Matches(Attribute)
  nameWithType: AttributeCollection.Matches(Attribute)
  fullName: AttributeCollection.Matches(Attribute)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Determines whether a specified attribute is the same as an attribute in the collection.
  remarks: "An attribute can provide support for matching.  \n  \n The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.  \n  \n For most attributes, these methods do the same thing. For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied. For example, consider a data binding attribute with the Boolean flags \"SupportsSql\", \"SupportsOleDb\", and \"SupportsXml\". This attribute may be present on a property that supports all three data binding approaches. It will often be the case that a programmer needs to know only if a particular approach is available, not all three. Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs."
  example:
  - "The following code example verifies that the <xref:System.ComponentModel.BrowsableAttribute> is a member of the collection and that it has been set to `true`. It assumes that `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.Matches Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/VB/source.vb#1)]"
  syntax:
    content: public bool Matches (Attribute attribute);
    parameters:
    - id: attribute
      type: System.Attribute
      description: An instance of <xref href="System.Attribute"></xref> to compare with the attributes in this collection.
    return:
      type: System.Boolean
      description: '`true` if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, `false`.'
  overload: System.ComponentModel.AttributeCollection.Matches*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  id: Matches(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: Matches(Attribute[])
  nameWithType: AttributeCollection.Matches(Attribute[])
  fullName: AttributeCollection.Matches(Attribute[])
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Determines whether the attributes in the specified array are the same as the attributes in the collection.
  remarks: An attribute can provide support for matching.
  example:
  - "The following code example compares the attributes in a button and a text box to see whether they match. It assumes that `button1` and `textBox1` have been created on a form.  \n  \n [!code-cpp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CS/source.cs#1)]\n [!code-vb[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/VB/source.vb#1)]"
  syntax:
    content: public bool Matches (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: An array of <xref href="System.CodeDom.MemberAttributes"></xref> to compare with the attributes in this collection.
    return:
      type: System.Boolean
      description: '`true` if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, `false`.'
  overload: System.ComponentModel.AttributeCollection.Matches*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count
  commentId: P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: ICollection.Count
  nameWithType: AttributeCollection.ICollection.Count
  fullName: AttributeCollection.ICollection.Count
  type: Property
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the number of elements contained in the collection.
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: The number of elements contained in the collection.
  overload: System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.author: jimwalk
  manager: martinek
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: AttributeCollection.ICollection.IsSynchronized
  fullName: AttributeCollection.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets a value indicating whether access to the collection is synchronized (thread-safe).
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`true` if access to the collection is synchronized (thread-safe); otherwise, `false`.'
  overload: System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.author: jimwalk
  manager: martinek
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot
  commentId: P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: AttributeCollection.ICollection.SyncRoot
  fullName: AttributeCollection.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets an object that can be used to synchronize access to the collection.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the collection.
  overload: System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.author: jimwalk
  manager: martinek
- uid: System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: AttributeCollection.IEnumerable.GetEnumerator()
  fullName: AttributeCollection.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns an <xref href="System.Collections.IEnumerator"></xref> for the <xref href="System.Collections.IDictionary"></xref>.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> for the <xref href="System.Collections.IDictionary"></xref>.
  overload: System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ComponentModel.AttributeCollection.#ctor
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: AttributeCollection()
  nameWithType: AttributeCollection.AttributeCollection()
  fullName: AttributeCollection.AttributeCollection()
- uid: System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: AttributeCollection(Attribute[])
  nameWithType: AttributeCollection.AttributeCollection(Attribute[])
  fullName: AttributeCollection.AttributeCollection(Attribute[])
- uid: System.Attribute
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Attribute[]
  parent: System
  isExternal: false
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.AttributeCollection.Attributes
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Attributes
  nameWithType: AttributeCollection.Attributes
  fullName: AttributeCollection.Attributes
- uid: System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Contains(Attribute)
  nameWithType: AttributeCollection.Contains(Attribute)
  fullName: AttributeCollection.Contains(Attribute)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Contains(Attribute[])
  nameWithType: AttributeCollection.Contains(Attribute[])
  fullName: AttributeCollection.Contains(Attribute[])
- uid: System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: CopyTo(Array, Int32)
  nameWithType: AttributeCollection.CopyTo(Array, Int32)
  fullName: AttributeCollection.CopyTo(Array, Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.AttributeCollection.Count
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: AttributeCollection.Count
- uid: System.ComponentModel.AttributeCollection.Empty
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Empty
  nameWithType: AttributeCollection.Empty
  fullName: AttributeCollection.Empty
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: FromExisting(AttributeCollection, Attribute[])
  nameWithType: AttributeCollection.FromExisting(AttributeCollection, Attribute[])
  fullName: AttributeCollection.FromExisting(AttributeCollection, Attribute[])
- uid: System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: GetDefaultAttribute(Type)
  nameWithType: AttributeCollection.GetDefaultAttribute(Type)
  fullName: AttributeCollection.GetDefaultAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.AttributeCollection.GetEnumerator
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: AttributeCollection.GetEnumerator()
  fullName: AttributeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.AttributeCollection.Item(System.Int32)
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: AttributeCollection.Item(Int32)
  fullName: AttributeCollection.Item(Int32)
- uid: System.ComponentModel.AttributeCollection.Item(System.Type)
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Item(Type)
  nameWithType: AttributeCollection.Item(Type)
  fullName: AttributeCollection.Item(Type)
- uid: System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Matches(Attribute)
  nameWithType: AttributeCollection.Matches(Attribute)
  fullName: AttributeCollection.Matches(Attribute)
- uid: System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Matches(Attribute[])
  nameWithType: AttributeCollection.Matches(Attribute[])
  fullName: AttributeCollection.Matches(Attribute[])
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: ICollection.Count
  nameWithType: AttributeCollection.ICollection.Count
  fullName: AttributeCollection.ICollection.Count
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: AttributeCollection.ICollection.IsSynchronized
  fullName: AttributeCollection.ICollection.IsSynchronized
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: AttributeCollection.ICollection.SyncRoot
  fullName: AttributeCollection.ICollection.SyncRoot
- uid: System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: AttributeCollection.IEnumerable.GetEnumerator()
  fullName: AttributeCollection.IEnumerable.GetEnumerator()
- uid: System.ComponentModel.AttributeCollection.#ctor*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection.AttributeCollection
  fullName: AttributeCollection.AttributeCollection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.Attributes*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Attributes
  nameWithType: AttributeCollection.Attributes
  fullName: AttributeCollection.Attributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.Contains*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Contains
  nameWithType: AttributeCollection.Contains
  fullName: AttributeCollection.Contains
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.CopyTo*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: CopyTo
  nameWithType: AttributeCollection.CopyTo
  fullName: AttributeCollection.CopyTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.Count*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: AttributeCollection.Count
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.FromExisting*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: FromExisting
  nameWithType: AttributeCollection.FromExisting
  fullName: AttributeCollection.FromExisting
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.GetDefaultAttribute*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: GetDefaultAttribute
  nameWithType: AttributeCollection.GetDefaultAttribute
  fullName: AttributeCollection.GetDefaultAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.GetEnumerator*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: AttributeCollection.GetEnumerator
  fullName: AttributeCollection.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.Item*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Item
  nameWithType: AttributeCollection.Item
  fullName: AttributeCollection.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.Matches*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: Matches
  nameWithType: AttributeCollection.Matches
  fullName: AttributeCollection.Matches
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: AttributeCollection.System.Collections.ICollection.Count
  fullName: AttributeCollection.System.Collections.ICollection.Count
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: AttributeCollection.System.Collections.ICollection.IsSynchronized
  fullName: AttributeCollection.System.Collections.ICollection.IsSynchronized
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: AttributeCollection.System.Collections.ICollection.SyncRoot
  fullName: AttributeCollection.System.Collections.ICollection.SyncRoot
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.ComponentModel.AttributeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: AttributeCollection.System.Collections.IEnumerable.GetEnumerator
  fullName: AttributeCollection.System.Collections.IEnumerable.GetEnumerator
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeCollection.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
