{"nodes":[{"content":"Provides configuration and statistical information for a network interface.","nodes":[{"pos":[0,75],"content":"Provides configuration and statistical information for a network interface.","nodes":[{"content":"Provides configuration and statistical information for a network interface.","pos":[0,75]}]}],"pos":[1719,1795],"yaml":true},{"content":"This class encapsulates data for network interfaces, also known as adapters, on the local computer. You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.","nodes":[{"pos":[0,342],"content":"This class encapsulates data for network interfaces, also known as adapters, on the local computer. You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.","nodes":[{"content":"This class encapsulates data for network interfaces, also known as adapters, on the local computer. You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.","pos":[0,342],"nodes":[{"content":"This class encapsulates data for network interfaces, also known as adapters, on the local computer.","pos":[0,99]},{"content":"You do not create instances of this class; the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A&gt;</ph> method returns an array that contains one instance of this class for each network interface on the local computer.","pos":[100,342],"source":" You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer."}]}]}],"pos":[1806,2149],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterface\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> class."}],"pos":[4122,4231],"yaml":true},{"content":"This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.","nodes":[{"pos":[0,128],"content":"This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.","nodes":[{"content":"This constructor can be called only by classes that derive from the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterface&gt;</ph> class.","pos":[0,128],"source":"This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class."}]}],"pos":[4242,4371],"yaml":true,"extradata":"MT"},{"content":"Gets the description of the interface.","nodes":[{"pos":[0,38],"content":"Gets the description of the interface.","nodes":[{"content":"Gets the description of the interface.","pos":[0,38]}]}],"pos":[5761,5800],"yaml":true},{"content":"The description is human-readable text that typically describes the interface vendor, type (for example, Ethernet), brand, and model.","nodes":[{"pos":[0,133],"content":"The description is human-readable text that typically describes the interface vendor, type (for example, Ethernet), brand, and model.","nodes":[{"content":"The description is human-readable text that typically describes the interface vendor, type (for example, Ethernet), brand, and model.","pos":[0,133]}]}],"pos":[5811,5945],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that describes this interface.","nodes":[{"pos":[0,67],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that describes this interface.","source":"A <xref href=\"System.String\"></xref> that describes this interface."}],"pos":[6415,6483],"yaml":true},{"content":"Returns objects that describe the network interfaces on the local computer.","nodes":[{"pos":[0,75],"content":"Returns objects that describe the network interfaces on the local computer.","nodes":[{"content":"Returns objects that describe the network interfaces on the local computer.","pos":[0,75]}]}],"pos":[7882,7958],"yaml":true},{"content":"The network interfaces on a computer provide network connectivity. Network interfaces are also known as network adapters.","nodes":[{"pos":[0,121],"content":"The network interfaces on a computer provide network connectivity. Network interfaces are also known as network adapters.","nodes":[{"content":"The network interfaces on a computer provide network connectivity. Network interfaces are also known as network adapters.","pos":[0,121],"nodes":[{"content":"The network interfaces on a computer provide network connectivity.","pos":[0,66]},{"content":"Network interfaces are also known as network adapters.","pos":[67,121]}]}]}],"pos":[7969,8091],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.","nodes":[{"pos":[0,194],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterface\"&gt;&lt;/xref&gt;</ph> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.","source":"A <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected."}],"pos":[8821,9016],"yaml":true},{"content":"A Windows system function call failed.","nodes":[{"pos":[0,38],"content":"A Windows system function call failed.","nodes":[{"content":"A Windows system function call failed.","pos":[0,38]}]}],"pos":[9274,9313],"yaml":true},{"content":"Returns an object that describes the configuration of this network interface.","nodes":[{"pos":[0,77],"content":"Returns an object that describes the configuration of this network interface.","nodes":[{"content":"Returns an object that describes the configuration of this network interface.","pos":[0,77]}]}],"pos":[10575,10653],"yaml":true},{"content":"Note that the information in the object returned by this method reflects the interfaces as of the time the array is created. This information is not updated dynamically.","nodes":[{"pos":[0,169],"content":"Note that the information in the object returned by this method reflects the interfaces as of the time the array is created. This information is not updated dynamically.","nodes":[{"content":"Note that the information in the object returned by this method reflects the interfaces as of the time the array is created. This information is not updated dynamically.","pos":[0,169],"nodes":[{"content":"Note that the information in the object returned by this method reflects the interfaces as of the time the array is created.","pos":[0,124]},{"content":"This information is not updated dynamically.","pos":[125,169]}]}]}],"pos":[10664,10834],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"></xref> object that describes this network interface.","nodes":[{"pos":[0,121],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"&gt;&lt;/xref&gt;</ph> object that describes this network interface.","source":"An <xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"></xref> object that describes this network interface."}],"pos":[11541,11663],"yaml":true},{"content":"Gets the IP statistics for this <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> instance.","nodes":[{"pos":[0,109],"content":"Gets the IP statistics for this <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterface\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the IP statistics for this <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> instance."}],"pos":[13018,13128],"yaml":true},{"content":"Returns <xref href=\"System.Net.NetworkInformation.IPInterfaceStatistics\"></xref>.  \n  \n The IP statistics.","nodes":[{"pos":[0,81],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPInterfaceStatistics\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Net.NetworkInformation.IPInterfaceStatistics\"></xref>."},{"pos":[88,106],"content":"The IP statistics.","nodes":[{"content":"The IP statistics.","pos":[0,18]}]}],"pos":[13352,13465],"yaml":true},{"content":"Gets the IPv4 statistics for this <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> instance.","nodes":[{"pos":[0,111],"content":"Gets the IPv4 statistics for this <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterface\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the IPv4 statistics for this <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> instance."}],"pos":[14832,14944],"yaml":true},{"content":"An <xref href=\"System.Net.NetworkInformation.IPv4InterfaceStatistics\"></xref> object.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPv4InterfaceStatistics\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Net.NetworkInformation.IPv4InterfaceStatistics\"></xref> object."}],"pos":[15174,15260],"yaml":true},{"content":"Indicates whether any network connection is available.","nodes":[{"pos":[0,54],"content":"Indicates whether any network connection is available.","nodes":[{"content":"Indicates whether any network connection is available.","pos":[0,54]}]}],"pos":[16589,16644],"yaml":true},{"content":"A network connection is considered to be available if any network interface is marked \"up\" and is not a loopback or tunnel interface.","nodes":[{"pos":[0,133],"content":"A network connection is considered to be available if any network interface is marked \"up\" and is not a loopback or tunnel interface.","nodes":[{"content":"A network connection is considered to be available if any network interface is marked \"up\" and is not a loopback or tunnel interface.","pos":[0,133]}]}],"pos":[16655,16789],"yaml":true,"extradata":"MT"},{"content":"`true` if a network connection is available; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if a network connection is available; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a network connection is available; otherwise, `false`."}],"pos":[16934,17001],"yaml":true},{"content":"Returns the Media Access Control (MAC) or physical address for this adapter.","nodes":[{"pos":[0,76],"content":"Returns the Media Access Control (MAC) or physical address for this adapter.","nodes":[{"content":"Returns the Media Access Control (MAC) or physical address for this adapter.","pos":[0,76]}]}],"pos":[18380,18457],"yaml":true},{"content":"The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer. For example, on an Ethernet network, this method returns the Ethernet hardware address.","nodes":[{"pos":[0,222],"content":"The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer. For example, on an Ethernet network, this method returns the Ethernet hardware address.","nodes":[{"content":"The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer. For example, on an Ethernet network, this method returns the Ethernet hardware address.","pos":[0,222],"nodes":[{"content":"The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer.","pos":[0,134]},{"content":"For example, on an Ethernet network, this method returns the Ethernet hardware address.","pos":[135,222]}]}]}],"pos":[18468,18691],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.PhysicalAddress\"></xref> object that contains the physical address.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.PhysicalAddress\"&gt;&lt;/xref&gt;</ph> object that contains the physical address.","source":"A <xref href=\"System.Net.NetworkInformation.PhysicalAddress\"></xref> object that contains the physical address."}],"pos":[19380,19492],"yaml":true},{"content":"Gets the identifier of the network adapter.","nodes":[{"pos":[0,43],"content":"Gets the identifier of the network adapter.","nodes":[{"content":"Gets the identifier of the network adapter.","pos":[0,43]}]}],"pos":[20768,20812],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the identifier.","nodes":[{"pos":[0,66],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the identifier.","source":"A <xref href=\"System.String\"></xref> that contains the identifier."}],"pos":[20926,20993],"yaml":true},{"content":"Gets the index of the IPv6 loopback interface.","nodes":[{"pos":[0,46],"content":"Gets the index of the IPv6 loopback interface.","nodes":[{"content":"Gets the index of the IPv6 loopback interface.","pos":[0,46]}]}],"pos":[22397,22444],"yaml":true},{"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.","nodes":[{"pos":[0,229],"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.","nodes":[{"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.","pos":[0,229],"nodes":[{"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.","pos":[0,98]},{"content":"The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.","pos":[99,229]}]}]}],"pos":[22455,22685],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The index for the IPv6 loopback interface.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,91],"content":"The index for the IPv6 loopback interface.","nodes":[{"content":"The index for the IPv6 loopback interface.","pos":[0,42]}]}],"pos":[22818,22916],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the network interface is set to only receive data packets.","nodes":[{"pos":[0,130],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the network interface is set to only receive data packets.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the network interface is set to only receive data packets."}],"pos":[24266,24397],"yaml":true},{"content":"`true` if the interface only receives network traffic; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the interface only receives network traffic; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the interface only receives network traffic; otherwise, `false`."}],"pos":[24997,25074],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[25280,25371],"yaml":true},{"content":"Gets the index of the IPv4 loopback interface.","nodes":[{"pos":[0,46],"content":"Gets the index of the IPv4 loopback interface.","nodes":[{"content":"Gets the index of the IPv4 loopback interface.","pos":[0,46]}]}],"pos":[26671,26718],"yaml":true},{"content":"The index of the loopback interface is usually 1, but you cannot rely on this. Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.  \n  \n A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.","nodes":[{"pos":[0,201],"content":"The index of the loopback interface is usually 1, but you cannot rely on this. Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.","nodes":[{"content":"The index of the loopback interface is usually 1, but you cannot rely on this. Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.","pos":[0,201],"nodes":[{"content":"The index of the loopback interface is usually 1, but you cannot rely on this.","pos":[0,78]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A&gt;</ph> property to get the correct value.","pos":[79,201],"source":" Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value."}]}]},{"pos":[208,441],"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.","nodes":[{"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.","pos":[0,233],"nodes":[{"content":"A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.","pos":[0,98]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A&gt;</ph> property only returns the IPv4 loopback interface.","pos":[99,233],"source":" The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface."}]}]}],"pos":[26729,27175],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that contains the index for the IPv4 loopback interface.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the index for the IPv4 loopback interface.","source":"A <xref href=\"System.Int32\"></xref> that contains the index for the IPv4 loopback interface."}],"pos":[27304,27397],"yaml":true},{"content":"This property is not valid on computers running only Ipv6.","nodes":[{"pos":[0,58],"content":"This property is not valid on computers running only Ipv6.","nodes":[{"content":"This property is not valid on computers running only Ipv6.","pos":[0,58]}]}],"pos":[27654,27713],"yaml":true},{"content":"Gets the name of the network adapter.","nodes":[{"pos":[0,37],"content":"Gets the name of the network adapter.","nodes":[{"content":"Gets the name of the network adapter.","pos":[0,37]}]}],"pos":[28905,28943],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the adapter name.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the adapter name.","source":"A <xref href=\"System.String\"></xref> that contains the adapter name."}],"pos":[29420,29489],"yaml":true},{"content":"Gets the interface type.","nodes":[{"pos":[0,24],"content":"Gets the interface type.","nodes":[{"content":"Gets the interface type.","pos":[0,24]}]}],"pos":[30859,30884],"yaml":true},{"content":"The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration documentation.  \n  \n This property only returns a subset of the possible values defined in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration. The possible values include the following:  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Fddi>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ppp>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Slip>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.TokenRing>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Unknown>","nodes":[{"pos":[0,135],"content":"The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration documentation.","nodes":[{"content":"The interface types are described in detail in the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterfaceType&gt;</ph> enumeration documentation.","pos":[0,135],"source":"The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration documentation."}]},{"pos":[142,329],"content":"This property only returns a subset of the possible values defined in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration. The possible values include the following:","nodes":[{"content":"This property only returns a subset of the possible values defined in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration. The possible values include the following:","pos":[0,187],"nodes":[{"content":"This property only returns a subset of the possible values defined in the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterfaceType&gt;</ph> enumeration.","pos":[0,144],"source":"This property only returns a subset of the possible values defined in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration."},{"content":"The possible values include the following:","pos":[145,187]}]}]},{"pos":[339,405],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet>","nodes":[]},{"pos":[415,477],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.Fddi>","nodes":[]},{"pos":[487,553],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback>","nodes":[]},{"pos":[563,624],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.Ppp>","nodes":[]},{"pos":[634,696],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.Slip>","nodes":[]},{"pos":[706,773],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.TokenRing>","nodes":[]},{"pos":[783,848],"content":"<xref:System.Net.NetworkInformation.NetworkInterfaceType.Unknown>","nodes":[]}],"pos":[30895,31762],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.NetworkInterfaceType\"></xref> value that specifies the network interface type.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterfaceType\"&gt;&lt;/xref&gt;</ph> value that specifies the network interface type.","source":"An <xref href=\"System.Net.NetworkInformation.NetworkInterfaceType\"></xref> value that specifies the network interface type."}],"pos":[32444,32568],"yaml":true},{"content":"Gets the current operational state of the network connection.","nodes":[{"pos":[0,61],"content":"Gets the current operational state of the network connection.","nodes":[{"content":"Gets the current operational state of the network connection.","pos":[0,61]}]}],"pos":[33936,33998],"yaml":true},{"content":"The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.","nodes":[{"pos":[0,142],"content":"The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.","nodes":[{"content":"The operational status values are described in detail in the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.OperationalStatus&gt;</ph> enumeration documentation.","pos":[0,142],"source":"The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation."}]}],"pos":[34009,34152],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.OperationalStatus\"></xref> values.","nodes":[{"pos":[0,87],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.OperationalStatus\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Net.NetworkInformation.OperationalStatus\"></xref> values."}],"pos":[34703,34791],"yaml":true},{"content":"Gets the speed of the network interface.","nodes":[{"pos":[0,40],"content":"Gets the speed of the network interface.","nodes":[{"content":"Gets the speed of the network interface.","pos":[0,40]}]}],"pos":[36084,36125],"yaml":true},{"content":"The value returned by this property is reported by the network interface. It is not computed dynamically.","nodes":[{"pos":[0,105],"content":"The value returned by this property is reported by the network interface. It is not computed dynamically.","nodes":[{"content":"The value returned by this property is reported by the network interface. It is not computed dynamically.","pos":[0,105],"nodes":[{"content":"The value returned by this property is reported by the network interface.","pos":[0,73]},{"content":"It is not computed dynamically.","pos":[74,105]}]}]}],"pos":[36136,36242],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int64\"></xref> value that specifies the speed in bits per second.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that specifies the speed in bits per second.","source":"A <xref href=\"System.Int64\"></xref> value that specifies the speed in bits per second."}],"pos":[36828,36915],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the interface supports the specified protocol.","nodes":[{"pos":[0,118],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the interface supports the specified protocol.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the interface supports the specified protocol."}],"pos":[38464,38583],"yaml":true},{"content":"A <xref href=\"System.Net.NetworkInformation.NetworkInterfaceComponent\"></xref> value.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterfaceComponent\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.Net.NetworkInformation.NetworkInterfaceComponent\"></xref> value."}],"pos":[39337,39423],"yaml":true},{"content":"`true` if the specified protocol is supported; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the specified protocol is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified protocol is supported; otherwise, `false`."}],"pos":[39481,39550],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the network interface is enabled to receive multicast packets.","nodes":[{"pos":[0,134],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the network interface is enabled to receive multicast packets.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the network interface is enabled to receive multicast packets."}],"pos":[40906,41041],"yaml":true},{"content":"Multicasting is the act of sending a data packet to multiple destinations simultaneously.","nodes":[{"pos":[0,89],"content":"Multicasting is the act of sending a data packet to multiple destinations simultaneously.","nodes":[{"content":"Multicasting is the act of sending a data packet to multiple destinations simultaneously.","pos":[0,89]}]}],"pos":[41052,41142],"yaml":true,"extradata":"MT"},{"content":"`true` if the interface receives multicast packets; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the interface receives multicast packets; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the interface receives multicast packets; otherwise, `false`."}],"pos":[41732,41806],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[42016,42107],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.NetworkInterface\n  commentId: T:System.Net.NetworkInformation.NetworkInterface\n  id: NetworkInterface\n  children:\n  - System.Net.NetworkInformation.NetworkInterface.#ctor\n  - System.Net.NetworkInformation.NetworkInterface.Description\n  - System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\n  - System.Net.NetworkInformation.NetworkInterface.GetIPProperties\n  - System.Net.NetworkInformation.NetworkInterface.GetIPStatistics\n  - System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics\n  - System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable\n  - System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress\n  - System.Net.NetworkInformation.NetworkInterface.Id\n  - System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex\n  - System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly\n  - System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex\n  - System.Net.NetworkInformation.NetworkInterface.Name\n  - System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType\n  - System.Net.NetworkInformation.NetworkInterface.OperationalStatus\n  - System.Net.NetworkInformation.NetworkInterface.Speed\n  - System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)\n  - System.Net.NetworkInformation.NetworkInterface.SupportsMulticast\n  langs:\n  - csharp\n  name: NetworkInterface\n  nameWithType: NetworkInterface\n  fullName: System.Net.NetworkInformation.NetworkInterface\n  type: Class\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides configuration and statistical information for a network interface.\n  remarks: This class encapsulates data for network interfaces, also known as adapters, on the local computer. You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.\n  example:\n  - \"The following code example displays information about interfaces.  \\n  \\n [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]\\n [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]\"\n  syntax:\n    content: public abstract class NetworkInterface\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.#ctor\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: NetworkInterface()\n  nameWithType: NetworkInterface.NetworkInterface()\n  fullName: NetworkInterface.NetworkInterface()\n  type: Constructor\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> class.\n  remarks: This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.\n  syntax:\n    content: protected NetworkInterface ();\n    parameters: []\n  overload: System.Net.NetworkInformation.NetworkInterface.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.Description\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.Description\n  id: Description\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: Description\n  nameWithType: NetworkInterface.Description\n  fullName: NetworkInterface.Description\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the description of the interface.\n  remarks: The description is human-readable text that typically describes the interface vendor, type (for example, Ethernet), brand, and model.\n  example:\n  - \"The following code example displays a summary for all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]\\n [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]\"\n  syntax:\n    content: public virtual string Description { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that describes this interface.\n  overload: System.Net.NetworkInformation.NetworkInterface.Description*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\n  id: GetAllNetworkInterfaces\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: GetAllNetworkInterfaces()\n  nameWithType: NetworkInterface.GetAllNetworkInterfaces()\n  fullName: NetworkInterface.GetAllNetworkInterfaces()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Returns objects that describe the network interfaces on the local computer.\n  remarks: The network interfaces on a computer provide network connectivity. Network interfaces are also known as network adapters.\n  example:\n  - \"The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.  \\n  \\n [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]\\n [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]\\n [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]\"\n  syntax:\n    content: public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.NetworkInterface[]\n      description: A <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.\n  overload: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: A Windows system function call failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPProperties\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties\n  id: GetIPProperties\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: GetIPProperties()\n  nameWithType: NetworkInterface.GetIPProperties()\n  fullName: NetworkInterface.GetIPProperties()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Returns an object that describes the configuration of this network interface.\n  remarks: Note that the information in the object returned by this method reflects the interfaces as of the time the array is created. This information is not updated dynamically.\n  example:\n  - \"The following code example displays information for the local computer's network adapters that support IPv4.  \\n  \\n [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPInterfaceProperties\n      description: An <xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"></xref> object that describes this network interface.\n  overload: System.Net.NetworkInformation.NetworkInterface.GetIPProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics\n  id: GetIPStatistics\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: GetIPStatistics()\n  nameWithType: NetworkInterface.GetIPStatistics()\n  fullName: NetworkInterface.GetIPStatistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the IP statistics for this <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> instance.\n  syntax:\n    content: public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPInterfaceStatistics\n      description: \"Returns <xref href=\\\"System.Net.NetworkInformation.IPInterfaceStatistics\\\"></xref>.  \\n  \\n The IP statistics.\"\n  overload: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics\n  id: GetIPv4Statistics\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: GetIPv4Statistics()\n  nameWithType: NetworkInterface.GetIPv4Statistics()\n  fullName: NetworkInterface.GetIPv4Statistics()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: Gets the IPv4 statistics for this <xref href=\"System.Net.NetworkInformation.NetworkInterface\"></xref> instance.\n  syntax:\n    content: public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPv4InterfaceStatistics\n      description: An <xref href=\"System.Net.NetworkInformation.IPv4InterfaceStatistics\"></xref> object.\n  overload: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable\n  id: GetIsNetworkAvailable\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: GetIsNetworkAvailable()\n  nameWithType: NetworkInterface.GetIsNetworkAvailable()\n  fullName: NetworkInterface.GetIsNetworkAvailable()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Indicates whether any network connection is available.\n  remarks: A network connection is considered to be available if any network interface is marked \"up\" and is not a loopback or tunnel interface.\n  syntax:\n    content: public static bool GetIsNetworkAvailable ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if a network connection is available; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress\n  id: GetPhysicalAddress\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: GetPhysicalAddress()\n  nameWithType: NetworkInterface.GetPhysicalAddress()\n  fullName: NetworkInterface.GetPhysicalAddress()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Returns the Media Access Control (MAC) or physical address for this adapter.\n  remarks: The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer. For example, on an Ethernet network, this method returns the Ethernet hardware address.\n  example:\n  - \"The following code example displays the physical addresses of all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]\\n [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]\\n [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]\"\n  syntax:\n    content: public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.PhysicalAddress\n      description: A <xref href=\"System.Net.NetworkInformation.PhysicalAddress\"></xref> object that contains the physical address.\n  overload: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.Id\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.Id\n  id: Id\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: Id\n  nameWithType: NetworkInterface.Id\n  fullName: NetworkInterface.Id\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the identifier of the network adapter.\n  syntax:\n    content: public virtual string Id { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the identifier.\n  overload: System.Net.NetworkInformation.NetworkInterface.Id*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex\n  id: IPv6LoopbackInterfaceIndex\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: IPv6LoopbackInterfaceIndex\n  nameWithType: NetworkInterface.IPv6LoopbackInterfaceIndex\n  fullName: NetworkInterface.IPv6LoopbackInterfaceIndex\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the index of the IPv6 loopback interface.\n  remarks: A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.\n  syntax:\n    content: public static int IPv6LoopbackInterfaceIndex { get; }\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The index for the IPv6 loopback interface.\"\n  overload: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly\n  id: IsReceiveOnly\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: IsReceiveOnly\n  nameWithType: NetworkInterface.IsReceiveOnly\n  fullName: NetworkInterface.IsReceiveOnly\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the network interface is set to only receive data packets.\n  remarks: ''\n  example:\n  - \"The following code example displays a summary for all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]\\n [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]\\n [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]\"\n  syntax:\n    content: public virtual bool IsReceiveOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the interface only receives network traffic; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex\n  id: LoopbackInterfaceIndex\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: LoopbackInterfaceIndex\n  nameWithType: NetworkInterface.LoopbackInterfaceIndex\n  fullName: NetworkInterface.LoopbackInterfaceIndex\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the index of the IPv4 loopback interface.\n  remarks: \"The index of the loopback interface is usually 1, but you cannot rely on this. Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.  \\n  \\n A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.\"\n  syntax:\n    content: public static int LoopbackInterfaceIndex { get; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains the index for the IPv4 loopback interface.\n  overload: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: This property is not valid on computers running only Ipv6.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.Name\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.Name\n  id: Name\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: Name\n  nameWithType: NetworkInterface.Name\n  fullName: NetworkInterface.Name\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the name of the network adapter.\n  remarks: ''\n  example:\n  - \"The following code example displays a summary for all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]\\n [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]\"\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the adapter name.\n  overload: System.Net.NetworkInformation.NetworkInterface.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType\n  id: NetworkInterfaceType\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: NetworkInterfaceType\n  nameWithType: NetworkInterface.NetworkInterfaceType\n  fullName: NetworkInterface.NetworkInterfaceType\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the interface type.\n  remarks: \"The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration documentation.  \\n  \\n This property only returns a subset of the possible values defined in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration. The possible values include the following:  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet>  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Fddi>  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback>  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ppp>  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Slip>  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.TokenRing>  \\n  \\n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType.Unknown>\"\n  example:\n  - \"The following code example displays type information for all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]\\n [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]\\n [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]\"\n  syntax:\n    content: public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }\n    return:\n      type: System.Net.NetworkInformation.NetworkInterfaceType\n      description: An <xref href=\"System.Net.NetworkInformation.NetworkInterfaceType\"></xref> value that specifies the network interface type.\n  overload: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.OperationalStatus\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus\n  id: OperationalStatus\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: OperationalStatus\n  nameWithType: NetworkInterface.OperationalStatus\n  fullName: NetworkInterface.OperationalStatus\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the current operational state of the network connection.\n  remarks: The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.\n  example:\n  - \"The following code example displays a summary for all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]\\n [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]\"\n  syntax:\n    content: public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }\n    return:\n      type: System.Net.NetworkInformation.OperationalStatus\n      description: One of the <xref href=\"System.Net.NetworkInformation.OperationalStatus\"></xref> values.\n  overload: System.Net.NetworkInformation.NetworkInterface.OperationalStatus*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.Speed\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.Speed\n  id: Speed\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: Speed\n  nameWithType: NetworkInterface.Speed\n  fullName: NetworkInterface.Speed\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the speed of the network interface.\n  remarks: The value returned by this property is reported by the network interface. It is not computed dynamically.\n  example:\n  - \"The following code example demonstrates displaying the speed of interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]\\n [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]\\n [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]\"\n  syntax:\n    content: public virtual long Speed { get; }\n    return:\n      type: System.Int64\n      description: A <xref href=\"System.Int64\"></xref> value that specifies the speed in bits per second.\n  overload: System.Net.NetworkInformation.NetworkInterface.Speed*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)\n  commentId: M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)\n  id: Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: Supports(NetworkInterfaceComponent)\n  nameWithType: NetworkInterface.Supports(NetworkInterfaceComponent)\n  fullName: NetworkInterface.Supports(NetworkInterfaceComponent)\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the interface supports the specified protocol.\n  remarks: ''\n  example:\n  - \"The following code example displays statistics for IPV4 interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);\n    parameters:\n    - id: networkInterfaceComponent\n      type: System.Net.NetworkInformation.NetworkInterfaceComponent\n      description: A <xref href=\"System.Net.NetworkInformation.NetworkInterfaceComponent\"></xref> value.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified protocol is supported; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.NetworkInterface.Supports*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast\n  commentId: P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast\n  id: SupportsMulticast\n  parent: System.Net.NetworkInformation.NetworkInterface\n  langs:\n  - csharp\n  name: SupportsMulticast\n  nameWithType: NetworkInterface.SupportsMulticast\n  fullName: NetworkInterface.SupportsMulticast\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the network interface is enabled to receive multicast packets.\n  remarks: Multicasting is the act of sending a data packet to multiple destinations simultaneously.\n  example:\n  - \"The following code example displays a summary for all interfaces on the local computer.  \\n  \\n [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]\\n [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]\\n [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]\"\n  syntax:\n    content: public virtual bool SupportsMulticast { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the interface receives multicast packets; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.NetworkInformation.NetworkInformationException\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInformationException\n  nameWithType: NetworkInformationException\n  fullName: System.Net.NetworkInformation.NetworkInformationException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Net.NetworkInformation.NetworkInterface.#ctor\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: NetworkInterface()\n  nameWithType: NetworkInterface.NetworkInterface()\n  fullName: NetworkInterface.NetworkInterface()\n- uid: System.Net.NetworkInformation.NetworkInterface.Description\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Description\n  nameWithType: NetworkInterface.Description\n  fullName: NetworkInterface.Description\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetAllNetworkInterfaces()\n  nameWithType: NetworkInterface.GetAllNetworkInterfaces()\n  fullName: NetworkInterface.GetAllNetworkInterfaces()\n- uid: System.Net.NetworkInformation.NetworkInterface\n  name: NetworkInterface\n  nameWithType: NetworkInterface\n  fullName: System.Net.NetworkInformation.NetworkInterface\n- uid: System.Net.NetworkInformation.NetworkInterface[]\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInterface[]\n  nameWithType: NetworkInterface[]\n  fullName: System.Net.NetworkInformation.NetworkInterface[]\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.NetworkInterface\n    name: NetworkInterface\n    nameWithType: NetworkInterface\n    fullName: System.Net.NetworkInformation.NetworkInterface\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPProperties\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIPProperties()\n  nameWithType: NetworkInterface.GetIPProperties()\n  fullName: NetworkInterface.GetIPProperties()\n- uid: System.Net.NetworkInformation.IPInterfaceProperties\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPInterfaceProperties\n  nameWithType: IPInterfaceProperties\n  fullName: System.Net.NetworkInformation.IPInterfaceProperties\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIPStatistics()\n  nameWithType: NetworkInterface.GetIPStatistics()\n  fullName: NetworkInterface.GetIPStatistics()\n- uid: System.Net.NetworkInformation.IPInterfaceStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPInterfaceStatistics\n  nameWithType: IPInterfaceStatistics\n  fullName: System.Net.NetworkInformation.IPInterfaceStatistics\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIPv4Statistics()\n  nameWithType: NetworkInterface.GetIPv4Statistics()\n  fullName: NetworkInterface.GetIPv4Statistics()\n- uid: System.Net.NetworkInformation.IPv4InterfaceStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPv4InterfaceStatistics\n  nameWithType: IPv4InterfaceStatistics\n  fullName: System.Net.NetworkInformation.IPv4InterfaceStatistics\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIsNetworkAvailable()\n  nameWithType: NetworkInterface.GetIsNetworkAvailable()\n  fullName: NetworkInterface.GetIsNetworkAvailable()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetPhysicalAddress()\n  nameWithType: NetworkInterface.GetPhysicalAddress()\n  fullName: NetworkInterface.GetPhysicalAddress()\n- uid: System.Net.NetworkInformation.PhysicalAddress\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: PhysicalAddress\n  nameWithType: PhysicalAddress\n  fullName: System.Net.NetworkInformation.PhysicalAddress\n- uid: System.Net.NetworkInformation.NetworkInterface.Id\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Id\n  nameWithType: NetworkInterface.Id\n  fullName: NetworkInterface.Id\n- uid: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: IPv6LoopbackInterfaceIndex\n  nameWithType: NetworkInterface.IPv6LoopbackInterfaceIndex\n  fullName: NetworkInterface.IPv6LoopbackInterfaceIndex\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: IsReceiveOnly\n  nameWithType: NetworkInterface.IsReceiveOnly\n  fullName: NetworkInterface.IsReceiveOnly\n- uid: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: LoopbackInterfaceIndex\n  nameWithType: NetworkInterface.LoopbackInterfaceIndex\n  fullName: NetworkInterface.LoopbackInterfaceIndex\n- uid: System.Net.NetworkInformation.NetworkInterface.Name\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Name\n  nameWithType: NetworkInterface.Name\n  fullName: NetworkInterface.Name\n- uid: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: NetworkInterfaceType\n  nameWithType: NetworkInterface.NetworkInterfaceType\n  fullName: NetworkInterface.NetworkInterfaceType\n- uid: System.Net.NetworkInformation.NetworkInterfaceType\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInterfaceType\n  nameWithType: NetworkInterfaceType\n  fullName: System.Net.NetworkInformation.NetworkInterfaceType\n- uid: System.Net.NetworkInformation.NetworkInterface.OperationalStatus\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: OperationalStatus\n  nameWithType: NetworkInterface.OperationalStatus\n  fullName: NetworkInterface.OperationalStatus\n- uid: System.Net.NetworkInformation.OperationalStatus\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: OperationalStatus\n  nameWithType: OperationalStatus\n  fullName: System.Net.NetworkInformation.OperationalStatus\n- uid: System.Net.NetworkInformation.NetworkInterface.Speed\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Speed\n  nameWithType: NetworkInterface.Speed\n  fullName: NetworkInterface.Speed\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Supports(NetworkInterfaceComponent)\n  nameWithType: NetworkInterface.Supports(NetworkInterfaceComponent)\n  fullName: NetworkInterface.Supports(NetworkInterfaceComponent)\n- uid: System.Net.NetworkInformation.NetworkInterfaceComponent\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInterfaceComponent\n  nameWithType: NetworkInterfaceComponent\n  fullName: System.Net.NetworkInformation.NetworkInterfaceComponent\n- uid: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: SupportsMulticast\n  nameWithType: NetworkInterface.SupportsMulticast\n  fullName: NetworkInterface.SupportsMulticast\n- uid: System.Net.NetworkInformation.NetworkInterface.#ctor*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: NetworkInterface\n  nameWithType: NetworkInterface.NetworkInterface\n  fullName: NetworkInterface.NetworkInterface\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.Description*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Description\n  nameWithType: NetworkInterface.Description\n  fullName: NetworkInterface.Description\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetAllNetworkInterfaces\n  nameWithType: NetworkInterface.GetAllNetworkInterfaces\n  fullName: NetworkInterface.GetAllNetworkInterfaces\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPProperties*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIPProperties\n  nameWithType: NetworkInterface.GetIPProperties\n  fullName: NetworkInterface.GetIPProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIPStatistics\n  nameWithType: NetworkInterface.GetIPStatistics\n  fullName: NetworkInterface.GetIPStatistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIPv4Statistics\n  nameWithType: NetworkInterface.GetIPv4Statistics\n  fullName: NetworkInterface.GetIPv4Statistics\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetIsNetworkAvailable\n  nameWithType: NetworkInterface.GetIsNetworkAvailable\n  fullName: NetworkInterface.GetIsNetworkAvailable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: GetPhysicalAddress\n  nameWithType: NetworkInterface.GetPhysicalAddress\n  fullName: NetworkInterface.GetPhysicalAddress\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.Id*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Id\n  nameWithType: NetworkInterface.Id\n  fullName: NetworkInterface.Id\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: IPv6LoopbackInterfaceIndex\n  nameWithType: NetworkInterface.IPv6LoopbackInterfaceIndex\n  fullName: NetworkInterface.IPv6LoopbackInterfaceIndex\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: IsReceiveOnly\n  nameWithType: NetworkInterface.IsReceiveOnly\n  fullName: NetworkInterface.IsReceiveOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: LoopbackInterfaceIndex\n  nameWithType: NetworkInterface.LoopbackInterfaceIndex\n  fullName: NetworkInterface.LoopbackInterfaceIndex\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.Name*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Name\n  nameWithType: NetworkInterface.Name\n  fullName: NetworkInterface.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: NetworkInterfaceType\n  nameWithType: NetworkInterface.NetworkInterfaceType\n  fullName: NetworkInterface.NetworkInterfaceType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.OperationalStatus*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: OperationalStatus\n  nameWithType: NetworkInterface.OperationalStatus\n  fullName: NetworkInterface.OperationalStatus\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.Speed*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Speed\n  nameWithType: NetworkInterface.Speed\n  fullName: NetworkInterface.Speed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.Supports*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: Supports\n  nameWithType: NetworkInterface.Supports\n  fullName: NetworkInterface.Supports\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast*\n  parent: System.Net.NetworkInformation.NetworkInterface\n  isExternal: false\n  name: SupportsMulticast\n  nameWithType: NetworkInterface.SupportsMulticast\n  fullName: NetworkInterface.SupportsMulticast\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInterface.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}