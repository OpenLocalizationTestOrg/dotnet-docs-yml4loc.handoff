{"nodes":[{"content":"Represents a character as a UTF-16 code unit.","nodes":[{"pos":[0,45],"content":"Represents a character as a UTF-16 code unit.","nodes":[{"content":"Represents a character as a UTF-16 code unit.","pos":[0,45]}]}],"pos":[4112,4158],"yaml":true},{"content":"The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character. The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values. Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.  The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.  \n  \n The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.  \n  \n [Char objects, Unicode characters, and strings](#Relationship)   \n [Characters and character categories](#Categories)   \n [Characters and text elements](#Elements)   \n [Common operations](#Operations)   \n [Char values and interop](#Interop)  \n  \n<a name=\"Relationship\"></a>   \n## Char objects, Unicode characters, and strings  \n A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text. Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects. For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.  \n  \n Multiple 16-bit code units are used to represent single Unicode characters in the following cases:  \n  \n-   Glyphs, which may consist of a single character or of a base character followed by one or more combining characters. For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308. (The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.  \n  \n     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]\n     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  \n  \n-   Characters outside the Unicode Basic Multilingual Plane (BMP). Unicode supports sixteen planes in addition to the BMP, which represents plane 0. A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane. For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character. Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16. The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60. U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF. U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.  \n  \n     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]\n     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  \n  \n<a name=\"Categories\"></a>   \n## Characters and character categories  \n Each Unicode character or valid surrogate pair belongs to a Unicode category. In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, and <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, for example.  \n  \n To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method. For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.  \n  \n [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]\n [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  \n  \n Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class. Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).  \n  \n<a name=\"Elements\"></a>   \n## Characters and text elements  \n Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects. For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units. Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.  \n  \n [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]\n [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  \n  \n You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.  \n  \n-   You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.  \n  \n-   You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects. The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine. Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.  \n  \n     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]\n     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  \n  \n-   If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the substring to a single UTF-16 encoded code unit. The following example calls the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).  \n  \n     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]\n     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  \n  \n<a name=\"Operations\"></a>   \n## Common operations  \n The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:  \n  \n|To do this|Use these `System.Char` methods|  \n|----------------|-------------------------------------|  \n|Compare <xref:System.Char> objects|<xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A>|  \n|Convert a code point to a string|<xref:System.Char.ConvertFromUtf32%2A>|  \n|Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point|For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName><br /><br /> For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=fullName>|  \n|Get the Unicode category of a character|<xref:System.Char.GetUnicodeCategory%2A>|  \n|Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on|<xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A>|  \n|Convert a <xref:System.Char> object that represents a number to a numeric value type|<xref:System.Char.GetNumericValue%2A>|  \n|Convert a character in a string into a <xref:System.Char> object|<xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A>|  \n|Convert a <xref:System.Char> object to a <xref:System.String> object|<xref:System.Char.ToString%2A>|  \n|Change the case of a <xref:System.Char> object|<xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A>|  \n  \n<a name=\"Interop\"></a>   \n## Char values and interop  \nWhen a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default. You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.","nodes":[{"pos":[0,560],"content":"The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character. The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values. Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.  The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> uses the <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> structure to represent a Unicode character.","pos":[0,129],"source":"The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character."},{"content":"The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.","pos":[130,366]},{"content":"Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> structure.","pos":[367,479],"source":" Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure."},{"content":"The value of a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object is its 16-bit numeric (ordinal) value.","pos":[481,560],"source":"  The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value."}]},{"pos":[567,741],"content":"The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.","nodes":[{"content":"The following sections examine the relationship between a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object and a character and discuss some common tasks performed with <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> instances.","pos":[0,174],"source":"The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances."}]},{"pos":[748,988],"content":"[Char objects, Unicode characters, and strings](#Relationship)   \n [Characters and character categories](#Categories)   \n [Characters and text elements](#Elements)   \n [Common operations](#Operations)   \n [Char values and interop](#Interop)","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Char objects, Unicode characters, and strings<ept id=\"p1\">](#Relationship)</ept><ph id=\"ph1\"> </ph>","pos":[0,63],"source":"[Char objects, Unicode characters, and strings](#Relationship) "},{"content":"<bpt id=\"p1\"> [</bpt>Characters and character categories<ept id=\"p1\">](#Categories)</ept><ph id=\"ph1\"> </ph>","pos":[66,118],"source":" [Characters and character categories](#Categories) "},{"content":"<bpt id=\"p1\"> [</bpt>Characters and text elements<ept id=\"p1\">](#Elements)</ept><ph id=\"ph1\"> </ph>","pos":[121,164],"source":" [Characters and text elements](#Elements) "},{"content":"<bpt id=\"p1\"> [</bpt>Common operations<ept id=\"p1\">](#Operations)</ept><ph id=\"ph1\"> </ph>","pos":[167,201],"source":" [Common operations](#Operations) "},{"content":"<bpt id=\"p1\"> [</bpt>Char values and interop<ept id=\"p1\">](#Interop)</ept>","pos":[204,240],"source":" [Char values and interop](#Interop)"}]},{"pos":[1028,1073],"content":"Char objects, Unicode characters, and strings","linkify":"Char objects, Unicode characters, and strings","nodes":[{"content":"Char objects, Unicode characters, and strings","pos":[0,45]}]},{"pos":[1077,1584],"content":"A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text. Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects. For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.","nodes":[{"content":"A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text. Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects. For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.","pos":[0,507],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> object is a sequential collection of <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> structures that represents a string of text.","pos":[0,123],"source":"A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text."},{"content":"Most Unicode characters can be represented by a single <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects.","pos":[124,365],"source":" Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects."},{"content":"For this reason, a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> structure in a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> object is not necessarily equivalent to a single Unicode character.","pos":[366,507],"source":" For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character."}]}]},{"pos":[1591,1689],"content":"Multiple 16-bit code units are used to represent single Unicode characters in the following cases:","nodes":[{"content":"Multiple 16-bit code units are used to represent single Unicode characters in the following cases:","pos":[0,98]}]},{"pos":[1699,2190],"content":"Glyphs, which may consist of a single character or of a base character followed by one or more combining characters. For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308. (The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.","nodes":[{"content":"Glyphs, which may consist of a single character or of a base character followed by one or more combining characters. For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308. (The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.","pos":[0,491],"nodes":[{"content":"Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.","pos":[0,116]},{"content":"For example, the character ä is represented by a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object whose code unit is U+0061 followed by a <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> object whose code unit is U+0308.","pos":[117,284],"source":" For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308."},{"content":"(The character ä can also be defined by a single <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects.","pos":[285,491],"source":" (The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects."}]}]},{"pos":[2201,2450],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]\n [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]"},{"pos":[2460,3173],"content":"Characters outside the Unicode Basic Multilingual Plane (BMP). Unicode supports sixteen planes in addition to the BMP, which represents plane 0. A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane. For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character. Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16. The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60. U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF. U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.","nodes":[{"content":"Characters outside the Unicode Basic Multilingual Plane (BMP). Unicode supports sixteen planes in addition to the BMP, which represents plane 0. A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane. For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character. Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16. The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60. U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF. U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.","pos":[0,713],"nodes":[{"content":"Characters outside the Unicode Basic Multilingual Plane (BMP).","pos":[0,62]},{"content":"Unicode supports sixteen planes in addition to the BMP, which represents plane 0.","pos":[63,144]},{"content":"A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.","pos":[145,233]},{"content":"For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.","pos":[234,307]},{"content":"Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.","pos":[308,422]},{"content":"The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.","pos":[423,555]},{"content":"U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.","pos":[556,635]},{"content":"U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.","pos":[636,713]}]}]},{"pos":[3184,3435],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.Class#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.Class#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]\n [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]"},{"pos":[3473,3508],"content":"Characters and character categories","linkify":"Characters and character categories","nodes":[{"content":"Characters and character categories","pos":[0,35]}]},{"pos":[3512,3975],"content":"Each Unicode character or valid surrogate pair belongs to a Unicode category. In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, and <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, for example.","nodes":[{"content":"Each Unicode character or valid surrogate pair belongs to a Unicode category. In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, and <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, for example.","pos":[0,463],"nodes":[{"content":"Each Unicode character or valid surrogate pair belongs to a Unicode category.","pos":[0,77]},{"content":"In the .NET Framework, Unicode categories are represented by members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> enumeration and include values such as <ph id=\"ph2\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, for example.","pos":[78,463],"source":" In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, and <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, for example."}]}]},{"pos":[3982,4242],"content":"To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method. For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.","nodes":[{"content":"To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method. For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.","pos":[0,260],"nodes":[{"content":"To determine the Unicode category of a character, you call the <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> method.","pos":[0,111],"source":"To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method."},{"content":"For example, the following example calls the <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> to display the Unicode category of each character in a string.","pos":[112,260],"source":" For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string."}]}]},{"pos":[4249,4514],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.Class#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.Class#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]\n [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]"},{"pos":[4521,5206],"content":"Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class. Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).","nodes":[{"content":"Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> method depends on Unicode categories reported by the <ph id=\"ph2\">&lt;xref:System.Globalization.CharUnicodeInfo&gt;</ph> class.","pos":[0,224],"source":"Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class."},{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, Unicode characters are classified based on <bpt id=\"p1\">[</bpt>The Unix Standard, Version 8.0.0<ept id=\"p1\">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.","pos":[225,417],"source":" Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)."},{"content":"In versions of the .NET Framework from the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> to  the <ph id=\"ph2\">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, they are classified based on <bpt id=\"p1\">[</bpt>The Unix Standard, Version 6.3.0<ept id=\"p1\">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.","pos":[418,685],"source":" In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)."}]},{"pos":[5242,5270],"content":"Characters and text elements","linkify":"Characters and text elements","nodes":[{"content":"Characters and text elements","pos":[0,28]}]},{"pos":[5274,5731],"content":"Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects. For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units. Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.","nodes":[{"content":"Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects. For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units. Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.","pos":[0,457],"nodes":[{"content":"Because a single character can be represented by multiple <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> objects, it is not always meaningful to work with individual <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects.","pos":[0,165],"source":"Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects."},{"content":"For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.","pos":[166,313]},{"content":"Because it erroneously equates <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> objects with characters, it inaccurately reports that the resulting string has 20 characters.","pos":[314,457],"source":" Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters."}]}]},{"pos":[5738,5991],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.Class#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.Class#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]\n [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]"},{"pos":[5998,6110],"content":"You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.","nodes":[{"content":"You can do the following to avoid the assumption that a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object represents a single character.","pos":[0,112],"source":"You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character."}]},{"pos":[6120,6278],"content":"You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.","nodes":[{"content":"You can work with a <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.","pos":[0,158],"source":"You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content."}]},{"pos":[6288,6726],"content":"You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects. The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine. Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.","nodes":[{"content":"You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects. The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine. Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.","pos":[0,438],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> class to work with text elements instead of individual <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects.","pos":[0,137],"source":"You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.","pos":[138,318],"source":" The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine."},{"content":"Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.","pos":[319,438]}]}]},{"pos":[6737,6996],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.Class#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.Class#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]\n [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]"},{"pos":[7006,7492],"content":"If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the substring to a single UTF-16 encoded code unit. The following example calls the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).","nodes":[{"content":"If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the substring to a single UTF-16 encoded code unit. The following example calls the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).","pos":[0,486],"nodes":[{"content":"If a string contains a base character that has one or more combining characters, you can call the <ph id=\"ph1\">&lt;xref:System.String.Normalize%2A?displayProperty=fullName&gt;</ph> method to convert the substring to a single UTF-16 encoded code unit.","pos":[0,226],"source":"If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the substring to a single UTF-16 encoded code unit."},{"content":"The following example calls the <ph id=\"ph1\">&lt;xref:System.String.Normalize%2A?displayProperty=fullName&gt;</ph> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).","pos":[227,486],"source":" The following example calls the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS)."}]}]},{"pos":[7503,7754],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.Class#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.Class#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]\n [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]"},{"pos":[7792,7809],"content":"Common operations","linkify":"Common operations","nodes":[{"content":"Common operations","pos":[0,17]}]},{"pos":[7813,8057],"content":"The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> structure provides methods to compare <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects, convert the value of the current <ph id=\"ph3\">&lt;xref:System.Char&gt;</ph> object to an object of another type, and determine the Unicode category of a <ph id=\"ph4\">&lt;xref:System.Char&gt;</ph> object:","pos":[0,244],"source":"The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:"}]},{"pos":[8064,8074],"content":"To do this","nodes":[{"content":"To do this","pos":[0,10]}]},{"pos":[8075,8106],"content":"Use these <ph id=\"ph1\">`System.Char`</ph> methods","source":"Use these `System.Char` methods"},{"pos":[8170,8204],"content":"Compare <xref:System.Char> objects","nodes":[{"content":"Compare <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> objects","pos":[0,34],"source":"Compare <xref:System.Char> objects"}]},{"pos":[8205,8269],"content":"<xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Char.CompareTo%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Char.Equals%2A&gt;</ph>","pos":[0,64],"source":"<xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A>"}]},{"pos":[8274,8306],"content":"Convert a code point to a string","nodes":[{"content":"Convert a code point to a string","pos":[0,32]}]},{"pos":[8307,8345],"content":"<xref:System.Char.ConvertFromUtf32%2A>","nodes":[]},{"pos":[8350,8451],"content":"Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point","nodes":[{"content":"Convert a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object or a surrogate pair of <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects to a code point","pos":[0,101],"source":"Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point"}]},{"pos":[8452,8670],"content":"For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName><br /><br /> For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=fullName>","nodes":[{"content":"For a single character: <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName&gt;</ph>","pos":[0,95],"source":"For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName>"},{"content":"For a surrogate pair or a character in a string: <ph id=\"ph1\">&lt;xref:System.Char.ConvertToUtf32%2A?displayProperty=fullName&gt;</ph>","pos":[108,218],"source":"For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=fullName>"}]},{"pos":[8675,8714],"content":"Get the Unicode category of a character","nodes":[{"content":"Get the Unicode category of a character","pos":[0,39]}]},{"pos":[8715,8755],"content":"<xref:System.Char.GetUnicodeCategory%2A>","nodes":[]},{"pos":[8760,8890],"content":"Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on","nodes":[{"content":"Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on","pos":[0,130]}]},{"pos":[8891,9413],"content":"<xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Char.IsControl%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Char.IsDigit%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Char.IsLetter%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Char.IsLower%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Char.IsSeparator%2A&gt;</ph>, <ph id=\"ph11\">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph>, <ph id=\"ph12\">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>, <ph id=\"ph13\">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>, <ph id=\"ph14\">&lt;xref:System.Char.IsUpper%2A&gt;</ph>, and <ph id=\"ph15\">&lt;xref:System.Char.IsWhiteSpace%2A&gt;</ph>","pos":[0,522],"source":"<xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A>"}]},{"pos":[9418,9502],"content":"Convert a <xref:System.Char> object that represents a number to a numeric value type","nodes":[{"content":"Convert a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object that represents a number to a numeric value type","pos":[0,84],"source":"Convert a <xref:System.Char> object that represents a number to a numeric value type"}]},{"pos":[9503,9540],"content":"<xref:System.Char.GetNumericValue%2A>","nodes":[]},{"pos":[9545,9609],"content":"Convert a character in a string into a <xref:System.Char> object","nodes":[{"content":"Convert a character in a string into a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object","pos":[0,64],"source":"Convert a character in a string into a <xref:System.Char> object"}]},{"pos":[9610,9672],"content":"<xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Char.Parse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Char.TryParse%2A&gt;</ph>","pos":[0,62],"source":"<xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A>"}]},{"pos":[9677,9745],"content":"Convert a <xref:System.Char> object to a <xref:System.String> object","nodes":[{"content":"Convert a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object to a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> object","pos":[0,68],"source":"Convert a <xref:System.Char> object to a <xref:System.String> object"}]},{"pos":[9746,9776],"content":"<xref:System.Char.ToString%2A>","nodes":[]},{"pos":[9781,9827],"content":"Change the case of a <xref:System.Char> object","nodes":[{"content":"Change the case of a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object","pos":[0,46],"source":"Change the case of a <xref:System.Char> object"}]},{"pos":[9828,9972],"content":"<xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Char.ToLower%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Char.ToUpper%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph>","pos":[0,144],"source":"<xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A>"}]},{"pos":[10008,10031],"content":"Char values and interop","linkify":"Char values and interop","nodes":[{"content":"Char values and interop","pos":[0,23]}]},{"pos":[10034,10528],"content":"When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default. You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.","nodes":[{"content":"When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default. You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.","pos":[0,494],"nodes":[{"content":"When a managed <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.","pos":[0,197],"source":"When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default."},{"content":"You can apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute to platform invoke declarations and the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> attribute to a COM interop declaration to control which character set a marshaled <ph id=\"ph3\">&lt;xref:System.Char&gt;</ph> type uses.","pos":[198,494],"source":" You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses."}]}]}],"pos":[4169,14786],"yaml":true,"extradata":"MT"},{"content":"Compares this instance to a specified <xref href=\"System.Char\"></xref> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,240],"content":"Compares this instance to a specified <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <ph id=\"ph2\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares this instance to a specified <xref href=\"System.Char\"></xref> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Char\"></xref> object."}],"pos":[17196,17437],"yaml":true},{"content":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \n  \n The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.  \n  \n If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.  \n  \n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.  \n  \n Typically, implicit widening conversions are performed on numeric types. Consult your programming language's documentation to determine if its compiler performs widening conversions. If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.","nodes":[{"pos":[0,265],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.Char.CompareTo%2A?displayProperty=fullName&gt;</ph> method because it does not have to convert the <ph id=\"ph3\">`value`</ph> parameter to an object.","source":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object."},{"pos":[272,415],"content":"The comparison performed by this method is based on the encoded values of this instance and <ph id=\"ph1\">`value`</ph>, not their lexicographical characteristics.","source":"The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics."},{"pos":[422,674],"content":"If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Char.CompareTo%2A&gt;</ph> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.","pos":[0,252],"source":"If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits."}]},{"pos":[681,1108],"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.","nodes":[{"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.","pos":[0,427],"nodes":[{"content":"For example, suppose the instance type is <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph>.","pos":[0,107],"source":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>."},{"content":"The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A?displayProperty=fullName&gt;</ph> method that compares the values of the <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> instance and the <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph> parameter representation.","pos":[108,427],"source":" The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation."}]}]},{"pos":[1115,1545],"content":"Typically, implicit widening conversions are performed on numeric types. Consult your programming language's documentation to determine if its compiler performs widening conversions. If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.","nodes":[{"content":"Typically, implicit widening conversions are performed on numeric types. Consult your programming language's documentation to determine if its compiler performs widening conversions. If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.","pos":[0,430],"nodes":[{"content":"Typically, implicit widening conversions are performed on numeric types.","pos":[0,72]},{"content":"Consult your programming language's documentation to determine if its compiler performs widening conversions.","pos":[73,182]},{"content":"If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <ph id=\"ph1\">&lt;xref:System.Char.CompareTo%2A&gt;</ph> overload that takes an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> parameter.","pos":[183,430],"source":" If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter."}]}]}],"pos":[17448,19004],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Char\"></xref> object to compare.","nodes":[{"pos":[0,53],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object to compare.","source":"A <xref href=\"System.Char\"></xref> object to compare."}],"pos":[19592,19646],"yaml":true},{"content":"A signed number indicating the position of this instance in the sort order in relation to the <code>value</code> parameter.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance precedes <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance has the same position in the sort order as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance follows <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,123],"content":"A signed number indicating the position of this instance in the sort order in relation to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A signed number indicating the position of this instance in the sort order in relation to the <code>value</code> parameter."},{"pos":[130,565],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance precedes <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance has the same position in the sort order as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance follows <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":" This instance precedes <code>value</code>.  \n  \n ","pos":[134,184],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>value</code>."}]},{"content":"Zero","pos":[203,212],"source":" Zero  \n  \n "},{"content":" This instance has the same position in the sort order as <code>value</code>.  \n  \n ","pos":[223,307],"nodes":[{"content":"This instance has the same position in the sort order as <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,77],"source":" This instance has the same position in the sort order as <code>value</code>."}]},{"content":"Greater than zero","pos":[326,348],"source":" Greater than zero  \n  \n "},{"content":" This instance follows <code>value</code>.  \n  \n ","pos":[359,408],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>value</code>."}]}]}],"pos":[19702,20287],"yaml":true},{"content":"Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,202],"content":"Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Object\"></xref>."}],"pos":[21768,21971],"yaml":true},{"content":"The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.  \n  \n The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.  \n  \n The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics. Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.","nodes":[{"pos":[0,94],"content":"The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.CompareTo%2A&gt;</ph> method implements the <ph id=\"ph2\">&lt;xref:System.IComparable&gt;</ph> interface.","pos":[0,94],"source":"The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface."}]},{"pos":[101,210],"content":"The <ph id=\"ph1\">`value`</ph> parameter must be <ph id=\"ph2\">`null`</ph> or an instance of <ph id=\"ph3\">&lt;xref:System.Char&gt;</ph>; otherwise, an exception is thrown.","source":"The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown."},{"pos":[217,468],"content":"The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics. Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.","nodes":[{"content":"The comparison performed by this method is based on the encoded values of this instance and <ph id=\"ph1\">`value`</ph>, not necessarily their lexicographical characteristics.","pos":[0,155],"source":"The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics."},{"content":"Any instance of <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph>, regardless of its value, is considered greater than <ph id=\"ph2\">`null`</ph>.","pos":[156,251],"source":" Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`."}]}],"pos":[21982,22457],"yaml":true,"extradata":"MT"},{"content":"An object to compare this instance to, or `null`.","nodes":[{"pos":[0,49],"content":"An object to compare this instance to, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare this instance to, or `null`."}],"pos":[23089,23139],"yaml":true},{"content":"A signed number indicating the position of this instance in the sort order in relation to the <code>value</code> parameter.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance precedes <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance has the same position in the sort order as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance follows <code>value</code>.  \n  \n -or-  \n  \n <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,123],"content":"A signed number indicating the position of this instance in the sort order in relation to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A signed number indicating the position of this instance in the sort order in relation to the <code>value</code> parameter."},{"pos":[130,531],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance precedes <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance has the same position in the sort order as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance follows <code>value</code>.","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":" This instance precedes <code>value</code>.  \n  \n ","pos":[134,184],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>value</code>."}]},{"content":"Zero","pos":[203,212],"source":" Zero  \n  \n "},{"content":" This instance has the same position in the sort order as <code>value</code>.  \n  \n ","pos":[223,307],"nodes":[{"content":"This instance has the same position in the sort order as <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,77],"source":" This instance has the same position in the sort order as <code>value</code>."}]},{"content":"Greater than zero","pos":[326,348],"source":" Greater than zero  \n  \n "},{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[360,401],"source":" This instance follows <code>value</code>."}]},{"pos":[538,542],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[549,612],"content":"<code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>value</code> is `null`.  \n  \n ","pos":[0,36],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,29],"source":"<code>value</code> is `null`."}]}]}],"pos":[23195,23831],"yaml":true},{"content":"<code>value</code> is not a <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>value</code> is not a <xref href=\"System.Char\"></xref> object."}],"pos":[23974,24043],"yaml":true},{"content":"Converts the specified Unicode code point into a UTF-16 encoded string.","nodes":[{"pos":[0,71],"content":"Converts the specified Unicode code point into a UTF-16 encoded string.","nodes":[{"content":"Converts the specified Unicode code point into a UTF-16 encoded string.","pos":[0,71]}]}],"pos":[25164,25236],"yaml":true},{"content":"Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.  \n  \n A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair. However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion. For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class to convert bulk UTF-32 data into bulk UTF-16 data.","nodes":[{"pos":[0,236],"content":"Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.","nodes":[{"content":"Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <ph id=\"ph1\">&lt;xref:System.Char.IsLowSurrogate%28System.Char%29&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Char.IsHighSurrogate%28System.Char%29&gt;</ph>.","pos":[0,236],"source":"Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>."}]},{"pos":[243,650],"content":"A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair. However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion. For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class to convert bulk UTF-32 data into bulk UTF-16 data.","nodes":[{"content":"A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair. However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion. For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class to convert bulk UTF-32 data into bulk UTF-16 data.","pos":[0,407],"nodes":[{"content":"A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.","pos":[0,99]},{"content":"However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.","pos":[100,267]},{"content":"For that reason, use the <ph id=\"ph1\">&lt;xref:System.Text.UTF32Encoding?displayProperty=fullName&gt;</ph> class to convert bulk UTF-32 data into bulk UTF-16 data.","pos":[268,407],"source":" For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class to convert bulk UTF-32 data into bulk UTF-16 data."}]}]}],"pos":[25247,25902],"yaml":true,"extradata":"MT"},{"content":"A 21-bit Unicode code point.","nodes":[{"pos":[0,28],"content":"A 21-bit Unicode code point.","nodes":[{"content":"A 21-bit Unicode code point.","pos":[0,28]}]}],"pos":[26514,26543],"yaml":true},{"content":"A string consisting of one <xref href=\"System.Char\"></xref> object or a surrogate pair of <xref href=\"System.Char\"></xref> objects equivalent to the code point specified by the <code>utf32</code> parameter.","nodes":[{"pos":[0,206],"content":"A string consisting of one <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object or a surrogate pair of <ph id=\"ph2\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> objects equivalent to the code point specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">utf32</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A string consisting of one <xref href=\"System.Char\"></xref> object or a surrogate pair of <xref href=\"System.Char\"></xref> objects equivalent to the code point specified by the <code>utf32</code> parameter."}],"pos":[26600,26807],"yaml":true},{"content":"<code>utf32</code> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.","nodes":[{"pos":[0,157],"content":"<ph id=\"ph1\">&lt;code&gt;utf32&lt;/code&gt;</ph> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.","source":"<code>utf32</code> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF."}],"pos":[26977,27135],"yaml":true},{"content":"Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.","nodes":[{"pos":[0,80],"content":"Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.","nodes":[{"content":"Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.","pos":[0,80]}]}],"pos":[28636,28717],"yaml":true},{"content":"Use this method to convert a surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.  \n  \n Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit. However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units. These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate. Surrogate pairs are supported only by UTF-16 encoding. This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.","nodes":[{"pos":[0,191],"content":"Use this method to convert a surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.","nodes":[{"content":"Use this method to convert a surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.","pos":[0,191],"nodes":[{"content":"Use this method to convert a surrogate pair into a 21-bit Unicode code point.","pos":[0,77]},{"content":"To convert UTF-16 data into UTF-32 data, use the <ph id=\"ph1\">&lt;xref:System.Text.UTF32Encoding?displayProperty=fullName&gt;</ph> class.","pos":[78,191],"source":" To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class."}]}]},{"pos":[198,772],"content":"Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit. However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units. These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate. Surrogate pairs are supported only by UTF-16 encoding. This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.","nodes":[{"content":"Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit. However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units. These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate. Surrogate pairs are supported only by UTF-16 encoding. This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.","pos":[0,574],"nodes":[{"content":"Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.","pos":[0,88]},{"content":"However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.","pos":[89,215]},{"content":"These two <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.","pos":[216,395],"source":" These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate."},{"content":"Surrogate pairs are supported only by UTF-16 encoding.","pos":[396,450]},{"content":"This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.","pos":[451,574]}]}]}],"pos":[28728,29505],"yaml":true,"extradata":"MT"},{"content":"A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).","nodes":[{"pos":[0,85],"content":"A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).","nodes":[{"content":"A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).","pos":[0,85]}]}],"pos":[30147,30233],"yaml":true},{"content":"A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).","nodes":[{"pos":[0,84],"content":"A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).","nodes":[{"content":"A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).","pos":[0,84]}]}],"pos":[30299,30384],"yaml":true},{"content":"The 21-bit Unicode code point represented by the <code>highSurrogate</code> and <code>lowSurrogate</code> parameters.","nodes":[{"pos":[0,117],"content":"The 21-bit Unicode code point represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">highSurrogate</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">lowSurrogate</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","source":"The 21-bit Unicode code point represented by the <code>highSurrogate</code> and <code>lowSurrogate</code> parameters."}],"pos":[30440,30558],"yaml":true},{"content":"<code>highSurrogate</code> is not in the range U+D800 through U+DBFF, or <code>lowSurrogate</code> is not in the range U+DC00 through U+DFFF.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">&lt;code&gt;highSurrogate&lt;/code&gt;</ph> is not in the range U+D800 through U+DBFF, or <ph id=\"ph2\">&lt;code&gt;lowSurrogate&lt;/code&gt;</ph> is not in the range U+DC00 through U+DFFF.","source":"<code>highSurrogate</code> is not in the range U+D800 through U+DBFF, or <code>lowSurrogate</code> is not in the range U+DC00 through U+DFFF."}],"pos":[30726,30868],"yaml":true},{"content":"Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.","nodes":[{"pos":[0,129],"content":"Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.","nodes":[{"content":"Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.","pos":[0,129]}]}],"pos":[32387,32517],"yaml":true},{"content":"Use this method to convert a character or surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.","nodes":[{"pos":[0,204],"content":"Use this method to convert a character or surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.","nodes":[{"content":"Use this method to convert a character or surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.","pos":[0,204],"nodes":[{"content":"Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.","pos":[0,90]},{"content":"To convert UTF-16 data into UTF-32 data, use the <ph id=\"ph1\">&lt;xref:System.Text.UTF32Encoding?displayProperty=fullName&gt;</ph> class.","pos":[91,204],"source":" To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class."}]}]}],"pos":[32528,32733],"yaml":true,"extradata":"MT"},{"content":"A string that contains a character or surrogate pair.","nodes":[{"pos":[0,53],"content":"A string that contains a character or surrogate pair.","nodes":[{"content":"A string that contains a character or surrogate pair.","pos":[0,53]}]}],"pos":[33347,33401],"yaml":true},{"content":"The index position of the character or surrogate pair in <code>s</code>.","nodes":[{"pos":[0,72],"content":"The index position of the character or surrogate pair in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The index position of the character or surrogate pair in <code>s</code>."}],"pos":[33461,33534],"yaml":true},{"content":"The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <code>s</code> parameter specified by the <code>index</code> parameter.","nodes":[{"pos":[0,171],"content":"The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <code>s</code> parameter specified by the <code>index</code> parameter."}],"pos":[33590,33762],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[33918,33944],"yaml":true},{"content":"<code>index</code> is not a position within <code>s</code>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a position within <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is not a position within <code>s</code>."}],"pos":[34058,34118],"yaml":true},{"content":"The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.","nodes":[{"pos":[0,194],"content":"The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.","nodes":[{"content":"The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.","pos":[0,194]}]}],"pos":[34212,34407],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to the specified <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,119],"content":"Returns a value that indicates whether this instance is equal to the specified <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a value that indicates whether this instance is equal to the specified <xref href=\"System.Char\"></xref> object."}],"pos":[35806,35926],"yaml":true},{"content":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=fullName> because it does not need to unbox the `obj` parameter.","nodes":[{"pos":[0,250],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than <ph id=\"ph2\">&lt;xref:System.Char.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> because it does not need to unbox the <ph id=\"ph3\">`obj`</ph> parameter.","source":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=fullName> because it does not need to unbox the `obj` parameter."}],"pos":[35937,36188],"yaml":true,"extradata":"MT"},{"content":"An object to compare to this instance.","nodes":[{"pos":[0,38],"content":"An object to compare to this instance.","nodes":[{"content":"An object to compare to this instance.","pos":[0,38]}]}],"pos":[36315,36354],"yaml":true},{"content":"`true` if the <code>obj</code> parameter equals the value of this instance; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter equals the value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>obj</code> parameter equals the value of this instance; otherwise, `false`."}],"pos":[36412,36510],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"pos":[0,84],"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]}],"pos":[37970,38055],"yaml":true},{"content":"The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.","nodes":[{"pos":[0,153],"content":"The comparison performed by this method is based on the encoded values of this instance and <ph id=\"ph1\">`obj`</ph>, not necessarily their lexicographical characteristics.","source":"The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics."}],"pos":[38066,38220],"yaml":true,"extradata":"MT"},{"content":"An object to compare with this instance or `null`.","nodes":[{"pos":[0,50],"content":"An object to compare with this instance or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance or `null`."}],"pos":[38825,38876],"yaml":true},{"content":"`true` if <code>obj</code> is an instance of <xref href=\"System.Char\"></xref> and equals the value of this instance; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <ph id=\"ph3\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> and equals the value of this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is an instance of <xref href=\"System.Char\"></xref> and equals the value of this instance; otherwise, `false`."}],"pos":[38934,39073],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[40500,40541],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[40675,40710],"yaml":true},{"content":"Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.","nodes":[{"pos":[0,131],"content":"Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.","nodes":[{"content":"Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.","pos":[0,131]}]}],"pos":[42289,42421],"yaml":true},{"content":"The `s` parameter must be the string representation of a numeric value. For example, if the character at position `index` in `s` is \"5\", the return value is 5. However, if the character at position `index` in `s` is \"z\", the return value is -1.  \n  \n Character positions in a string are indexed starting from zero.  \n  \n A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.  \n  \n If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number. As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.  \n  \n [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]\n [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]","nodes":[{"pos":[0,244],"content":"The `s` parameter must be the string representation of a numeric value. For example, if the character at position `index` in `s` is \"5\", the return value is 5. However, if the character at position `index` in `s` is \"z\", the return value is -1.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter must be the string representation of a numeric value.","pos":[0,71],"source":"The `s` parameter must be the string representation of a numeric value."},{"content":"For example, if the character at position <ph id=\"ph1\">`index`</ph> in <ph id=\"ph2\">`s`</ph> is \"5\", the return value is 5.","pos":[72,159],"source":" For example, if the character at position `index` in `s` is \"5\", the return value is 5."},{"content":"However, if the character at position <ph id=\"ph1\">`index`</ph> in <ph id=\"ph2\">`s`</ph> is \"z\", the return value is -1.","pos":[160,244],"source":" However, if the character at position `index` in `s` is \"z\", the return value is -1."}]},{"pos":[251,314],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[321,530],"content":"A character has an associated numeric value if and only if it is a member of one of the following <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> categories: <ph id=\"ph2\">`DecimalDigitNumber`</ph>, <ph id=\"ph3\">`LetterNumber`</ph>, or <ph id=\"ph4\">`OtherNumber`</ph>.","source":"A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`."},{"pos":[537,1324],"content":"If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number. As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object at position <ph id=\"ph2\">`index`</ph> is the first character of a valid surrogate pair, the <ph id=\"ph3\">&lt;xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29&gt;</ph> method determines whether the surrogate pair forms a numeric digit.","pos":[0,243],"source":"If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit."},{"content":"For example, the Aegean numbering system consists of code points U+10107 through U+10133.","pos":[244,333]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents each Aegean number.","pos":[334,470],"source":" The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number."},{"content":"As the output from the example shows, the <ph id=\"ph1\">&lt;xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29&gt;</ph> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.","pos":[471,678],"source":" As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number."},{"content":"However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.","pos":[679,787]}]},{"pos":[1331,1630],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.GetNumericValue#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.GetNumericValue#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]\n [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]"}],"pos":[42432,44078],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,37],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref>."}],"pos":[44783,44821],"yaml":true},{"content":"The character position in <code>s</code>.","nodes":[{"pos":[0,41],"content":"The character position in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The character position in <code>s</code>."}],"pos":[44881,44923],"yaml":true},{"content":"The numeric value of the character at position <code>index</code> in <code>s</code> if that character represents a number; otherwise, -1.","nodes":[{"pos":[0,137],"content":"The numeric value of the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> if that character represents a number; otherwise, -1.","source":"The numeric value of the character at position <code>index</code> in <code>s</code> if that character represents a number; otherwise, -1."}],"pos":[44980,45118],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[45275,45301],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[45415,45505],"yaml":true},{"content":"Converts the specified numeric Unicode character to a double-precision floating point number.","nodes":[{"pos":[0,93],"content":"Converts the specified numeric Unicode character to a double-precision floating point number.","nodes":[{"content":"Converts the specified numeric Unicode character to a double-precision floating point number.","pos":[0,93]}]}],"pos":[46958,47052],"yaml":true},{"content":"The `c` parameter must be the <xref:System.Char> representation of a numeric value. For example, if `c` is \"5\", the return value is 5. However, if `c` is \"z\", the return value is -1.0.  \n  \n A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.  \n  \n The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit. However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.  \n  \n [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]\n [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]","nodes":[{"pos":[0,184],"content":"The `c` parameter must be the <xref:System.Char> representation of a numeric value. For example, if `c` is \"5\", the return value is 5. However, if `c` is \"z\", the return value is -1.0.","nodes":[{"content":"The <ph id=\"ph1\">`c`</ph> parameter must be the <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> representation of a numeric value.","pos":[0,83],"source":"The `c` parameter must be the <xref:System.Char> representation of a numeric value."},{"content":"For example, if <ph id=\"ph1\">`c`</ph> is \"5\", the return value is 5.","pos":[84,134],"source":" For example, if `c` is \"5\", the return value is 5."},{"content":"However, if <ph id=\"ph1\">`c`</ph> is \"z\", the return value is -1.0.","pos":[135,184],"source":" However, if `c` is \"z\", the return value is -1.0."}]},{"pos":[191,400],"content":"A character has an associated numeric value if and only if it is a member of one of the following <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> categories: <ph id=\"ph2\">`DecimalDigitNumber`</ph>, <ph id=\"ph3\">`LetterNumber`</ph>, or <ph id=\"ph4\">`OtherNumber`</ph>.","source":"A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`."},{"pos":[407,1128],"content":"The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit. However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph> method assumes that <ph id=\"ph2\">`c`</ph> corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.","pos":[0,181],"source":"The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit."},{"content":"However, some numbers in the Unicode standard are represented by two <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> objects that form a surrogate pair.","pos":[182,305],"source":" However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair."},{"content":"For example, the Aegean numbering system consists of code points U+10107 through U+10133.","pos":[306,395]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents AEGEAN NUMBER ONE.","pos":[396,531],"source":" The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE."},{"content":"As the output from the example shows, the <ph id=\"ph1\">&lt;xref:System.Char.GetNumericValue%28System.Char%29&gt;</ph> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.","pos":[532,721],"source":" As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character."}]},{"pos":[1135,1434],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.GetNumericValue#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.GetNumericValue#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]\n [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]"}],"pos":[47063,48511],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[49196,49230],"yaml":true},{"content":"The numeric value of <code>c</code> if that character represents a number; otherwise, -1.0.","nodes":[{"pos":[0,91],"content":"The numeric value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> if that character represents a number; otherwise, -1.0.","source":"The numeric value of <code>c</code> if that character represents a number; otherwise, -1.0."}],"pos":[49287,49379],"yaml":true},{"content":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Char\"></xref>.","nodes":[{"pos":[0,97],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.TypeCode\"&gt;&lt;/xref&gt;</ph> for value type <ph id=\"ph2\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Char\"></xref>."}],"pos":[50815,50913],"yaml":true},{"content":"The enumerated constant, <xref href=\"System.TypeCode.Char\"></xref>.","nodes":[{"pos":[0,67],"content":"The enumerated constant, <ph id=\"ph1\">&lt;xref href=\"System.TypeCode.Char\"&gt;&lt;/xref&gt;</ph>.","source":"The enumerated constant, <xref href=\"System.TypeCode.Char\"></xref>."}],"pos":[51046,51114],"yaml":true},{"content":"Categorizes a specified Unicode character into a group identified by one of the <xref href=\"System.Globalization.UnicodeCategory\"></xref> values.","nodes":[{"pos":[0,145],"content":"Categorizes a specified Unicode character into a group identified by one of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.UnicodeCategory\"&gt;&lt;/xref&gt;</ph> values.","source":"Categorizes a specified Unicode character into a group identified by one of the <xref href=\"System.Globalization.UnicodeCategory\"></xref> values."}],"pos":[52295,52441],"yaml":true},{"content":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=fullName>.  \n  \n Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).","nodes":[{"pos":[0,1118],"content":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=fullName>.","pos":[0,1118],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName&gt;</ph>method does not always return the same <ph id=\"ph2\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> value as the <ph id=\"ph3\">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName&gt;</ph> method when it is passed a particular character as a parameter.","pos":[0,333],"source":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method when it is passed a particular character as a parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName&gt;</ph> method is designed to reflect the current version of the Unicode standard.","pos":[334,517],"source":" The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard."},{"content":"In contrast, although the <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName&gt;</ph> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.","pos":[518,871],"source":" In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility."},{"content":"As a result, we recommend that you use the <ph id=\"ph1\">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName&gt;</ph> method instead of <ph id=\"ph2\">&lt;xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=fullName&gt;</ph>.","pos":[872,1118],"source":" As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=fullName>."}]}]},{"pos":[1125,1585],"content":"Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, Unicode characters are classified based on <bpt id=\"p1\">[</bpt>The Unix Standard, Version 8.0.0<ept id=\"p1\">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.","pos":[0,192],"source":"Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)."},{"content":"In versions of the .NET Framework from the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> to  the <ph id=\"ph2\">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, they are classified based on <bpt id=\"p1\">[</bpt>The Unix Standard, Version 6.3.0<ept id=\"p1\">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.","pos":[193,460],"source":" In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)."}]}],"pos":[52452,54042],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to categorize.","nodes":[{"pos":[0,36],"content":"The Unicode character to categorize.","nodes":[{"content":"The Unicode character to categorize.","pos":[0,36]}]}],"pos":[54795,54832],"yaml":true},{"content":"A <xref href=\"System.Globalization.UnicodeCategory\"></xref> value that identifies the group that contains <code>c</code>.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.UnicodeCategory\"&gt;&lt;/xref&gt;</ph> value that identifies the group that contains <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Globalization.UnicodeCategory\"></xref> value that identifies the group that contains <code>c</code>."}],"pos":[54912,55034],"yaml":true},{"content":"Categorizes the character at the specified position in a specified string into a group identified by one of the <xref href=\"System.Globalization.UnicodeCategory\"></xref> values.","nodes":[{"pos":[0,177],"content":"Categorizes the character at the specified position in a specified string into a group identified by one of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.UnicodeCategory\"&gt;&lt;/xref&gt;</ph> values.","source":"Categorizes the character at the specified position in a specified string into a group identified by one of the <xref href=\"System.Globalization.UnicodeCategory\"></xref> values."}],"pos":[56294,56472],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName>.  \n  \n Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,1239],"content":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName>.","pos":[0,1169],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName&gt;</ph>method does not always return the same <ph id=\"ph2\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> value as the <ph id=\"ph3\">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName&gt;</ph> method when it is passed a particular character as a parameter.","pos":[0,350],"source":"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method when it is passed a particular character as a parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName&gt;</ph> method is designed to reflect the current version of the Unicode standard.","pos":[351,551],"source":" The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard."},{"content":"In contrast, although the <ph id=\"ph1\">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName&gt;</ph> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.","pos":[552,905],"source":" In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility."},{"content":"As a result, we recommend that you use the <ph id=\"ph1\">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName&gt;</ph> method instead of <ph id=\"ph2\">&lt;xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName&gt;</ph>.","pos":[906,1169],"source":" As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName>."}]}]},{"pos":[1246,1706],"content":"Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, Unicode characters are classified based on <bpt id=\"p1\">[</bpt>The Unix Standard, Version 8.0.0<ept id=\"p1\">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.","pos":[0,192],"source":"Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)."},{"content":"In versions of the .NET Framework from the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> to  the <ph id=\"ph2\">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, they are classified based on <bpt id=\"p1\">[</bpt>The Unix Standard, Version 6.3.0<ept id=\"p1\">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.","pos":[193,460],"source":" In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)."}]}],"pos":[56483,58196],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,37],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref>."}],"pos":[58959,58997],"yaml":true},{"content":"The character position in <code>s</code>.","nodes":[{"pos":[0,41],"content":"The character position in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The character position in <code>s</code>."}],"pos":[59057,59099],"yaml":true},{"content":"A <xref href=\"System.Globalization.UnicodeCategory\"></xref> enumerated constant that identifies the group that contains the character at position <code>index</code> in <code>s</code>.","nodes":[{"pos":[0,183],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.UnicodeCategory\"&gt;&lt;/xref&gt;</ph> enumerated constant that identifies the group that contains the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Globalization.UnicodeCategory\"></xref> enumerated constant that identifies the group that contains the character at position <code>index</code> in <code>s</code>."}],"pos":[59179,59363],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[59523,59549],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[59663,59753],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a control character.","nodes":[{"pos":[0,88],"content":"Indicates whether the specified Unicode character is categorized as a control character.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a control character.","pos":[0,88]}]}],"pos":[60826,60915],"yaml":true},{"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. T The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"pos":[0,501],"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. T The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. T The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,501],"nodes":[{"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.","pos":[0,106]},{"content":"T The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters.","pos":[107,229]},{"content":"According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.","pos":[230,378]},{"content":"Valid control characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[379,501],"source":" Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]}],"pos":[60926,61428],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[62066,62101],"yaml":true},{"content":"`true` if <code>c</code> is a control character; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a control character; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a control character; otherwise, `false`."}],"pos":[62159,62230],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a control character.","nodes":[{"pos":[0,118],"content":"Indicates whether the character at the specified position in a specified string is categorized as a control character.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a control character.","pos":[0,118]}]}],"pos":[63771,63890],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,569],"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,499],"nodes":[{"content":"Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.","pos":[0,106]},{"content":"The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters.","pos":[107,227]},{"content":"According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.","pos":[228,376]},{"content":"Valid control characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[377,499],"source":" Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]}],"pos":[63901,64480],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[65158,65168],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[65228,65289],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a control character; otherwise, `false`.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a control character; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a control character; otherwise, `false`."}],"pos":[65347,65466],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[65617,65643],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[65757,65847],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a decimal digit.","nodes":[{"pos":[0,84],"content":"Indicates whether the specified Unicode character is categorized as a decimal digit.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a decimal digit.","pos":[0,84]}]}],"pos":[67252,67337],"yaml":true},{"content":"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.  \n  \n Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"pos":[0,350],"content":"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.","nodes":[{"content":"This method determines whether a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.","pos":[0,72],"source":"This method determines whether a <xref:System.Char> is a radix-10 digit."},{"content":"This contrasts with <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, which determines whether a <ph id=\"ph2\">`Char`</ph> is of any numeric Unicode category.","pos":[73,194],"source":" This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category."},{"content":"Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.","pos":[195,350]}]},{"pos":[357,467],"content":"Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Valid digits are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[0,110],"source":"Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}],"pos":[67348,67820],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[68420,68455],"yaml":true},{"content":"`true` if <code>c</code> is a decimal digit; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a decimal digit; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a decimal digit; otherwise, `false`."}],"pos":[68513,68580],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.","nodes":[{"pos":[0,114],"content":"Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.","pos":[0,114]}]}],"pos":[70107,70222],"yaml":true},{"content":"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.  \n  \n Character positions in a string are indexed starting from zero.  \n  \n Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"pos":[0,362],"content":"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.","nodes":[{"content":"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.","pos":[0,362],"nodes":[{"content":"This method determines whether a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.","pos":[0,72],"source":"This method determines whether a <xref:System.Char> is a radix-10 digit."},{"content":"This contrasts with <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, which determines whether a <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> is of any numeric Unicode category.","pos":[73,206],"source":" This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category."},{"content":"Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.","pos":[207,362]}]}]},{"pos":[369,432],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[439,549],"content":"Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Valid digits are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[0,110],"source":"Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}],"pos":[70233,70789],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[71404,71414],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[71474,71535],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a decimal digit; otherwise, `false`.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a decimal digit; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a decimal digit; otherwise, `false`."}],"pos":[71593,71708],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[71857,71883],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[71997,72087],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Char\"></xref> object at the specified position in a string is a high surrogate.","nodes":[{"pos":[0,120],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object at the specified position in a string is a high surrogate.","source":"Indicates whether the <xref href=\"System.Char\"></xref> object at the specified position in a string is a high surrogate."}],"pos":[73612,73733],"yaml":true},{"content":"The `index` parameter is zero-based.  \n  \n In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"pos":[0,36],"content":"The <ph id=\"ph1\">`index`</ph> parameter is zero-based.","source":"The `index` parameter is zero-based."},{"pos":[43,463],"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[0,420],"nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.","pos":[0,199]},{"content":"The first element in this pair is the high surrogate.","pos":[200,253]},{"content":"Its code point can range from U+D800 to U+DBFF.","pos":[254,301]},{"content":"An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[302,420]}]}]}],"pos":[73744,74212],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[74873,74883],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[74943,75004],"yaml":true},{"content":"`true` if the numeric value of the specified character in the <code>s</code> parameter ranges from U+D800 through U+DBFF; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the numeric value of the specified character in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter ranges from U+D800 through U+DBFF; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the numeric value of the specified character in the <code>s</code> parameter ranges from U+D800 through U+DBFF; otherwise, `false`."}],"pos":[75062,75206],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[75363,75389],"yaml":true},{"content":"<code>index</code> is not a position within <code>s</code>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a position within <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is not a position within <code>s</code>."}],"pos":[75503,75563],"yaml":true},{"content":"Indicates whether the specified <xref href=\"System.Char\"></xref> object is a high surrogate.","nodes":[{"pos":[0,92],"content":"Indicates whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object is a high surrogate.","source":"Indicates whether the specified <xref href=\"System.Char\"></xref> object is a high surrogate."}],"pos":[77016,77109],"yaml":true},{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"pos":[0,420],"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[0,420],"nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.","pos":[0,199]},{"content":"The first element in this pair is the high surrogate.","pos":[200,253]},{"content":"Its code point can range from U+D800 to U+DBFF.","pos":[254,301]},{"content":"An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[302,420]}]}]}],"pos":[77120,77541],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[78187,78222],"yaml":true},{"content":"`true` if the numeric value of the <code>c</code> parameter ranges from U+D800 through U+DBFF; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the numeric value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter ranges from U+D800 through U+DBFF; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the numeric value of the <code>c</code> parameter ranges from U+D800 through U+DBFF; otherwise, `false`."}],"pos":[78280,78397],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a Unicode letter.","nodes":[{"pos":[0,85],"content":"Indicates whether the specified Unicode character is categorized as a Unicode letter.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a Unicode letter.","pos":[0,85]}]}],"pos":[79866,79952],"yaml":true},{"content":"This method determines whether a <xref:System.Char> is a member of any category of Unicode letter. Unicode letters include the following:  \n  \n-   Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"pos":[0,137],"content":"This method determines whether a <xref:System.Char> is a member of any category of Unicode letter. Unicode letters include the following:","nodes":[{"content":"This method determines whether a <xref:System.Char> is a member of any category of Unicode letter. Unicode letters include the following:","pos":[0,137],"nodes":[{"content":"This method determines whether a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> is a member of any category of Unicode letter.","pos":[0,98],"source":"This method determines whether a <xref:System.Char> is a member of any category of Unicode letter."},{"content":"Unicode letters include the following:","pos":[99,137]}]}]},{"pos":[147,456],"content":"Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,309],"nodes":[{"content":"Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).","pos":[0,194]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[195,309],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[466,778],"content":"Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,312],"nodes":[{"content":"Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).","pos":[0,197]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[198,312],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[788,1053],"content":"Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,265],"nodes":[{"content":"Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).","pos":[0,150]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[151,265],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[1063,1367],"content":"Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,304],"nodes":[{"content":"Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).","pos":[0,189]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[190,304],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[1377,1722],"content":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,345],"nodes":[{"content":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (<ph id=\"ph1\">\\&lt;</ph>CJK Ideograph, First&gt;) through U+9FC3 (<ph id=\"ph2\">\\&lt;</ph>CJK Ideograph, Last&gt;).","pos":[0,230],"source":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>)."},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[231,345],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]}],"pos":[79963,81700],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[82311,82346],"yaml":true},{"content":"`true` if <code>c</code> is a letter; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a letter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a letter; otherwise, `false`."}],"pos":[82404,82464],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.","nodes":[{"pos":[0,115],"content":"Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.","pos":[0,115]}]}],"pos":[83998,84114],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter. Unicode letters include the following:  \n  \n-   Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n-   Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,242],"content":"This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter. Unicode letters include the following:","nodes":[{"content":"This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter. Unicode letters include the following:","pos":[0,172],"nodes":[{"content":"This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.","pos":[0,133]},{"content":"Unicode letters include the following:","pos":[134,172]}]}]},{"pos":[252,561],"content":"Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,309],"nodes":[{"content":"Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).","pos":[0,194]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[195,309],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[571,883],"content":"Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,312],"nodes":[{"content":"Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).","pos":[0,197]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[198,312],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[893,1158],"content":"Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,265],"nodes":[{"content":"Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).","pos":[0,150]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[151,265],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[1168,1472],"content":"Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,304],"nodes":[{"content":"Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).","pos":[0,189]},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[190,304],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]},{"pos":[1482,1827],"content":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","pos":[0,345],"nodes":[{"content":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (<ph id=\"ph1\">\\&lt;</ph>CJK Ideograph, First&gt;) through U+9FC3 (<ph id=\"ph2\">\\&lt;</ph>CJK Ideograph, Last&gt;).","pos":[0,230],"source":"Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\<CJK Ideograph, First>) through U+9FC3 (\\<CJK Ideograph, Last>)."},{"content":"These characters are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[231,345],"source":" These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]}]}],"pos":[84125,85969],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[86595,86605],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[86665,86726],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a letter; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a letter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a letter; otherwise, `false`."}],"pos":[86784,86892],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[87042,87068],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[87182,87272],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.","nodes":[{"pos":[0,96],"content":"Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.","pos":[0,96]}]}],"pos":[88725,88822],"yaml":true},{"content":"Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.","nodes":[{"pos":[0,235],"content":"Valid letters and decimal digits are members of the following categories in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`UppercaseLetter`</ph>, <ph id=\"ph3\">`LowercaseLetter`</ph>, <ph id=\"ph4\">`TitlecaseLetter`</ph>, <ph id=\"ph5\">`ModifierLetter`</ph>, <ph id=\"ph6\">`OtherLetter`</ph>, or <ph id=\"ph7\">`DecimalDigitNumber`</ph>.","source":"Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`."}],"pos":[88833,89071],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[89759,89794],"yaml":true},{"content":"`true` if <code>c</code> is a letter or a decimal digit; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a letter or a decimal digit; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a letter or a decimal digit; otherwise, `false`."}],"pos":[89852,89931],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.","nodes":[{"pos":[0,126],"content":"Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.","pos":[0,126]}]}],"pos":[91514,91641],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,305],"content":"Valid letters and decimal digits are members of the following categories in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`UppercaseLetter`</ph>, <ph id=\"ph3\">`LowercaseLetter`</ph>, <ph id=\"ph4\">`TitlecaseLetter`</ph>, <ph id=\"ph5\">`ModifierLetter`</ph>, <ph id=\"ph6\">`OtherLetter`</ph>, or <ph id=\"ph7\">`DecimalDigitNumber`</ph>.","source":"Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`."}],"pos":[91652,91962],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[92665,92675],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[92735,92796],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a letter or a decimal digit; otherwise, `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a letter or a decimal digit; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a letter or a decimal digit; otherwise, `false`."}],"pos":[92854,92981],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[93138,93164],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[93278,93368],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a lowercase letter.","nodes":[{"pos":[0,87],"content":"Indicates whether the specified Unicode character is categorized as a lowercase letter.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a lowercase letter.","pos":[0,87]}]}],"pos":[94773,94861],"yaml":true},{"content":"Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.","nodes":[{"pos":[0,128],"content":"Valid lowercase letters are members of the following category in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`LowercaseLetter`</ph>.","source":"Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`."}],"pos":[94872,95003],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[95603,95638],"yaml":true},{"content":"`true` if <code>c</code> is a lowercase letter; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a lowercase letter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a lowercase letter; otherwise, `false`."}],"pos":[95696,95766],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.","nodes":[{"pos":[0,117],"content":"Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.","pos":[0,117]}]}],"pos":[97293,97411],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,198],"content":"Valid lowercase letters are members of the following category in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`LowercaseLetter`</ph>.","source":"Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`."}],"pos":[97422,97625],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[98240,98250],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[98310,98371],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a lowercase letter; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a lowercase letter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a lowercase letter; otherwise, `false`."}],"pos":[98429,98547],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[98696,98722],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[98836,98926],"yaml":true},{"content":"Indicates whether the specified <xref href=\"System.Char\"></xref> object is a low surrogate.","nodes":[{"pos":[0,91],"content":"Indicates whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object is a low surrogate.","source":"Indicates whether the specified <xref href=\"System.Char\"></xref> object is a low surrogate."}],"pos":[100373,100465],"yaml":true},{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"pos":[0,420],"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[0,420],"nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.","pos":[0,199]},{"content":"The second element in this pair is the low surrogate.","pos":[200,253]},{"content":"Its code point can range from U+DC00 to U+DFFF.","pos":[254,301]},{"content":"An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[302,420]}]}]}],"pos":[100476,100897],"yaml":true,"extradata":"MT"},{"content":"The character to evaluate.","nodes":[{"pos":[0,26],"content":"The character to evaluate.","nodes":[{"content":"The character to evaluate.","pos":[0,26]}]}],"pos":[101542,101569],"yaml":true},{"content":"`true` if the numeric value of the <code>c</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the numeric value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter ranges from U+DC00 through U+DFFF; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the numeric value of the <code>c</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`."}],"pos":[101627,101744],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Char\"></xref> object at the specified position in a string is a low surrogate.","nodes":[{"pos":[0,119],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object at the specified position in a string is a low surrogate.","source":"Indicates whether the <xref href=\"System.Char\"></xref> object at the specified position in a string is a low surrogate."}],"pos":[103320,103440],"yaml":true},{"content":"The `index` parameter is zero-based.  \n  \n In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"pos":[0,36],"content":"The <ph id=\"ph1\">`index`</ph> parameter is zero-based.","source":"The `index` parameter is zero-based."},{"pos":[43,463],"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[0,420],"nodes":[{"content":"In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.","pos":[0,199]},{"content":"The second element in this pair is the low surrogate.","pos":[200,253]},{"content":"Its code point can range from U+DC00 to U+DFFF.","pos":[254,301]},{"content":"An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.","pos":[302,420]}]}]}],"pos":[103451,103919],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[104579,104589],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[104649,104710],"yaml":true},{"content":"`true` if the numeric value of the specified character in the <code>s</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the numeric value of the specified character in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter ranges from U+DC00 through U+DFFF; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the numeric value of the specified character in the <code>s</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`."}],"pos":[104768,104912],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[105068,105094],"yaml":true},{"content":"<code>index</code> is not a position within <code>s</code>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a position within <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is not a position within <code>s</code>."}],"pos":[105208,105268],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a number.","nodes":[{"pos":[0,77],"content":"Indicates whether the specified Unicode character is categorized as a number.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a number.","pos":[0,77]}]}],"pos":[106679,106757],"yaml":true},{"content":"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.  \n  \n Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number. However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.  \n  \n [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]\n [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]","nodes":[{"pos":[0,381],"content":"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.","nodes":[{"content":"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.","pos":[0,381],"nodes":[{"content":"This method determines whether a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> is of any numeric Unicode category.","pos":[0,87],"source":"This method determines whether a <xref:System.Char> is of any numeric Unicode category."},{"content":"In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.","pos":[88,245]},{"content":"This method contrasts with the <ph id=\"ph1\">&lt;xref:System.Char.IsDigit%2A&gt;</ph> method, which determines whether a <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.","pos":[246,381],"source":" This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit."}]}]},{"pos":[389,885],"content":"[!IMPORTANT]\n The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.","pos":[13,494],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).","pos":[1,202],"source":" The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string)."},{"content":"To determine whether a string consists of numeric characters, call one of the overloads of the <ph id=\"ph1\">`TryParse`</ph> method (such as <ph id=\"ph2\">&lt;xref:System.Int32.TryParse%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Double.TryParse%2A?displayProperty=fullName&gt;</ph> of an integral or floating point type.","pos":[203,481],"source":" To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type."}]}]},{"pos":[892,1146],"content":"Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Valid numbers are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[0,254],"source":"Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]},{"pos":[1153,1863],"content":"The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number. However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> method assumes that <ph id=\"ph2\">`c`</ph> corresponds to a single linguistic character and checks whether that character represents a number.","pos":[0,172],"source":"The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number."},{"content":"However, some numbers in the Unicode standard are represented by two <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> objects that form a surrogate pair.","pos":[173,296],"source":" However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair."},{"content":"For example, the Aegean numbering system consists of code points U+10107 through U+10133.","pos":[297,386]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents AEGEAN NUMBER ONE.","pos":[387,522],"source":" The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE."},{"content":"As the output from the example shows, the <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> method returns <ph id=\"ph2\">`false`</ph> if it is passed either a high surrogate or a low surrogate of this character.","pos":[523,710],"source":" As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character."}]},{"pos":[1870,2127],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.IsNumber#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.IsNumber#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]\n [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]"}],"pos":[106768,108908],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[109514,109549],"yaml":true},{"content":"`true` if <code>c</code> is a number; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a number; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a number; otherwise, `false`."}],"pos":[109607,109667],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a number.","nodes":[{"pos":[0,107],"content":"Indicates whether the character at the specified position in a specified string is categorized as a number.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a number.","pos":[0,107]}]}],"pos":[111201,111309],"yaml":true},{"content":"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.  \n  \n Character positions in a string are indexed starting from zero.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.  \n  \n Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \n  \n If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE. However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.  \n  \n [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]\n [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]","nodes":[{"pos":[0,381],"content":"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.","nodes":[{"content":"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.","pos":[0,381],"nodes":[{"content":"This method determines whether a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> is of any numeric Unicode category.","pos":[0,87],"source":"This method determines whether a <xref:System.Char> is of any numeric Unicode category."},{"content":"In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.","pos":[88,245]},{"content":"This method contrasts with the <ph id=\"ph1\">&lt;xref:System.Char.IsDigit%2A&gt;</ph> method, which determines whether a <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.","pos":[246,381],"source":" This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit."}]}]},{"pos":[388,451],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[459,972],"content":"[!IMPORTANT]\n The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.","pos":[13,511],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).","pos":[1,219],"source":" The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string)."},{"content":"To determine whether a string consists of numeric characters, call one of the overloads of the <ph id=\"ph1\">`TryParse`</ph> method (such as <ph id=\"ph2\">&lt;xref:System.Int32.TryParse%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Double.TryParse%2A?displayProperty=fullName&gt;</ph> of an integral or floating point type.","pos":[220,498],"source":" To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type."}]}]},{"pos":[979,1233],"content":"Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.","nodes":[{"content":"Valid numbers are members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[0,254],"source":"Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."}]},{"pos":[1240,2002],"content":"If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE. However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object at position <ph id=\"ph2\">`index`</ph> is the first character of a valid surrogate pair, the <ph id=\"ph3\">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> method determines whether the surrogate pair forms a numeric digit.","pos":[0,236],"source":"If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit."},{"content":"For example, the Aegean numbering system consists of code points U+10107 through U+10133.","pos":[237,326]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents AEGEAN NUMBER ONE.","pos":[327,462],"source":" The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE."},{"content":"As the output from the example shows, the <ph id=\"ph1\">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> if it is passed the high surrogate of AEGEAN NUMBER ONE.","pos":[463,645],"source":" As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE."},{"content":"However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns <ph id=\"ph1\">`false`</ph>.","pos":[646,762],"source":" However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`."}]},{"pos":[2009,2266],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Char.IsNumber#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Char.IsNumber#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]\n [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]"}],"pos":[111320,113601],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[114222,114232],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[114292,114353],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a number; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a number; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a number; otherwise, `false`."}],"pos":[114411,114519],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[114669,114695],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[114809,114899],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a punctuation mark.","nodes":[{"pos":[0,87],"content":"Indicates whether the specified Unicode character is categorized as a punctuation mark.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a punctuation mark.","pos":[0,87]}]}],"pos":[116340,116428],"yaml":true},{"content":"Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`. They include characters with the Unicode code points listed in the following table.  \n  \n|||||  \n|-|-|-|-|  \n|U+0021 to U+0023|U+060C and U+060D|U+1800 to U+180A|U+3014 to U+301F|  \n|U+0025 to U+002A|U+061B|U+1944 and U+1945|U+3030|  \n|U+002C to U+002F|U+061E and U+061F|U+19DE and U+19DF|U+303D|  \n|U+003A and U+003B|U+066A to U+066D|U+1A1E and U+1A1F|U+30A0|  \n|U+003F and U+0040|U+06D4|U+1B5A to U+1B60|U+30FB|  \n|U+005B to U+005D|U+0700 to U+070D|U+2010 to U+2027|U+A874 to U+A877|  \n|U+005F|U+07F7 to U+07F9|U+2030 to U+2043|U+FD3E and U+FD3F|  \n|U+007B|U+0964 and U+0965|U+2045 to U+2051|U+FE10 to U+FE19|  \n|U+007D|U+0970|U+2053 to U+205E|U+FE30 to U+FE52|  \n|U+00A1|U+0DF4|U+207D and  U+207E|U+FE54 to U+FE61|  \n|U+00AB|U+0E4F to U+0E5B|U+208D and U+208E|U+FE63|  \n|U+00AD|U+0F04 to U+0F12|U+2329 and U+232A|U+FE68|  \n|U+00B7|U+0F3A to U+0F3D|U+2768 to U+2775|U+FE6A and U+FE6B|  \n|U+00BB|U+0F85|U+27C5 to U+27C6|U+FF01 to U+FF03|  \n|U+00BF|U+0FD0 and U+0FD1|U+27E6 to U+27EB|U+FF05 to U+FF0A|  \n|U+037E|U+104A to U+104F|U+2983 to U+2998|U+FF0C to U+FF0F|  \n|U+0387|U+10FB|U+29D8 to U+29DB|U+FF1A and U+FF1B|  \n|U+055A to U+055F|U+1361 to U+1368|U+29FC and U+29FD|U+FF1F and U+FF20|  \n|U+0589 and U+058A|U+166D and U+166E|U+2CF9 to U+2CFC|U+FF3B to U+FF3D|  \n|U+05BE|U+169B and U+169C|U+2CFE and U+2CFF|U+FF3F|  \n|U+05C0|U+16EB to U+16ED|U+2E00 to U+2E17|U+FF5B|  \n|U+05C3|U+1735 and U+1736|U+2E1C and U+2E1D|U+FF5D|  \n|U+05C6|U+17D4 to U+17D6|U+3001 to U+3003|U+FF5F to U+FF65|  \n|U+05F3 and U+05F4|U+17D8 to U+17DA|U+3008 to U+3011||","nodes":[{"pos":[0,353],"content":"Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`. They include characters with the Unicode code points listed in the following table.","nodes":[{"content":"Valid punctuation marks are members of the following categories in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`ConnectorPunctuation`</ph>, <ph id=\"ph3\">`DashPunctuation`</ph>, <ph id=\"ph4\">`OpenPunctuation`</ph>, <ph id=\"ph5\">`ClosePunctuation`</ph>, <ph id=\"ph6\">`InititalQuotePunctuation`</ph>, <ph id=\"ph7\">`FinalQuotePunctuation`</ph>, or <ph id=\"ph8\">`OtherPunctuation`</ph>.","pos":[0,269],"source":"Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`."},{"content":"They include characters with the Unicode code points listed in the following table.","pos":[270,353]}]},{"pos":[380,396],"content":"U+0021 to U+0023","nodes":[{"content":"U+0021 to U+0023","pos":[0,16]}]},{"pos":[397,414],"content":"U+060C and U+060D","nodes":[{"content":"U+060C and U+060D","pos":[0,17]}]},{"pos":[415,431],"content":"U+1800 to U+180A","nodes":[{"content":"U+1800 to U+180A","pos":[0,16]}]},{"pos":[432,448],"content":"U+3014 to U+301F","nodes":[{"content":"U+3014 to U+301F","pos":[0,16]}]},{"pos":[453,469],"content":"U+0025 to U+002A","nodes":[{"content":"U+0025 to U+002A","pos":[0,16]}]},{"pos":[470,476],"content":"U+061B","nodes":[{"content":"U+061B","pos":[0,6]}]},{"pos":[477,494],"content":"U+1944 and U+1945","nodes":[{"content":"U+1944 and U+1945","pos":[0,17]}]},{"pos":[495,501],"content":"U+3030","nodes":[{"content":"U+3030","pos":[0,6]}]},{"pos":[506,522],"content":"U+002C to U+002F","nodes":[{"content":"U+002C to U+002F","pos":[0,16]}]},{"pos":[523,540],"content":"U+061E and U+061F","nodes":[{"content":"U+061E and U+061F","pos":[0,17]}]},{"pos":[541,558],"content":"U+19DE and U+19DF","nodes":[{"content":"U+19DE and U+19DF","pos":[0,17]}]},{"pos":[559,565],"content":"U+303D","nodes":[{"content":"U+303D","pos":[0,6]}]},{"pos":[570,587],"content":"U+003A and U+003B","nodes":[{"content":"U+003A and U+003B","pos":[0,17]}]},{"pos":[588,604],"content":"U+066A to U+066D","nodes":[{"content":"U+066A to U+066D","pos":[0,16]}]},{"pos":[605,622],"content":"U+1A1E and U+1A1F","nodes":[{"content":"U+1A1E and U+1A1F","pos":[0,17]}]},{"pos":[623,629],"content":"U+30A0","nodes":[{"content":"U+30A0","pos":[0,6]}]},{"pos":[634,651],"content":"U+003F and U+0040","nodes":[{"content":"U+003F and U+0040","pos":[0,17]}]},{"pos":[652,658],"content":"U+06D4","nodes":[{"content":"U+06D4","pos":[0,6]}]},{"pos":[659,675],"content":"U+1B5A to U+1B60","nodes":[{"content":"U+1B5A to U+1B60","pos":[0,16]}]},{"pos":[676,682],"content":"U+30FB","nodes":[{"content":"U+30FB","pos":[0,6]}]},{"pos":[687,703],"content":"U+005B to U+005D","nodes":[{"content":"U+005B to U+005D","pos":[0,16]}]},{"pos":[704,720],"content":"U+0700 to U+070D","nodes":[{"content":"U+0700 to U+070D","pos":[0,16]}]},{"pos":[721,737],"content":"U+2010 to U+2027","nodes":[{"content":"U+2010 to U+2027","pos":[0,16]}]},{"pos":[738,754],"content":"U+A874 to U+A877","nodes":[{"content":"U+A874 to U+A877","pos":[0,16]}]},{"pos":[759,765],"content":"U+005F","nodes":[{"content":"U+005F","pos":[0,6]}]},{"pos":[766,782],"content":"U+07F7 to U+07F9","nodes":[{"content":"U+07F7 to U+07F9","pos":[0,16]}]},{"pos":[783,799],"content":"U+2030 to U+2043","nodes":[{"content":"U+2030 to U+2043","pos":[0,16]}]},{"pos":[800,817],"content":"U+FD3E and U+FD3F","nodes":[{"content":"U+FD3E and U+FD3F","pos":[0,17]}]},{"pos":[822,828],"content":"U+007B","nodes":[{"content":"U+007B","pos":[0,6]}]},{"pos":[829,846],"content":"U+0964 and U+0965","nodes":[{"content":"U+0964 and U+0965","pos":[0,17]}]},{"pos":[847,863],"content":"U+2045 to U+2051","nodes":[{"content":"U+2045 to U+2051","pos":[0,16]}]},{"pos":[864,880],"content":"U+FE10 to U+FE19","nodes":[{"content":"U+FE10 to U+FE19","pos":[0,16]}]},{"pos":[885,891],"content":"U+007D","nodes":[{"content":"U+007D","pos":[0,6]}]},{"pos":[892,898],"content":"U+0970","nodes":[{"content":"U+0970","pos":[0,6]}]},{"pos":[899,915],"content":"U+2053 to U+205E","nodes":[{"content":"U+2053 to U+205E","pos":[0,16]}]},{"pos":[916,932],"content":"U+FE30 to U+FE52","nodes":[{"content":"U+FE30 to U+FE52","pos":[0,16]}]},{"pos":[937,943],"content":"U+00A1","nodes":[{"content":"U+00A1","pos":[0,6]}]},{"pos":[944,950],"content":"U+0DF4","nodes":[{"content":"U+0DF4","pos":[0,6]}]},{"pos":[951,969],"content":"U+207D and  U+207E","nodes":[{"content":"U+207D and  U+207E","pos":[0,18]}]},{"pos":[970,986],"content":"U+FE54 to U+FE61","nodes":[{"content":"U+FE54 to U+FE61","pos":[0,16]}]},{"pos":[991,997],"content":"U+00AB","nodes":[{"content":"U+00AB","pos":[0,6]}]},{"pos":[998,1014],"content":"U+0E4F to U+0E5B","nodes":[{"content":"U+0E4F to U+0E5B","pos":[0,16]}]},{"pos":[1015,1032],"content":"U+208D and U+208E","nodes":[{"content":"U+208D and U+208E","pos":[0,17]}]},{"pos":[1033,1039],"content":"U+FE63","nodes":[{"content":"U+FE63","pos":[0,6]}]},{"pos":[1044,1050],"content":"U+00AD","nodes":[{"content":"U+00AD","pos":[0,6]}]},{"pos":[1051,1067],"content":"U+0F04 to U+0F12","nodes":[{"content":"U+0F04 to U+0F12","pos":[0,16]}]},{"pos":[1068,1085],"content":"U+2329 and U+232A","nodes":[{"content":"U+2329 and U+232A","pos":[0,17]}]},{"pos":[1086,1092],"content":"U+FE68","nodes":[{"content":"U+FE68","pos":[0,6]}]},{"pos":[1097,1103],"content":"U+00B7","nodes":[{"content":"U+00B7","pos":[0,6]}]},{"pos":[1104,1120],"content":"U+0F3A to U+0F3D","nodes":[{"content":"U+0F3A to U+0F3D","pos":[0,16]}]},{"pos":[1121,1137],"content":"U+2768 to U+2775","nodes":[{"content":"U+2768 to U+2775","pos":[0,16]}]},{"pos":[1138,1155],"content":"U+FE6A and U+FE6B","nodes":[{"content":"U+FE6A and U+FE6B","pos":[0,17]}]},{"pos":[1160,1166],"content":"U+00BB","nodes":[{"content":"U+00BB","pos":[0,6]}]},{"pos":[1167,1173],"content":"U+0F85","nodes":[{"content":"U+0F85","pos":[0,6]}]},{"pos":[1174,1190],"content":"U+27C5 to U+27C6","nodes":[{"content":"U+27C5 to U+27C6","pos":[0,16]}]},{"pos":[1191,1207],"content":"U+FF01 to U+FF03","nodes":[{"content":"U+FF01 to U+FF03","pos":[0,16]}]},{"pos":[1212,1218],"content":"U+00BF","nodes":[{"content":"U+00BF","pos":[0,6]}]},{"pos":[1219,1236],"content":"U+0FD0 and U+0FD1","nodes":[{"content":"U+0FD0 and U+0FD1","pos":[0,17]}]},{"pos":[1237,1253],"content":"U+27E6 to U+27EB","nodes":[{"content":"U+27E6 to U+27EB","pos":[0,16]}]},{"pos":[1254,1270],"content":"U+FF05 to U+FF0A","nodes":[{"content":"U+FF05 to U+FF0A","pos":[0,16]}]},{"pos":[1275,1281],"content":"U+037E","nodes":[{"content":"U+037E","pos":[0,6]}]},{"pos":[1282,1298],"content":"U+104A to U+104F","nodes":[{"content":"U+104A to U+104F","pos":[0,16]}]},{"pos":[1299,1315],"content":"U+2983 to U+2998","nodes":[{"content":"U+2983 to U+2998","pos":[0,16]}]},{"pos":[1316,1332],"content":"U+FF0C to U+FF0F","nodes":[{"content":"U+FF0C to U+FF0F","pos":[0,16]}]},{"pos":[1337,1343],"content":"U+0387","nodes":[{"content":"U+0387","pos":[0,6]}]},{"pos":[1344,1350],"content":"U+10FB","nodes":[{"content":"U+10FB","pos":[0,6]}]},{"pos":[1351,1367],"content":"U+29D8 to U+29DB","nodes":[{"content":"U+29D8 to U+29DB","pos":[0,16]}]},{"pos":[1368,1385],"content":"U+FF1A and U+FF1B","nodes":[{"content":"U+FF1A and U+FF1B","pos":[0,17]}]},{"pos":[1390,1406],"content":"U+055A to U+055F","nodes":[{"content":"U+055A to U+055F","pos":[0,16]}]},{"pos":[1407,1423],"content":"U+1361 to U+1368","nodes":[{"content":"U+1361 to U+1368","pos":[0,16]}]},{"pos":[1424,1441],"content":"U+29FC and U+29FD","nodes":[{"content":"U+29FC and U+29FD","pos":[0,17]}]},{"pos":[1442,1459],"content":"U+FF1F and U+FF20","nodes":[{"content":"U+FF1F and U+FF20","pos":[0,17]}]},{"pos":[1464,1481],"content":"U+0589 and U+058A","nodes":[{"content":"U+0589 and U+058A","pos":[0,17]}]},{"pos":[1482,1499],"content":"U+166D and U+166E","nodes":[{"content":"U+166D and U+166E","pos":[0,17]}]},{"pos":[1500,1516],"content":"U+2CF9 to U+2CFC","nodes":[{"content":"U+2CF9 to U+2CFC","pos":[0,16]}]},{"pos":[1517,1533],"content":"U+FF3B to U+FF3D","nodes":[{"content":"U+FF3B to U+FF3D","pos":[0,16]}]},{"pos":[1538,1544],"content":"U+05BE","nodes":[{"content":"U+05BE","pos":[0,6]}]},{"pos":[1545,1562],"content":"U+169B and U+169C","nodes":[{"content":"U+169B and U+169C","pos":[0,17]}]},{"pos":[1563,1580],"content":"U+2CFE and U+2CFF","nodes":[{"content":"U+2CFE and U+2CFF","pos":[0,17]}]},{"pos":[1581,1587],"content":"U+FF3F","nodes":[{"content":"U+FF3F","pos":[0,6]}]},{"pos":[1592,1598],"content":"U+05C0","nodes":[{"content":"U+05C0","pos":[0,6]}]},{"pos":[1599,1615],"content":"U+16EB to U+16ED","nodes":[{"content":"U+16EB to U+16ED","pos":[0,16]}]},{"pos":[1616,1632],"content":"U+2E00 to U+2E17","nodes":[{"content":"U+2E00 to U+2E17","pos":[0,16]}]},{"pos":[1633,1639],"content":"U+FF5B","nodes":[{"content":"U+FF5B","pos":[0,6]}]},{"pos":[1644,1650],"content":"U+05C3","nodes":[{"content":"U+05C3","pos":[0,6]}]},{"pos":[1651,1668],"content":"U+1735 and U+1736","nodes":[{"content":"U+1735 and U+1736","pos":[0,17]}]},{"pos":[1669,1686],"content":"U+2E1C and U+2E1D","nodes":[{"content":"U+2E1C and U+2E1D","pos":[0,17]}]},{"pos":[1687,1693],"content":"U+FF5D","nodes":[{"content":"U+FF5D","pos":[0,6]}]},{"pos":[1698,1704],"content":"U+05C6","nodes":[{"content":"U+05C6","pos":[0,6]}]},{"pos":[1705,1721],"content":"U+17D4 to U+17D6","nodes":[{"content":"U+17D4 to U+17D6","pos":[0,16]}]},{"pos":[1722,1738],"content":"U+3001 to U+3003","nodes":[{"content":"U+3001 to U+3003","pos":[0,16]}]},{"pos":[1739,1755],"content":"U+FF5F to U+FF65","nodes":[{"content":"U+FF5F to U+FF65","pos":[0,16]}]},{"pos":[1760,1777],"content":"U+05F3 and U+05F4","nodes":[{"content":"U+05F3 and U+05F4","pos":[0,17]}]},{"pos":[1778,1794],"content":"U+17D8 to U+17DA","nodes":[{"content":"U+17D8 to U+17DA","pos":[0,16]}]},{"pos":[1795,1811],"content":"U+3008 to U+3011","nodes":[{"content":"U+3008 to U+3011","pos":[0,16]}]}],"pos":[116439,118282],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[118948,118983],"yaml":true},{"content":"`true` if <code>c</code> is a punctuation mark; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a punctuation mark; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a punctuation mark; otherwise, `false`."}],"pos":[119041,119111],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.","nodes":[{"pos":[0,117],"content":"Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.","pos":[0,117]}]}],"pos":[120680,120798],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`. They include characters with the Unicode code points listed in the following table.  \n  \n|||||  \n|-|-|-|-|  \n|U+0021 to U+0023|U+060C and U+060D|U+1800 to U+180A|U+3014 to U+301F|  \n|U+0025 to U+002A|U+061B|U+1944 and U+1945|U+3030|  \n|U+002C to U+002F|U+061E and U+061F|U+19DE and U+19DF|U+303D|  \n|U+003A and U+003B|U+066A to U+066D|U+1A1E and U+1A1F|U+30A0|  \n|U+003F and U+0040|U+06D4|U+1B5A to U+1B60|U+30FB|  \n|U+005B to U+005D|U+0700 to U+070D|U+2010 to U+2027|U+A874 to U+A877|  \n|U+005F|U+07F7 to U+07F9|U+2030 to U+2043|U+FD3E and U+FD3F|  \n|U+007B|U+0964 and U+0965|U+2045 to U+2051|U+FE10 to U+FE19|  \n|U+007D|U+0970|U+2053 to U+205E|U+FE30 to U+FE52|  \n|U+00A1|U+0DF4|U+207D and  U+207E|U+FE54 to U+FE61|  \n|U+00AB|U+0E4F to U+0E5B|U+208D and U+208E|U+FE63|  \n|U+00AD|U+0F04 to U+0F12|U+2329 and U+232A|U+FE68|  \n|U+00B7|U+0F3A to U+0F3D|U+2768 to U+2775|U+FE6A and U+FE6B|  \n|U+00BB|U+0F85|U+27C5 to U+27C6|U+FF01 to U+FF03|  \n|U+00BF|U+0FD0 and U+0FD1|U+27E6 to U+27EB|U+FF05 to U+FF0A|  \n|U+037E|U+104A to U+104F|U+2983 to U+2998|U+FF0C to U+FF0F|  \n|U+0387|U+10FB|U+29D8 to U+29DB|U+FF1A and U+FF1B|  \n|U+055A to U+055F|U+1361 to U+1368|U+29FC and U+29FD|U+FF1F and U+FF20|  \n|U+0589 and U+058A|U+166D and U+166E|U+2CF9 to U+2CFC|U+FF3B to U+FF3D|  \n|U+05BE|U+169B and U+169C|U+2CFE and U+2CFF|U+FF3F|  \n|U+05C0|U+16EB to U+16ED|U+2E00 to U+2E17|U+FF5B|  \n|U+05C3|U+1735 and U+1736|U+2E1C and U+2E1D|U+FF5D|  \n|U+05C6|U+17D4 to U+17D6|U+3001 to U+3003|U+FF5F to U+FF65|  \n|U+05F3 and U+05F4|U+17D8 to U+17DA|U+3008 to U+3011||","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,423],"content":"Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`. They include characters with the Unicode code points listed in the following table.","nodes":[{"content":"Valid punctuation marks are members of the following categories in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`ConnectorPunctuation`</ph>, <ph id=\"ph3\">`DashPunctuation`</ph>, <ph id=\"ph4\">`OpenPunctuation`</ph>, <ph id=\"ph5\">`ClosePunctuation`</ph>, <ph id=\"ph6\">`InititalQuotePunctuation`</ph>, <ph id=\"ph7\">`FinalQuotePunctuation`</ph>, or <ph id=\"ph8\">`OtherPunctuation`</ph>.","pos":[0,269],"source":"Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`."},{"content":"They include characters with the Unicode code points listed in the following table.","pos":[270,353]}]},{"pos":[450,466],"content":"U+0021 to U+0023","nodes":[{"content":"U+0021 to U+0023","pos":[0,16]}]},{"pos":[467,484],"content":"U+060C and U+060D","nodes":[{"content":"U+060C and U+060D","pos":[0,17]}]},{"pos":[485,501],"content":"U+1800 to U+180A","nodes":[{"content":"U+1800 to U+180A","pos":[0,16]}]},{"pos":[502,518],"content":"U+3014 to U+301F","nodes":[{"content":"U+3014 to U+301F","pos":[0,16]}]},{"pos":[523,539],"content":"U+0025 to U+002A","nodes":[{"content":"U+0025 to U+002A","pos":[0,16]}]},{"pos":[540,546],"content":"U+061B","nodes":[{"content":"U+061B","pos":[0,6]}]},{"pos":[547,564],"content":"U+1944 and U+1945","nodes":[{"content":"U+1944 and U+1945","pos":[0,17]}]},{"pos":[565,571],"content":"U+3030","nodes":[{"content":"U+3030","pos":[0,6]}]},{"pos":[576,592],"content":"U+002C to U+002F","nodes":[{"content":"U+002C to U+002F","pos":[0,16]}]},{"pos":[593,610],"content":"U+061E and U+061F","nodes":[{"content":"U+061E and U+061F","pos":[0,17]}]},{"pos":[611,628],"content":"U+19DE and U+19DF","nodes":[{"content":"U+19DE and U+19DF","pos":[0,17]}]},{"pos":[629,635],"content":"U+303D","nodes":[{"content":"U+303D","pos":[0,6]}]},{"pos":[640,657],"content":"U+003A and U+003B","nodes":[{"content":"U+003A and U+003B","pos":[0,17]}]},{"pos":[658,674],"content":"U+066A to U+066D","nodes":[{"content":"U+066A to U+066D","pos":[0,16]}]},{"pos":[675,692],"content":"U+1A1E and U+1A1F","nodes":[{"content":"U+1A1E and U+1A1F","pos":[0,17]}]},{"pos":[693,699],"content":"U+30A0","nodes":[{"content":"U+30A0","pos":[0,6]}]},{"pos":[704,721],"content":"U+003F and U+0040","nodes":[{"content":"U+003F and U+0040","pos":[0,17]}]},{"pos":[722,728],"content":"U+06D4","nodes":[{"content":"U+06D4","pos":[0,6]}]},{"pos":[729,745],"content":"U+1B5A to U+1B60","nodes":[{"content":"U+1B5A to U+1B60","pos":[0,16]}]},{"pos":[746,752],"content":"U+30FB","nodes":[{"content":"U+30FB","pos":[0,6]}]},{"pos":[757,773],"content":"U+005B to U+005D","nodes":[{"content":"U+005B to U+005D","pos":[0,16]}]},{"pos":[774,790],"content":"U+0700 to U+070D","nodes":[{"content":"U+0700 to U+070D","pos":[0,16]}]},{"pos":[791,807],"content":"U+2010 to U+2027","nodes":[{"content":"U+2010 to U+2027","pos":[0,16]}]},{"pos":[808,824],"content":"U+A874 to U+A877","nodes":[{"content":"U+A874 to U+A877","pos":[0,16]}]},{"pos":[829,835],"content":"U+005F","nodes":[{"content":"U+005F","pos":[0,6]}]},{"pos":[836,852],"content":"U+07F7 to U+07F9","nodes":[{"content":"U+07F7 to U+07F9","pos":[0,16]}]},{"pos":[853,869],"content":"U+2030 to U+2043","nodes":[{"content":"U+2030 to U+2043","pos":[0,16]}]},{"pos":[870,887],"content":"U+FD3E and U+FD3F","nodes":[{"content":"U+FD3E and U+FD3F","pos":[0,17]}]},{"pos":[892,898],"content":"U+007B","nodes":[{"content":"U+007B","pos":[0,6]}]},{"pos":[899,916],"content":"U+0964 and U+0965","nodes":[{"content":"U+0964 and U+0965","pos":[0,17]}]},{"pos":[917,933],"content":"U+2045 to U+2051","nodes":[{"content":"U+2045 to U+2051","pos":[0,16]}]},{"pos":[934,950],"content":"U+FE10 to U+FE19","nodes":[{"content":"U+FE10 to U+FE19","pos":[0,16]}]},{"pos":[955,961],"content":"U+007D","nodes":[{"content":"U+007D","pos":[0,6]}]},{"pos":[962,968],"content":"U+0970","nodes":[{"content":"U+0970","pos":[0,6]}]},{"pos":[969,985],"content":"U+2053 to U+205E","nodes":[{"content":"U+2053 to U+205E","pos":[0,16]}]},{"pos":[986,1002],"content":"U+FE30 to U+FE52","nodes":[{"content":"U+FE30 to U+FE52","pos":[0,16]}]},{"pos":[1007,1013],"content":"U+00A1","nodes":[{"content":"U+00A1","pos":[0,6]}]},{"pos":[1014,1020],"content":"U+0DF4","nodes":[{"content":"U+0DF4","pos":[0,6]}]},{"pos":[1021,1039],"content":"U+207D and  U+207E","nodes":[{"content":"U+207D and  U+207E","pos":[0,18]}]},{"pos":[1040,1056],"content":"U+FE54 to U+FE61","nodes":[{"content":"U+FE54 to U+FE61","pos":[0,16]}]},{"pos":[1061,1067],"content":"U+00AB","nodes":[{"content":"U+00AB","pos":[0,6]}]},{"pos":[1068,1084],"content":"U+0E4F to U+0E5B","nodes":[{"content":"U+0E4F to U+0E5B","pos":[0,16]}]},{"pos":[1085,1102],"content":"U+208D and U+208E","nodes":[{"content":"U+208D and U+208E","pos":[0,17]}]},{"pos":[1103,1109],"content":"U+FE63","nodes":[{"content":"U+FE63","pos":[0,6]}]},{"pos":[1114,1120],"content":"U+00AD","nodes":[{"content":"U+00AD","pos":[0,6]}]},{"pos":[1121,1137],"content":"U+0F04 to U+0F12","nodes":[{"content":"U+0F04 to U+0F12","pos":[0,16]}]},{"pos":[1138,1155],"content":"U+2329 and U+232A","nodes":[{"content":"U+2329 and U+232A","pos":[0,17]}]},{"pos":[1156,1162],"content":"U+FE68","nodes":[{"content":"U+FE68","pos":[0,6]}]},{"pos":[1167,1173],"content":"U+00B7","nodes":[{"content":"U+00B7","pos":[0,6]}]},{"pos":[1174,1190],"content":"U+0F3A to U+0F3D","nodes":[{"content":"U+0F3A to U+0F3D","pos":[0,16]}]},{"pos":[1191,1207],"content":"U+2768 to U+2775","nodes":[{"content":"U+2768 to U+2775","pos":[0,16]}]},{"pos":[1208,1225],"content":"U+FE6A and U+FE6B","nodes":[{"content":"U+FE6A and U+FE6B","pos":[0,17]}]},{"pos":[1230,1236],"content":"U+00BB","nodes":[{"content":"U+00BB","pos":[0,6]}]},{"pos":[1237,1243],"content":"U+0F85","nodes":[{"content":"U+0F85","pos":[0,6]}]},{"pos":[1244,1260],"content":"U+27C5 to U+27C6","nodes":[{"content":"U+27C5 to U+27C6","pos":[0,16]}]},{"pos":[1261,1277],"content":"U+FF01 to U+FF03","nodes":[{"content":"U+FF01 to U+FF03","pos":[0,16]}]},{"pos":[1282,1288],"content":"U+00BF","nodes":[{"content":"U+00BF","pos":[0,6]}]},{"pos":[1289,1306],"content":"U+0FD0 and U+0FD1","nodes":[{"content":"U+0FD0 and U+0FD1","pos":[0,17]}]},{"pos":[1307,1323],"content":"U+27E6 to U+27EB","nodes":[{"content":"U+27E6 to U+27EB","pos":[0,16]}]},{"pos":[1324,1340],"content":"U+FF05 to U+FF0A","nodes":[{"content":"U+FF05 to U+FF0A","pos":[0,16]}]},{"pos":[1345,1351],"content":"U+037E","nodes":[{"content":"U+037E","pos":[0,6]}]},{"pos":[1352,1368],"content":"U+104A to U+104F","nodes":[{"content":"U+104A to U+104F","pos":[0,16]}]},{"pos":[1369,1385],"content":"U+2983 to U+2998","nodes":[{"content":"U+2983 to U+2998","pos":[0,16]}]},{"pos":[1386,1402],"content":"U+FF0C to U+FF0F","nodes":[{"content":"U+FF0C to U+FF0F","pos":[0,16]}]},{"pos":[1407,1413],"content":"U+0387","nodes":[{"content":"U+0387","pos":[0,6]}]},{"pos":[1414,1420],"content":"U+10FB","nodes":[{"content":"U+10FB","pos":[0,6]}]},{"pos":[1421,1437],"content":"U+29D8 to U+29DB","nodes":[{"content":"U+29D8 to U+29DB","pos":[0,16]}]},{"pos":[1438,1455],"content":"U+FF1A and U+FF1B","nodes":[{"content":"U+FF1A and U+FF1B","pos":[0,17]}]},{"pos":[1460,1476],"content":"U+055A to U+055F","nodes":[{"content":"U+055A to U+055F","pos":[0,16]}]},{"pos":[1477,1493],"content":"U+1361 to U+1368","nodes":[{"content":"U+1361 to U+1368","pos":[0,16]}]},{"pos":[1494,1511],"content":"U+29FC and U+29FD","nodes":[{"content":"U+29FC and U+29FD","pos":[0,17]}]},{"pos":[1512,1529],"content":"U+FF1F and U+FF20","nodes":[{"content":"U+FF1F and U+FF20","pos":[0,17]}]},{"pos":[1534,1551],"content":"U+0589 and U+058A","nodes":[{"content":"U+0589 and U+058A","pos":[0,17]}]},{"pos":[1552,1569],"content":"U+166D and U+166E","nodes":[{"content":"U+166D and U+166E","pos":[0,17]}]},{"pos":[1570,1586],"content":"U+2CF9 to U+2CFC","nodes":[{"content":"U+2CF9 to U+2CFC","pos":[0,16]}]},{"pos":[1587,1603],"content":"U+FF3B to U+FF3D","nodes":[{"content":"U+FF3B to U+FF3D","pos":[0,16]}]},{"pos":[1608,1614],"content":"U+05BE","nodes":[{"content":"U+05BE","pos":[0,6]}]},{"pos":[1615,1632],"content":"U+169B and U+169C","nodes":[{"content":"U+169B and U+169C","pos":[0,17]}]},{"pos":[1633,1650],"content":"U+2CFE and U+2CFF","nodes":[{"content":"U+2CFE and U+2CFF","pos":[0,17]}]},{"pos":[1651,1657],"content":"U+FF3F","nodes":[{"content":"U+FF3F","pos":[0,6]}]},{"pos":[1662,1668],"content":"U+05C0","nodes":[{"content":"U+05C0","pos":[0,6]}]},{"pos":[1669,1685],"content":"U+16EB to U+16ED","nodes":[{"content":"U+16EB to U+16ED","pos":[0,16]}]},{"pos":[1686,1702],"content":"U+2E00 to U+2E17","nodes":[{"content":"U+2E00 to U+2E17","pos":[0,16]}]},{"pos":[1703,1709],"content":"U+FF5B","nodes":[{"content":"U+FF5B","pos":[0,6]}]},{"pos":[1714,1720],"content":"U+05C3","nodes":[{"content":"U+05C3","pos":[0,6]}]},{"pos":[1721,1738],"content":"U+1735 and U+1736","nodes":[{"content":"U+1735 and U+1736","pos":[0,17]}]},{"pos":[1739,1756],"content":"U+2E1C and U+2E1D","nodes":[{"content":"U+2E1C and U+2E1D","pos":[0,17]}]},{"pos":[1757,1763],"content":"U+FF5D","nodes":[{"content":"U+FF5D","pos":[0,6]}]},{"pos":[1768,1774],"content":"U+05C6","nodes":[{"content":"U+05C6","pos":[0,6]}]},{"pos":[1775,1791],"content":"U+17D4 to U+17D6","nodes":[{"content":"U+17D4 to U+17D6","pos":[0,16]}]},{"pos":[1792,1808],"content":"U+3001 to U+3003","nodes":[{"content":"U+3001 to U+3003","pos":[0,16]}]},{"pos":[1809,1825],"content":"U+FF5F to U+FF65","nodes":[{"content":"U+FF5F to U+FF65","pos":[0,16]}]},{"pos":[1830,1847],"content":"U+05F3 and U+05F4","nodes":[{"content":"U+05F3 and U+05F4","pos":[0,17]}]},{"pos":[1848,1864],"content":"U+17D8 to U+17DA","nodes":[{"content":"U+17D8 to U+17DA","pos":[0,16]}]},{"pos":[1865,1881],"content":"U+3008 to U+3011","nodes":[{"content":"U+3008 to U+3011","pos":[0,16]}]}],"pos":[120809,122724],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[123405,123415],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[123475,123536],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a punctuation mark; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a punctuation mark; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a punctuation mark; otherwise, `false`."}],"pos":[123594,123712],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[123867,123893],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[124007,124097],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a separator character.","nodes":[{"pos":[0,90],"content":"Indicates whether the specified Unicode character is categorized as a separator character.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a separator character.","pos":[0,90]}]}],"pos":[125526,125617],"yaml":true},{"content":"The Unicode standard recognizes three subcategories of separators:  \n  \n-   Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\u0020.  \n  \n-   Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2028.  \n  \n-   Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2029.  \n  \n> [!NOTE]\n>  The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters.","nodes":[{"pos":[0,66],"content":"The Unicode standard recognizes three subcategories of separators:","nodes":[{"content":"The Unicode standard recognizes three subcategories of separators:","pos":[0,66]}]},{"pos":[76,219],"content":"Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\u0020.","nodes":[{"content":"Space separators (the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), which includes characters such as \\u0020.","pos":[0,143],"source":"Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\u0020."}]},{"pos":[229,352],"content":"Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2028.","nodes":[{"content":"Line separators (the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), which includes \\u2028.","pos":[0,123],"source":"Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2028."}]},{"pos":[362,490],"content":"Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2029.","nodes":[{"content":"Paragraph separators (the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), which includes \\u2029.","pos":[0,128],"source":"Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2029."}]},{"pos":[498,744],"content":"[!NOTE]\n The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters.","leadings":["","> "],"nodes":[{"content":"The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), not as separator characters.","pos":[9,244],"source":" The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters."}]}],"pos":[125628,126390],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[127066,127101],"yaml":true},{"content":"`true` if <code>c</code> is a separator character; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a separator character; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a separator character; otherwise, `false`."}],"pos":[127159,127232],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a separator character.","nodes":[{"pos":[0,120],"content":"Indicates whether the character at the specified position in a specified string is categorized as a separator character.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a separator character.","pos":[0,120]}]}],"pos":[128787,128908],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n The Unicode standard recognizes three subcategories of separators:  \n  \n-   Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\u0020.  \n  \n-   Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2028.  \n  \n-   Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2029.  \n  \n> [!NOTE]\n>  The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,136],"content":"The Unicode standard recognizes three subcategories of separators:","nodes":[{"content":"The Unicode standard recognizes three subcategories of separators:","pos":[0,66]}]},{"pos":[146,289],"content":"Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\u0020.","nodes":[{"content":"Space separators (the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), which includes characters such as \\u0020.","pos":[0,143],"source":"Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\u0020."}]},{"pos":[299,422],"content":"Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2028.","nodes":[{"content":"Line separators (the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), which includes \\u2028.","pos":[0,123],"source":"Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2028."}]},{"pos":[432,560],"content":"Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2029.","nodes":[{"content":"Paragraph separators (the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), which includes \\u2029.","pos":[0,128],"source":"Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\u2029."}]},{"pos":[568,814],"content":"[!NOTE]\n The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters.","leadings":["","> "],"nodes":[{"content":"The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category), not as separator characters.","pos":[9,244],"source":" The Unicode standard classifies the characters \\u000A (LF), \\u000C (FF), and \\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters."}]}],"pos":[128919,129753],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[130413,130423],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[130483,130544],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a separator character; otherwise, `false`.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a separator character; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a separator character; otherwise, `false`."}],"pos":[130602,130723],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[130876,130902],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[131016,131106],"yaml":true},{"content":"Indicates whether the specified character has a surrogate code unit.","nodes":[{"pos":[0,68],"content":"Indicates whether the specified character has a surrogate code unit.","nodes":[{"content":"Indicates whether the specified character has a surrogate code unit.","pos":[0,68]}]}],"pos":[132535,132604],"yaml":true},{"content":"A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF. Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category. The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair. For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).","nodes":[{"pos":[0,514],"content":"A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF. Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category. The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair. For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).","nodes":[{"content":"A surrogate is a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.","pos":[0,102],"source":"A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF."},{"content":"Each character with a code unit in this range belongs to the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[103,242],"source":" Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."},{"content":"The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.","pos":[243,371]},{"content":"For more information about surrogate pairs, see the Unicode Standard at the <bpt id=\"p1\">[</bpt>Unicode home page<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.","pos":[372,514],"source":" For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123)."}]}],"pos":[132615,133130],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[133786,133821],"yaml":true},{"content":"`true` if <code>c</code> is either a high surrogate or a low surrogate; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is either a high surrogate or a low surrogate; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is either a high surrogate or a low surrogate; otherwise, `false`."}],"pos":[133879,133973],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string has a surrogate code unit.","nodes":[{"pos":[0,106],"content":"Indicates whether the character at the specified position in a specified string has a surrogate code unit.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string has a surrogate code unit.","pos":[0,106]}]}],"pos":[135528,135635],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF. Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category. The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair. For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,584],"content":"A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF. Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category. The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair. For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).","nodes":[{"content":"A surrogate is a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.","pos":[0,102],"source":"A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF."},{"content":"Each character with a code unit in this range belongs to the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph> category.","pos":[103,242],"source":" Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category."},{"content":"The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.","pos":[243,371]},{"content":"For more information about surrogate pairs, see the Unicode Standard at the <bpt id=\"p1\">[</bpt>Unicode home page<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.","pos":[372,514],"source":" For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123)."}]}],"pos":[135646,136235],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[136900,136910],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[136970,137031],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a either a high surrogate or a low surrogate; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a either a high surrogate or a low surrogate; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a either a high surrogate or a low surrogate; otherwise, `false`."}],"pos":[137089,137233],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[137386,137412],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[137526,137616],"yaml":true},{"content":"Indicates whether two adjacent <xref href=\"System.Char\"></xref> objects at a specified position in a string form a surrogate pair.","nodes":[{"pos":[0,130],"content":"Indicates whether two adjacent <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> objects at a specified position in a string form a surrogate pair.","source":"Indicates whether two adjacent <xref href=\"System.Char\"></xref> objects at a specified position in a string form a surrogate pair."}],"pos":[139141,139272],"yaml":true},{"content":"Ordinarily, a single character is represented by a single 16-bit Unicode code unit. UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units. The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate. The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate. Individual surrogate code points have no interpretation of their own. For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).","nodes":[{"pos":[0,601],"content":"Ordinarily, a single character is represented by a single 16-bit Unicode code unit. UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units. The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate. The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate. Individual surrogate code points have no interpretation of their own. For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).","nodes":[{"content":"Ordinarily, a single character is represented by a single 16-bit Unicode code unit.","pos":[0,83]},{"content":"UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.","pos":[84,214]},{"content":"The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.","pos":[215,303]},{"content":"The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.","pos":[304,392]},{"content":"Individual surrogate code points have no interpretation of their own.","pos":[393,462]},{"content":"For more information about surrogates and the Unicode Standard, see the <bpt id=\"p1\">[</bpt>Unicode home page<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.","pos":[463,601],"source":" For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123)."}]}],"pos":[139283,139885],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[140546,140556],"yaml":true},{"content":"The starting position of the pair of characters to evaluate within <code>s</code>.","nodes":[{"pos":[0,82],"content":"The starting position of the pair of characters to evaluate within <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The starting position of the pair of characters to evaluate within <code>s</code>."}],"pos":[140616,140699],"yaml":true},{"content":"`true` if the <code>s</code> parameter includes adjacent characters at positions <code>index</code> and <code>index</code> + 1, and the numeric value of the character at position <code>index</code> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <code>index</code>+1 ranges from U+DC00 through U+DFFF; otherwise, `false`.","nodes":[{"pos":[0,359],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter includes adjacent characters at positions <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">index</ph><ept id=\"p3\">&lt;/code&gt;</ept> + 1, and the numeric value of the character at position <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph5\">index</ph><ept id=\"p4\">&lt;/code&gt;</ept> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph6\">index</ph><ept id=\"p5\">&lt;/code&gt;</ept>+1 ranges from U+DC00 through U+DFFF; otherwise, <ph id=\"ph7\">`false`</ph>.","source":"`true` if the <code>s</code> parameter includes adjacent characters at positions <code>index</code> and <code>index</code> + 1, and the numeric value of the character at position <code>index</code> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <code>index</code>+1 ranges from U+DC00 through U+DFFF; otherwise, `false`."}],"pos":[140757,141119],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[141276,141302],"yaml":true},{"content":"<code>index</code> is not a position within <code>s</code>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a position within <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is not a position within <code>s</code>."}],"pos":[141416,141476],"yaml":true},{"content":"Indicates whether the two specified <xref href=\"System.Char\"></xref> objects form a surrogate pair.","nodes":[{"pos":[0,99],"content":"Indicates whether the two specified <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> objects form a surrogate pair.","source":"Indicates whether the two specified <xref href=\"System.Char\"></xref> objects form a surrogate pair."}],"pos":[142983,143083],"yaml":true},{"content":"Ordinarily, a single character is represented by a single 16-bit Unicode code unit. UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units. The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate. The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate. Individual surrogate code points have no interpretation of their own. For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).","nodes":[{"pos":[0,601],"content":"Ordinarily, a single character is represented by a single 16-bit Unicode code unit. UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units. The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate. The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate. Individual surrogate code points have no interpretation of their own. For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).","nodes":[{"content":"Ordinarily, a single character is represented by a single 16-bit Unicode code unit.","pos":[0,83]},{"content":"UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.","pos":[84,214]},{"content":"The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.","pos":[215,303]},{"content":"The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.","pos":[304,392]},{"content":"Individual surrogate code points have no interpretation of their own.","pos":[393,462]},{"content":"For more information about surrogates and the Unicode Standard, see the <bpt id=\"p1\">[</bpt>Unicode home page<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.","pos":[463,601],"source":" For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123)."}]}],"pos":[143094,143696],"yaml":true,"extradata":"MT"},{"content":"The character to evaluate as the high surrogate of a surrogate pair.","nodes":[{"pos":[0,68],"content":"The character to evaluate as the high surrogate of a surrogate pair.","nodes":[{"content":"The character to evaluate as the high surrogate of a surrogate pair.","pos":[0,68]}]}],"pos":[144385,144454],"yaml":true},{"content":"The character to evaluate as the low surrogate of a surrogate pair.","nodes":[{"pos":[0,67],"content":"The character to evaluate as the low surrogate of a surrogate pair.","nodes":[{"content":"The character to evaluate as the low surrogate of a surrogate pair.","pos":[0,67]}]}],"pos":[144520,144588],"yaml":true},{"content":"`true` if the numeric value of the <code>highSurrogate</code> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <code>lowSurrogate</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`.","nodes":[{"pos":[0,226],"content":"<ph id=\"ph1\">`true`</ph> if the numeric value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">highSurrogate</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">lowSurrogate</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter ranges from U+DC00 through U+DFFF; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the numeric value of the <code>highSurrogate</code> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <code>lowSurrogate</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`."}],"pos":[144646,144875],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as a symbol character.","nodes":[{"pos":[0,87],"content":"Indicates whether the specified Unicode character is categorized as a symbol character.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as a symbol character.","pos":[0,87]}]}],"pos":[146344,146432],"yaml":true},{"content":"Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.  \n  \n Symbols in the Unicode standard are a loosely defined set of characters that include the following:  \n  \n-   Currency symbols.  \n  \n-   Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.  \n  \n-   Number forms, such as subscripts and superscripts.  \n  \n-   Mathematical operators and arrows.  \n  \n-   Geometric symbols.  \n  \n-   Technical symbols.  \n  \n-   Braille patterns.  \n  \n-   Dingbats.","nodes":[{"pos":[0,170],"content":"Valid symbols are members of the following categories in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`MathSymbol`</ph>, <ph id=\"ph3\">`CurrencySymbol`</ph>, <ph id=\"ph4\">`ModifierSymbol`</ph>, and <ph id=\"ph5\">`OtherSymbol`</ph>.","source":"Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`."},{"pos":[177,276],"content":"Symbols in the Unicode standard are a loosely defined set of characters that include the following:","nodes":[{"content":"Symbols in the Unicode standard are a loosely defined set of characters that include the following:","pos":[0,99]}]},{"pos":[286,303],"content":"Currency symbols.","nodes":[{"content":"Currency symbols.","pos":[0,17]}]},{"pos":[313,429],"content":"Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.","nodes":[{"content":"Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.","pos":[0,116]}]},{"pos":[439,489],"content":"Number forms, such as subscripts and superscripts.","nodes":[{"content":"Number forms, such as subscripts and superscripts.","pos":[0,50]}]},{"pos":[499,533],"content":"Mathematical operators and arrows.","nodes":[{"content":"Mathematical operators and arrows.","pos":[0,34]}]},{"pos":[543,561],"content":"Geometric symbols.","nodes":[{"content":"Geometric symbols.","pos":[0,18]}]},{"pos":[571,589],"content":"Technical symbols.","nodes":[{"content":"Technical symbols.","pos":[0,18]}]},{"pos":[599,616],"content":"Braille patterns.","nodes":[{"content":"Braille patterns.","pos":[0,17]}]},{"pos":[626,635],"content":"Dingbats.","nodes":[{"content":"Dingbats.","pos":[0,9]}]}],"pos":[146443,147099],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[147716,147751],"yaml":true},{"content":"`true` if <code>c</code> is a symbol character; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a symbol character; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is a symbol character; otherwise, `false`."}],"pos":[147809,147879],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as a symbol character.","nodes":[{"pos":[0,117],"content":"Indicates whether the character at the specified position in a specified string is categorized as a symbol character.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as a symbol character.","pos":[0,117]}]}],"pos":[149413,149531],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.  \n  \n Symbols in the Unicode standard are a loosely defined set of characters that include the following:  \n  \n-   Currency symbols.  \n  \n-   Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.  \n  \n-   Number forms, such as subscripts and superscripts.  \n  \n-   Mathematical operators and arrows.  \n  \n-   Geometric symbols.  \n  \n-   Technical symbols.  \n  \n-   Braille patterns.  \n  \n-   Dingbats.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,265],"content":"Valid symbols are members of the following categories in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=fullName&gt;</ph>: <ph id=\"ph2\">`MathSymbol`</ph>, <ph id=\"ph3\">`CurrencySymbol`</ph>, <ph id=\"ph4\">`ModifierSymbol`</ph>, and <ph id=\"ph5\">`OtherSymbol`</ph>.","source":"Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`."},{"pos":[272,371],"content":"Symbols in the Unicode standard are a loosely defined set of characters that include the following:","nodes":[{"content":"Symbols in the Unicode standard are a loosely defined set of characters that include the following:","pos":[0,99]}]},{"pos":[381,398],"content":"Currency symbols.","nodes":[{"content":"Currency symbols.","pos":[0,17]}]},{"pos":[408,524],"content":"Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.","nodes":[{"content":"Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.","pos":[0,116]}]},{"pos":[534,584],"content":"Number forms, such as subscripts and superscripts.","nodes":[{"content":"Number forms, such as subscripts and superscripts.","pos":[0,50]}]},{"pos":[594,628],"content":"Mathematical operators and arrows.","nodes":[{"content":"Mathematical operators and arrows.","pos":[0,34]}]},{"pos":[638,656],"content":"Geometric symbols.","nodes":[{"content":"Geometric symbols.","pos":[0,18]}]},{"pos":[666,684],"content":"Technical symbols.","nodes":[{"content":"Technical symbols.","pos":[0,18]}]},{"pos":[694,711],"content":"Braille patterns.","nodes":[{"content":"Braille patterns.","pos":[0,17]}]},{"pos":[721,730],"content":"Dingbats.","nodes":[{"content":"Dingbats.","pos":[0,9]}]}],"pos":[149542,150295],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[150927,150937],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[150997,151058],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is a symbol character; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a symbol character; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is a symbol character; otherwise, `false`."}],"pos":[151116,151234],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[151384,151410],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[151524,151614],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as an uppercase letter.","nodes":[{"pos":[0,88],"content":"Indicates whether the specified Unicode character is categorized as an uppercase letter.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as an uppercase letter.","pos":[0,88]}]}],"pos":[153019,153108],"yaml":true},{"content":"Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.","nodes":[{"pos":[0,128],"content":"Valid uppercase letters are members of the following category in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`UppercaseLetter`</ph>.","source":"Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`."}],"pos":[153119,153250],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[153381,153416],"yaml":true},{"content":"`true` if <code>c</code> is an uppercase letter; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an uppercase letter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is an uppercase letter; otherwise, `false`."}],"pos":[153474,153545],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.","nodes":[{"pos":[0,118],"content":"Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.","pos":[0,118]}]}],"pos":[155072,155191],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,198],"content":"Valid uppercase letters are members of the following category in <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id=\"ph2\">`UppercaseLetter`</ph>.","source":"Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`."}],"pos":[155202,155405],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[155551,155561],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[155621,155682],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is an uppercase letter; otherwise, `false`.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an uppercase letter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is an uppercase letter; otherwise, `false`."}],"pos":[155740,155859],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[156008,156034],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[156148,156238],"yaml":true},{"content":"Indicates whether the specified Unicode character is categorized as white space.","nodes":[{"pos":[0,80],"content":"Indicates whether the specified Unicode character is categorized as white space.","nodes":[{"content":"Indicates whether the specified Unicode character is categorized as white space.","pos":[0,80]}]}],"pos":[157673,157754],"yaml":true},{"content":"White space characters are the following Unicode characters:  \n  \n-   Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).  \n  \n-   Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).  \n  \n-   Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).  \n  \n-   The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).","nodes":[{"pos":[0,60],"content":"White space characters are the following Unicode characters:","nodes":[{"content":"White space characters are the following Unicode characters:","pos":[0,60]}]},{"pos":[70,602],"content":"Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).","nodes":[{"content":"Members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).","pos":[0,532],"source":"Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000)."}]},{"pos":[612,758],"content":"Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).","nodes":[{"content":"Members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> category, which consists solely of the LINE SEPARATOR character (U+2028).","pos":[0,146],"source":"Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028)."}]},{"pos":[768,924],"content":"Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).","nodes":[{"content":"Members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).","pos":[0,156],"source":"Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029)."}]},{"pos":[934,1095],"content":"The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).","nodes":[{"content":"The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).","pos":[0,161]}]}],"pos":[157765,158871],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to evaluate.","nodes":[{"pos":[0,34],"content":"The Unicode character to evaluate.","nodes":[{"content":"The Unicode character to evaluate.","pos":[0,34]}]}],"pos":[159552,159587],"yaml":true},{"content":"`true` if <code>c</code> is white space; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is white space; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>c</code> is white space; otherwise, `false`."}],"pos":[159645,159708],"yaml":true},{"content":"Indicates whether the character at the specified position in a specified string is categorized as white space.","nodes":[{"pos":[0,110],"content":"Indicates whether the character at the specified position in a specified string is categorized as white space.","nodes":[{"content":"Indicates whether the character at the specified position in a specified string is categorized as white space.","pos":[0,110]}]}],"pos":[161270,161381],"yaml":true},{"content":"Character positions in a string are indexed starting from zero.  \n  \n White space characters are the following Unicode characters:  \n  \n-   Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).  \n  \n-   Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).  \n  \n-   Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).  \n  \n-   The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).","nodes":[{"pos":[0,63],"content":"Character positions in a string are indexed starting from zero.","nodes":[{"content":"Character positions in a string are indexed starting from zero.","pos":[0,63]}]},{"pos":[70,130],"content":"White space characters are the following Unicode characters:","nodes":[{"content":"White space characters are the following Unicode characters:","pos":[0,60]}]},{"pos":[140,672],"content":"Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).","nodes":[{"content":"Members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).","pos":[0,532],"source":"Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000)."}]},{"pos":[682,828],"content":"Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).","nodes":[{"content":"Members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> category, which consists solely of the LINE SEPARATOR character (U+2028).","pos":[0,146],"source":"Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028)."}]},{"pos":[838,994],"content":"Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).","nodes":[{"content":"Members of the <ph id=\"ph1\">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).","pos":[0,156],"source":"Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029)."}]},{"pos":[1004,1165],"content":"The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).","nodes":[{"content":"The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).","pos":[0,161]}]}],"pos":[161392,162570],"yaml":true,"extradata":"MT"},{"content":"A string.","nodes":[{"pos":[0,9],"content":"A string.","nodes":[{"content":"A string.","pos":[0,9]}]}],"pos":[163246,163256],"yaml":true},{"content":"The position of the character to evaluate in <code>s</code>.","nodes":[{"pos":[0,60],"content":"The position of the character to evaluate in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the character to evaluate in <code>s</code>."}],"pos":[163316,163377],"yaml":true},{"content":"`true` if the character at position <code>index</code> in <code>s</code> is white space; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the character at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is white space; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the character at position <code>index</code> in <code>s</code> is white space; otherwise, `false`."}],"pos":[163435,163546],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[163700,163726],"yaml":true},{"content":"<code>index</code> is less than zero or greater than the last position in <code>s</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the last position in <ph id=\"ph2\">&lt;code&gt;s&lt;/code&gt;</ph>.","source":"<code>index</code> is less than zero or greater than the last position in <code>s</code>."}],"pos":[163840,163930],"yaml":true},{"content":"Represents the largest possible value of a <xref href=\"System.Char\"></xref>. This field is constant.","nodes":[{"pos":[0,100],"content":"Represents the largest possible value of a <xref href=\"System.Char\"></xref>. This field is constant.","nodes":[{"content":"Represents the largest possible value of a <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph>.","pos":[0,76],"source":"Represents the largest possible value of a <xref href=\"System.Char\"></xref>."},{"content":"This field is constant.","pos":[77,100]}]}],"pos":[165283,165384],"yaml":true},{"content":"The value of this constant is hexadecimal 0xFFFF.","nodes":[{"pos":[0,49],"content":"The value of this constant is hexadecimal 0xFFFF.","nodes":[{"content":"The value of this constant is hexadecimal 0xFFFF.","pos":[0,49]}]}],"pos":[165395,165445],"yaml":true,"extradata":"MT"},{"content":"Represents the smallest possible value of a <xref href=\"System.Char\"></xref>. This field is constant.","nodes":[{"pos":[0,101],"content":"Represents the smallest possible value of a <xref href=\"System.Char\"></xref>. This field is constant.","nodes":[{"content":"Represents the smallest possible value of a <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph>.","pos":[0,77],"source":"Represents the smallest possible value of a <xref href=\"System.Char\"></xref>."},{"content":"This field is constant.","pos":[78,101]}]}],"pos":[166924,167026],"yaml":true},{"content":"The value of this constant is hexadecimal 0x00.","nodes":[{"pos":[0,47],"content":"The value of this constant is hexadecimal 0x00.","nodes":[{"content":"The value of this constant is hexadecimal 0x00.","pos":[0,47]}]}],"pos":[167037,167085],"yaml":true,"extradata":"MT"},{"content":"Converts the value of the specified string to its equivalent Unicode character.","nodes":[{"pos":[0,79],"content":"Converts the value of the specified string to its equivalent Unicode character.","nodes":[{"content":"Converts the value of the specified string to its equivalent Unicode character.","pos":[0,79]}]}],"pos":[168616,168696],"yaml":true},{"content":"A string that contains a single character, or `null`.","nodes":[{"pos":[0,53],"content":"A string that contains a single character, or <ph id=\"ph1\">`null`</ph>.","source":"A string that contains a single character, or `null`."}],"pos":[169298,169352],"yaml":true},{"content":"A Unicode character equivalent to the sole character in <code>s</code>.","nodes":[{"pos":[0,71],"content":"A Unicode character equivalent to the sole character in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A Unicode character equivalent to the sole character in <code>s</code>."}],"pos":[169407,169479],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[169626,169652],"yaml":true},{"content":"The length of <code>s</code> is not 1.","nodes":[{"pos":[0,38],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not 1.","source":"The length of <code>s</code> is not 1."}],"pos":[169742,169781],"yaml":true},{"content":"Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.","nodes":[{"pos":[0,136],"content":"Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.","nodes":[{"content":"Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.","pos":[0,136]}]}],"pos":[171204,171341],"yaml":true},{"content":"Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase.","nodes":[{"pos":[0,94],"content":"Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.String.ToLower%2A?displayProperty=fullName&gt;</ph> to convert a string to lowercase.","pos":[0,94],"source":"Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase."}]}],"pos":[171352,171447],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[172095,172129],"yaml":true},{"content":"An object that supplies culture-specific casing rules.","nodes":[{"pos":[0,54],"content":"An object that supplies culture-specific casing rules.","nodes":[{"content":"An object that supplies culture-specific casing rules.","pos":[0,54]}]}],"pos":[172211,172266],"yaml":true},{"content":"The lowercase equivalent of <code>c</code>, modified according to <code>culture</code>, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic.","nodes":[{"pos":[0,187],"content":"The lowercase equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept>, modified according to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">culture</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or the unchanged value of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept>, if <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">c</ph><ept id=\"p4\">&lt;/code&gt;</ept> is already lowercase or not alphabetic.","source":"The lowercase equivalent of <code>c</code>, modified according to <code>culture</code>, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic."}],"pos":[172321,172509],"yaml":true},{"content":"<code>culture</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;culture&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>culture</code> is `null`."}],"pos":[172658,172690],"yaml":true},{"content":"Converts the value of a Unicode character to its lowercase equivalent.","nodes":[{"pos":[0,70],"content":"Converts the value of a Unicode character to its lowercase equivalent.","nodes":[{"content":"Converts the value of a Unicode character to its lowercase equivalent.","pos":[0,70]}]}],"pos":[173751,173822],"yaml":true},{"content":"Casing rules are obtained from the current culture.  \n  \n Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase.","nodes":[{"pos":[0,51],"content":"Casing rules are obtained from the current culture.","nodes":[{"content":"Casing rules are obtained from the current culture.","pos":[0,51]}]},{"pos":[58,152],"content":"Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.String.ToLower%2A?displayProperty=fullName&gt;</ph> to convert a string to lowercase.","pos":[0,94],"source":"Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase."}]}],"pos":[173833,173990],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[174591,174625],"yaml":true},{"content":"The lowercase equivalent of <code>c</code>, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic.","nodes":[{"pos":[0,143],"content":"The lowercase equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or the unchanged value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p2\">&lt;/code&gt;</ept>, if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept> is already lowercase or not alphabetic.","source":"The lowercase equivalent of <code>c</code>, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic."}],"pos":[174680,174824],"yaml":true},{"content":"Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.","nodes":[{"pos":[0,118],"content":"Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.","nodes":[{"content":"Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.","pos":[0,118]}]}],"pos":[176333,176452],"yaml":true},{"content":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method. The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.  \n  \n Use <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> to convert a string to lowercase.","nodes":[{"pos":[0,300],"content":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method. The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.","nodes":[{"content":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <ph id=\"ph1\">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph> method.","pos":[0,186],"source":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph> method is equivalent to <ph id=\"ph2\">`ToLower(Char, CultureInfo.InvariantCulture)`</ph>.","pos":[187,300],"source":" The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`."}]},{"pos":[307,410],"content":"Use <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> to convert a string to lowercase.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=fullName&gt;</ph> to convert a string to lowercase.","pos":[0,103],"source":"Use <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> to convert a string to lowercase."}]}],"pos":[176463,176878],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[177018,177052],"yaml":true},{"content":"The lowercase equivalent of the <code>c</code> parameter, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic.","nodes":[{"pos":[0,157],"content":"The lowercase equivalent of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, or the unchanged value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p2\">&lt;/code&gt;</ept>, if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept> is already lowercase or not alphabetic.","source":"The lowercase equivalent of the <code>c</code> parameter, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic."}],"pos":[177107,177265],"yaml":true},{"content":"Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.","nodes":[{"pos":[0,132],"content":"Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.","nodes":[{"content":"Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.","pos":[0,132]}]}],"pos":[178801,178934],"yaml":true},{"content":"The `provider` parameter is ignored; it does not participate in this operation.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">`provider`</ph> parameter is ignored; it does not participate in this operation.","source":"The `provider` parameter is ignored; it does not participate in this operation."}],"pos":[178945,179025],"yaml":true,"extradata":"MT"},{"content":"(Reserved) An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,75],"content":"(Reserved) An object that supplies culture-specific formatting information.","nodes":[{"content":"(Reserved) An object that supplies culture-specific formatting information.","pos":[0,75]}]}],"pos":[179688,179764],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>provider</code>.","nodes":[{"pos":[0,94],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>provider</code>."}],"pos":[179821,179916],"yaml":true},{"content":"Converts the specified Unicode character to its equivalent string representation.","nodes":[{"pos":[0,81],"content":"Converts the specified Unicode character to its equivalent string representation.","nodes":[{"content":"Converts the specified Unicode character to its equivalent string representation.","pos":[0,81]}]}],"pos":[181034,181116],"yaml":true},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[181749,181783],"yaml":true},{"content":"The string representation of the value of <code>c</code>.","nodes":[{"pos":[0,57],"content":"The string representation of the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of <code>c</code>."}],"pos":[181840,181898],"yaml":true},{"content":"Converts the value of this instance to its equivalent string representation.","nodes":[{"pos":[0,76],"content":"Converts the value of this instance to its equivalent string representation.","nodes":[{"content":"Converts the value of this instance to its equivalent string representation.","pos":[0,76]}]}],"pos":[183309,183386],"yaml":true},{"content":"The string representation of the value of this instance.","nodes":[{"pos":[0,56],"content":"The string representation of the value of this instance.","nodes":[{"content":"The string representation of the value of this instance.","pos":[0,56]}]}],"pos":[184020,184077],"yaml":true},{"content":"Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.","nodes":[{"pos":[0,136],"content":"Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.","nodes":[{"content":"Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.","pos":[0,136]}]}],"pos":[185671,185808],"yaml":true},{"content":"Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase.","nodes":[{"pos":[0,94],"content":"Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.String.ToUpper%2A?displayProperty=fullName&gt;</ph> to convert a string to uppercase.","pos":[0,94],"source":"Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase."}]}],"pos":[185819,185914],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[186785,186819],"yaml":true},{"content":"An object that supplies culture-specific casing rules.","nodes":[{"pos":[0,54],"content":"An object that supplies culture-specific casing rules.","nodes":[{"content":"An object that supplies culture-specific casing rules.","pos":[0,54]}]}],"pos":[186901,186956],"yaml":true},{"content":"The uppercase equivalent of <code>c</code>, modified according to <code>culture</code>, or the unchanged value of <code>c</code> if <code>c</code> is already uppercase, has no uppercase equivalent, or is not alphabetic.","nodes":[{"pos":[0,219],"content":"The uppercase equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept>, modified according to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">culture</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or the unchanged value of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept> if <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">c</ph><ept id=\"p4\">&lt;/code&gt;</ept> is already uppercase, has no uppercase equivalent, or is not alphabetic.","source":"The uppercase equivalent of <code>c</code>, modified according to <code>culture</code>, or the unchanged value of <code>c</code> if <code>c</code> is already uppercase, has no uppercase equivalent, or is not alphabetic."}],"pos":[187011,187231],"yaml":true},{"content":"<code>culture</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;culture&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>culture</code> is `null`."}],"pos":[187380,187412],"yaml":true},{"content":"Converts the value of a Unicode character to its uppercase equivalent.","nodes":[{"pos":[0,70],"content":"Converts the value of a Unicode character to its uppercase equivalent.","nodes":[{"content":"Converts the value of a Unicode character to its uppercase equivalent.","pos":[0,70]}]}],"pos":[188473,188544],"yaml":true},{"content":"Casing rules are obtained from the current culture.  \n  \n Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase.","nodes":[{"pos":[0,51],"content":"Casing rules are obtained from the current culture.","nodes":[{"content":"Casing rules are obtained from the current culture.","pos":[0,51]}]},{"pos":[58,152],"content":"Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.String.ToUpper%2A?displayProperty=fullName&gt;</ph> to convert a string to uppercase.","pos":[0,94],"source":"Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase."}]}],"pos":[188555,188712],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[189208,189242],"yaml":true},{"content":"The uppercase equivalent of <code>c</code>, or the unchanged value of <code>c</code> if <code>c</code> is already uppercase, has no uppercase equivalent, or is not alphabetic.","nodes":[{"pos":[0,175],"content":"The uppercase equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or the unchanged value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p2\">&lt;/code&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept> is already uppercase, has no uppercase equivalent, or is not alphabetic.","source":"The uppercase equivalent of <code>c</code>, or the unchanged value of <code>c</code> if <code>c</code> is already uppercase, has no uppercase equivalent, or is not alphabetic."}],"pos":[189297,189473],"yaml":true},{"content":"Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.","nodes":[{"pos":[0,118],"content":"Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.","nodes":[{"content":"Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.","pos":[0,118]}]}],"pos":[190982,191101],"yaml":true},{"content":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.  The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.  \n  \n Use <xref:System.String.ToUpperInvariant%2A?displayProperty=fullName> to convert a string to uppercase.","nodes":[{"pos":[0,296],"content":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.  The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.","nodes":[{"content":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <ph id=\"ph1\">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph> method.","pos":[0,181],"source":"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph> method is equivalent to <ph id=\"ph2\">`ToUpper(Char, CultureInfo.InvariantCulture)`</ph>.","pos":[183,296],"source":"  The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`."}]},{"pos":[303,406],"content":"Use <xref:System.String.ToUpperInvariant%2A?displayProperty=fullName> to convert a string to uppercase.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.String.ToUpperInvariant%2A?displayProperty=fullName&gt;</ph> to convert a string to uppercase.","pos":[0,103],"source":"Use <xref:System.String.ToUpperInvariant%2A?displayProperty=fullName> to convert a string to uppercase."}]}],"pos":[191112,191523],"yaml":true,"extradata":"MT"},{"content":"The Unicode character to convert.","nodes":[{"pos":[0,33],"content":"The Unicode character to convert.","nodes":[{"content":"The Unicode character to convert.","pos":[0,33]}]}],"pos":[191663,191697],"yaml":true},{"content":"The uppercase equivalent of the <code>c</code> parameter, or the unchanged value of <code>c</code>, if <code>c</code> is already uppercase or not alphabetic.","nodes":[{"pos":[0,157],"content":"The uppercase equivalent of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, or the unchanged value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p2\">&lt;/code&gt;</ept>, if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept> is already uppercase or not alphabetic.","source":"The uppercase equivalent of the <code>c</code> parameter, or the unchanged value of <code>c</code>, if <code>c</code> is already uppercase or not alphabetic."}],"pos":[191752,191910],"yaml":true},{"content":"Converts the value of the specified string to its equivalent Unicode character. A return code indicates whether the conversion succeeded or failed.","nodes":[{"pos":[0,147],"content":"Converts the value of the specified string to its equivalent Unicode character. A return code indicates whether the conversion succeeded or failed.","nodes":[{"content":"Converts the value of the specified string to its equivalent Unicode character. A return code indicates whether the conversion succeeded or failed.","pos":[0,147],"nodes":[{"content":"Converts the value of the specified string to its equivalent Unicode character.","pos":[0,79]},{"content":"A return code indicates whether the conversion succeeded or failed.","pos":[80,147]}]}]}],"pos":[193449,193597],"yaml":true},{"content":"The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.","nodes":[{"pos":[0,191],"content":"The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Char.TryParse%2A&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.Char.Parse%2A&gt;</ph> method, except the <ph id=\"ph3\">&lt;xref:System.Char.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.","pos":[0,191],"source":"The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails."}]}],"pos":[193608,193800],"yaml":true,"extradata":"MT"},{"content":"A string that contains a single character, or `null`.","nodes":[{"pos":[0,53],"content":"A string that contains a single character, or <ph id=\"ph1\">`null`</ph>.","source":"A string that contains a single character, or `null`."}],"pos":[194477,194531],"yaml":true},{"content":"When this method returns, contains a Unicode character equivalent to the sole character in <code>s</code>, if the conversion succeeded, or an undefined value if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or the length of <code>s</code> is not 1. This parameter is passed uninitialized.","nodes":[{"pos":[0,328],"content":"When this method returns, contains a Unicode character equivalent to the sole character in <code>s</code>, if the conversion succeeded, or an undefined value if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or the length of <code>s</code> is not 1. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a Unicode character equivalent to the sole character in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or an undefined value if the conversion failed.","pos":[0,183],"source":"When this method returns, contains a Unicode character equivalent to the sole character in <code>s</code>, if the conversion succeeded, or an undefined value if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not 1.","pos":[184,288],"source":" The conversion fails if the <code>s</code> parameter is `null` or the length of <code>s</code> is not 1."},{"content":"This parameter is passed uninitialized.","pos":[289,328]}]}],"pos":[194591,194920],"yaml":true},{"content":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`."}],"pos":[194978,195067],"yaml":true},{"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,122],"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This conversion is not supported.","pos":[0,42],"source":"**Note** This conversion is not supported."},{"content":"Attempting to do so throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[43,122],"source":" Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[198826,198951],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[199119,199146],"yaml":true},{"content":"This conversion is not supported. No value is returned.","nodes":[{"pos":[0,55],"content":"This conversion is not supported. No value is returned.","nodes":[{"content":"This conversion is not supported. No value is returned.","pos":[0,55],"nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"No value is returned.","pos":[34,55]}]}]}],"pos":[199204,199260],"yaml":true},{"content":"This conversion is not supported.","nodes":[{"pos":[0,33],"content":"This conversion is not supported.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]}]}],"pos":[199429,199463],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,110],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>."}],"pos":[200921,201032],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,298],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,298],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToByte%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,298],"source":" The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[201043,201342],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[201507,201534],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[201589,201665],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,110],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"></xref>."}],"pos":[203192,203303],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"pos":[0,168],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.","pos":[0,168],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."}]}]}],"pos":[203314,203483],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[203648,203675],"yaml":true},{"content":"The value of the current <xref href=\"System.Char\"></xref> object unchanged.","nodes":[{"pos":[0,75],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object unchanged.","source":"The value of the current <xref href=\"System.Char\"></xref> object unchanged."}],"pos":[203730,203806],"yaml":true},{"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,122],"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This conversion is not supported.","pos":[0,42],"source":"**Note** This conversion is not supported."},{"content":"Attempting to do so throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[43,122],"source":" Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[205357,205482],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[205655,205682],"yaml":true},{"content":"No value is returned.","nodes":[{"pos":[0,21],"content":"No value is returned.","nodes":[{"content":"No value is returned.","pos":[0,21]}]}],"pos":[205741,205763],"yaml":true},{"content":"This conversion is not supported.","nodes":[{"pos":[0,33],"content":"This conversion is not supported.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]}]}],"pos":[205933,205967],"yaml":true},{"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,122],"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This conversion is not supported.","pos":[0,42],"source":"**Note** This conversion is not supported."},{"content":"Attempting to do so throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[43,122],"source":" Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[207443,207568],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[207739,207766],"yaml":true},{"content":"No value is returned.","nodes":[{"pos":[0,21],"content":"No value is returned.","nodes":[{"content":"No value is returned.","pos":[0,21]}]}],"pos":[207824,207846],"yaml":true},{"content":"This conversion is not supported.","nodes":[{"pos":[0,33],"content":"This conversion is not supported.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]}]}],"pos":[208015,208049],"yaml":true},{"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,122],"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This conversion is not supported.","pos":[0,42],"source":"**Note** This conversion is not supported."},{"content":"Attempting to do so throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[43,122],"source":" Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[209519,209644],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[209813,209840],"yaml":true},{"content":"No value is returned.","nodes":[{"pos":[0,21],"content":"No value is returned.","nodes":[{"content":"No value is returned.","pos":[0,21]}]}],"pos":[209897,209919],"yaml":true},{"content":"This conversion is not supported.","nodes":[{"pos":[0,33],"content":"This conversion is not supported.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]}]}],"pos":[210087,210121],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>."}],"pos":[211585,211697],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,299],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,299],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt16%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,299],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[211708,212008],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[212175,212202],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[212258,212334],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>."}],"pos":[213868,213980],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,299],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,299],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,299],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[213991,214291],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[214456,214483],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[214539,214615],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>."}],"pos":[216149,216261],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,299],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,299],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt64%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,299],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[216272,216572],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[216738,216765],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[216821,216897],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>."}],"pos":[218431,218543],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,299],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,299],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToSByte%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,299],"source":" The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[218554,218854],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[219021,219048],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[219104,219180],"yaml":true},{"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,122],"content":"**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This conversion is not supported.","pos":[0,42],"source":"**Note** This conversion is not supported."},{"content":"Attempting to do so throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[43,122],"source":" Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[220720,220845],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[221013,221040],"yaml":true},{"content":"No value is returned.","nodes":[{"pos":[0,21],"content":"No value is returned.","nodes":[{"content":"No value is returned.","pos":[0,21]}]}],"pos":[221097,221119],"yaml":true},{"content":"This conversion is not supported.","nodes":[{"pos":[0,33],"content":"This conversion is not supported.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]}]}],"pos":[221287,221321],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,122],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>."}],"pos":[223963,224086],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.","nodes":[{"pos":[0,318],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.","pos":[0,318],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> method instead.","pos":[169,318],"source":" The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead."}]}]}],"pos":[224097,224416],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object.","nodes":[{"pos":[0,42],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Type\"></xref> object."}],"pos":[224579,224622],"yaml":true},{"content":"An <xref href=\"System.IFormatProvider\"></xref> object.","nodes":[{"pos":[0,54],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.IFormatProvider\"></xref> object."}],"pos":[224695,224750],"yaml":true},{"content":"An object of the specified type.","nodes":[{"pos":[0,32],"content":"An object of the specified type.","nodes":[{"content":"An object of the specified type.","pos":[0,32]}]}],"pos":[224807,224840],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[225008,225037],"yaml":true},{"content":"The value of the current <xref href=\"System.Char\"></xref> object cannot be converted to the type specified by the <code>type</code> parameter.","nodes":[{"pos":[0,142],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object cannot be converted to the type specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The value of the current <xref href=\"System.Char\"></xref> object cannot be converted to the type specified by the <code>type</code> parameter."}],"pos":[225137,225280],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>."}],"pos":[226750,226863],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,300],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,300],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,300],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[226874,227175],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)","nodes":[{"pos":[0,127],"content":"An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,54],"source":"An <xref href=\"System.IFormatProvider\"></xref> object."},{"content":"(Specify <ph id=\"ph1\">`null`</ph> because the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is ignored.)","pos":[55,127],"source":" (Specify `null` because the <code>provider</code> parameter is ignored.)"}]}],"pos":[227344,227472],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[227529,227605],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>."}],"pos":[229146,229259],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,300],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,300],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,300],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[229270,229571],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)","nodes":[{"pos":[0,127],"content":"An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,54],"source":"An <xref href=\"System.IFormatProvider\"></xref> object."},{"content":"(Specify <ph id=\"ph1\">`null`</ph> because the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is ignored.)","pos":[55,127],"source":" (Specify `null` because the <code>provider</code> parameter is ignored.)"}]}],"pos":[229738,229866],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[229923,229999],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>."}],"pos":[231540,231653],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"pos":[0,300],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=fullName> method instead.","pos":[0,300],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,168],"source":" It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=fullName&gt;</ph> method instead.","pos":[169,300],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=fullName> method instead."}]}]}],"pos":[231664,231965],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)","nodes":[{"pos":[0,127],"content":"An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,54],"source":"An <xref href=\"System.IFormatProvider\"></xref> object."},{"content":"(Specify <ph id=\"ph1\">`null`</ph> because the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is ignored.)","pos":[55,127],"source":" (Specify `null` because the <code>provider</code> parameter is ignored.)"}]}],"pos":[232133,232261],"yaml":true},{"content":"The converted value of the current <xref href=\"System.Char\"></xref> object.","nodes":[{"pos":[0,75],"content":"The converted value of the current <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> object.","source":"The converted value of the current <xref href=\"System.Char\"></xref> object."}],"pos":[232318,232394],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Char\n  commentId: T:System.Char\n  id: Char\n  children:\n  - System.Char.CompareTo(System.Char)\n  - System.Char.CompareTo(System.Object)\n  - System.Char.ConvertFromUtf32(System.Int32)\n  - System.Char.ConvertToUtf32(System.Char,System.Char)\n  - System.Char.ConvertToUtf32(System.String,System.Int32)\n  - System.Char.Equals(System.Char)\n  - System.Char.Equals(System.Object)\n  - System.Char.GetHashCode\n  - System.Char.GetNumericValue(System.String,System.Int32)\n  - System.Char.GetNumericValue(System.Char)\n  - System.Char.GetTypeCode\n  - System.Char.GetUnicodeCategory(System.Char)\n  - System.Char.GetUnicodeCategory(System.String,System.Int32)\n  - System.Char.IsControl(System.Char)\n  - System.Char.IsControl(System.String,System.Int32)\n  - System.Char.IsDigit(System.Char)\n  - System.Char.IsDigit(System.String,System.Int32)\n  - System.Char.IsHighSurrogate(System.String,System.Int32)\n  - System.Char.IsHighSurrogate(System.Char)\n  - System.Char.IsLetter(System.Char)\n  - System.Char.IsLetter(System.String,System.Int32)\n  - System.Char.IsLetterOrDigit(System.Char)\n  - System.Char.IsLetterOrDigit(System.String,System.Int32)\n  - System.Char.IsLower(System.Char)\n  - System.Char.IsLower(System.String,System.Int32)\n  - System.Char.IsLowSurrogate(System.Char)\n  - System.Char.IsLowSurrogate(System.String,System.Int32)\n  - System.Char.IsNumber(System.Char)\n  - System.Char.IsNumber(System.String,System.Int32)\n  - System.Char.IsPunctuation(System.Char)\n  - System.Char.IsPunctuation(System.String,System.Int32)\n  - System.Char.IsSeparator(System.Char)\n  - System.Char.IsSeparator(System.String,System.Int32)\n  - System.Char.IsSurrogate(System.Char)\n  - System.Char.IsSurrogate(System.String,System.Int32)\n  - System.Char.IsSurrogatePair(System.String,System.Int32)\n  - System.Char.IsSurrogatePair(System.Char,System.Char)\n  - System.Char.IsSymbol(System.Char)\n  - System.Char.IsSymbol(System.String,System.Int32)\n  - System.Char.IsUpper(System.Char)\n  - System.Char.IsUpper(System.String,System.Int32)\n  - System.Char.IsWhiteSpace(System.Char)\n  - System.Char.IsWhiteSpace(System.String,System.Int32)\n  - System.Char.MaxValue\n  - System.Char.MinValue\n  - System.Char.Parse(System.String)\n  - System.Char.ToLower(System.Char,System.Globalization.CultureInfo)\n  - System.Char.ToLower(System.Char)\n  - System.Char.ToLowerInvariant(System.Char)\n  - System.Char.ToString(System.IFormatProvider)\n  - System.Char.ToString(System.Char)\n  - System.Char.ToString\n  - System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)\n  - System.Char.ToUpper(System.Char)\n  - System.Char.ToUpperInvariant(System.Char)\n  - System.Char.TryParse(System.String,System.Char@)\n  - System.Char.System#IComparable#CompareTo(System.Object)\n  - System.Char.System#IConvertible#GetTypeCode\n  - System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToString(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)\n  langs:\n  - csharp\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a character as a UTF-16 code unit.\n  remarks: \"The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character. The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values. Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.  The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.  \\n  \\n The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.  \\n  \\n [Char objects, Unicode characters, and strings](#Relationship)   \\n [Characters and character categories](#Categories)   \\n [Characters and text elements](#Elements)   \\n [Common operations](#Operations)   \\n [Char values and interop](#Interop)  \\n  \\n<a name=\\\"Relationship\\\"></a>   \\n## Char objects, Unicode characters, and strings  \\n A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text. Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects. For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.  \\n  \\n Multiple 16-bit code units are used to represent single Unicode characters in the following cases:  \\n  \\n-   Glyphs, which may consist of a single character or of a base character followed by one or more combining characters. For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308. (The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.  \\n  \\n     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]\\n     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  \\n  \\n-   Characters outside the Unicode Basic Multilingual Plane (BMP). Unicode supports sixteen planes in addition to the BMP, which represents plane 0. A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane. For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character. Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16. The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60. U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF. U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.  \\n  \\n     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]\\n     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  \\n  \\n<a name=\\\"Categories\\\"></a>   \\n## Characters and character categories  \\n Each Unicode character or valid surrogate pair belongs to a Unicode category. In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, and <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, for example.  \\n  \\n To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method. For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.  \\n  \\n [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]\\n [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  \\n  \\n Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class. Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).  \\n  \\n<a name=\\\"Elements\\\"></a>   \\n## Characters and text elements  \\n Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects. For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units. Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.  \\n  \\n [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]\\n [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  \\n  \\n You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.  \\n  \\n-   You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.  \\n  \\n-   You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects. The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine. Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.  \\n  \\n     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]\\n     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  \\n  \\n-   If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the substring to a single UTF-16 encoded code unit. The following example calls the <xref:System.String.Normalize%2A?displayProperty=fullName> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).  \\n  \\n     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]\\n     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  \\n  \\n<a name=\\\"Operations\\\"></a>   \\n## Common operations  \\n The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:  \\n  \\n|To do this|Use these `System.Char` methods|  \\n|----------------|-------------------------------------|  \\n|Compare <xref:System.Char> objects|<xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A>|  \\n|Convert a code point to a string|<xref:System.Char.ConvertFromUtf32%2A>|  \\n|Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point|For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName><br /><br /> For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=fullName>|  \\n|Get the Unicode category of a character|<xref:System.Char.GetUnicodeCategory%2A>|  \\n|Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on|<xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A>|  \\n|Convert a <xref:System.Char> object that represents a number to a numeric value type|<xref:System.Char.GetNumericValue%2A>|  \\n|Convert a character in a string into a <xref:System.Char> object|<xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A>|  \\n|Convert a <xref:System.Char> object to a <xref:System.String> object|<xref:System.Char.ToString%2A>|  \\n|Change the case of a <xref:System.Char> object|<xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A>|  \\n  \\n<a name=\\\"Interop\\\"></a>   \\n## Char values and interop  \\nWhen a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default. You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.\"\n  example:\n  - \"The following code example demonstrates some of the methods in <xref:System.Char>.  \\n  \\n [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]\\n [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]\\n [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Char : IComparable, IComparable<char>, IConvertible, IEquatable<char>\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable{System.Char}\n  - System.IConvertible\n  - System.IEquatable{System.Char}\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.CompareTo(System.Char)\n  commentId: M:System.Char.CompareTo(System.Char)\n  id: CompareTo(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: CompareTo(Char)\n  nameWithType: Char.CompareTo(Char)\n  fullName: Char.CompareTo(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares this instance to a specified <xref href=\"System.Char\"></xref> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Char\"></xref> object.\n  remarks: \"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \\n  \\n The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.  \\n  \\n If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.  \\n  \\n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.  \\n  \\n Typically, implicit widening conversions are performed on numeric types. Consult your programming language's documentation to determine if its compiler performs widening conversions. If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.\"\n  example:\n  - \"The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.  \\n  \\n [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]\\n [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]\\n [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]\"\n  syntax:\n    content: public int CompareTo (char value);\n    parameters:\n    - id: value\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> object to compare.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the position of this instance in the sort order in relation to the <code>value</code> parameter.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance precedes <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance has the same position in the sort order as <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance follows <code>value</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Char.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.CompareTo(System.Object)\n  commentId: M:System.Char.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Char\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: Char.CompareTo(Object)\n  fullName: Char.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Object\"></xref>.\n  remarks: \"The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.  \\n  \\n The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.  \\n  \\n The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics. Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.CompareTo%2A>.  \\n  \\n [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]\\n [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]\\n [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]\"\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to compare this instance to, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the position of this instance in the sort order in relation to the <code>value</code> parameter.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance precedes <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance has the same position in the sort order as <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance follows <code>value</code>.  \\n  \\n -or-  \\n  \\n <code>value</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Char.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not a <xref href=\"System.Char\"></xref> object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ConvertFromUtf32(System.Int32)\n  commentId: M:System.Char.ConvertFromUtf32(System.Int32)\n  id: ConvertFromUtf32(System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ConvertFromUtf32(Int32)\n  nameWithType: Char.ConvertFromUtf32(Int32)\n  fullName: Char.ConvertFromUtf32(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified Unicode code point into a UTF-16 encoded string.\n  remarks: \"Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.  \\n  \\n A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair. However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion. For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class to convert bulk UTF-32 data into bulk UTF-16 data.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.  \\n  \\n [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]\\n [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]\\n [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]\"\n  syntax:\n    content: public static string ConvertFromUtf32 (int utf32);\n    parameters:\n    - id: utf32\n      type: System.Int32\n      description: A 21-bit Unicode code point.\n    return:\n      type: System.String\n      description: A string consisting of one <xref href=\"System.Char\"></xref> object or a surrogate pair of <xref href=\"System.Char\"></xref> objects equivalent to the code point specified by the <code>utf32</code> parameter.\n  overload: System.Char.ConvertFromUtf32*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>utf32</code> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ConvertToUtf32(System.Char,System.Char)\n  commentId: M:System.Char.ConvertToUtf32(System.Char,System.Char)\n  id: ConvertToUtf32(System.Char,System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ConvertToUtf32(Char, Char)\n  nameWithType: Char.ConvertToUtf32(Char, Char)\n  fullName: Char.ConvertToUtf32(Char, Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.\n  remarks: \"Use this method to convert a surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.  \\n  \\n Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit. However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units. These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate. Surrogate pairs are supported only by UTF-16 encoding. This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.  \\n  \\n [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]\\n [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]\\n [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]\"\n  syntax:\n    content: public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);\n    parameters:\n    - id: highSurrogate\n      type: System.Char\n      description: A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).\n    - id: lowSurrogate\n      type: System.Char\n      description: A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).\n    return:\n      type: System.Int32\n      description: The 21-bit Unicode code point represented by the <code>highSurrogate</code> and <code>lowSurrogate</code> parameters.\n  overload: System.Char.ConvertToUtf32*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>highSurrogate</code> is not in the range U+D800 through U+DBFF, or <code>lowSurrogate</code> is not in the range U+DC00 through U+DFFF.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ConvertToUtf32(System.String,System.Int32)\n  commentId: M:System.Char.ConvertToUtf32(System.String,System.Int32)\n  id: ConvertToUtf32(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ConvertToUtf32(String, Int32)\n  nameWithType: Char.ConvertToUtf32(String, Int32)\n  fullName: Char.ConvertToUtf32(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.\n  remarks: Use this method to convert a character or surrogate pair into a 21-bit Unicode code point. To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=fullName> class.\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.  \\n  \\n [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]\\n [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]\\n [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]\"\n  syntax:\n    content: public static int ConvertToUtf32 (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a character or surrogate pair.\n    - id: index\n      type: System.Int32\n      description: The index position of the character or surrogate pair in <code>s</code>.\n    return:\n      type: System.Int32\n      description: The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <code>s</code> parameter specified by the <code>index</code> parameter.\n  overload: System.Char.ConvertToUtf32*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a position within <code>s</code>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.Equals(System.Char)\n  commentId: M:System.Char.Equals(System.Char)\n  id: Equals(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: Equals(Char)\n  nameWithType: Char.Equals(Char)\n  fullName: Char.Equals(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether this instance is equal to the specified <xref href=\"System.Char\"></xref> object.\n  remarks: This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=fullName> because it does not need to unbox the `obj` parameter.\n  syntax:\n    content: public bool Equals (char obj);\n    parameters:\n    - id: obj\n      type: System.Char\n      description: An object to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>obj</code> parameter equals the value of this instance; otherwise, `false`.'\n  overload: System.Char.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.Equals(System.Object)\n  commentId: M:System.Char.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Char\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Char.Equals(Object)\n  fullName: Char.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  remarks: The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.\n  example:\n  - \"The following code example demonstrates <xref:System.Char.Equals%2A>.  \\n  \\n [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]\\n [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]\\n [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is an instance of <xref href=\"System.Char\"></xref> and equals the value of this instance; otherwise, `false`.'\n  overload: System.Char.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.GetHashCode\n  commentId: M:System.Char.GetHashCode\n  id: GetHashCode\n  parent: System.Char\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Char.GetHashCode()\n  fullName: Char.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Char.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.GetNumericValue(System.String,System.Int32)\n  commentId: M:System.Char.GetNumericValue(System.String,System.Int32)\n  id: GetNumericValue(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: GetNumericValue(String, Int32)\n  nameWithType: Char.GetNumericValue(String, Int32)\n  fullName: Char.GetNumericValue(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.\n  remarks: \"The `s` parameter must be the string representation of a numeric value. For example, if the character at position `index` in `s` is \\\"5\\\", the return value is 5. However, if the character at position `index` in `s` is \\\"z\\\", the return value is -1.  \\n  \\n Character positions in a string are indexed starting from zero.  \\n  \\n A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.  \\n  \\n If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number. As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.  \\n  \\n [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]\\n [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.  \\n  \\n [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]\\n [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]\\n [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]\"\n  syntax:\n    content: public static double GetNumericValue (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A <xref href=\"System.String\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The character position in <code>s</code>.\n    return:\n      type: System.Double\n      description: The numeric value of the character at position <code>index</code> in <code>s</code> if that character represents a number; otherwise, -1.\n  overload: System.Char.GetNumericValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.GetNumericValue(System.Char)\n  commentId: M:System.Char.GetNumericValue(System.Char)\n  id: GetNumericValue(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: GetNumericValue(Char)\n  nameWithType: Char.GetNumericValue(Char)\n  fullName: Char.GetNumericValue(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified numeric Unicode character to a double-precision floating point number.\n  remarks: \"The `c` parameter must be the <xref:System.Char> representation of a numeric value. For example, if `c` is \\\"5\\\", the return value is 5. However, if `c` is \\\"z\\\", the return value is -1.0.  \\n  \\n A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.  \\n  \\n The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit. However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.  \\n  \\n [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]\\n [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]\"\n  example:\n  - \"The following example demonstrates <xref:System.Char.GetNumericValue%2A>.  \\n  \\n [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]\\n [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]\\n [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]\"\n  syntax:\n    content: public static double GetNumericValue (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    return:\n      type: System.Double\n      description: The numeric value of <code>c</code> if that character represents a number; otherwise, -1.0.\n  overload: System.Char.GetNumericValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.GetTypeCode\n  commentId: M:System.Char.GetTypeCode\n  id: GetTypeCode\n  parent: System.Char\n  langs:\n  - csharp\n  name: GetTypeCode()\n  nameWithType: Char.GetTypeCode()\n  fullName: Char.GetTypeCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Char\"></xref>.\n  syntax:\n    content: public TypeCode GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: The enumerated constant, <xref href=\"System.TypeCode.Char\"></xref>.\n  overload: System.Char.GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.GetUnicodeCategory(System.Char)\n  commentId: M:System.Char.GetUnicodeCategory(System.Char)\n  id: GetUnicodeCategory(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: GetUnicodeCategory(Char)\n  nameWithType: Char.GetUnicodeCategory(Char)\n  fullName: Char.GetUnicodeCategory(Char)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Categorizes a specified Unicode character into a group identified by one of the <xref href=\"System.Globalization.UnicodeCategory\"></xref> values.\n  remarks: \"The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=fullName>.  \\n  \\n Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.  \\n  \\n [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]\\n [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]\\n [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]\"\n  syntax:\n    content: public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to categorize.\n    return:\n      type: System.Globalization.UnicodeCategory\n      description: A <xref href=\"System.Globalization.UnicodeCategory\"></xref> value that identifies the group that contains <code>c</code>.\n  overload: System.Char.GetUnicodeCategory*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.GetUnicodeCategory(System.String,System.Int32)\n  commentId: M:System.Char.GetUnicodeCategory(System.String,System.Int32)\n  id: GetUnicodeCategory(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: GetUnicodeCategory(String, Int32)\n  nameWithType: Char.GetUnicodeCategory(String, Int32)\n  fullName: Char.GetUnicodeCategory(String, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Categorizes the character at the specified position in a specified string into a group identified by one of the <xref href=\"System.Globalization.UnicodeCategory\"></xref> values.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method when it is passed a particular character as a parameter. The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName> method is designed to reflect the current version of the Unicode standard. In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility. As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=fullName> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=fullName>.  \\n  \\n Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/). In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).\"\n  example:\n  - \"The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.  \\n  \\n [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]\\n [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]\\n [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]\"\n  syntax:\n    content: public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A <xref href=\"System.String\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The character position in <code>s</code>.\n    return:\n      type: System.Globalization.UnicodeCategory\n      description: A <xref href=\"System.Globalization.UnicodeCategory\"></xref> enumerated constant that identifies the group that contains the character at position <code>index</code> in <code>s</code>.\n  overload: System.Char.GetUnicodeCategory*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsControl(System.Char)\n  commentId: M:System.Char.IsControl(System.Char)\n  id: IsControl(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsControl(Char)\n  nameWithType: Char.IsControl(Char)\n  fullName: Char.IsControl(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a control character.\n  remarks: Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. T The Unicode standard assigns code points from \\U0000 to \\U001F, \\U007F, and from \\U0080 to \\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.\n  example:\n  - \"The following example lists the Unicode code point of each of the control characters.  \\n  \\n [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]\\n [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]\\n [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]\"\n  syntax:\n    content: public static bool IsControl (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a control character; otherwise, `false`.'\n  overload: System.Char.IsControl*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsControl(System.String,System.Int32)\n  commentId: M:System.Char.IsControl(System.String,System.Int32)\n  id: IsControl(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsControl(String, Int32)\n  nameWithType: Char.IsControl(String, Int32)\n  fullName: Char.IsControl(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a control character.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT. The Unicode standard assigns code points from \\\\U0000 to \\\\U001F, \\\\U007F, and from \\\\U0080 to \\\\U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application. Valid control characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.\"\n  example:\n  - \"The following example enumerates the characters in a string and determines whether any are control characters.  \\n  \\n [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]\\n [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]\\n [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]\"\n  syntax:\n    content: public static bool IsControl (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a control character; otherwise, `false`.'\n  overload: System.Char.IsControl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsDigit(System.Char)\n  commentId: M:System.Char.IsDigit(System.Char)\n  id: IsDigit(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsDigit(Char)\n  nameWithType: Char.IsDigit(Char)\n  fullName: Char.IsDigit(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a decimal digit.\n  remarks: \"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.  \\n  \\n Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsDigit%2A>.  \\n  \\n [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]\\n [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]\\n [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]\"\n  syntax:\n    content: public static bool IsDigit (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a decimal digit; otherwise, `false`.'\n  overload: System.Char.IsDigit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsDigit(System.String,System.Int32)\n  commentId: M:System.Char.IsDigit(System.String,System.Int32)\n  id: IsDigit(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsDigit(String, Int32)\n  nameWithType: Char.IsDigit(String, Int32)\n  fullName: Char.IsDigit(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.\n  remarks: \"This method determines whether a <xref:System.Char> is a radix-10 digit. This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category. Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.  \\n  \\n Character positions in a string are indexed starting from zero.  \\n  \\n Valid digits are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsDigit%2A>.  \\n  \\n [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]\\n [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]\\n [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]\"\n  syntax:\n    content: public static bool IsDigit (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a decimal digit; otherwise, `false`.'\n  overload: System.Char.IsDigit*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsHighSurrogate(System.String,System.Int32)\n  commentId: M:System.Char.IsHighSurrogate(System.String,System.Int32)\n  id: IsHighSurrogate(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsHighSurrogate(String, Int32)\n  nameWithType: Char.IsHighSurrogate(String, Int32)\n  fullName: Char.IsHighSurrogate(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the <xref href=\"System.Char\"></xref> object at the specified position in a string is a high surrogate.\n  remarks: \"The `index` parameter is zero-based.  \\n  \\n In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.  \\n  \\n [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]\\n [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]\\n [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]\"\n  syntax:\n    content: public static bool IsHighSurrogate (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the numeric value of the specified character in the <code>s</code> parameter ranges from U+D800 through U+DBFF; otherwise, `false`.'\n  overload: System.Char.IsHighSurrogate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a position within <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsHighSurrogate(System.Char)\n  commentId: M:System.Char.IsHighSurrogate(System.Char)\n  id: IsHighSurrogate(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsHighSurrogate(Char)\n  nameWithType: Char.IsHighSurrogate(Char)\n  fullName: Char.IsHighSurrogate(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified <xref href=\"System.Char\"></xref> object is a high surrogate.\n  remarks: In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The first element in this pair is the high surrogate. Its code point can range from U+D800 to U+DBFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.  \\n  \\n [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]\\n [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]\\n [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]\"\n  syntax:\n    content: public static bool IsHighSurrogate (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if the numeric value of the <code>c</code> parameter ranges from U+D800 through U+DBFF; otherwise, `false`.'\n  overload: System.Char.IsHighSurrogate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLetter(System.Char)\n  commentId: M:System.Char.IsLetter(System.Char)\n  id: IsLetter(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLetter(Char)\n  nameWithType: Char.IsLetter(Char)\n  fullName: Char.IsLetter(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a Unicode letter.\n  remarks: \"This method determines whether a <xref:System.Char> is a member of any category of Unicode letter. Unicode letters include the following:  \\n  \\n-   Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\\\<CJK Ideograph, First>) through U+9FC3 (\\\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsLetter%2A>.  \\n  \\n [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]\\n [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]\\n [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]\"\n  syntax:\n    content: public static bool IsLetter (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a letter; otherwise, `false`.'\n  overload: System.Char.IsLetter*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLetter(System.String,System.Int32)\n  commentId: M:System.Char.IsLetter(System.String,System.Int32)\n  id: IsLetter(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLetter(String, Int32)\n  nameWithType: Char.IsLetter(String, Int32)\n  fullName: Char.IsLetter(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter. Unicode letters include the following:  \\n  \\n-   Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n-   Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\\\\<CJK Ideograph, First>) through U+9FC3 (\\\\<CJK Ideograph, Last>). These characters are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsLetter%2A>.  \\n  \\n [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]\\n [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]\\n [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]\"\n  syntax:\n    content: public static bool IsLetter (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a letter; otherwise, `false`.'\n  overload: System.Char.IsLetter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLetterOrDigit(System.Char)\n  commentId: M:System.Char.IsLetterOrDigit(System.Char)\n  id: IsLetterOrDigit(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLetterOrDigit(Char)\n  nameWithType: Char.IsLetterOrDigit(Char)\n  fullName: Char.IsLetterOrDigit(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.\n  remarks: 'Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.'\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.  \\n  \\n [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]\\n [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]\\n [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]\"\n  syntax:\n    content: public static bool IsLetterOrDigit (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a letter or a decimal digit; otherwise, `false`.'\n  overload: System.Char.IsLetterOrDigit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLetterOrDigit(System.String,System.Int32)\n  commentId: M:System.Char.IsLetterOrDigit(System.String,System.Int32)\n  id: IsLetterOrDigit(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLetterOrDigit(String, Int32)\n  nameWithType: Char.IsLetterOrDigit(String, Int32)\n  fullName: Char.IsLetterOrDigit(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.  \\n  \\n [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]\\n [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]\\n [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]\"\n  syntax:\n    content: public static bool IsLetterOrDigit (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a letter or a decimal digit; otherwise, `false`.'\n  overload: System.Char.IsLetterOrDigit*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLower(System.Char)\n  commentId: M:System.Char.IsLower(System.Char)\n  id: IsLower(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLower(Char)\n  nameWithType: Char.IsLower(Char)\n  fullName: Char.IsLower(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a lowercase letter.\n  remarks: 'Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.'\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsLower%2A>.  \\n  \\n [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]\\n [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]\\n [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]\"\n  syntax:\n    content: public static bool IsLower (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a lowercase letter; otherwise, `false`.'\n  overload: System.Char.IsLower*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLower(System.String,System.Int32)\n  commentId: M:System.Char.IsLower(System.String,System.Int32)\n  id: IsLower(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLower(String, Int32)\n  nameWithType: Char.IsLower(String, Int32)\n  fullName: Char.IsLower(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsLower%2A>.  \\n  \\n [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]\\n [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]\\n [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]\"\n  syntax:\n    content: public static bool IsLower (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a lowercase letter; otherwise, `false`.'\n  overload: System.Char.IsLower*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLowSurrogate(System.Char)\n  commentId: M:System.Char.IsLowSurrogate(System.Char)\n  id: IsLowSurrogate(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLowSurrogate(Char)\n  nameWithType: Char.IsLowSurrogate(Char)\n  fullName: Char.IsLowSurrogate(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified <xref href=\"System.Char\"></xref> object is a low surrogate.\n  remarks: In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.  \\n  \\n [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]\\n [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]\\n [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]\"\n  syntax:\n    content: public static bool IsLowSurrogate (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if the numeric value of the <code>c</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`.'\n  overload: System.Char.IsLowSurrogate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsLowSurrogate(System.String,System.Int32)\n  commentId: M:System.Char.IsLowSurrogate(System.String,System.Int32)\n  id: IsLowSurrogate(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsLowSurrogate(String, Int32)\n  nameWithType: Char.IsLowSurrogate(String, Int32)\n  fullName: Char.IsLowSurrogate(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the <xref href=\"System.Char\"></xref> object at the specified position in a string is a low surrogate.\n  remarks: \"The `index` parameter is zero-based.  \\n  \\n In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair. The second element in this pair is the low surrogate. Its code point can range from U+DC00 to U+DFFF. An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.  \\n  \\n [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]\\n [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]\\n [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]\"\n  syntax:\n    content: public static bool IsLowSurrogate (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the numeric value of the specified character in the <code>s</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`.'\n  overload: System.Char.IsLowSurrogate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a position within <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsNumber(System.Char)\n  commentId: M:System.Char.IsNumber(System.Char)\n  id: IsNumber(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsNumber(Char)\n  nameWithType: Char.IsNumber(Char)\n  fullName: Char.IsNumber(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a number.\n  remarks: \"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.  \\n  \\n Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number. However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.  \\n  \\n [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]\\n [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]\"\n  example:\n  - \"The following example demonstrates <xref:System.Char.IsNumber%2A>.  \\n  \\n [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]\\n [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]\\n [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]\"\n  syntax:\n    content: public static bool IsNumber (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a number; otherwise, `false`.'\n  overload: System.Char.IsNumber*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsNumber(System.String,System.Int32)\n  commentId: M:System.Char.IsNumber(System.String,System.Int32)\n  id: IsNumber(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsNumber(String, Int32)\n  nameWithType: Char.IsNumber(String, Int32)\n  fullName: Char.IsNumber(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a number.\n  remarks: \"This method determines whether a <xref:System.Char> is of any numeric Unicode category. In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers. This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.  \\n  \\n Character positions in a string are indexed starting from zero.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string). To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=fullName> or <xref:System.Double.TryParse%2A?displayProperty=fullName> of an integral or floating point type.  \\n  \\n Valid numbers are members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>, or <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category.  \\n  \\n If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE. However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.  \\n  \\n [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]\\n [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]\"\n  example:\n  - \"The following example demonstrates <xref:System.Char.IsNumber%2A>.  \\n  \\n [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]\\n [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]\\n [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]\"\n  syntax:\n    content: public static bool IsNumber (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a number; otherwise, `false`.'\n  overload: System.Char.IsNumber*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsPunctuation(System.Char)\n  commentId: M:System.Char.IsPunctuation(System.Char)\n  id: IsPunctuation(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsPunctuation(Char)\n  nameWithType: Char.IsPunctuation(Char)\n  fullName: Char.IsPunctuation(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a punctuation mark.\n  remarks: \"Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`. They include characters with the Unicode code points listed in the following table.  \\n  \\n|||||  \\n|-|-|-|-|  \\n|U+0021 to U+0023|U+060C and U+060D|U+1800 to U+180A|U+3014 to U+301F|  \\n|U+0025 to U+002A|U+061B|U+1944 and U+1945|U+3030|  \\n|U+002C to U+002F|U+061E and U+061F|U+19DE and U+19DF|U+303D|  \\n|U+003A and U+003B|U+066A to U+066D|U+1A1E and U+1A1F|U+30A0|  \\n|U+003F and U+0040|U+06D4|U+1B5A to U+1B60|U+30FB|  \\n|U+005B to U+005D|U+0700 to U+070D|U+2010 to U+2027|U+A874 to U+A877|  \\n|U+005F|U+07F7 to U+07F9|U+2030 to U+2043|U+FD3E and U+FD3F|  \\n|U+007B|U+0964 and U+0965|U+2045 to U+2051|U+FE10 to U+FE19|  \\n|U+007D|U+0970|U+2053 to U+205E|U+FE30 to U+FE52|  \\n|U+00A1|U+0DF4|U+207D and  U+207E|U+FE54 to U+FE61|  \\n|U+00AB|U+0E4F to U+0E5B|U+208D and U+208E|U+FE63|  \\n|U+00AD|U+0F04 to U+0F12|U+2329 and U+232A|U+FE68|  \\n|U+00B7|U+0F3A to U+0F3D|U+2768 to U+2775|U+FE6A and U+FE6B|  \\n|U+00BB|U+0F85|U+27C5 to U+27C6|U+FF01 to U+FF03|  \\n|U+00BF|U+0FD0 and U+0FD1|U+27E6 to U+27EB|U+FF05 to U+FF0A|  \\n|U+037E|U+104A to U+104F|U+2983 to U+2998|U+FF0C to U+FF0F|  \\n|U+0387|U+10FB|U+29D8 to U+29DB|U+FF1A and U+FF1B|  \\n|U+055A to U+055F|U+1361 to U+1368|U+29FC and U+29FD|U+FF1F and U+FF20|  \\n|U+0589 and U+058A|U+166D and U+166E|U+2CF9 to U+2CFC|U+FF3B to U+FF3D|  \\n|U+05BE|U+169B and U+169C|U+2CFE and U+2CFF|U+FF3F|  \\n|U+05C0|U+16EB to U+16ED|U+2E00 to U+2E17|U+FF5B|  \\n|U+05C3|U+1735 and U+1736|U+2E1C and U+2E1D|U+FF5D|  \\n|U+05C6|U+17D4 to U+17D6|U+3001 to U+3003|U+FF5F to U+FF65|  \\n|U+05F3 and U+05F4|U+17D8 to U+17DA|U+3008 to U+3011||\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.  \\n  \\n [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]\\n [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]\\n [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]\"\n  syntax:\n    content: public static bool IsPunctuation (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a punctuation mark; otherwise, `false`.'\n  overload: System.Char.IsPunctuation*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsPunctuation(System.String,System.Int32)\n  commentId: M:System.Char.IsPunctuation(System.String,System.Int32)\n  id: IsPunctuation(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsPunctuation(String, Int32)\n  nameWithType: Char.IsPunctuation(String, Int32)\n  fullName: Char.IsPunctuation(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`. They include characters with the Unicode code points listed in the following table.  \\n  \\n|||||  \\n|-|-|-|-|  \\n|U+0021 to U+0023|U+060C and U+060D|U+1800 to U+180A|U+3014 to U+301F|  \\n|U+0025 to U+002A|U+061B|U+1944 and U+1945|U+3030|  \\n|U+002C to U+002F|U+061E and U+061F|U+19DE and U+19DF|U+303D|  \\n|U+003A and U+003B|U+066A to U+066D|U+1A1E and U+1A1F|U+30A0|  \\n|U+003F and U+0040|U+06D4|U+1B5A to U+1B60|U+30FB|  \\n|U+005B to U+005D|U+0700 to U+070D|U+2010 to U+2027|U+A874 to U+A877|  \\n|U+005F|U+07F7 to U+07F9|U+2030 to U+2043|U+FD3E and U+FD3F|  \\n|U+007B|U+0964 and U+0965|U+2045 to U+2051|U+FE10 to U+FE19|  \\n|U+007D|U+0970|U+2053 to U+205E|U+FE30 to U+FE52|  \\n|U+00A1|U+0DF4|U+207D and  U+207E|U+FE54 to U+FE61|  \\n|U+00AB|U+0E4F to U+0E5B|U+208D and U+208E|U+FE63|  \\n|U+00AD|U+0F04 to U+0F12|U+2329 and U+232A|U+FE68|  \\n|U+00B7|U+0F3A to U+0F3D|U+2768 to U+2775|U+FE6A and U+FE6B|  \\n|U+00BB|U+0F85|U+27C5 to U+27C6|U+FF01 to U+FF03|  \\n|U+00BF|U+0FD0 and U+0FD1|U+27E6 to U+27EB|U+FF05 to U+FF0A|  \\n|U+037E|U+104A to U+104F|U+2983 to U+2998|U+FF0C to U+FF0F|  \\n|U+0387|U+10FB|U+29D8 to U+29DB|U+FF1A and U+FF1B|  \\n|U+055A to U+055F|U+1361 to U+1368|U+29FC and U+29FD|U+FF1F and U+FF20|  \\n|U+0589 and U+058A|U+166D and U+166E|U+2CF9 to U+2CFC|U+FF3B to U+FF3D|  \\n|U+05BE|U+169B and U+169C|U+2CFE and U+2CFF|U+FF3F|  \\n|U+05C0|U+16EB to U+16ED|U+2E00 to U+2E17|U+FF5B|  \\n|U+05C3|U+1735 and U+1736|U+2E1C and U+2E1D|U+FF5D|  \\n|U+05C6|U+17D4 to U+17D6|U+3001 to U+3003|U+FF5F to U+FF65|  \\n|U+05F3 and U+05F4|U+17D8 to U+17DA|U+3008 to U+3011||\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.  \\n  \\n [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]\\n [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]\\n [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]\"\n  syntax:\n    content: public static bool IsPunctuation (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a punctuation mark; otherwise, `false`.'\n  overload: System.Char.IsPunctuation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSeparator(System.Char)\n  commentId: M:System.Char.IsSeparator(System.Char)\n  id: IsSeparator(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSeparator(Char)\n  nameWithType: Char.IsSeparator(Char)\n  fullName: Char.IsSeparator(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a separator character.\n  remarks: \"The Unicode standard recognizes three subcategories of separators:  \\n  \\n-   Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\\\u0020.  \\n  \\n-   Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\\\u2028.  \\n  \\n-   Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\\\u2029.  \\n  \\n> [!NOTE]\\n>  The Unicode standard classifies the characters \\\\u000A (LF), \\\\u000C (FF), and \\\\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters.\"\n  example:\n  - \"The following example lists the <xref:System.Char> objects that are classified as separator characters.  \\n  \\n [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]\\n [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]\\n [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]\"\n  syntax:\n    content: public static bool IsSeparator (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a separator character; otherwise, `false`.'\n  overload: System.Char.IsSeparator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSeparator(System.String,System.Int32)\n  commentId: M:System.Char.IsSeparator(System.String,System.Int32)\n  id: IsSeparator(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSeparator(String, Int32)\n  nameWithType: Char.IsSeparator(String, Int32)\n  fullName: Char.IsSeparator(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a separator character.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n The Unicode standard recognizes three subcategories of separators:  \\n  \\n-   Space separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes characters such as \\\\u0020.  \\n  \\n-   Line separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\\\u2028.  \\n  \\n-   Paragraph separators (the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), which includes \\\\u2029.  \\n  \\n> [!NOTE]\\n>  The Unicode standard classifies the characters \\\\u000A (LF), \\\\u000C (FF), and \\\\u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category), not as separator characters.\"\n  example:\n  - \"The following example demonstrates <xref:System.Char.IsSeparator%2A>.  \\n  \\n [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]\\n [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]\\n [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]\"\n  syntax:\n    content: public static bool IsSeparator (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a separator character; otherwise, `false`.'\n  overload: System.Char.IsSeparator*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSurrogate(System.Char)\n  commentId: M:System.Char.IsSurrogate(System.Char)\n  id: IsSurrogate(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSurrogate(Char)\n  nameWithType: Char.IsSurrogate(Char)\n  fullName: Char.IsSurrogate(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified character has a surrogate code unit.\n  remarks: A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF. Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category. The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair. For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).\n  example:\n  - \"The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.  \\n  \\n [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]\\n [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]\\n [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]\"\n  syntax:\n    content: public static bool IsSurrogate (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is either a high surrogate or a low surrogate; otherwise, `false`.'\n  overload: System.Char.IsSurrogate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSurrogate(System.String,System.Int32)\n  commentId: M:System.Char.IsSurrogate(System.String,System.Int32)\n  id: IsSurrogate(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSurrogate(String, Int32)\n  nameWithType: Char.IsSurrogate(String, Int32)\n  fullName: Char.IsSurrogate(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string has a surrogate code unit.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF. Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory?displayProperty=fullName> category. The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair. For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.  \\n  \\n [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]\\n [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]\\n [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]\"\n  syntax:\n    content: public static bool IsSurrogate (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a either a high surrogate or a low surrogate; otherwise, `false`.'\n  overload: System.Char.IsSurrogate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSurrogatePair(System.String,System.Int32)\n  commentId: M:System.Char.IsSurrogatePair(System.String,System.Int32)\n  id: IsSurrogatePair(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSurrogatePair(String, Int32)\n  nameWithType: Char.IsSurrogatePair(String, Int32)\n  fullName: Char.IsSurrogatePair(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether two adjacent <xref href=\"System.Char\"></xref> objects at a specified position in a string form a surrogate pair.\n  remarks: Ordinarily, a single character is represented by a single 16-bit Unicode code unit. UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units. The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate. The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate. Individual surrogate code points have no interpretation of their own. For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.  \\n  \\n [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]\\n [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]\\n [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]\"\n  syntax:\n    content: public static bool IsSurrogatePair (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The starting position of the pair of characters to evaluate within <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>s</code> parameter includes adjacent characters at positions <code>index</code> and <code>index</code> + 1, and the numeric value of the character at position <code>index</code> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <code>index</code>+1 ranges from U+DC00 through U+DFFF; otherwise, `false`.'\n  overload: System.Char.IsSurrogatePair*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a position within <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSurrogatePair(System.Char,System.Char)\n  commentId: M:System.Char.IsSurrogatePair(System.Char,System.Char)\n  id: IsSurrogatePair(System.Char,System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSurrogatePair(Char, Char)\n  nameWithType: Char.IsSurrogatePair(Char, Char)\n  fullName: Char.IsSurrogatePair(Char, Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the two specified <xref href=\"System.Char\"></xref> objects form a surrogate pair.\n  remarks: Ordinarily, a single character is represented by a single 16-bit Unicode code unit. UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units. The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate. The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate. Individual surrogate code points have no interpretation of their own. For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).\n  example:\n  - \"The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.  \\n  \\n [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]\\n [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]\\n [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]\"\n  syntax:\n    content: public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);\n    parameters:\n    - id: highSurrogate\n      type: System.Char\n      description: The character to evaluate as the high surrogate of a surrogate pair.\n    - id: lowSurrogate\n      type: System.Char\n      description: The character to evaluate as the low surrogate of a surrogate pair.\n    return:\n      type: System.Boolean\n      description: '`true` if the numeric value of the <code>highSurrogate</code> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <code>lowSurrogate</code> parameter ranges from U+DC00 through U+DFFF; otherwise, `false`.'\n  overload: System.Char.IsSurrogatePair*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSymbol(System.Char)\n  commentId: M:System.Char.IsSymbol(System.Char)\n  id: IsSymbol(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSymbol(Char)\n  nameWithType: Char.IsSymbol(Char)\n  fullName: Char.IsSymbol(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as a symbol character.\n  remarks: \"Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.  \\n  \\n Symbols in the Unicode standard are a loosely defined set of characters that include the following:  \\n  \\n-   Currency symbols.  \\n  \\n-   Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.  \\n  \\n-   Number forms, such as subscripts and superscripts.  \\n  \\n-   Mathematical operators and arrows.  \\n  \\n-   Geometric symbols.  \\n  \\n-   Technical symbols.  \\n  \\n-   Braille patterns.  \\n  \\n-   Dingbats.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsSymbol%2A>.  \\n  \\n [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]\\n [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]\\n [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]\"\n  syntax:\n    content: public static bool IsSymbol (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is a symbol character; otherwise, `false`.'\n  overload: System.Char.IsSymbol*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsSymbol(System.String,System.Int32)\n  commentId: M:System.Char.IsSymbol(System.String,System.Int32)\n  id: IsSymbol(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsSymbol(String, Int32)\n  nameWithType: Char.IsSymbol(String, Int32)\n  fullName: Char.IsSymbol(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as a symbol character.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=fullName>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.  \\n  \\n Symbols in the Unicode standard are a loosely defined set of characters that include the following:  \\n  \\n-   Currency symbols.  \\n  \\n-   Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.  \\n  \\n-   Number forms, such as subscripts and superscripts.  \\n  \\n-   Mathematical operators and arrows.  \\n  \\n-   Geometric symbols.  \\n  \\n-   Technical symbols.  \\n  \\n-   Braille patterns.  \\n  \\n-   Dingbats.\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsSymbol%2A>.  \\n  \\n [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]\\n [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]\\n [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]\"\n  syntax:\n    content: public static bool IsSymbol (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is a symbol character; otherwise, `false`.'\n  overload: System.Char.IsSymbol*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsUpper(System.Char)\n  commentId: M:System.Char.IsUpper(System.Char)\n  id: IsUpper(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsUpper(Char)\n  nameWithType: Char.IsUpper(Char)\n  fullName: Char.IsUpper(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as an uppercase letter.\n  remarks: 'Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.'\n  syntax:\n    content: public static bool IsUpper (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is an uppercase letter; otherwise, `false`.'\n  overload: System.Char.IsUpper*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsUpper(System.String,System.Int32)\n  commentId: M:System.Char.IsUpper(System.String,System.Int32)\n  id: IsUpper(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsUpper(String, Int32)\n  nameWithType: Char.IsUpper(String, Int32)\n  fullName: Char.IsUpper(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.\"\n  syntax:\n    content: public static bool IsUpper (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is an uppercase letter; otherwise, `false`.'\n  overload: System.Char.IsUpper*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsWhiteSpace(System.Char)\n  commentId: M:System.Char.IsWhiteSpace(System.Char)\n  id: IsWhiteSpace(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsWhiteSpace(Char)\n  nameWithType: Char.IsWhiteSpace(Char)\n  fullName: Char.IsWhiteSpace(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the specified Unicode character is categorized as white space.\n  remarks: \"White space characters are the following Unicode characters:  \\n  \\n-   Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).  \\n  \\n-   Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).  \\n  \\n-   Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).  \\n  \\n-   The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).\"\n  example:\n  - \"The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.  \\n  \\n [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]\\n [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]\\n [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]\"\n  syntax:\n    content: public static bool IsWhiteSpace (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> is white space; otherwise, `false`.'\n  overload: System.Char.IsWhiteSpace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.IsWhiteSpace(System.String,System.Int32)\n  commentId: M:System.Char.IsWhiteSpace(System.String,System.Int32)\n  id: IsWhiteSpace(System.String,System.Int32)\n  parent: System.Char\n  langs:\n  - csharp\n  name: IsWhiteSpace(String, Int32)\n  nameWithType: Char.IsWhiteSpace(String, Int32)\n  fullName: Char.IsWhiteSpace(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether the character at the specified position in a specified string is categorized as white space.\n  remarks: \"Character positions in a string are indexed starting from zero.  \\n  \\n White space characters are the following Unicode characters:  \\n  \\n-   Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).  \\n  \\n-   Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).  \\n  \\n-   Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).  \\n  \\n-   The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).\"\n  example:\n  - \"The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.  \\n  \\n [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]\\n [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]\\n [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]\"\n  syntax:\n    content: public static bool IsWhiteSpace (string s, int index);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string.\n    - id: index\n      type: System.Int32\n      description: The position of the character to evaluate in <code>s</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the character at position <code>index</code> in <code>s</code> is white space; otherwise, `false`.'\n  overload: System.Char.IsWhiteSpace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than the last position in <code>s</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.MaxValue\n  commentId: F:System.Char.MaxValue\n  id: MaxValue\n  parent: System.Char\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: Char.MaxValue\n  fullName: Char.MaxValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the largest possible value of a <xref href=\"System.Char\"></xref>. This field is constant.\n  remarks: The value of this constant is hexadecimal 0xFFFF.\n  syntax:\n    content: public const char MaxValue;\n    return:\n      type: System.Char\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.MinValue\n  commentId: F:System.Char.MinValue\n  id: MinValue\n  parent: System.Char\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: Char.MinValue\n  fullName: Char.MinValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the smallest possible value of a <xref href=\"System.Char\"></xref>. This field is constant.\n  remarks: The value of this constant is hexadecimal 0x00.\n  syntax:\n    content: public const char MinValue;\n    return:\n      type: System.Char\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.Parse(System.String)\n  commentId: M:System.Char.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Char\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Char.Parse(String)\n  fullName: Char.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified string to its equivalent Unicode character.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates <xref:System.Char.Parse%2A>.  \\n  \\n [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]\\n [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]\\n [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]\"\n  syntax:\n    content: public static char Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a single character, or `null`.\n    return:\n      type: System.Char\n      description: A Unicode character equivalent to the sole character in <code>s</code>.\n  overload: System.Char.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: The length of <code>s</code> is not 1.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToLower(System.Char,System.Globalization.CultureInfo)\n  commentId: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)\n  id: ToLower(System.Char,System.Globalization.CultureInfo)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToLower(Char, CultureInfo)\n  nameWithType: Char.ToLower(Char, CultureInfo)\n  fullName: Char.ToLower(Char, CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.\n  remarks: Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase.\n  example:\n  - \"The following code example demonstrates <xref:System.Char.ToLower%2A>.  \\n  \\n [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]\\n [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]\\n [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]\"\n  syntax:\n    content: public static char ToLower (char c, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An object that supplies culture-specific casing rules.\n    return:\n      type: System.Char\n      description: The lowercase equivalent of <code>c</code>, modified according to <code>culture</code>, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic.\n  overload: System.Char.ToLower*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>culture</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToLower(System.Char)\n  commentId: M:System.Char.ToLower(System.Char)\n  id: ToLower(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToLower(Char)\n  nameWithType: Char.ToLower(Char)\n  fullName: Char.ToLower(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a Unicode character to its lowercase equivalent.\n  remarks: \"Casing rules are obtained from the current culture.  \\n  \\n Use <xref:System.String.ToLower%2A?displayProperty=fullName> to convert a string to lowercase.\"\n  example:\n  - \"The following example demonstrates <xref:System.Char.ToLower%2A>.  \\n  \\n [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]\\n [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]\\n [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]\"\n  syntax:\n    content: public static char ToLower (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    return:\n      type: System.Char\n      description: The lowercase equivalent of <code>c</code>, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic.\n  overload: System.Char.ToLower*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToLowerInvariant(System.Char)\n  commentId: M:System.Char.ToLowerInvariant(System.Char)\n  id: ToLowerInvariant(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToLowerInvariant(Char)\n  nameWithType: Char.ToLowerInvariant(Char)\n  fullName: Char.ToLowerInvariant(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.\n  remarks: \"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method. The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.  \\n  \\n Use <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> to convert a string to lowercase.\"\n  syntax:\n    content: public static char ToLowerInvariant (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    return:\n      type: System.Char\n      description: The lowercase equivalent of the <code>c</code> parameter, or the unchanged value of <code>c</code>, if <code>c</code> is already lowercase or not alphabetic.\n  overload: System.Char.ToLowerInvariant*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToString(System.IFormatProvider)\n  commentId: M:System.Char.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Char.ToString(IFormatProvider)\n  fullName: Char.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.\n  remarks: The `provider` parameter is ignored; it does not participate in this operation.\n  example:\n  - \"The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.  \\n  \\n [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]\\n [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]\\n [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]\"\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: (Reserved) An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>provider</code>.\n  overload: System.Char.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToString(System.Char)\n  commentId: M:System.Char.ToString(System.Char)\n  id: ToString(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToString(Char)\n  nameWithType: Char.ToString(Char)\n  fullName: Char.ToString(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified Unicode character to its equivalent string representation.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates <xref:System.Char.ToString%2A>.  \\n  \\n [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]\\n [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]\\n [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]\"\n  syntax:\n    content: public static string ToString (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    return:\n      type: System.String\n      description: The string representation of the value of <code>c</code>.\n  overload: System.Char.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToString\n  commentId: M:System.Char.ToString\n  id: ToString\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Char.ToString()\n  fullName: Char.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to its equivalent string representation.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates <xref:System.Char.ToString%2A>.  \\n  \\n [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]\\n [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]\\n [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the value of this instance.\n  overload: System.Char.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)\n  commentId: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)\n  id: ToUpper(System.Char,System.Globalization.CultureInfo)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToUpper(Char, CultureInfo)\n  nameWithType: Char.ToUpper(Char, CultureInfo)\n  fullName: Char.ToUpper(Char, CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.\n  remarks: Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase.\n  example:\n  - \"The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture. In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case. The lowercase \\\"i\\\" character (U+0069) converts to \\\"I\\\" (U+0049) in the en-US and invariant cultures, but to \\\"İ\\\" (U+0130) in the tr-TR culture.  \\n  \\n [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]\\n [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]\"\n  syntax:\n    content: public static char ToUpper (char c, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An object that supplies culture-specific casing rules.\n    return:\n      type: System.Char\n      description: The uppercase equivalent of <code>c</code>, modified according to <code>culture</code>, or the unchanged value of <code>c</code> if <code>c</code> is already uppercase, has no uppercase equivalent, or is not alphabetic.\n  overload: System.Char.ToUpper*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>culture</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToUpper(System.Char)\n  commentId: M:System.Char.ToUpper(System.Char)\n  id: ToUpper(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToUpper(Char)\n  nameWithType: Char.ToUpper(Char)\n  fullName: Char.ToUpper(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a Unicode character to its uppercase equivalent.\n  remarks: \"Casing rules are obtained from the current culture.  \\n  \\n Use <xref:System.String.ToUpper%2A?displayProperty=fullName> to convert a string to uppercase.\"\n  example:\n  - \"The following example converts each character in an array to its uppercase equivalent.  \\n  \\n [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]\\n [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]\"\n  syntax:\n    content: public static char ToUpper (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    return:\n      type: System.Char\n      description: The uppercase equivalent of <code>c</code>, or the unchanged value of <code>c</code> if <code>c</code> is already uppercase, has no uppercase equivalent, or is not alphabetic.\n  overload: System.Char.ToUpper*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.ToUpperInvariant(System.Char)\n  commentId: M:System.Char.ToUpperInvariant(System.Char)\n  id: ToUpperInvariant(System.Char)\n  parent: System.Char\n  langs:\n  - csharp\n  name: ToUpperInvariant(Char)\n  nameWithType: Char.ToUpperInvariant(Char)\n  fullName: Char.ToUpperInvariant(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.\n  remarks: \"If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.  The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.  \\n  \\n Use <xref:System.String.ToUpperInvariant%2A?displayProperty=fullName> to convert a string to uppercase.\"\n  syntax:\n    content: public static char ToUpperInvariant (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The Unicode character to convert.\n    return:\n      type: System.Char\n      description: The uppercase equivalent of the <code>c</code> parameter, or the unchanged value of <code>c</code>, if <code>c</code> is already uppercase or not alphabetic.\n  overload: System.Char.ToUpperInvariant*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.TryParse(System.String,System.Char@)\n  commentId: M:System.Char.TryParse(System.String,System.Char@)\n  id: TryParse(System.String,System.Char@)\n  parent: System.Char\n  langs:\n  - csharp\n  name: TryParse(String, Char)\n  nameWithType: Char.TryParse(String, Char)\n  fullName: Char.TryParse(String, Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified string to its equivalent Unicode character. A return code indicates whether the conversion succeeded or failed.\n  remarks: The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.\n  example:\n  - \"The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.  \\n  \\n [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]\\n [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]\\n [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]\"\n  syntax:\n    content: public static bool TryParse (string s, out char result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a single character, or `null`.\n    - id: result\n      type: System.Char\n      description: When this method returns, contains a Unicode character equivalent to the sole character in <code>s</code>, if the conversion succeeded, or an undefined value if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or the length of <code>s</code> is not 1. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.Char.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Char.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Char.IComparable.CompareTo(Object)\n  fullName: Char.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Char.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#GetTypeCode\n  commentId: M:System.Char.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.GetTypeCode()\n  nameWithType: Char.IConvertible.GetTypeCode()\n  fullName: Char.IConvertible.GetTypeCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: ''\n  overload: System.Char.System#IConvertible#GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Char.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Char.IConvertible.ToBoolean(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: '**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.'\n  syntax:\n    content: bool IConvertible.ToBoolean (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Boolean\n      description: This conversion is not supported. No value is returned.\n  overload: System.Char.System#IConvertible#ToBoolean*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Char.IConvertible.ToByte(IFormatProvider)\n  fullName: Char.IConvertible.ToByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: byte IConvertible.ToByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Byte\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Char.IConvertible.ToChar(IFormatProvider)\n  fullName: Char.IConvertible.ToChar(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.\n  syntax:\n    content: char IConvertible.ToChar (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Char\n      description: The value of the current <xref href=\"System.Char\"></xref> object unchanged.\n  overload: System.Char.System#IConvertible#ToChar*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Char.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Char.IConvertible.ToDateTime(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: '**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.'\n  syntax:\n    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.DateTime\n      description: No value is returned.\n  overload: System.Char.System#IConvertible#ToDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Char.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Char.IConvertible.ToDecimal(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: '**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.'\n  syntax:\n    content: decimal IConvertible.ToDecimal (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Decimal\n      description: No value is returned.\n  overload: System.Char.System#IConvertible#ToDecimal*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Char.IConvertible.ToDouble(IFormatProvider)\n  fullName: Char.IConvertible.ToDouble(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: '**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.'\n  syntax:\n    content: double IConvertible.ToDouble (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Double\n      description: No value is returned.\n  overload: System.Char.System#IConvertible#ToDouble*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Char.IConvertible.ToInt16(IFormatProvider)\n  fullName: Char.IConvertible.ToInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: short IConvertible.ToInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int16\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Char.IConvertible.ToInt32(IFormatProvider)\n  fullName: Char.IConvertible.ToInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: int IConvertible.ToInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int32\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Char.IConvertible.ToInt64(IFormatProvider)\n  fullName: Char.IConvertible.ToInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: long IConvertible.ToInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int64\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Char.IConvertible.ToSByte(IFormatProvider)\n  fullName: Char.IConvertible.ToSByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: sbyte IConvertible.ToSByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.SByte\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToSByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Char.IConvertible.ToSingle(IFormatProvider)\n  fullName: Char.IConvertible.ToSingle(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: '**Note** This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\"></xref>.'\n  syntax:\n    content: float IConvertible.ToSingle (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Single\n      description: No value is returned.\n  overload: System.Char.System#IConvertible#ToSingle*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToString(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToString(System.IFormatProvider)\n  id: System#IConvertible#ToString(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToString(IFormatProvider)\n  nameWithType: Char.IConvertible.ToString(IFormatProvider)\n  fullName: Char.IConvertible.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: string IConvertible.ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Char.System#IConvertible#ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Char.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Char.IConvertible.ToType(Type, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.\n  syntax:\n    content: object IConvertible.ToType (Type type, IFormatProvider provider);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object.\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> object.\n    return:\n      type: System.Object\n      description: An object of the specified type.\n  overload: System.Char.System#IConvertible#ToType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The value of the current <xref href=\"System.Char\"></xref> object cannot be converted to the type specified by the <code>type</code> parameter.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Char.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Char.IConvertible.ToUInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)\n    return:\n      type: System.UInt16\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToUInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Char.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Char.IConvertible.ToUInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: uint IConvertible.ToUInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)\n    return:\n      type: System.UInt32\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToUInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Char\n  langs:\n  - csharp\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Char.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Char.IConvertible.ToUInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=fullName> method instead.\n  syntax:\n    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> object. (Specify `null` because the <code>provider</code> parameter is ignored.)\n    return:\n      type: System.UInt64\n      description: The converted value of the current <xref href=\"System.Char\"></xref> object.\n  overload: System.Char.System#IConvertible#ToUInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Char.CompareTo(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: CompareTo(Char)\n  nameWithType: Char.CompareTo(Char)\n  fullName: Char.CompareTo(Char)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Char.CompareTo(System.Object)\n  parent: System.Char\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: Char.CompareTo(Object)\n  fullName: Char.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Char.ConvertFromUtf32(System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: ConvertFromUtf32(Int32)\n  nameWithType: Char.ConvertFromUtf32(Int32)\n  fullName: Char.ConvertFromUtf32(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Char.ConvertToUtf32(System.Char,System.Char)\n  parent: System.Char\n  isExternal: false\n  name: ConvertToUtf32(Char, Char)\n  nameWithType: Char.ConvertToUtf32(Char, Char)\n  fullName: Char.ConvertToUtf32(Char, Char)\n- uid: System.Char.ConvertToUtf32(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: ConvertToUtf32(String, Int32)\n  nameWithType: Char.ConvertToUtf32(String, Int32)\n  fullName: Char.ConvertToUtf32(String, Int32)\n- uid: System.Char.Equals(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: Equals(Char)\n  nameWithType: Char.Equals(Char)\n  fullName: Char.Equals(Char)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Char.Equals(System.Object)\n  parent: System.Char\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Char.Equals(Object)\n  fullName: Char.Equals(Object)\n- uid: System.Char.GetHashCode\n  parent: System.Char\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Char.GetHashCode()\n  fullName: Char.GetHashCode()\n- uid: System.Char.GetNumericValue(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: GetNumericValue(String, Int32)\n  nameWithType: Char.GetNumericValue(String, Int32)\n  fullName: Char.GetNumericValue(String, Int32)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Char.GetNumericValue(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: GetNumericValue(Char)\n  nameWithType: Char.GetNumericValue(Char)\n  fullName: Char.GetNumericValue(Char)\n- uid: System.Char.GetTypeCode\n  parent: System.Char\n  isExternal: false\n  name: GetTypeCode()\n  nameWithType: Char.GetTypeCode()\n  fullName: Char.GetTypeCode()\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Char.GetUnicodeCategory(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: GetUnicodeCategory(Char)\n  nameWithType: Char.GetUnicodeCategory(Char)\n  fullName: Char.GetUnicodeCategory(Char)\n- uid: System.Globalization.UnicodeCategory\n  parent: System.Globalization\n  isExternal: false\n  name: UnicodeCategory\n  nameWithType: UnicodeCategory\n  fullName: System.Globalization.UnicodeCategory\n- uid: System.Char.GetUnicodeCategory(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: GetUnicodeCategory(String, Int32)\n  nameWithType: Char.GetUnicodeCategory(String, Int32)\n  fullName: Char.GetUnicodeCategory(String, Int32)\n- uid: System.Char.IsControl(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsControl(Char)\n  nameWithType: Char.IsControl(Char)\n  fullName: Char.IsControl(Char)\n- uid: System.Char.IsControl(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsControl(String, Int32)\n  nameWithType: Char.IsControl(String, Int32)\n  fullName: Char.IsControl(String, Int32)\n- uid: System.Char.IsDigit(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsDigit(Char)\n  nameWithType: Char.IsDigit(Char)\n  fullName: Char.IsDigit(Char)\n- uid: System.Char.IsDigit(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsDigit(String, Int32)\n  nameWithType: Char.IsDigit(String, Int32)\n  fullName: Char.IsDigit(String, Int32)\n- uid: System.Char.IsHighSurrogate(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsHighSurrogate(String, Int32)\n  nameWithType: Char.IsHighSurrogate(String, Int32)\n  fullName: Char.IsHighSurrogate(String, Int32)\n- uid: System.Char.IsHighSurrogate(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsHighSurrogate(Char)\n  nameWithType: Char.IsHighSurrogate(Char)\n  fullName: Char.IsHighSurrogate(Char)\n- uid: System.Char.IsLetter(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsLetter(Char)\n  nameWithType: Char.IsLetter(Char)\n  fullName: Char.IsLetter(Char)\n- uid: System.Char.IsLetter(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsLetter(String, Int32)\n  nameWithType: Char.IsLetter(String, Int32)\n  fullName: Char.IsLetter(String, Int32)\n- uid: System.Char.IsLetterOrDigit(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsLetterOrDigit(Char)\n  nameWithType: Char.IsLetterOrDigit(Char)\n  fullName: Char.IsLetterOrDigit(Char)\n- uid: System.Char.IsLetterOrDigit(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsLetterOrDigit(String, Int32)\n  nameWithType: Char.IsLetterOrDigit(String, Int32)\n  fullName: Char.IsLetterOrDigit(String, Int32)\n- uid: System.Char.IsLower(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsLower(Char)\n  nameWithType: Char.IsLower(Char)\n  fullName: Char.IsLower(Char)\n- uid: System.Char.IsLower(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsLower(String, Int32)\n  nameWithType: Char.IsLower(String, Int32)\n  fullName: Char.IsLower(String, Int32)\n- uid: System.Char.IsLowSurrogate(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsLowSurrogate(Char)\n  nameWithType: Char.IsLowSurrogate(Char)\n  fullName: Char.IsLowSurrogate(Char)\n- uid: System.Char.IsLowSurrogate(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsLowSurrogate(String, Int32)\n  nameWithType: Char.IsLowSurrogate(String, Int32)\n  fullName: Char.IsLowSurrogate(String, Int32)\n- uid: System.Char.IsNumber(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsNumber(Char)\n  nameWithType: Char.IsNumber(Char)\n  fullName: Char.IsNumber(Char)\n- uid: System.Char.IsNumber(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsNumber(String, Int32)\n  nameWithType: Char.IsNumber(String, Int32)\n  fullName: Char.IsNumber(String, Int32)\n- uid: System.Char.IsPunctuation(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsPunctuation(Char)\n  nameWithType: Char.IsPunctuation(Char)\n  fullName: Char.IsPunctuation(Char)\n- uid: System.Char.IsPunctuation(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsPunctuation(String, Int32)\n  nameWithType: Char.IsPunctuation(String, Int32)\n  fullName: Char.IsPunctuation(String, Int32)\n- uid: System.Char.IsSeparator(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsSeparator(Char)\n  nameWithType: Char.IsSeparator(Char)\n  fullName: Char.IsSeparator(Char)\n- uid: System.Char.IsSeparator(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsSeparator(String, Int32)\n  nameWithType: Char.IsSeparator(String, Int32)\n  fullName: Char.IsSeparator(String, Int32)\n- uid: System.Char.IsSurrogate(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsSurrogate(Char)\n  nameWithType: Char.IsSurrogate(Char)\n  fullName: Char.IsSurrogate(Char)\n- uid: System.Char.IsSurrogate(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsSurrogate(String, Int32)\n  nameWithType: Char.IsSurrogate(String, Int32)\n  fullName: Char.IsSurrogate(String, Int32)\n- uid: System.Char.IsSurrogatePair(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsSurrogatePair(String, Int32)\n  nameWithType: Char.IsSurrogatePair(String, Int32)\n  fullName: Char.IsSurrogatePair(String, Int32)\n- uid: System.Char.IsSurrogatePair(System.Char,System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsSurrogatePair(Char, Char)\n  nameWithType: Char.IsSurrogatePair(Char, Char)\n  fullName: Char.IsSurrogatePair(Char, Char)\n- uid: System.Char.IsSymbol(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsSymbol(Char)\n  nameWithType: Char.IsSymbol(Char)\n  fullName: Char.IsSymbol(Char)\n- uid: System.Char.IsSymbol(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsSymbol(String, Int32)\n  nameWithType: Char.IsSymbol(String, Int32)\n  fullName: Char.IsSymbol(String, Int32)\n- uid: System.Char.IsUpper(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsUpper(Char)\n  nameWithType: Char.IsUpper(Char)\n  fullName: Char.IsUpper(Char)\n- uid: System.Char.IsUpper(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsUpper(String, Int32)\n  nameWithType: Char.IsUpper(String, Int32)\n  fullName: Char.IsUpper(String, Int32)\n- uid: System.Char.IsWhiteSpace(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: IsWhiteSpace(Char)\n  nameWithType: Char.IsWhiteSpace(Char)\n  fullName: Char.IsWhiteSpace(Char)\n- uid: System.Char.IsWhiteSpace(System.String,System.Int32)\n  parent: System.Char\n  isExternal: false\n  name: IsWhiteSpace(String, Int32)\n  nameWithType: Char.IsWhiteSpace(String, Int32)\n  fullName: Char.IsWhiteSpace(String, Int32)\n- uid: System.Char.MaxValue\n  parent: System.Char\n  isExternal: false\n  name: MaxValue\n  nameWithType: Char.MaxValue\n  fullName: Char.MaxValue\n- uid: System.Char.MinValue\n  parent: System.Char\n  isExternal: false\n  name: MinValue\n  nameWithType: Char.MinValue\n  fullName: Char.MinValue\n- uid: System.Char.Parse(System.String)\n  parent: System.Char\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Char.Parse(String)\n  fullName: Char.Parse(String)\n- uid: System.Char.ToLower(System.Char,System.Globalization.CultureInfo)\n  parent: System.Char\n  isExternal: false\n  name: ToLower(Char, CultureInfo)\n  nameWithType: Char.ToLower(Char, CultureInfo)\n  fullName: Char.ToLower(Char, CultureInfo)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Char.ToLower(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: ToLower(Char)\n  nameWithType: Char.ToLower(Char)\n  fullName: Char.ToLower(Char)\n- uid: System.Char.ToLowerInvariant(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: ToLowerInvariant(Char)\n  nameWithType: Char.ToLowerInvariant(Char)\n  fullName: Char.ToLowerInvariant(Char)\n- uid: System.Char.ToString(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Char.ToString(IFormatProvider)\n  fullName: Char.ToString(IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Char.ToString(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: ToString(Char)\n  nameWithType: Char.ToString(Char)\n  fullName: Char.ToString(Char)\n- uid: System.Char.ToString\n  parent: System.Char\n  isExternal: false\n  name: ToString()\n  nameWithType: Char.ToString()\n  fullName: Char.ToString()\n- uid: System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)\n  parent: System.Char\n  isExternal: false\n  name: ToUpper(Char, CultureInfo)\n  nameWithType: Char.ToUpper(Char, CultureInfo)\n  fullName: Char.ToUpper(Char, CultureInfo)\n- uid: System.Char.ToUpper(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: ToUpper(Char)\n  nameWithType: Char.ToUpper(Char)\n  fullName: Char.ToUpper(Char)\n- uid: System.Char.ToUpperInvariant(System.Char)\n  parent: System.Char\n  isExternal: false\n  name: ToUpperInvariant(Char)\n  nameWithType: Char.ToUpperInvariant(Char)\n  fullName: Char.ToUpperInvariant(Char)\n- uid: System.Char.TryParse(System.String,System.Char@)\n  parent: System.Char\n  isExternal: false\n  name: TryParse(String, Char)\n  nameWithType: Char.TryParse(String, Char)\n  fullName: Char.TryParse(String, Char)\n- uid: System.Char.System#IComparable#CompareTo(System.Object)\n  parent: System.Char\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Char.IComparable.CompareTo(Object)\n  fullName: Char.IComparable.CompareTo(Object)\n- uid: System.Char.System#IConvertible#GetTypeCode\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.GetTypeCode()\n  nameWithType: Char.IConvertible.GetTypeCode()\n  fullName: Char.IConvertible.GetTypeCode()\n- uid: System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Char.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Char.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Char.System#IConvertible#ToByte(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Char.IConvertible.ToByte(IFormatProvider)\n  fullName: Char.IConvertible.ToByte(IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Char.System#IConvertible#ToChar(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Char.IConvertible.ToChar(IFormatProvider)\n  fullName: Char.IConvertible.ToChar(IFormatProvider)\n- uid: System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Char.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Char.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Char.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Char.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Char.System#IConvertible#ToDouble(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Char.IConvertible.ToDouble(IFormatProvider)\n  fullName: Char.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Char.System#IConvertible#ToInt16(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Char.IConvertible.ToInt16(IFormatProvider)\n  fullName: Char.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Char.System#IConvertible#ToInt32(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Char.IConvertible.ToInt32(IFormatProvider)\n  fullName: Char.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Char.System#IConvertible#ToInt64(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Char.IConvertible.ToInt64(IFormatProvider)\n  fullName: Char.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Char.System#IConvertible#ToSByte(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Char.IConvertible.ToSByte(IFormatProvider)\n  fullName: Char.IConvertible.ToSByte(IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Char.System#IConvertible#ToSingle(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Char.IConvertible.ToSingle(IFormatProvider)\n  fullName: Char.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Char.System#IConvertible#ToString(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToString(IFormatProvider)\n  nameWithType: Char.IConvertible.ToString(IFormatProvider)\n  fullName: Char.IConvertible.ToString(IFormatProvider)\n- uid: System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Char.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Char.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Char.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Char.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Char.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Char.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)\n  parent: System.Char\n  isExternal: false\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Char.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Char.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Char.IsControl*\n  parent: System.Char\n  isExternal: false\n  name: IsControl\n  nameWithType: Char.IsControl\n  fullName: Char.IsControl\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsDigit*\n  parent: System.Char\n  isExternal: false\n  name: IsDigit\n  nameWithType: Char.IsDigit\n  fullName: Char.IsDigit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsLetter*\n  parent: System.Char\n  isExternal: false\n  name: IsLetter\n  nameWithType: Char.IsLetter\n  fullName: Char.IsLetter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsLetterOrDigit*\n  parent: System.Char\n  isExternal: false\n  name: IsLetterOrDigit\n  nameWithType: Char.IsLetterOrDigit\n  fullName: Char.IsLetterOrDigit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsPunctuation*\n  parent: System.Char\n  isExternal: false\n  name: IsPunctuation\n  nameWithType: Char.IsPunctuation\n  fullName: Char.IsPunctuation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsSeparator*\n  parent: System.Char\n  isExternal: false\n  name: IsSeparator\n  nameWithType: Char.IsSeparator\n  fullName: Char.IsSeparator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsSymbol*\n  parent: System.Char\n  isExternal: false\n  name: IsSymbol\n  nameWithType: Char.IsSymbol\n  fullName: Char.IsSymbol\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsWhiteSpace*\n  parent: System.Char\n  isExternal: false\n  name: IsWhiteSpace\n  nameWithType: Char.IsWhiteSpace\n  fullName: Char.IsWhiteSpace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.CompareTo*\n  parent: System.Char\n  isExternal: false\n  name: CompareTo\n  nameWithType: Char.CompareTo\n  fullName: Char.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ConvertFromUtf32*\n  parent: System.Char\n  isExternal: false\n  name: ConvertFromUtf32\n  nameWithType: Char.ConvertFromUtf32\n  fullName: Char.ConvertFromUtf32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ConvertToUtf32*\n  parent: System.Char\n  isExternal: false\n  name: ConvertToUtf32\n  nameWithType: Char.ConvertToUtf32\n  fullName: Char.ConvertToUtf32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.Equals*\n  parent: System.Char\n  isExternal: false\n  name: Equals\n  nameWithType: Char.Equals\n  fullName: Char.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.GetHashCode*\n  parent: System.Char\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Char.GetHashCode\n  fullName: Char.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.GetNumericValue*\n  parent: System.Char\n  isExternal: false\n  name: GetNumericValue\n  nameWithType: Char.GetNumericValue\n  fullName: Char.GetNumericValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.GetTypeCode*\n  parent: System.Char\n  isExternal: false\n  name: GetTypeCode\n  nameWithType: Char.GetTypeCode\n  fullName: Char.GetTypeCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.GetUnicodeCategory*\n  parent: System.Char\n  isExternal: false\n  name: GetUnicodeCategory\n  nameWithType: Char.GetUnicodeCategory\n  fullName: Char.GetUnicodeCategory\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsHighSurrogate*\n  parent: System.Char\n  isExternal: false\n  name: IsHighSurrogate\n  nameWithType: Char.IsHighSurrogate\n  fullName: Char.IsHighSurrogate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsLower*\n  parent: System.Char\n  isExternal: false\n  name: IsLower\n  nameWithType: Char.IsLower\n  fullName: Char.IsLower\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsLowSurrogate*\n  parent: System.Char\n  isExternal: false\n  name: IsLowSurrogate\n  nameWithType: Char.IsLowSurrogate\n  fullName: Char.IsLowSurrogate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsNumber*\n  parent: System.Char\n  isExternal: false\n  name: IsNumber\n  nameWithType: Char.IsNumber\n  fullName: Char.IsNumber\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsSurrogate*\n  parent: System.Char\n  isExternal: false\n  name: IsSurrogate\n  nameWithType: Char.IsSurrogate\n  fullName: Char.IsSurrogate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsSurrogatePair*\n  parent: System.Char\n  isExternal: false\n  name: IsSurrogatePair\n  nameWithType: Char.IsSurrogatePair\n  fullName: Char.IsSurrogatePair\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.IsUpper*\n  parent: System.Char\n  isExternal: false\n  name: IsUpper\n  nameWithType: Char.IsUpper\n  fullName: Char.IsUpper\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.Parse*\n  parent: System.Char\n  isExternal: false\n  name: Parse\n  nameWithType: Char.Parse\n  fullName: Char.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ToLower*\n  parent: System.Char\n  isExternal: false\n  name: ToLower\n  nameWithType: Char.ToLower\n  fullName: Char.ToLower\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ToLowerInvariant*\n  parent: System.Char\n  isExternal: false\n  name: ToLowerInvariant\n  nameWithType: Char.ToLowerInvariant\n  fullName: Char.ToLowerInvariant\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ToString*\n  parent: System.Char\n  isExternal: false\n  name: ToString\n  nameWithType: Char.ToString\n  fullName: Char.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ToUpper*\n  parent: System.Char\n  isExternal: false\n  name: ToUpper\n  nameWithType: Char.ToUpper\n  fullName: Char.ToUpper\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.ToUpperInvariant*\n  parent: System.Char\n  isExternal: false\n  name: ToUpperInvariant\n  nameWithType: Char.ToUpperInvariant\n  fullName: Char.ToUpperInvariant\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.TryParse*\n  parent: System.Char\n  isExternal: false\n  name: TryParse\n  nameWithType: Char.TryParse\n  fullName: Char.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IComparable#CompareTo*\n  parent: System.Char\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Char.System.IComparable.CompareTo\n  fullName: Char.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#GetTypeCode*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.GetTypeCode\n  nameWithType: Char.System.IConvertible.GetTypeCode\n  fullName: Char.System.IConvertible.GetTypeCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToBoolean*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToBoolean\n  nameWithType: Char.System.IConvertible.ToBoolean\n  fullName: Char.System.IConvertible.ToBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToByte*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToByte\n  nameWithType: Char.System.IConvertible.ToByte\n  fullName: Char.System.IConvertible.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToChar*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToChar\n  nameWithType: Char.System.IConvertible.ToChar\n  fullName: Char.System.IConvertible.ToChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToDateTime*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToDateTime\n  nameWithType: Char.System.IConvertible.ToDateTime\n  fullName: Char.System.IConvertible.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToDecimal*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToDecimal\n  nameWithType: Char.System.IConvertible.ToDecimal\n  fullName: Char.System.IConvertible.ToDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToDouble*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToDouble\n  nameWithType: Char.System.IConvertible.ToDouble\n  fullName: Char.System.IConvertible.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToInt16*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToInt16\n  nameWithType: Char.System.IConvertible.ToInt16\n  fullName: Char.System.IConvertible.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToInt32*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToInt32\n  nameWithType: Char.System.IConvertible.ToInt32\n  fullName: Char.System.IConvertible.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToInt64*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToInt64\n  nameWithType: Char.System.IConvertible.ToInt64\n  fullName: Char.System.IConvertible.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToSByte*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToSByte\n  nameWithType: Char.System.IConvertible.ToSByte\n  fullName: Char.System.IConvertible.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToSingle*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToSingle\n  nameWithType: Char.System.IConvertible.ToSingle\n  fullName: Char.System.IConvertible.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToString*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToString\n  nameWithType: Char.System.IConvertible.ToString\n  fullName: Char.System.IConvertible.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToType*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToType\n  nameWithType: Char.System.IConvertible.ToType\n  fullName: Char.System.IConvertible.ToType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToUInt16*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToUInt16\n  nameWithType: Char.System.IConvertible.ToUInt16\n  fullName: Char.System.IConvertible.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToUInt32*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToUInt32\n  nameWithType: Char.System.IConvertible.ToUInt32\n  fullName: Char.System.IConvertible.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.Char.System#IConvertible#ToUInt64*\n  parent: System.Char\n  isExternal: false\n  name: System.IConvertible.ToUInt64\n  nameWithType: Char.System.IConvertible.ToUInt64\n  fullName: Char.System.IConvertible.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Char.xml\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.Char}\n  parent: System\n  isExternal: false\n  name: IComparable<Char>\n  nameWithType: IComparable<Char>\n  fullName: System.IComparable<System.Char>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  nameWithType: IConvertible\n  fullName: System.IConvertible\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Char}\n  parent: System\n  isExternal: false\n  name: IEquatable<Char>\n  nameWithType: IEquatable<Char>\n  fullName: System.IEquatable<System.Char>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}