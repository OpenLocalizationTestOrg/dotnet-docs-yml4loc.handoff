<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddf15b1275b9e3d6ba34f166c6ae1e1ab2d7cc5d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.BestFitMappingAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70f7e78ab0a02a37c3f724101bc73e57016c3740</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccd35bf3e03bf27eff025545e44ba9d2ba6412df</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Controls whether Unicode characters are converted to the closest matching ANSI characters.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply this attribute to an assembly, interface, class, or structure.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Best-fit mapping enables the interop marshaler to select a close-matching character when no exact match exists.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characters lack a best-fit representation; these characters are called unmappable.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unmappable characters are usually converted to the default '?' ANSI character.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain Unicode characters are converted to dangerous characters, such as the backslash '<ph id="ph1">\\</ph>' character, which can inadvertently change a path.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute&gt;</ph> provides two parameters to control aspects of best-fit mapping.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the first parameter to toggle best-fit mapping on and off.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`true`</ph>, which enables best-fit mapping on the assembly, interface, and class levels.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attribute applied to an interface or class overrides an assembly-level attribute.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can likewise enable or disable best-fit mapping for platform invoke calls by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping?displayProperty=fullName&gt;</ph> field.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value set by the platform invoke field overrides all levels of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the second parameter to control throwing an exception on unmappable characters.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar&gt;</ph> field is <ph id="ph2">`false`</ph>, which disables throwing an exception each time the runtime encounters a Unicode character that has to be converted to the '?' ANSI character.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if best-fit mapping is <ph id="ph1">`true`</ph>, unmappable characters generate an exception when the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar&gt;</ph> field is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To tighten security, you can toggle the first parameter to <ph id="ph1">`false`</ph> and the second parameter to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This combination of parameter settings turns best-fit mapping off, but enables the exception-throwing mechanism as a safety precaution.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the default values provided by <ph id="ph1">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute&gt;</ph> when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Best-fit mapping is always enabled and no exception can be thrown.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be aware that this combination can compromise your security model.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.BestFitMappingAttribute"&gt;&lt;/xref&gt;</ph> class set to the value of the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that best-fit mapping is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the best-fit mapping behavior when converting Unicode characters to ANSI characters.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If best-fit mapping is <ph id="ph1">`false`</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar&gt;</ph> is <ph id="ph3">`true`</ph>, all Unicode characters that require conversion to ANSI format will generate an exception when passed to unmanaged code.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characters are unmappable, even when best-fit mapping is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characters lack a best-fit representation; these characters are called unmappable.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unmappable characters are usually converted to the default '?' ANSI character.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain Unicode characters are converted to dangerous characters, such as the backslash '<ph id="ph1">\\</ph>' character, which can inadvertently change a path.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if best-fit mapping is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI '?' character.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar&gt;</ph> field is disabled; otherwise, an exception is thrown each time the interop marshaler encounters an unmappable character.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>