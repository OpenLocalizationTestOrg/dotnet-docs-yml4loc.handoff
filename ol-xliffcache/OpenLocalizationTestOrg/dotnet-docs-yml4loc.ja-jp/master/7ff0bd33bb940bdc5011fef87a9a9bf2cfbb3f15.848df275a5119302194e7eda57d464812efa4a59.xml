{"nodes":[{"content":"Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.","nodes":[{"pos":[0,106],"content":"Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.","nodes":[{"content":"Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.","pos":[0,106]}]}],"pos":[1303,1410],"yaml":true},{"content":"Cancels any pending I/O operations on the <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object and sets the state of the object so that it cannot be used to start additional I/O operations.","nodes":[{"pos":[0,202],"content":"Cancels any pending I/O operations on the <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object and sets the state of the object so that it cannot be used to start additional I/O operations.","source":"Cancels any pending I/O operations on the <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object and sets the state of the object so that it cannot be used to start additional I/O operations."}],"pos":[3504,3707],"yaml":true},{"content":"After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.","nodes":[{"pos":[0,167],"content":"After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.","nodes":[{"content":"After the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A&gt;</ph> method has been called, you can still access properties and methods that do not involve I/O operations.","pos":[0,167],"source":"After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations."}]}],"pos":[3718,3886],"yaml":true,"extradata":"MT"},{"content":"The object was previously disposed.","nodes":[{"pos":[0,35],"content":"The object was previously disposed.","nodes":[{"content":"The object was previously disposed.","pos":[0,35]}]}],"pos":[4136,4172],"yaml":true},{"content":"Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.","nodes":[{"pos":[0,205],"content":"Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.","nodes":[{"content":"Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.","pos":[0,205],"nodes":[{"content":"Sends an asynchronous message to a client to close the connection.","pos":[0,66]},{"content":"If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.","pos":[67,205]}]}]}],"pos":[5512,5718],"yaml":true},{"content":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.  \n  \n For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.","nodes":[{"pos":[0,524],"content":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.","nodes":[{"content":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.","pos":[0,524],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> methods for both client-initiated and server-initiated requests to close an <ph id=\"ph3\">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> connection.","pos":[0,276],"source":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection."},{"content":"The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.","pos":[277,524]}]}]},{"pos":[531,1206],"content":"For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.","nodes":[{"content":"For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.","pos":[0,675],"nodes":[{"content":"For server-initiated requests, the two methods work differently.","pos":[0,64]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> method sends a message to the client to close the connection, waits for a response, and then returns.","pos":[65,229],"source":" The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns."},{"content":"The server does not wait for any additional data sent by the client.","pos":[230,298]},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> method sends a message to the client to close the connection and returns without waiting for a response.","pos":[299,485],"source":" In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response."},{"content":"After the method returns, you can call the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A&gt;</ph> method and handle either additional data or the acknowledgment that the client sends.","pos":[486,675],"source":" After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends."}]}]}],"pos":[5729,6940],"yaml":true,"extradata":"MT"},{"content":"The status code of the close operation.","nodes":[{"pos":[0,39],"content":"The status code of the close operation.","nodes":[{"content":"The status code of the close operation.","pos":[0,39]}]}],"pos":[7268,7308],"yaml":true},{"content":"The status message of the close operation.","nodes":[{"pos":[0,42],"content":"The status message of the close operation.","nodes":[{"content":"The status message of the close operation.","pos":[0,42]}]}],"pos":[7381,7424],"yaml":true},{"content":"The object that cancels a pending operation.","nodes":[{"pos":[0,44],"content":"The object that cancels a pending operation.","nodes":[{"content":"The object that cancels a pending operation.","pos":[0,44]}]}],"pos":[7518,7563],"yaml":true},{"content":"A reference to the operation.","nodes":[{"pos":[0,29],"content":"A reference to the operation.","nodes":[{"content":"A reference to the operation.","pos":[0,29]}]}],"pos":[7634,7664],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was previously disposed.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object was previously disposed.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was previously disposed."}],"pos":[7846,7941],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state.  \n  \n -or-  \n  \n Sending operations are unavailable.  \n  \n -or-  \n  \n Receiving operations are unavailable.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object is in an aborted state.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,146],"content":"Sending operations are unavailable.","nodes":[{"content":"Sending operations are unavailable.","pos":[0,35]}]},{"pos":[153,157],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[164,201],"content":"Receiving operations are unavailable.","nodes":[{"content":"Receiving operations are unavailable.","pos":[0,37]}]}],"pos":[8051,8265],"yaml":true},{"content":"Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method returns without waiting for a response.","nodes":[{"pos":[0,178],"content":"Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method returns without waiting for a response.","nodes":[{"content":"Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method returns without waiting for a response.","pos":[0,178],"nodes":[{"content":"Sends an asynchronous message to a client to close the connection.","pos":[0,66]},{"content":"If the server initiates the request to close the connection, the method returns without waiting for a response.","pos":[67,178]}]}]}],"pos":[9641,9820],"yaml":true},{"content":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.  \n  \n For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.","nodes":[{"pos":[0,524],"content":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.","nodes":[{"content":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.","pos":[0,524],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> methods for both client-initiated and server-initiated requests to close an <ph id=\"ph3\">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> connection.","pos":[0,276],"source":"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection."},{"content":"The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.","pos":[277,524]}]}]},{"pos":[531,1206],"content":"For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.","nodes":[{"content":"For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.","pos":[0,675],"nodes":[{"content":"For server-initiated requests, the two methods work differently.","pos":[0,64]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> method sends a message to the client to close the connection, waits for a response, and then returns.","pos":[65,229],"source":" The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns."},{"content":"The server does not wait for any additional data sent by the client.","pos":[230,298]},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> method sends a message to the client to close the connection and returns without waiting for a response.","pos":[299,485],"source":" In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response."},{"content":"After the method returns, you can call the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A&gt;</ph> method and handle either additional data or the acknowledgment that the client sends.","pos":[486,675],"source":" After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends."}]}]}],"pos":[9831,11042],"yaml":true,"extradata":"MT"},{"content":"The status code of the close operation.","nodes":[{"pos":[0,39],"content":"The status code of the close operation.","nodes":[{"content":"The status code of the close operation.","pos":[0,39]}]}],"pos":[11376,11416],"yaml":true},{"content":"The status message of the close operation.","nodes":[{"pos":[0,42],"content":"The status message of the close operation.","nodes":[{"content":"The status message of the close operation.","pos":[0,42]}]}],"pos":[11489,11532],"yaml":true},{"content":"The object that cancels a pending operation.","nodes":[{"pos":[0,44],"content":"The object that cancels a pending operation.","nodes":[{"content":"The object that cancels a pending operation.","pos":[0,44]}]}],"pos":[11626,11671],"yaml":true},{"content":"A reference to the operation.","nodes":[{"pos":[0,29],"content":"A reference to the operation.","nodes":[{"content":"A reference to the operation.","pos":[0,29]}]}],"pos":[11742,11772],"yaml":true},{"content":"The object was previously disposed.","nodes":[{"pos":[0,35],"content":"The object was previously disposed.","nodes":[{"content":"The object was previously disposed.","pos":[0,35]}]}],"pos":[11960,11996],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state.  \n  \n -or-  \n  \n Sending operations are unavailable.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object is in an aborted state.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,146],"content":"Sending operations are unavailable.","nodes":[{"content":"Sending operations are unavailable.","pos":[0,35]}]}],"pos":[12106,12261],"yaml":true},{"content":"Gets a status code that indicates why an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was closed.","nodes":[{"pos":[0,118],"content":"Gets a status code that indicates why an <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object was closed.","source":"Gets a status code that indicates why an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was closed."}],"pos":[13183,13302],"yaml":true},{"content":"The status code.","nodes":[{"pos":[0,16],"content":"The status code.","nodes":[{"content":"The status code.","pos":[0,16]}]}],"pos":[13518,13535],"yaml":true},{"content":"The object was previously disposed.","nodes":[{"pos":[0,35],"content":"The object was previously disposed.","nodes":[{"content":"The object was previously disposed.","pos":[0,35]}]}],"pos":[13718,13754],"yaml":true},{"content":"Gets a status message that explains why an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was closed.","nodes":[{"pos":[0,120],"content":"Gets a status message that explains why an <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object was closed.","source":"Gets a status message that explains why an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was closed."}],"pos":[14742,14863],"yaml":true},{"content":"The status message.","nodes":[{"pos":[0,19],"content":"The status message.","nodes":[{"content":"The status message.","pos":[0,19]}]}],"pos":[14998,15018],"yaml":true},{"content":"The object was previously disposed.","nodes":[{"pos":[0,35],"content":"The object was previously disposed.","nodes":[{"content":"The object was previously disposed.","pos":[0,35]}]}],"pos":[15212,15248],"yaml":true},{"content":"Releases all resources used by an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object.","nodes":[{"pos":[0,100],"content":"Releases all resources used by an <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases all resources used by an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object."}],"pos":[16150,16251],"yaml":true},{"content":"ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.","nodes":[{"pos":[0,228],"content":"ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.","nodes":[{"content":"ASP.NET automatically calls the <ph id=\"ph1\">&lt;xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A&gt;</ph> method on a <ph id=\"ph2\">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> object to release any resources that remain after your code has finished executing.","pos":[0,228],"source":"ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing."}]}],"pos":[16262,16491],"yaml":true,"extradata":"MT"},{"content":"Receives a single message fragment from a remote client.","nodes":[{"pos":[0,56],"content":"Receives a single message fragment from a remote client.","nodes":[{"content":"Receives a single message fragment from a remote client.","pos":[0,56]}]}],"pos":[17892,17949],"yaml":true},{"content":"The array that contains the message data.","nodes":[{"pos":[0,41],"content":"The array that contains the message data.","nodes":[{"content":"The array that contains the message data.","pos":[0,41]}]}],"pos":[18255,18297],"yaml":true},{"content":"The object that cancels a pending operation.","nodes":[{"pos":[0,44],"content":"The object that cancels a pending operation.","nodes":[{"content":"The object that cancels a pending operation.","pos":[0,44]}]}],"pos":[18391,18436],"yaml":true},{"content":"A reference to the task of receiving a message.","nodes":[{"pos":[0,47],"content":"A reference to the task of receiving a message.","nodes":[{"content":"A reference to the task of receiving a message.","pos":[0,47]}]}],"pos":[18553,18601],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was previously disposed.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object was previously disposed.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was previously disposed."}],"pos":[18785,18880],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state.  \n  \n -or-  \n  \n Receiving operations are unavailable.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object is in an aborted state.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,148],"content":"Receiving operations are unavailable.","nodes":[{"content":"Receiving operations are unavailable.","pos":[0,37]}]}],"pos":[18990,19147],"yaml":true},{"content":"Sends a single message fragment to a remote client.","nodes":[{"pos":[0,51],"content":"Sends a single message fragment to a remote client.","nodes":[{"content":"Sends a single message fragment to a remote client.","pos":[0,51]}]}],"pos":[20646,20698],"yaml":true},{"content":"The array that contains the message data.","nodes":[{"pos":[0,41],"content":"The array that contains the message data.","nodes":[{"content":"The array that contains the message data.","pos":[0,41]}]}],"pos":[21030,21072],"yaml":true},{"content":"The message type.","nodes":[{"pos":[0,17],"content":"The message type.","nodes":[{"content":"The message type.","pos":[0,17]}]}],"pos":[21168,21186],"yaml":true},{"content":"`true` to indicate that a fragment is the end of a complete message; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> to indicate that a fragment is the end of a complete message; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that a fragment is the end of a complete message; otherwise, `false`."}],"pos":[21255,21346],"yaml":true},{"content":"The object that cancels a pending operation.","nodes":[{"pos":[0,44],"content":"The object that cancels a pending operation.","nodes":[{"content":"The object that cancels a pending operation.","pos":[0,44]}]}],"pos":[21440,21485],"yaml":true},{"content":"A reference to the task of sending a message.","nodes":[{"pos":[0,45],"content":"A reference to the task of sending a message.","nodes":[{"content":"A reference to the task of sending a message.","pos":[0,45]}]}],"pos":[21556,21602],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is disposed.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object is disposed.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is disposed."}],"pos":[21783,21866],"yaml":true},{"content":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state.  \n  \n -or-  \n  \n Sending operations are unavailable.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object is in an aborted state.","source":"The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is in an aborted state."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,146],"content":"Sending operations are unavailable.","nodes":[{"content":"Sending operations are unavailable.","pos":[0,35]}]}],"pos":[21976,22131],"yaml":true},{"content":"Gets a value that indicates the open or closed state of an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object.","nodes":[{"pos":[0,125],"content":"Gets a value that indicates the open or closed state of an <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a value that indicates the open or closed state of an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object."}],"pos":[23017,23143],"yaml":true},{"content":"The current state.","nodes":[{"pos":[0,18],"content":"The current state.","nodes":[{"content":"The current state.","pos":[0,18]}]}],"pos":[23314,23333],"yaml":true},{"content":"The object was previously disposed.","nodes":[{"pos":[0,35],"content":"The object was previously disposed.","nodes":[{"content":"The object was previously disposed.","pos":[0,35]}]}],"pos":[23510,23546],"yaml":true},{"content":"Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> connection.","nodes":[{"pos":[0,187],"content":"Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <ph id=\"ph1\">&lt;xref href=\"System.Web.WebSockets.AspNetWebSocket\"&gt;&lt;/xref&gt;</ph> connection.","source":"Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> connection."}],"pos":[24468,24656],"yaml":true},{"content":"The name of the protocol.","nodes":[{"pos":[0,25],"content":"The name of the protocol.","nodes":[{"content":"The name of the protocol.","pos":[0,25]}]}],"pos":[24780,24806],"yaml":true},{"content":"The object was previously disposed.","nodes":[{"pos":[0,35],"content":"The object was previously disposed.","nodes":[{"content":"The object was previously disposed.","pos":[0,35]}]}],"pos":[24989,25025],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.WebSockets.AspNetWebSocket\n  commentId: T:System.Web.WebSockets.AspNetWebSocket\n  id: AspNetWebSocket\n  children:\n  - System.Web.WebSockets.AspNetWebSocket.Abort\n  - System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  - System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  - System.Web.WebSockets.AspNetWebSocket.CloseStatus\n  - System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription\n  - System.Web.WebSockets.AspNetWebSocket.Dispose\n  - System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  - System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  - System.Web.WebSockets.AspNetWebSocket.State\n  - System.Web.WebSockets.AspNetWebSocket.SubProtocol\n  langs:\n  - csharp\n  name: AspNetWebSocket\n  nameWithType: AspNetWebSocket\n  fullName: System.Web.WebSockets.AspNetWebSocket\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.\n  syntax:\n    content: 'public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket'\n  inheritance:\n  - System.Object\n  - System.Net.WebSockets.WebSocket\n  implements: []\n  inheritedMembers:\n  - System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)\n  - System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})\n  - System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)\n  - System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval\n  - System.Net.WebSockets.WebSocket.IsApplicationTargeting45\n  - System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)\n  - System.Net.WebSockets.WebSocket.RegisterPrefixes\n  - System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.Abort\n  commentId: M:System.Web.WebSockets.AspNetWebSocket.Abort\n  id: Abort\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: AspNetWebSocket.Abort()\n  fullName: AspNetWebSocket.Abort()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Cancels any pending I/O operations on the <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object and sets the state of the object so that it cannot be used to start additional I/O operations.\n  remarks: After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.\n  syntax:\n    content: public override void Abort ();\n    parameters: []\n  overload: System.Web.WebSockets.AspNetWebSocket.Abort*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object was previously disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  commentId: M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n  nameWithType: AspNetWebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n  fullName: AspNetWebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.\n  remarks: \"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.  \\n  \\n For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.\"\n  syntax:\n    content: public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: closeStatus\n      type: System.Net.WebSockets.WebSocketCloseStatus\n      description: The status code of the close operation.\n    - id: statusDescription\n      type: System.String\n      description: The status message of the close operation.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The object that cancels a pending operation.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A reference to the operation.\n  overload: System.Web.WebSockets.AspNetWebSocket.CloseAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was previously disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.WebSockets.AspNetWebSocket\\\"></xref> object is in an aborted state.  \\n  \\n -or-  \\n  \\n Sending operations are unavailable.  \\n  \\n -or-  \\n  \\n Receiving operations are unavailable.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  commentId: M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n  nameWithType: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n  fullName: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Sends an asynchronous message to a client to close the connection. If the server initiates the request to close the connection, the method returns without waiting for a response.\n  remarks: \"You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection. The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.  \\n  \\n For server-initiated requests, the two methods work differently. The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns. The server does not wait for any additional data sent by the client. In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response. After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.\"\n  syntax:\n    content: public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: closeStatus\n      type: System.Net.WebSockets.WebSocketCloseStatus\n      description: The status code of the close operation.\n    - id: statusDescription\n      type: System.String\n      description: The status message of the close operation.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The object that cancels a pending operation.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A reference to the operation.\n  overload: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object was previously disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.WebSockets.AspNetWebSocket\\\"></xref> object is in an aborted state.  \\n  \\n -or-  \\n  \\n Sending operations are unavailable.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus\n  commentId: P:System.Web.WebSockets.AspNetWebSocket.CloseStatus\n  id: CloseStatus\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: CloseStatus\n  nameWithType: AspNetWebSocket.CloseStatus\n  fullName: AspNetWebSocket.CloseStatus\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Gets a status code that indicates why an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was closed.\n  syntax:\n    content: public override Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get; }\n    return:\n      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}\n      description: The status code.\n  overload: System.Web.WebSockets.AspNetWebSocket.CloseStatus*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object was previously disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription\n  commentId: P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription\n  id: CloseStatusDescription\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: CloseStatusDescription\n  nameWithType: AspNetWebSocket.CloseStatusDescription\n  fullName: AspNetWebSocket.CloseStatusDescription\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Gets a status message that explains why an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was closed.\n  syntax:\n    content: public override string CloseStatusDescription { get; }\n    return:\n      type: System.String\n      description: The status message.\n  overload: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object was previously disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.Dispose\n  commentId: M:System.Web.WebSockets.AspNetWebSocket.Dispose\n  id: Dispose\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: AspNetWebSocket.Dispose()\n  fullName: AspNetWebSocket.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Releases all resources used by an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object.\n  remarks: ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.\n  syntax:\n    content: public override void Dispose ();\n    parameters: []\n  overload: System.Web.WebSockets.AspNetWebSocket.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  commentId: M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  nameWithType: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  fullName: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Receives a single message fragment from a remote client.\n  syntax:\n    content: public override System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync (ArraySegment<byte> buffer, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.ArraySegment{System.Byte}\n      description: The array that contains the message data.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The object that cancels a pending operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}\n      description: A reference to the task of receiving a message.\n  overload: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object was previously disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.WebSockets.AspNetWebSocket\\\"></xref> object is in an aborted state.  \\n  \\n -or-  \\n  \\n Receiving operations are unavailable.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  commentId: M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  nameWithType: AspNetWebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  fullName: AspNetWebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Sends a single message fragment to a remote client.\n  syntax:\n    content: public override System.Threading.Tasks.Task SendAsync (ArraySegment<byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.ArraySegment{System.Byte}\n      description: The array that contains the message data.\n    - id: messageType\n      type: System.Net.WebSockets.WebSocketMessageType\n      description: The message type.\n    - id: endOfMessage\n      type: System.Boolean\n      description: '`true` to indicate that a fragment is the end of a complete message; otherwise, `false`.'\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The object that cancels a pending operation.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A reference to the task of sending a message.\n  overload: System.Web.WebSockets.AspNetWebSocket.SendAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.WebSockets.AspNetWebSocket\\\"></xref> object is in an aborted state.  \\n  \\n -or-  \\n  \\n Sending operations are unavailable.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.State\n  commentId: P:System.Web.WebSockets.AspNetWebSocket.State\n  id: State\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: State\n  nameWithType: AspNetWebSocket.State\n  fullName: AspNetWebSocket.State\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Gets a value that indicates the open or closed state of an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> object.\n  syntax:\n    content: public override System.Net.WebSockets.WebSocketState State { get; }\n    return:\n      type: System.Net.WebSockets.WebSocketState\n      description: The current state.\n  overload: System.Web.WebSockets.AspNetWebSocket.State*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object was previously disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol\n  commentId: P:System.Web.WebSockets.AspNetWebSocket.SubProtocol\n  id: SubProtocol\n  parent: System.Web.WebSockets.AspNetWebSocket\n  langs:\n  - csharp\n  name: SubProtocol\n  nameWithType: AspNetWebSocket.SubProtocol\n  fullName: AspNetWebSocket.SubProtocol\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.WebSockets\n  summary: Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <xref href=\"System.Web.WebSockets.AspNetWebSocket\"></xref> connection.\n  syntax:\n    content: public override string SubProtocol { get; }\n    return:\n      type: System.String\n      description: The name of the protocol.\n  overload: System.Web.WebSockets.AspNetWebSocket.SubProtocol*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object was previously disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Net.WebSockets.WebSocket\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocket\n  nameWithType: WebSocket\n  fullName: System.Net.WebSockets.WebSocket\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.WebSockets.AspNetWebSocket.Abort\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: Abort()\n  nameWithType: AspNetWebSocket.Abort()\n  fullName: AspNetWebSocket.Abort()\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n  nameWithType: AspNetWebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n  fullName: AspNetWebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Net.WebSockets.WebSocketCloseStatus\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketCloseStatus\n  nameWithType: WebSocketCloseStatus\n  fullName: System.Net.WebSockets.WebSocketCloseStatus\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n  nameWithType: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n  fullName: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseStatus\n  nameWithType: AspNetWebSocket.CloseStatus\n  fullName: AspNetWebSocket.CloseStatus\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}\n  parent: System\n  isExternal: false\n  name: Nullable<WebSocketCloseStatus>\n  nameWithType: Nullable<WebSocketCloseStatus>\n  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.WebSockets.WebSocketCloseStatus\n    name: WebSocketCloseStatus\n    nameWithType: WebSocketCloseStatus\n    fullName: System.Net.WebSockets.WebSocketCloseStatus\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseStatusDescription\n  nameWithType: AspNetWebSocket.CloseStatusDescription\n  fullName: AspNetWebSocket.CloseStatusDescription\n- uid: System.Web.WebSockets.AspNetWebSocket.Dispose\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: Dispose()\n  nameWithType: AspNetWebSocket.Dispose()\n  fullName: AspNetWebSocket.Dispose()\n- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  nameWithType: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  fullName: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Net.WebSockets.WebSocketReceiveResult\n  name: WebSocketReceiveResult\n  nameWithType: WebSocketReceiveResult\n  fullName: System.Net.WebSockets.WebSocketReceiveResult\n- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<WebSocketReceiveResult>\n  nameWithType: Task<WebSocketReceiveResult>\n  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.WebSockets.WebSocketReceiveResult\n    name: WebSocketReceiveResult\n    nameWithType: WebSocketReceiveResult\n    fullName: System.Net.WebSockets.WebSocketReceiveResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ArraySegment`1\n  name: ArraySegment<T>\n  nameWithType: ArraySegment<T>\n  fullName: System.ArraySegment<T>\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.ArraySegment{System.Byte}\n  parent: System\n  isExternal: false\n  name: ArraySegment<Byte>\n  nameWithType: ArraySegment<Byte>\n  fullName: System.ArraySegment<System.Byte>\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    nameWithType: ArraySegment\n    fullName: System.ArraySegment\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  nameWithType: AspNetWebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  fullName: AspNetWebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n- uid: System.Net.WebSockets.WebSocketMessageType\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketMessageType\n  nameWithType: WebSocketMessageType\n  fullName: System.Net.WebSockets.WebSocketMessageType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.WebSockets.AspNetWebSocket.State\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: State\n  nameWithType: AspNetWebSocket.State\n  fullName: AspNetWebSocket.State\n- uid: System.Net.WebSockets.WebSocketState\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketState\n  nameWithType: WebSocketState\n  fullName: System.Net.WebSockets.WebSocketState\n- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: SubProtocol\n  nameWithType: AspNetWebSocket.SubProtocol\n  fullName: AspNetWebSocket.SubProtocol\n- uid: System.Web.WebSockets.AspNetWebSocket.Abort*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: Abort\n  nameWithType: AspNetWebSocket.Abort\n  fullName: AspNetWebSocket.Abort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseAsync\n  nameWithType: AspNetWebSocket.CloseAsync\n  fullName: AspNetWebSocket.CloseAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseOutputAsync\n  nameWithType: AspNetWebSocket.CloseOutputAsync\n  fullName: AspNetWebSocket.CloseOutputAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseStatus\n  nameWithType: AspNetWebSocket.CloseStatus\n  fullName: AspNetWebSocket.CloseStatus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: CloseStatusDescription\n  nameWithType: AspNetWebSocket.CloseStatusDescription\n  fullName: AspNetWebSocket.CloseStatusDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.Dispose*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: Dispose\n  nameWithType: AspNetWebSocket.Dispose\n  fullName: AspNetWebSocket.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: ReceiveAsync\n  nameWithType: AspNetWebSocket.ReceiveAsync\n  fullName: AspNetWebSocket.ReceiveAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: SendAsync\n  nameWithType: AspNetWebSocket.SendAsync\n  fullName: AspNetWebSocket.SendAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.State*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: State\n  nameWithType: AspNetWebSocket.State\n  fullName: AspNetWebSocket.State\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol*\n  parent: System.Web.WebSockets.AspNetWebSocket\n  isExternal: false\n  name: SubProtocol\n  nameWithType: AspNetWebSocket.SubProtocol\n  fullName: AspNetWebSocket.SubProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.WebSockets/AspNetWebSocket.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: CreateClientBuffer(Int32, Int32)\n  nameWithType: WebSocket.CreateClientBuffer(Int32, Int32)\n  fullName: WebSocket.CreateClientBuffer(Int32, Int32)\n- uid: System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)\n  nameWithType: WebSocket.CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)\n  fullName: WebSocket.CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)\n- uid: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: CreateServerBuffer(Int32)\n  nameWithType: WebSocket.CreateServerBuffer(Int32)\n  fullName: WebSocket.CreateServerBuffer(Int32)\n- uid: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: DefaultKeepAliveInterval\n  nameWithType: WebSocket.DefaultKeepAliveInterval\n  fullName: WebSocket.DefaultKeepAliveInterval\n- uid: System.Net.WebSockets.WebSocket.IsApplicationTargeting45\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: IsApplicationTargeting45()\n  nameWithType: WebSocket.IsApplicationTargeting45()\n  fullName: WebSocket.IsApplicationTargeting45()\n- uid: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: IsStateTerminal(WebSocketState)\n  nameWithType: WebSocket.IsStateTerminal(WebSocketState)\n  fullName: WebSocket.IsStateTerminal(WebSocketState)\n- uid: System.Net.WebSockets.WebSocket.RegisterPrefixes\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: RegisterPrefixes()\n  nameWithType: WebSocket.RegisterPrefixes()\n  fullName: WebSocket.RegisterPrefixes()\n- uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])\n  parent: System.Net.WebSockets.WebSocket\n  isExternal: false\n  name: ThrowOnInvalidState(WebSocketState, WebSocketState[])\n  nameWithType: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])\n  fullName: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])\n"}