{"nodes":[{"content":"Provides transport-specific configuration for transport implementations hosted in Windows Process Activation Service (WAS).","nodes":[{"pos":[0,123],"content":"Provides transport-specific configuration for transport implementations hosted in Windows Process Activation Service (WAS).","nodes":[{"content":"Provides transport-specific configuration for transport implementations hosted in Windows Process Activation Service (WAS).","pos":[0,123]}]}],"pos":[683,807],"yaml":true},{"content":"Transports that support process activation using the Windows Process Activation Service (WAS) use WAS site bindings to store information about the network addresses on which the transport is listening. The transport implementation is responsible for reading this information from the ApplicationHost.config file and for constructing a set of base address URIs that can then be passed to the constructor of <xref:System.ServiceModel.ServiceHostBase>. The process by which these base addresses are constructed is transport protocol specific. Implementations of a transport that support WAS activation must provide an implementation that derives from <xref:System.ServiceModel.Activation.HostedTransportConfiguration> to encapsulate this logic. For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.","nodes":[{"pos":[0,967],"content":"Transports that support process activation using the Windows Process Activation Service (WAS) use WAS site bindings to store information about the network addresses on which the transport is listening. The transport implementation is responsible for reading this information from the ApplicationHost.config file and for constructing a set of base address URIs that can then be passed to the constructor of <xref:System.ServiceModel.ServiceHostBase>. The process by which these base addresses are constructed is transport protocol specific. Implementations of a transport that support WAS activation must provide an implementation that derives from <xref:System.ServiceModel.Activation.HostedTransportConfiguration> to encapsulate this logic. For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.","nodes":[{"content":"Transports that support process activation using the Windows Process Activation Service (WAS) use WAS site bindings to store information about the network addresses on which the transport is listening.","pos":[0,201]},{"content":"The transport implementation is responsible for reading this information from the ApplicationHost.config file and for constructing a set of base address URIs that can then be passed to the constructor of <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>.","pos":[202,449],"source":" The transport implementation is responsible for reading this information from the ApplicationHost.config file and for constructing a set of base address URIs that can then be passed to the constructor of <xref:System.ServiceModel.ServiceHostBase>."},{"content":"The process by which these base addresses are constructed is transport protocol specific.","pos":[450,539]},{"content":"Implementations of a transport that support WAS activation must provide an implementation that derives from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activation.HostedTransportConfiguration&gt;</ph> to encapsulate this logic.","pos":[540,741],"source":" Implementations of a transport that support WAS activation must provide an implementation that derives from <xref:System.ServiceModel.Activation.HostedTransportConfiguration> to encapsulate this logic."},{"content":"For more information about the use of this class, see the <bpt id=\"p1\">[</bpt>UDP Activation<ept id=\"p1\">](~/docs/framework/wcf/samples/udp-activation.md)</ept> sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.","pos":[742,967],"source":" For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS."}]}],"pos":[818,1786],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.HostedTransportConfiguration\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Activation.HostedTransportConfiguration\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.HostedTransportConfiguration\"></xref> class."}],"pos":[3345,3467],"yaml":true},{"content":"When overridden in a derived class, retrieves the base address of the host.","nodes":[{"pos":[0,75],"content":"When overridden in a derived class, retrieves the base address of the host.","nodes":[{"content":"When overridden in a derived class, retrieves the base address of the host.","pos":[0,75]}]}],"pos":[4825,4901],"yaml":true},{"content":"For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.","nodes":[{"pos":[0,225],"content":"For more information about the use of this class, see the <bpt id=\"p1\">[</bpt>UDP Activation<ept id=\"p1\">](~/docs/framework/wcf/samples/udp-activation.md)</ept> sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.","source":"For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS."}],"pos":[4912,5138],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the service.","nodes":[{"pos":[0,32],"content":"The virtual path to the service.","nodes":[{"content":"The virtual path to the service.","pos":[0,32]}]}],"pos":[5305,5338],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the base address of the host.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base address of the host.","source":"The <xref href=\"System.Uri\"></xref> that contains the base address of the host."}],"pos":[5394,5474],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration\n  commentId: T:System.ServiceModel.Activation.HostedTransportConfiguration\n  id: HostedTransportConfiguration\n  children:\n  - System.ServiceModel.Activation.HostedTransportConfiguration.#ctor\n  - System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)\n  langs:\n  - csharp\n  name: HostedTransportConfiguration\n  nameWithType: HostedTransportConfiguration\n  fullName: System.ServiceModel.Activation.HostedTransportConfiguration\n  type: Class\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: Provides transport-specific configuration for transport implementations hosted in Windows Process Activation Service (WAS).\n  remarks: Transports that support process activation using the Windows Process Activation Service (WAS) use WAS site bindings to store information about the network addresses on which the transport is listening. The transport implementation is responsible for reading this information from the ApplicationHost.config file and for constructing a set of base address URIs that can then be passed to the constructor of <xref:System.ServiceModel.ServiceHostBase>. The process by which these base addresses are constructed is transport protocol specific. Implementations of a transport that support WAS activation must provide an implementation that derives from <xref:System.ServiceModel.Activation.HostedTransportConfiguration> to encapsulate this logic. For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.\n  syntax:\n    content: public abstract class HostedTransportConfiguration\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/HostedTransportConfiguration.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration.#ctor\n  commentId: M:System.ServiceModel.Activation.HostedTransportConfiguration.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.HostedTransportConfiguration\n  langs:\n  - csharp\n  name: HostedTransportConfiguration()\n  nameWithType: HostedTransportConfiguration.HostedTransportConfiguration()\n  fullName: HostedTransportConfiguration.HostedTransportConfiguration()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.HostedTransportConfiguration\"></xref> class.\n  syntax:\n    content: protected HostedTransportConfiguration ();\n    parameters: []\n  overload: System.ServiceModel.Activation.HostedTransportConfiguration.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/HostedTransportConfiguration.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)\n  commentId: M:System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)\n  id: GetBaseAddresses(System.String)\n  parent: System.ServiceModel.Activation.HostedTransportConfiguration\n  langs:\n  - csharp\n  name: GetBaseAddresses(String)\n  nameWithType: HostedTransportConfiguration.GetBaseAddresses(String)\n  fullName: HostedTransportConfiguration.GetBaseAddresses(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: When overridden in a derived class, retrieves the base address of the host.\n  remarks: For more information about the use of this class, see the [UDP Activation](~/docs/framework/wcf/samples/udp-activation.md) sample, which demonstrates how to create a custom user datagram protocol (UDP) to be activated by WAS.\n  syntax:\n    content: public abstract Uri[] GetBaseAddresses (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the service.\n    return:\n      type: System.Uri[]\n      description: The <xref href=\"System.Uri\"></xref> that contains the base address of the host.\n  overload: System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/HostedTransportConfiguration.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration.#ctor\n  parent: System.ServiceModel.Activation.HostedTransportConfiguration\n  isExternal: false\n  name: HostedTransportConfiguration()\n  nameWithType: HostedTransportConfiguration.HostedTransportConfiguration()\n  fullName: HostedTransportConfiguration.HostedTransportConfiguration()\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)\n  parent: System.ServiceModel.Activation.HostedTransportConfiguration\n  isExternal: false\n  name: GetBaseAddresses(String)\n  nameWithType: HostedTransportConfiguration.GetBaseAddresses(String)\n  fullName: HostedTransportConfiguration.GetBaseAddresses(String)\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration.#ctor*\n  parent: System.ServiceModel.Activation.HostedTransportConfiguration\n  isExternal: false\n  name: HostedTransportConfiguration\n  nameWithType: HostedTransportConfiguration.HostedTransportConfiguration\n  fullName: HostedTransportConfiguration.HostedTransportConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/HostedTransportConfiguration.xml\n- uid: System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses*\n  parent: System.ServiceModel.Activation.HostedTransportConfiguration\n  isExternal: false\n  name: GetBaseAddresses\n  nameWithType: HostedTransportConfiguration.GetBaseAddresses\n  fullName: HostedTransportConfiguration.GetBaseAddresses\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/HostedTransportConfiguration.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}