{"nodes":[{"content":"The <xref href=\"System.Device.Location\"></xref> namespace allows application developers to easily access the computer's location by using a single API.  Location information may come from multiple providers, such as GPS, Wi-Fi triangulation, and cell phone tower triangulation. The <xref href=\"System.Device.Location\"></xref> classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them. As a result, application developers who use this API do not need to tailor applications to specific hardware configurations.","nodes":[{"pos":[0,608],"content":"The <xref href=\"System.Device.Location\"></xref> namespace allows application developers to easily access the computer's location by using a single API.  Location information may come from multiple providers, such as GPS, Wi-Fi triangulation, and cell phone tower triangulation. The <xref href=\"System.Device.Location\"></xref> classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them. As a result, application developers who use this API do not need to tailor applications to specific hardware configurations.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location\"&gt;&lt;/xref&gt;</ph> namespace allows application developers to easily access the computer's location by using a single API.","pos":[0,151],"source":"The <xref href=\"System.Device.Location\"></xref> namespace allows application developers to easily access the computer's location by using a single API."},{"content":"Location information may come from multiple providers, such as GPS, Wi-Fi triangulation, and cell phone tower triangulation.","pos":[153,277]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location\"&gt;&lt;/xref&gt;</ph> classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them.","pos":[278,483],"source":" The <xref href=\"System.Device.Location\"></xref> classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them."},{"content":"As a result, application developers who use this API do not need to tailor applications to specific hardware configurations.","pos":[484,608]}]}],"pos":[896,1505],"yaml":true},{"content":"The <xref:System.Device.Location.GeoCoordinateWatcher> class supplies location data that is based on latitude and longitude coordinates. The <xref:System.Device.Location.CivicAddressResolver> and <xref:System.Device.Location.ICivicAddressResolver> types provide the ability to resolve from a coordinate location to a civic address. Additionally, the <xref:System.Device.Location.IGeoPositionWatcher%601> interface can be implemented to extend the types of location data that are supplied.  \n  \n In Windows 7, all the <xref:System.Device.Location> classes are fully functional if a location provider is installed and can determine the computer's location. On Windows 7 Starter Edition, the Default Location Provider that can be set in Control Panel is the only location provider that is supported.  \n  \n **Note** In versions of Windows prior to Windows 7, the following conditions apply:  \n  \n-   All <xref:System.Device.Location> objects that have constructors can be created, but the <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> property will always have the value <xref:System.Device.Location.GeoPositionStatus.Disabled>.  \n  \n-   The location indicated by the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> will always be <xref:System.Device.Location.GeoCoordinate.Unknown>.  \n  \n-   No location events will be raised.","nodes":[{"pos":[0,488],"content":"The <xref:System.Device.Location.GeoCoordinateWatcher> class supplies location data that is based on latitude and longitude coordinates. The <xref:System.Device.Location.CivicAddressResolver> and <xref:System.Device.Location.ICivicAddressResolver> types provide the ability to resolve from a coordinate location to a civic address. Additionally, the <xref:System.Device.Location.IGeoPositionWatcher%601> interface can be implemented to extend the types of location data that are supplied.","nodes":[{"content":"The <xref:System.Device.Location.GeoCoordinateWatcher> class supplies location data that is based on latitude and longitude coordinates. The <xref:System.Device.Location.CivicAddressResolver> and <xref:System.Device.Location.ICivicAddressResolver> types provide the ability to resolve from a coordinate location to a civic address. Additionally, the <xref:System.Device.Location.IGeoPositionWatcher%601> interface can be implemented to extend the types of location data that are supplied.","pos":[0,488],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinateWatcher&gt;</ph> class supplies location data that is based on latitude and longitude coordinates.","pos":[0,136],"source":"The <xref:System.Device.Location.GeoCoordinateWatcher> class supplies location data that is based on latitude and longitude coordinates."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.CivicAddressResolver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Device.Location.ICivicAddressResolver&gt;</ph> types provide the ability to resolve from a coordinate location to a civic address.","pos":[137,331],"source":" The <xref:System.Device.Location.CivicAddressResolver> and <xref:System.Device.Location.ICivicAddressResolver> types provide the ability to resolve from a coordinate location to a civic address."},{"content":"Additionally, the <ph id=\"ph1\">&lt;xref:System.Device.Location.IGeoPositionWatcher%601&gt;</ph> interface can be implemented to extend the types of location data that are supplied.","pos":[332,488],"source":" Additionally, the <xref:System.Device.Location.IGeoPositionWatcher%601> interface can be implemented to extend the types of location data that are supplied."}]}]},{"pos":[495,796],"content":"In Windows 7, all the <xref:System.Device.Location> classes are fully functional if a location provider is installed and can determine the computer's location. On Windows 7 Starter Edition, the Default Location Provider that can be set in Control Panel is the only location provider that is supported.","nodes":[{"content":"In Windows 7, all the <xref:System.Device.Location> classes are fully functional if a location provider is installed and can determine the computer's location. On Windows 7 Starter Edition, the Default Location Provider that can be set in Control Panel is the only location provider that is supported.","pos":[0,301],"nodes":[{"content":"In Windows 7, all the <ph id=\"ph1\">&lt;xref:System.Device.Location&gt;</ph> classes are fully functional if a location provider is installed and can determine the computer's location.","pos":[0,159],"source":"In Windows 7, all the <xref:System.Device.Location> classes are fully functional if a location provider is installed and can determine the computer's location."},{"content":"On Windows 7 Starter Edition, the Default Location Provider that can be set in Control Panel is the only location provider that is supported.","pos":[160,301]}]}]},{"pos":[803,886],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> In versions of Windows prior to Windows 7, the following conditions apply:","source":"**Note** In versions of Windows prior to Windows 7, the following conditions apply:"},{"pos":[896,1139],"content":"All <xref:System.Device.Location> objects that have constructors can be created, but the <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> property will always have the value <xref:System.Device.Location.GeoPositionStatus.Disabled>.","nodes":[{"content":"All <ph id=\"ph1\">&lt;xref:System.Device.Location&gt;</ph> objects that have constructors can be created, but the <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinateWatcher.Status%2A&gt;</ph> property will always have the value <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoPositionStatus.Disabled&gt;</ph>.","pos":[0,243],"source":"All <xref:System.Device.Location> objects that have constructors can be created, but the <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> property will always have the value <xref:System.Device.Location.GeoPositionStatus.Disabled>."}]},{"pos":[1149,1379],"content":"The location indicated by the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> will always be <xref:System.Device.Location.GeoCoordinate.Unknown>.","nodes":[{"content":"The location indicated by the <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoPosition%601.Location%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinateWatcher.Position%2A&gt;</ph> will always be <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate.Unknown&gt;</ph>.","pos":[0,230],"source":"The location indicated by the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> will always be <xref:System.Device.Location.GeoCoordinate.Unknown>."}]},{"pos":[1389,1423],"content":"No location events will be raised.","nodes":[{"content":"No location events will be raised.","pos":[0,34]}]}],"pos":[1516,2952],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location\n  id: System.Device.Location\n  children:\n  - System.Device.Location.CivicAddress\n  - System.Device.Location.CivicAddressResolver\n  - System.Device.Location.GeoCoordinate\n  - System.Device.Location.GeoCoordinateWatcher\n  - System.Device.Location.GeoPosition`1\n  - System.Device.Location.GeoPositionAccuracy\n  - System.Device.Location.GeoPositionChangedEventArgs`1\n  - System.Device.Location.GeoPositionPermission\n  - System.Device.Location.GeoPositionStatus\n  - System.Device.Location.GeoPositionStatusChangedEventArgs\n  - System.Device.Location.ICivicAddressResolver\n  - System.Device.Location.IGeoPositionWatcher`1\n  - System.Device.Location.ResolveAddressCompletedEventArgs\n  langs:\n  - csharp\n  name: System.Device.Location\n  nameWithType: System.Device.Location\n  fullName: System.Device.Location\n  type: Namespace\n  summary: The <xref href=\"System.Device.Location\"></xref> namespace allows application developers to easily access the computer's location by using a single API.  Location information may come from multiple providers, such as GPS, Wi-Fi triangulation, and cell phone tower triangulation. The <xref href=\"System.Device.Location\"></xref> classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them. As a result, application developers who use this API do not need to tailor applications to specific hardware configurations.\n  remarks: \"The <xref:System.Device.Location.GeoCoordinateWatcher> class supplies location data that is based on latitude and longitude coordinates. The <xref:System.Device.Location.CivicAddressResolver> and <xref:System.Device.Location.ICivicAddressResolver> types provide the ability to resolve from a coordinate location to a civic address. Additionally, the <xref:System.Device.Location.IGeoPositionWatcher%601> interface can be implemented to extend the types of location data that are supplied.  \\n  \\n In Windows 7, all the <xref:System.Device.Location> classes are fully functional if a location provider is installed and can determine the computer's location. On Windows 7 Starter Edition, the Default Location Provider that can be set in Control Panel is the only location provider that is supported.  \\n  \\n **Note** In versions of Windows prior to Windows 7, the following conditions apply:  \\n  \\n-   All <xref:System.Device.Location> objects that have constructors can be created, but the <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> property will always have the value <xref:System.Device.Location.GeoPositionStatus.Disabled>.  \\n  \\n-   The location indicated by the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> will always be <xref:System.Device.Location.GeoCoordinate.Unknown>.  \\n  \\n-   No location events will be raised.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Device.Location.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\nreferences:\n- uid: System.Device.Location.CivicAddress\n  parent: System.Device.Location\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n- uid: System.Device.Location.CivicAddressResolver\n  parent: System.Device.Location\n  isExternal: false\n  name: CivicAddressResolver\n  nameWithType: CivicAddressResolver\n  fullName: System.Device.Location.CivicAddressResolver\n- uid: System.Device.Location.GeoCoordinate\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate\n  fullName: System.Device.Location.GeoCoordinate\n- uid: System.Device.Location.GeoCoordinateWatcher\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoCoordinateWatcher\n  nameWithType: GeoCoordinateWatcher\n  fullName: System.Device.Location.GeoCoordinateWatcher\n- uid: System.Device.Location.GeoPosition`1\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPosition<T>\n  nameWithType: GeoPosition<T>\n  fullName: System.Device.Location.GeoPosition<T>\n- uid: System.Device.Location.GeoPositionAccuracy\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionAccuracy\n  nameWithType: GeoPositionAccuracy\n  fullName: System.Device.Location.GeoPositionAccuracy\n- uid: System.Device.Location.GeoPositionChangedEventArgs`1\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionChangedEventArgs<T>\n  nameWithType: GeoPositionChangedEventArgs<T>\n  fullName: System.Device.Location.GeoPositionChangedEventArgs<T>\n- uid: System.Device.Location.GeoPositionPermission\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionPermission\n  nameWithType: GeoPositionPermission\n  fullName: System.Device.Location.GeoPositionPermission\n- uid: System.Device.Location.GeoPositionStatus\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionStatus\n  nameWithType: GeoPositionStatus\n  fullName: System.Device.Location.GeoPositionStatus\n- uid: System.Device.Location.GeoPositionStatusChangedEventArgs\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionStatusChangedEventArgs\n  nameWithType: GeoPositionStatusChangedEventArgs\n  fullName: System.Device.Location.GeoPositionStatusChangedEventArgs\n- uid: System.Device.Location.ICivicAddressResolver\n  parent: System.Device.Location\n  isExternal: false\n  name: ICivicAddressResolver\n  nameWithType: ICivicAddressResolver\n  fullName: System.Device.Location.ICivicAddressResolver\n- uid: System.Device.Location.IGeoPositionWatcher`1\n  parent: System.Device.Location\n  isExternal: false\n  name: IGeoPositionWatcher<T>\n  nameWithType: IGeoPositionWatcher<T>\n  fullName: System.Device.Location.IGeoPositionWatcher<T>\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs\n  parent: System.Device.Location\n  isExternal: false\n  name: ResolveAddressCompletedEventArgs\n  nameWithType: ResolveAddressCompletedEventArgs\n  fullName: System.Device.Location.ResolveAddressCompletedEventArgs\n"}