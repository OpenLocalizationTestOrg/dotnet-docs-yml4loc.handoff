{"nodes":[{"content":"Associates a key string with <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> values to define <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects.","nodes":[{"pos":[0,182],"content":"Associates a key string with <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;&lt;/xref&gt;</ph> values to define <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> objects.","source":"Associates a key string with <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> values to define <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects."}],"pos":[676,859],"yaml":true},{"content":"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.  \n  \n Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.  \n  \n You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar. To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.  \n  \n For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043).","nodes":[{"pos":[0,136],"content":"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.","nodes":[{"content":"The basic unit of semantic expression in System.Speech is the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph>, which is a key/value pair.","pos":[0,136],"source":"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair."}]},{"pos":[143,481],"content":"Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.","nodes":[{"content":"Using <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> objects, you tag <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> instances contained in <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects and strings so that the values may readily be accessed from <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instances on recognition.","pos":[0,338],"source":"Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition."}]},{"pos":[488,1072],"content":"You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar. To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.","nodes":[{"content":"You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar. To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.","pos":[0,584],"nodes":[{"content":"You can use <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> objects, in conjunction with <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.Choices&gt;</ph> objects, to define the semantic structure for a speech recognition grammar.","pos":[0,317],"source":"You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar."},{"content":"To access the semantic information in a recognition result, obtain an instance of <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> through the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A&gt;</ph> property on <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.RecognizedPhrase&gt;</ph>.","pos":[318,584],"source":" To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>."}]}]},{"pos":[1079,1638],"content":"For more information about using <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> objects, see <bpt id=\"p1\">[</bpt>Understanding SemanticResultValue and SemanticResultKey Objects<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c)</ept> and <bpt id=\"p2\">[</bpt>Using a SemanticResultKey to Extract a SemanticResultValue<ept id=\"p2\">](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa)</ept> in the <bpt id=\"p3\">[</bpt>System Speech Programming Guide for .NET Framework 4.0<ept id=\"p3\">](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043)</ept>.","source":"For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043)."}],"pos":[870,2517],"yaml":true,"extradata":"MT"},{"content":"Assigns a semantic key to one or more <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects used to create a speech recognition grammar.","nodes":[{"pos":[0,152],"content":"Assigns a semantic key to one or more <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;&lt;/xref&gt;</ph> objects used to create a speech recognition grammar.","source":"Assigns a semantic key to one or more <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects used to create a speech recognition grammar."}],"pos":[6237,6390],"yaml":true},{"content":"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well. For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.  \n  \n When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.  \n  \n```csharp  \nSemanticResultKey stringTest=new SemanticResultKey(  \n    \"stringTest\", new GrammarBuilder[] {  \n    new GrammarBuilder(\"the\"),  \n    new GrammarBuilder(\"quick\"),  \n    new GrammarBuilder(\"brown\"),  \n    new GrammarBuilder(\"fox\")});  \n```  \n  \n The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.  \n  \n The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.  \n  \n If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.  \n  \n If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.  \n  \n There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter. If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result. This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.  \n  \n Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.","nodes":[{"pos":[0,369],"content":"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well. For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.","nodes":[{"content":"Because of implicit conversions, the <ph id=\"ph1\">`builders`</ph> argument supports <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.Choices&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.String&gt;</ph> objects as well.","pos":[0,255],"source":"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well."},{"content":"For more information on implicit conversions, see <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A&gt;</ph>.","pos":[256,369],"source":" For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>."}]},{"pos":[376,794],"content":"When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.","nodes":[{"content":"When performing a recognition operation, the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects provided in the <ph id=\"ph2\">`builders`</ph> argument are treated as sequential.","pos":[0,163],"source":"When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential."},{"content":"For example, if the following <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> is used to construct a <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.Grammar&gt;</ph>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.","pos":[164,418],"source":" For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized."}]},{"pos":[1057,1197],"content":"The <ph id=\"ph1\">`semanticResultKey`</ph> argument contains the tag used to access the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> which might be returned.","source":"The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned."},{"pos":[1204,1434],"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> is determined by the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> instances provided by the <ph id=\"ph4\">`builders`</ph> parameter.","source":"The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter."},{"pos":[1441,1665],"content":"If the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects contain no defining instances of <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph>, the value of the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`."},{"pos":[1672,2197],"content":"If the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects provided in the <ph id=\"ph2\">`builders`</ph> parameter provide an untagged (not associated with a <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> object) <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> instance that is used by the recognition logic, that instance of <ph id=\"ph5\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> will define the <ph id=\"ph6\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> property of the <ph id=\"ph7\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> that is produced.","source":"If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced."},{"pos":[2204,2921],"content":"There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter. If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result. This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.","nodes":[{"content":"There should be one, and only one, untagged <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> instance in the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects specified by the <ph id=\"ph3\">`builders`</ph> parameter.","pos":[0,207],"source":"There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter."},{"content":"If multiple instances of untagged <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> are associated with the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph>, each will attempt to the set the value of the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> produced in the recognition result.","pos":[208,499],"source":" If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result."},{"content":"This is not permitted, and the recognizer will generate an exception when it attempts to use a <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.Grammar&gt;</ph> created using such a <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> instance.","pos":[500,717],"source":" This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance."}]},{"pos":[2928,3282],"content":"Instances of <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> contained in the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects specified by the <ph id=\"ph3\">`builders`</ph> parameter and already associated with another <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> have no effect on the current <ph id=\"ph5\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> instance.","source":"Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance."}],"pos":[6401,9721],"yaml":true,"extradata":"MT"},{"content":"The tag to be used as a semantic key to access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects specified by the <code>builders</code> argument.","nodes":[{"pos":[0,259],"content":"The tag to be used as a semantic key to access the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance associated with the <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;&lt;/xref&gt;</ph> objects specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">builders</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument.","source":"The tag to be used as a semantic key to access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects specified by the <code>builders</code> argument."}],"pos":[12240,12500],"yaml":true},{"content":"An array of grammar components that will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in <code>semanticResultKey</code>.","nodes":[{"pos":[0,196],"content":"An array of grammar components that will be associated with a <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> object accessible with the tag defined in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">semanticResultKey</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array of grammar components that will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in <code>semanticResultKey</code>."}],"pos":[12593,12790],"yaml":true},{"content":"Assigns a semantic key to one or more <xref href=\"System.String\"></xref> instances used to create a speech recognition grammar.","nodes":[{"pos":[0,127],"content":"Assigns a semantic key to one or more <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instances used to create a speech recognition grammar.","source":"Assigns a semantic key to one or more <xref href=\"System.String\"></xref> instances used to create a speech recognition grammar."}],"pos":[13978,14106],"yaml":true},{"content":"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.  \n  \n```csharp  \nSemanticResultKey stringTest=new SemanticResultKey(\"stringTest\",   \n                                new string[] {  \n                                               \"the\",  \n                                               \"quick\",  \n                                               \"brown\",  \n                                               \"fox\"});  \n```  \n  \n The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.  \n  \n If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition. In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \"the quick brown fox\".","nodes":[{"pos":[0,387],"content":"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.","nodes":[{"content":"When performing a recognition operation, the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> objects used in the <ph id=\"ph2\">`phrases`</ph> parameter are treated as sequential.","pos":[0,132],"source":"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential."},{"content":"For example, if the following <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> is used to construct a <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.Grammar&gt;</ph>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.","pos":[133,387],"source":" For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized."}]},{"pos":[762,904],"content":"The <ph id=\"ph1\">`semanticResultKey`</ph> argument determines the key used to access the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> which might be returned.","source":"The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned."},{"pos":[911,1417],"content":"If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition. In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \"the quick brown fox\".","nodes":[{"content":"If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition. In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \"the quick brown fox\".","pos":[0,506],"nodes":[{"content":"If you construct a <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.Grammar&gt;</ph> using a <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> object that contains a semantic key with an array of string objects,  the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> produced by a recognition operation  will be the string used in recognition.","pos":[0,376],"source":"If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition."},{"content":"In the preceding example, this means that <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> would be \"the quick brown fox\".","pos":[377,506],"source":" In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \"the quick brown fox\"."}]}]}],"pos":[14117,15564],"yaml":true,"extradata":"MT"},{"content":"The tag to be used access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.String\"></xref> objects specified by the <code>phrases</code> argument.","nodes":[{"pos":[0,210],"content":"The tag to be used access the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance associated with the <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> objects specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">phrases</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument.","source":"The tag to be used access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.String\"></xref> objects specified by the <code>phrases</code> argument."}],"pos":[17227,17438],"yaml":true},{"content":"One or more <xref href=\"System.String\"></xref> objects, whose concatenated text will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in <code>semanticResultKey</code>.","nodes":[{"pos":[0,240],"content":"One or more <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> objects, whose concatenated text will be associated with a <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> object accessible with the tag defined in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">semanticResultKey</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"One or more <xref href=\"System.String\"></xref> objects, whose concatenated text will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in <code>semanticResultKey</code>."}],"pos":[17503,17744],"yaml":true},{"content":"Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance.","nodes":[{"pos":[0,188],"content":"Returns an instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;&lt;/xref&gt;</ph> constructed from the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticResultKey\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance."}],"pos":[18814,19003],"yaml":true},{"content":"The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).","nodes":[{"pos":[0,356],"content":"The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).","nodes":[{"content":"The use of <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A&gt;</ph> is equivalent to using the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> constructor which takes <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> as an argument (<ph id=\"ph4\">&lt;xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29&gt;</ph>).","pos":[0,356],"source":"The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>)."}]}],"pos":[19014,19371],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SemanticResultKey\n  commentId: T:System.Speech.Recognition.SemanticResultKey\n  id: SemanticResultKey\n  children:\n  - System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  - System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  - System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  langs:\n  - csharp\n  name: SemanticResultKey\n  nameWithType: SemanticResultKey\n  fullName: System.Speech.Recognition.SemanticResultKey\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Associates a key string with <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> values to define <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects.\n  remarks: \"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.  \\n  \\n Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.  \\n  \\n You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar. To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.  \\n  \\n For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043).\"\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form \\\"My password is …\\\", where the actual input is matched with a wildcard.  \\n  \\n The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.  \\n  \\n```csharp  \\nprivate void pwdGrammar()   \\n{  \\n  GrammarBuilder pwdBuilder = new GrammarBuilder(\\\"My Password is\\\");  \\n  GrammarBuilder wildcardBuilder = new GrammarBuilder();  \\n  wildcardBuilder.AppendWildcard();  \\n  SemanticResultKey wildcardKey= new SemanticResultKey(\\\"Password\\\", wildcardBuilder);  \\n  pwdBuilder+=wildcardKey;  \\n  Grammar grammar = new Grammar(pwdBuilder);  \\n  grammar.Name = \\\"Password input\\\";  \\n  \\n  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n  {  \\n    SemanticValue semantics = eventArgs.Result.Semantics;  \\n    RecognitionResult result=eventArgs.Result;  \\n  \\n    if (!semantics.ContainsKey(\\\"Password\\\"))   \\n    {  \\n      SpeechUI.SendTextFeedback(eventArgs.Result, \\\"No Password Provided\\\", false);  \\n    }  \\n    else   \\n    {  \\n      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  \\n      MemoryStream pwdMemoryStream = new MemoryStream();  \\n      pwdAudio.WriteToAudioStream(pwdMemoryStream);  \\n      if (!IsValidPwd(pwdMemoryStream))   \\n      {  \\n        string badPwd = System.IO.Path.GetTempPath() + \\\"BadPwd\\\" + (new Random()).Next().ToString() + \\\".wav\\\";  \\n        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  \\n        pwdAudio.WriteToWaveStream(waveStream);  \\n        waveStream.Flush();  \\n        waveStream.Close();  \\n        SpeechUI.SendTextFeedback(eventArgs.Result, \\\"Invalid Password\\\", false);  \\n  \\n      }  \\n    }  \\n  };  \\n  grammar.Enabled = true;  \\n  _recognizer.LoadGrammar(grammar);  \\n  UpdateGrammarTree(_grammarTreeView, _recognizer);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public class SemanticResultKey\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticResultKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  commentId: M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  id: '#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])'\n  parent: System.Speech.Recognition.SemanticResultKey\n  langs:\n  - csharp\n  name: SemanticResultKey(String, GrammarBuilder[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String, GrammarBuilder[])\n  fullName: SemanticResultKey.SemanticResultKey(String, GrammarBuilder[])\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Assigns a semantic key to one or more <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects used to create a speech recognition grammar.\n  remarks: \"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well. For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.  \\n  \\n When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \\\"the quick brown fox\\\" in sequence to be recognized.  \\n  \\n```csharp  \\nSemanticResultKey stringTest=new SemanticResultKey(  \\n    \\\"stringTest\\\", new GrammarBuilder[] {  \\n    new GrammarBuilder(\\\"the\\\"),  \\n    new GrammarBuilder(\\\"quick\\\"),  \\n    new GrammarBuilder(\\\"brown\\\"),  \\n    new GrammarBuilder(\\\"fox\\\")});  \\n```  \\n  \\n The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.  \\n  \\n The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.  \\n  \\n If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.  \\n  \\n If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.  \\n  \\n There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter. If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result. This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.  \\n  \\n Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.\"\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form \\\"My password is …\\\", where the actual input is matched with a wildcard.  \\n  \\n The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is \\\"Password\\\". The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.  \\n  \\n```csharp  \\nprivate void pwdGrammar()   \\n{  \\n  GrammarBuilder pwdBuilder = new GrammarBuilder(\\\"My Password is\\\");  \\n  GrammarBuilder wildcardBuilder = new GrammarBuilder();  \\n  wildcardBuilder.AppendWildcard();  \\n  SemanticResultKey wildcardKey= new SemanticResultKey(\\\"Password\\\", wildcardBuilder);  \\n  pwdBuilder+=wildcardKey;  \\n  Grammar grammar = new Grammar(pwdBuilder);  \\n  grammar.Name = \\\"Password input\\\";  \\n  \\n  grammar.SpeechRecognized +=   \\n    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n    {  \\n      SemanticValue semantics = eventArgs.Result.Semantics;  \\n      RecognitionResult result=eventArgs.Result;  \\n  \\n      if (!semantics.ContainsKey(\\\"Password\\\"))   \\n      {  \\n        SpeechUI.SendTextFeedback(eventArgs.Result, \\\"No Password Provided\\\", false);  \\n      }  \\n      else   \\n      {  \\n        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  \\n                  result.Words[3],  \\n                  result.Words[result.Words.Count - 1]);  \\n                  MemoryStream pwdMemoryStream = new MemoryStream();  \\n                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  \\n        if (!IsValidPwd(pwdMemoryStream))   \\n        {  \\n          string badPwd = System.IO.Path.GetTempPath() + \\\"BadPwd\\\" + (new Random()).Next().ToString() + \\\".wav\\\";  \\n          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    \\n          pwdAudio.WriteToWaveStream(waveStream);  \\n          waveStream.Flush();  \\n          waveStream.Close();  \\n          SpeechUI.SendTextFeedback(eventArgs.Result, \\\"Invalid Password\\\", false);      \\n        }  \\n      }  \\n    };  \\n  \\n  grammar.Enabled = true;  \\n  _recognizer.LoadGrammar(grammar);  \\n  UpdateGrammarTree(_grammarTreeView, _recognizer);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public SemanticResultKey (string semanticResultKey, System.Speech.Recognition.GrammarBuilder[] builders);\n    parameters:\n    - id: semanticResultKey\n      type: System.String\n      description: The tag to be used as a semantic key to access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects specified by the <code>builders</code> argument.\n    - id: builders\n      type: System.Speech.Recognition.GrammarBuilder[]\n      description: An array of grammar components that will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in <code>semanticResultKey</code>.\n  overload: System.Speech.Recognition.SemanticResultKey.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticResultKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  commentId: M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  id: '#ctor(System.String,System.String[])'\n  parent: System.Speech.Recognition.SemanticResultKey\n  langs:\n  - csharp\n  name: SemanticResultKey(String, String[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String, String[])\n  fullName: SemanticResultKey.SemanticResultKey(String, String[])\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Assigns a semantic key to one or more <xref href=\"System.String\"></xref> instances used to create a speech recognition grammar.\n  remarks: \"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \\\"the quick brown fox\\\" in sequence to be recognized.  \\n  \\n```csharp  \\nSemanticResultKey stringTest=new SemanticResultKey(\\\"stringTest\\\",   \\n                                new string[] {  \\n                                               \\\"the\\\",  \\n                                               \\\"quick\\\",  \\n                                               \\\"brown\\\",  \\n                                               \\\"fox\\\"});  \\n```  \\n  \\n The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.  \\n  \\n If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition. In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \\\"the quick brown fox\\\".\"\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.  \\n  \\n A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase \\\"color red green blue zero\\\". The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of \\\"red green blue\\\". You can access the <xref:System.Speech.Recognition.SemanticValue> using the \\\"code\\\" tag.  \\n  \\n Because of the `SemanticResultValue(\\\"zero\\\", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.  \\n  \\n```csharp  \\nprivate void keyTest()   \\n{  \\n  // Say \\\"color red green blue zero\\\"  \\n  GrammarBuilder gb = new GrammarBuilder(\\\"color\\\") +  \\n                        new SemanticResultKey(\\\"code\\\",   \\n                          (new string[] {\\\"red\\\", \\\"green\\\", \\\"blue\\\"})) +  \\n                        new SemanticResultValue(\\\"zero\\\", 5);  \\n  Grammar g = new Grammar(gb);  \\n  g.Name = \\\"keyTest\\\";  \\n  _recognizer.LoadGrammar(g);  \\n}  \\n```\"\n  syntax:\n    content: public SemanticResultKey (string semanticResultKey, string[] phrases);\n    parameters:\n    - id: semanticResultKey\n      type: System.String\n      description: The tag to be used access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.String\"></xref> objects specified by the <code>phrases</code> argument.\n    - id: phrases\n      type: System.String[]\n      description: One or more <xref href=\"System.String\"></xref> objects, whose concatenated text will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in <code>semanticResultKey</code>.\n  overload: System.Speech.Recognition.SemanticResultKey.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticResultKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  commentId: M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  id: ToGrammarBuilder\n  parent: System.Speech.Recognition.SemanticResultKey\n  langs:\n  - csharp\n  name: ToGrammarBuilder()\n  nameWithType: SemanticResultKey.ToGrammarBuilder()\n  fullName: SemanticResultKey.ToGrammarBuilder()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance.\n  remarks: The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.  \\n  \\n A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances. The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.  \\n  \\n A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.  \\n  \\n```csharp  \\n  \\nprivate Grammar CreateGrammarBuilderRGBSemantics()   \\n{  \\n  \\n  // Create a set of choices, each a lookup from a color name to RGB.  \\n  // Choices constructors do not take SemanticResultValue parameters, so cast   \\n  // the SemanticResultValue to GrammarBuilder.  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  \\n    colorChoice.Add(colorValue.ToGrammarBuilder());      \\n  }  \\n  SemanticResultKey choiceKey = new SemanticResultKey(\\\"rgb\\\", colorChoice);  \\n  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  \\n  \\n  // Create two intermediate grammars with introductory phrase and the color choice.  \\n  GrammarBuilder makeBackgroundBuilder = \\\"Make background\\\";  \\n  makeBackgroundBuilder.Append(choiceBuilder);  \\n  \\n  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder(\\\"Configure background as\\\");  \\n  configureBackgroundBuilder.Append((new SemanticResultKey(\\\"rgb\\\", colorChoice)).ToGrammarBuilder());  \\n  \\n  // Create the Grammar object, which recognizes either intermediate grammar.  \\n  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  \\n  grammar.Name = \\\"Make Background /Configure background as\\\";  \\n  \\n  return grammar;  \\n}  \\n  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();\n    parameters: []\n    return:\n      type: System.Speech.Recognition.GrammarBuilder\n      description: ''\n  overload: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticResultKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: SemanticResultKey(String, GrammarBuilder[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String, GrammarBuilder[])\n  fullName: SemanticResultKey.SemanticResultKey(String, GrammarBuilder[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.GrammarBuilder\n  name: GrammarBuilder\n  nameWithType: GrammarBuilder\n  fullName: System.Speech.Recognition.GrammarBuilder\n- uid: System.Speech.Recognition.GrammarBuilder[]\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: GrammarBuilder[]\n  nameWithType: GrammarBuilder[]\n  fullName: System.Speech.Recognition.GrammarBuilder[]\n  spec.csharp:\n  - uid: System.Speech.Recognition.GrammarBuilder\n    name: GrammarBuilder\n    nameWithType: GrammarBuilder\n    fullName: System.Speech.Recognition.GrammarBuilder\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: SemanticResultKey(String, String[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String, String[])\n  fullName: SemanticResultKey.SemanticResultKey(String, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: ToGrammarBuilder()\n  nameWithType: SemanticResultKey.ToGrammarBuilder()\n  fullName: SemanticResultKey.ToGrammarBuilder()\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor*\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: SemanticResultKey\n  nameWithType: SemanticResultKey.SemanticResultKey\n  fullName: SemanticResultKey.SemanticResultKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticResultKey.xml\n- uid: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder*\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: ToGrammarBuilder\n  nameWithType: SemanticResultKey.ToGrammarBuilder\n  fullName: SemanticResultKey.ToGrammarBuilder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticResultKey.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}