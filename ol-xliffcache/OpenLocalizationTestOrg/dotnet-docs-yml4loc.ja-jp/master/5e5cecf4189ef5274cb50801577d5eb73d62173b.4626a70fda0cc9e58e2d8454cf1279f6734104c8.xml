{"nodes":[{"content":"Converts between a string containing a list of font names and an array of strings representing the individual names.","nodes":[{"pos":[0,116],"content":"Converts between a string containing a list of font names and an array of strings representing the individual names.","nodes":[{"content":"Converts between a string containing a list of font names and an array of strings representing the individual names.","pos":[0,116]}]}],"pos":[912,1029],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.  \n  \n The <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method performs the reverse operation. It converts an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.  \n  \n Call the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to verify that the conversion can be made before calling the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method.","nodes":[{"pos":[0,574],"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.","pos":[0,574],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A&gt;</ph> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names.","pos":[0,210],"source":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names."},{"content":"Each font name in the string must be separated by a comma.","pos":[211,269]},{"content":"For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\".","pos":[270,418]},{"content":"Notice the commas are removed along with any white space at the beginning or end of the font name.","pos":[419,517]},{"content":"White space in the middle of a font name is not removed.","pos":[518,574]}]}]},{"pos":[581,1048],"content":"The <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method performs the reverse operation. It converts an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method performs the reverse operation. It converts an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.","pos":[0,467],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A&gt;</ph> method performs the reverse operation.","pos":[0,107],"source":"The <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method performs the reverse operation."},{"content":"It converts an array of strings containing the individual font names to a single string containing a list of the names.","pos":[108,227]},{"content":"For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\".","pos":[228,373]},{"content":"Notice that commas are automatically inserted between the font names without any white space.","pos":[374,467]}]}]},{"pos":[1055,1276],"content":"Call the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to verify that the conversion can be made before calling the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A&gt;</ph> method to verify that the conversion can be made before calling the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A&gt;</ph> method.","pos":[0,221],"source":"Call the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to verify that the conversion can be made before calling the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method."}]}],"pos":[1040,2339],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FontNamesConverter\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FontNamesConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FontNamesConverter\"></xref> class."}],"pos":[7913,8020],"yaml":true},{"content":"You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"pos":[0,239],"content":"You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"content":"You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","pos":[0,239],"nodes":[{"content":"You should never access a type converter directly.","pos":[0,50]},{"content":"Instead, call the appropriate converter by using a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.","pos":[51,153],"source":" Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object."},{"content":"For more information, see the examples in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[154,239],"source":" For more information, see the examples in <xref:System.ComponentModel.TypeConverter>."}]}]}],"pos":[8031,8271],"yaml":true,"extradata":"MT"},{"content":"Determines whether this converter can convert an object of the specified data type to an array of strings containing individual font names.","nodes":[{"pos":[0,139],"content":"Determines whether this converter can convert an object of the specified data type to an array of strings containing individual font names.","nodes":[{"content":"Determines whether this converter can convert an object of the specified data type to an array of strings containing individual font names.","pos":[0,139]}]}],"pos":[9664,9804],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to determine whether the specified data type can be converted to an array of strings containing individual font names.  \n  \n> [!NOTE]\n>  This converter can convert only from a `string` data type. The `sourceType` parameter must be of type <xref:System.String>. Otherwise, this method returns `false` to indicate that the specified data type cannot be converted.  \n  \n You can optionally pass in `null` for the `context` parameter.","nodes":[{"pos":[0,203],"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to determine whether the specified data type can be converted to an array of strings containing individual font names.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the specified data type can be converted to an array of strings containing individual font names.","pos":[0,203],"source":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to determine whether the specified data type can be converted to an array of strings containing individual font names."}]},{"pos":[211,446],"content":"[!NOTE]\n This converter can convert only from a `string` data type. The `sourceType` parameter must be of type <xref:System.String>. Otherwise, this method returns `false` to indicate that the specified data type cannot be converted.","leadings":["","> "],"nodes":[{"content":" This converter can convert only from a `string` data type. The `sourceType` parameter must be of type <xref:System.String>. Otherwise, this method returns `false` to indicate that the specified data type cannot be converted.","pos":[8,233],"nodes":[{"content":"This converter can convert only from a <ph id=\"ph1\">`string`</ph> data type.","pos":[1,59],"source":" This converter can convert only from a `string` data type."},{"content":"The <ph id=\"ph1\">`sourceType`</ph> parameter must be of type <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","pos":[60,124],"source":" The `sourceType` parameter must be of type <xref:System.String>."},{"content":"Otherwise, this method returns <ph id=\"ph1\">`false`</ph> to indicate that the specified data type cannot be converted.","pos":[125,225],"source":" Otherwise, this method returns `false` to indicate that the specified data type cannot be converted."}]}]},{"pos":[453,515],"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for the <ph id=\"ph2\">`context`</ph> parameter.","source":"You can optionally pass in `null` for the `context` parameter."}],"pos":[9815,10338],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. You can optionally pass in `null` for this parameter.","nodes":[{"pos":[0,193],"content":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. You can optionally pass in `null` for this parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> object that provides information about the context of a type converter.","pos":[0,139],"source":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter."},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[140,193],"source":" You can optionally pass in `null` for this parameter."}]}],"pos":[11358,11552],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the data type to convert from.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the data type to convert from.","source":"A <xref href=\"System.Type\"></xref> that represents the data type to convert from."}],"pos":[11616,11698],"yaml":true},{"content":"`true` if the type can be converted; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the type can be converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the type can be converted; otherwise, `false`."}],"pos":[11756,11815],"yaml":true},{"content":"Converts a string that represents a list of font names into an array of strings containing individual font names.","nodes":[{"pos":[0,113],"content":"Converts a string that represents a list of font names into an array of strings containing individual font names.","nodes":[{"content":"Converts a string that represents a list of font names into an array of strings containing individual font names.","pos":[0,113]}]}],"pos":[13277,13391],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice that the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.  \n  \n> [!NOTE]\n>  The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.","nodes":[{"pos":[0,558],"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice that the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice that the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.","pos":[0,558],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A&gt;</ph> method to convert a string containing a list of font names to an array of strings containing the individual names.","pos":[0,189],"source":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string containing a list of font names to an array of strings containing the individual names."},{"content":"Each font name in the string must be separated by a comma.","pos":[190,248]},{"content":"For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\".","pos":[249,397]},{"content":"Notice that the commas are removed along with any white space at the beginning or end of the font name.","pos":[398,501]},{"content":"White space in the middle of a font name is not removed.","pos":[502,558]}]}]},{"pos":[566,768],"content":"[!NOTE]\n The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.","leadings":["","> "],"nodes":[{"content":" The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.","pos":[8,200],"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> and <ph id=\"ph2\">`culture`</ph> parameters are not used in this version of the method; they are reserved for future versions of the method.","pos":[1,136],"source":" The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method."},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for these parameters.","pos":[137,192],"source":" You can optionally pass in `null` for these parameters."}]}]}],"pos":[13402,14184],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"pos":[0,287],"content":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> object that provides information about the context of a type converter.","pos":[0,139],"source":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter."},{"content":"This parameter is not used in this method.","pos":[140,182]},{"content":"It is reserved for future versions of this method.","pos":[183,233]},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[234,287],"source":" You can optionally pass in `null` for this parameter."}]}],"pos":[15171,15459],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"pos":[0,300],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that represents information about a culture such as language, calendar system, and so on.","pos":[0,152],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on."},{"content":"This parameter is not used in this method.","pos":[153,195]},{"content":"It is reserved for future versions of this method.","pos":[196,246]},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[247,300],"source":" You can optionally pass in `null` for this parameter."}]}],"pos":[15541,15842],"yaml":true},{"content":"A <xref href=\"System.Object\"></xref> instance that represents the source string to convert from.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance that represents the source string to convert from.","source":"A <xref href=\"System.Object\"></xref> instance that represents the source string to convert from."}],"pos":[15903,16000],"yaml":true},{"content":"A <xref href=\"System.Object\"></xref> instance that represents the array of strings containing the individual font names.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance that represents the array of strings containing the individual font names.","source":"A <xref href=\"System.Object\"></xref> instance that represents the array of strings containing the individual font names."}],"pos":[16057,16178],"yaml":true},{"content":"<code>value</code> is not of type <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not of type <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not of type <xref href=\"System.String\"></xref>."}],"pos":[16456,16526],"yaml":true},{"content":"Creates a string that represents a list of font names from an array of strings containing individual font names.","nodes":[{"pos":[0,112],"content":"Creates a string that represents a list of font names from an array of strings containing individual font names.","nodes":[{"content":"Creates a string that represents a list of font names from an array of strings containing individual font names.","pos":[0,112]}]}],"pos":[17940,18053],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.  \n  \n> [!NOTE]\n>  This converter can convert only to a `string` data type. The `destinationType` parameter must be of type <xref:System.String>.  \n  \n> [!NOTE]\n>  The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.","nodes":[{"pos":[0,438],"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.","pos":[0,438],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A&gt;</ph> method to convert an array of strings containing the individual font names to a single string containing a list of the names.","pos":[0,198],"source":"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual font names to a single string containing a list of the names."},{"content":"For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\".","pos":[199,344]},{"content":"Notice that commas are automatically inserted between the font names without any white space.","pos":[345,438]}]}]},{"pos":[446,583],"content":"[!NOTE]\n This converter can convert only to a `string` data type. The `destinationType` parameter must be of type <xref:System.String>.","leadings":["","> "],"nodes":[{"content":" This converter can convert only to a `string` data type. The `destinationType` parameter must be of type <xref:System.String>.","pos":[8,135],"nodes":[{"content":"This converter can convert only to a <ph id=\"ph1\">`string`</ph> data type.","pos":[1,57],"source":" This converter can convert only to a `string` data type."},{"content":"The <ph id=\"ph1\">`destinationType`</ph> parameter must be of type <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","pos":[58,127],"source":" The `destinationType` parameter must be of type <xref:System.String>."}]}]},{"pos":[591,793],"content":"[!NOTE]\n The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.","leadings":["","> "],"nodes":[{"content":" The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.","pos":[8,200],"nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> and <ph id=\"ph2\">`culture`</ph> parameters are not used in this version of the method; they are reserved for future versions of the method.","pos":[1,136],"source":" The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method."},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for these parameters.","pos":[137,192],"source":" You can optionally pass in `null` for these parameters."}]}]}],"pos":[18064,18874],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"pos":[0,287],"content":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> object that provides information about the context of a type converter.","pos":[0,139],"source":"A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter."},{"content":"This parameter is not used in this method.","pos":[140,182]},{"content":"It is reserved for future versions of this method.","pos":[183,233]},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[234,287],"source":" You can optionally pass in `null` for this parameter."}]}],"pos":[19895,20183],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"pos":[0,300],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that represents information about a culture such as language, calendar system, and so on.","pos":[0,152],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on."},{"content":"This parameter is not used in this method.","pos":[153,195]},{"content":"It is reserved for future versions of this method.","pos":[196,246]},{"content":"You can optionally pass in <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[247,300],"source":" You can optionally pass in `null` for this parameter."}]}],"pos":[20265,20566],"yaml":true},{"content":"An object that represents the source array of strings to convert from.","nodes":[{"pos":[0,70],"content":"An object that represents the source array of strings to convert from.","nodes":[{"content":"An object that represents the source array of strings to convert from.","pos":[0,70]}]}],"pos":[20627,20698],"yaml":true},{"content":"A <xref href=\"System.Object\"></xref> instance object that represents the data type to convert to. This parameter must be of type <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,164],"content":"A <xref href=\"System.Object\"></xref> instance object that represents the data type to convert to. This parameter must be of type <xref href=\"System.String\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance object that represents the data type to convert to.","pos":[0,97],"source":"A <xref href=\"System.Object\"></xref> instance object that represents the data type to convert to."},{"content":"This parameter must be of type <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","pos":[98,164],"source":" This parameter must be of type <xref href=\"System.String\"></xref>."}]}],"pos":[20767,20932],"yaml":true},{"content":"A <xref href=\"System.Object\"></xref> instance that represents a string containing a list of font names.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance that represents a string containing a list of font names.","source":"A <xref href=\"System.Object\"></xref> instance that represents a string containing a list of font names."}],"pos":[20989,21093],"yaml":true},{"content":"<code>destinationType</code> is not of type <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is not of type <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"<code>destinationType</code> is not of type <xref href=\"System.String\"></xref>."}],"pos":[21389,21469],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.FontNamesConverter\n  commentId: T:System.Web.UI.WebControls.FontNamesConverter\n  id: FontNamesConverter\n  children:\n  - System.Web.UI.WebControls.FontNamesConverter.#ctor\n  - System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: FontNamesConverter\n  nameWithType: FontNamesConverter\n  fullName: System.Web.UI.WebControls.FontNamesConverter\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Converts between a string containing a list of font names and an array of strings representing the individual names.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \\\"arial, times new roman, verdana\\\", converts to an array that contains the strings \\\"arial\\\", \\\"times new roman\\\", and \\\"verdana\\\". Notice the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.  \\n  \\n The <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method performs the reverse operation. It converts an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \\\"arial\\\", \\\"times new roman\\\", and \\\"verdana\\\" converts to the string \\\"arial,times new roman,verdana\\\". Notice that commas are automatically inserted between the font names without any white space.  \\n  \\n Call the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to verify that the conversion can be made before calling the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter> class to convert a string with a list of font names to an array of strings containing the individual names. The array of strings is then converted back to a single string and displayed.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: 'public class FontNamesConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FontNamesConverter.#ctor\n  commentId: M:System.Web.UI.WebControls.FontNamesConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  langs:\n  - csharp\n  name: FontNamesConverter()\n  nameWithType: FontNamesConverter.FontNamesConverter()\n  fullName: FontNamesConverter.FontNamesConverter()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FontNamesConverter\"></xref> class.\n  remarks: You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.\n  syntax:\n    content: public FontNamesConverter ();\n    parameters: []\n  overload: System.Web.UI.WebControls.FontNamesConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether this converter can convert an object of the specified data type to an array of strings containing individual font names.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to determine whether the specified data type can be converted to an array of strings containing individual font names.  \\n  \\n> [!NOTE]\\n>  This converter can convert only from a `string` data type. The `sourceType` parameter must be of type <xref:System.String>. Otherwise, this method returns `false` to indicate that the specified data type cannot be converted.  \\n  \\n You can optionally pass in `null` for the `context` parameter.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method. The example determines whether the specified data type can be converted to an array of strings that contains the individual font names before performing the conversion.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. You can optionally pass in `null` for this parameter.\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the data type to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if the type can be converted; otherwise, `false`.'\n  overload: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Converts a string that represents a list of font names into an array of strings containing individual font names.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \\\"arial, times new roman, verdana\\\", converts to an array that contains the strings \\\"arial\\\", \\\"times new roman\\\", and \\\"verdana\\\". Notice that the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.  \\n  \\n> [!NOTE]\\n>  The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string with a list of font names to an array of strings containing the individual names.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.\n    - id: value\n      type: System.Object\n      description: A <xref href=\"System.Object\"></xref> instance that represents the source string to convert from.\n    return:\n      type: System.Object\n      description: A <xref href=\"System.Object\"></xref> instance that represents the array of strings containing the individual font names.\n  overload: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom*\n  exceptions:\n  - type: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    description: <code>value</code> is not of type <xref href=\"System.String\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates a string that represents a list of font names from an array of strings containing individual font names.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \\\"arial\\\", \\\"times new roman\\\", and \\\"verdana\\\" converts to the string \\\"arial,times new roman,verdana\\\". Notice that commas are automatically inserted between the font names without any white space.  \\n  \\n> [!NOTE]\\n>  This converter can convert only to a `string` data type. The `destinationType` parameter must be of type <xref:System.String>.  \\n  \\n> [!NOTE]\\n>  The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual names to a single string that contains a list of font names.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.\n    - id: value\n      type: System.Object\n      description: An object that represents the source array of strings to convert from.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Object\"></xref> instance object that represents the data type to convert to. This parameter must be of type <xref href=\"System.String\"></xref>.\n    return:\n      type: System.Object\n      description: A <xref href=\"System.Object\"></xref> instance that represents a string containing a list of font names.\n  overload: System.Web.UI.WebControls.FontNamesConverter.ConvertTo*\n  exceptions:\n  - type: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    description: <code>destinationType</code> is not of type <xref href=\"System.String\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.Web.UI.WebControls.FontNamesConverter.#ctor\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: FontNamesConverter()\n  nameWithType: FontNamesConverter.FontNamesConverter()\n  fullName: FontNamesConverter.FontNamesConverter()\n- uid: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Web.UI.WebControls.FontNamesConverter.#ctor*\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: FontNamesConverter\n  nameWithType: FontNamesConverter.FontNamesConverter\n  fullName: FontNamesConverter.FontNamesConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n- uid: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom*\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: FontNamesConverter.CanConvertFrom\n  fullName: FontNamesConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom*\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: FontNamesConverter.ConvertFrom\n  fullName: FontNamesConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertTo*\n  parent: System.Web.UI.WebControls.FontNamesConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: FontNamesConverter.ConvertTo\n  fullName: FontNamesConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}