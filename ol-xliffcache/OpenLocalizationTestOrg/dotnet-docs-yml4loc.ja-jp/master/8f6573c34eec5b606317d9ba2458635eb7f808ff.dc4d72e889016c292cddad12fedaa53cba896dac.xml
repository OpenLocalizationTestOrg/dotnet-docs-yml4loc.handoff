{"nodes":[{"content":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).","nodes":[{"pos":[0,132],"content":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).","nodes":[{"content":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).","pos":[0,132]}]}],"pos":[1434,1567],"yaml":true},{"content":"This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> method.  \n  \n To access IPv4-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method. To access IPv6-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method.","nodes":[{"pos":[0,266],"content":"This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> method.","nodes":[{"content":"This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> method.","pos":[0,266],"nodes":[{"content":"This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6.","pos":[0,117]},{"content":"You do not create instances of this class; they are returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A&gt;</ph> method.","pos":[118,266],"source":" You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> method."}]}]},{"pos":[273,582],"content":"To access IPv4-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method. To access IPv6-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method.","nodes":[{"content":"To access IPv4-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method. To access IPv6-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method.","pos":[0,309],"nodes":[{"content":"To access IPv4-specific properties, use the object returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A&gt;</ph> method.","pos":[0,154],"source":"To access IPv4-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method."},{"content":"To access IPv6-specific properties, use the object returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A&gt;</ph> method.","pos":[155,309],"source":" To access IPv6-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method."}]}]}],"pos":[1578,2165],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"></xref> class."}],"pos":[4175,4289],"yaml":true},{"content":"This constructor can be called only from classes that derive from <xref:System.Net.NetworkInformation.IPInterfaceProperties>.","nodes":[{"pos":[0,125],"content":"This constructor can be called only from classes that derive from <xref:System.Net.NetworkInformation.IPInterfaceProperties>.","nodes":[{"content":"This constructor can be called only from classes that derive from <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties&gt;</ph>.","pos":[0,125],"source":"This constructor can be called only from classes that derive from <xref:System.Net.NetworkInformation.IPInterfaceProperties>."}]}],"pos":[4300,4426],"yaml":true,"extradata":"MT"},{"content":"Gets the anycast IP addresses assigned to this interface.","nodes":[{"pos":[0,57],"content":"Gets the anycast IP addresses assigned to this interface.","nodes":[{"content":"Gets the anycast IP addresses assigned to this interface.","pos":[0,57]}]}],"pos":[5886,5944],"yaml":true},{"content":"An anycast address identifies multiple computers. Packets sent to an anycast address are sent to one of the computers identified by the address. Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.","nodes":[{"pos":[0,233],"content":"An anycast address identifies multiple computers. Packets sent to an anycast address are sent to one of the computers identified by the address. Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.","nodes":[{"content":"An anycast address identifies multiple computers. Packets sent to an anycast address are sent to one of the computers identified by the address. Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.","pos":[0,233],"nodes":[{"content":"An anycast address identifies multiple computers.","pos":[0,49]},{"content":"Packets sent to an anycast address are sent to one of the computers identified by the address.","pos":[50,144]},{"content":"Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.","pos":[145,233]}]}]}],"pos":[5955,6189],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPAddressInformationCollection\"></xref> that contains the anycast addresses for this interface.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPAddressInformationCollection\"&gt;&lt;/xref&gt;</ph> that contains the anycast addresses for this interface.","source":"An <xref href=\"System.Net.NetworkInformation.IPAddressInformationCollection\"></xref> that contains the anycast addresses for this interface."}],"pos":[6901,7042],"yaml":true},{"content":"Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.","nodes":[{"pos":[0,92],"content":"Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.","nodes":[{"content":"Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.","pos":[0,92]}]}],"pos":[8453,8546],"yaml":true},{"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.","nodes":[{"pos":[0,300],"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.","nodes":[{"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.","pos":[0,300],"nodes":[{"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address.","pos":[0,162]},{"content":"A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.","pos":[163,300]}]}]}],"pos":[8557,8858],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the address information for DHCP servers, or an empty array if no servers are found.","nodes":[{"pos":[0,172],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPAddressCollection\"&gt;&lt;/xref&gt;</ph> that contains the address information for DHCP servers, or an empty array if no servers are found.","source":"An <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the address information for DHCP servers, or an empty array if no servers are found."}],"pos":[9558,9731],"yaml":true},{"content":"Gets the addresses of Domain Name System (DNS) servers for this interface.","nodes":[{"pos":[0,74],"content":"Gets the addresses of Domain Name System (DNS) servers for this interface.","nodes":[{"content":"Gets the addresses of Domain Name System (DNS) servers for this interface.","pos":[0,74]}]}],"pos":[11103,11178],"yaml":true},{"content":"DNS is a hierarchical naming system used to map host names to IP addresses.","nodes":[{"pos":[0,75],"content":"DNS is a hierarchical naming system used to map host names to IP addresses.","nodes":[{"content":"DNS is a hierarchical naming system used to map host names to IP addresses.","pos":[0,75]}]}],"pos":[11189,11265],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the DNS server addresses.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPAddressCollection\"&gt;&lt;/xref&gt;</ph> that contains the DNS server addresses.","source":"A <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the DNS server addresses."}],"pos":[11947,12060],"yaml":true},{"content":"Gets the Domain Name System (DNS) suffix associated with this interface.","nodes":[{"pos":[0,72],"content":"Gets the Domain Name System (DNS) suffix associated with this interface.","nodes":[{"content":"Gets the Domain Name System (DNS) suffix associated with this interface.","pos":[0,72]}]}],"pos":[13407,13480],"yaml":true},{"content":"The DNS suffix identifies the domain name (for example, \"contoso.com\") that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query. For example, if the local machine has \"contoso.com\" as its <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>, and must resolve the unqualified host name \"www\", the FQDN to query is \"www.contoso.com\".","nodes":[{"pos":[0,415],"content":"The DNS suffix identifies the domain name (for example, \"contoso.com\") that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query. For example, if the local machine has \"contoso.com\" as its <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>, and must resolve the unqualified host name \"www\", the FQDN to query is \"www.contoso.com\".","nodes":[{"content":"The DNS suffix identifies the domain name (for example, \"contoso.com\") that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query. For example, if the local machine has \"contoso.com\" as its <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>, and must resolve the unqualified host name \"www\", the FQDN to query is \"www.contoso.com\".","pos":[0,415],"nodes":[{"content":"The DNS suffix identifies the domain name (for example, \"contoso.com\") that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query.","pos":[0,193]},{"content":"For example, if the local machine has \"contoso.com\" as its <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A&gt;</ph>, and must resolve the unqualified host name \"www\", the FQDN to query is \"www.contoso.com\".","pos":[194,415],"source":" For example, if the local machine has \"contoso.com\" as its <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>, and must resolve the unqualified host name \"www\", the FQDN to query is \"www.contoso.com\"."}]}]}],"pos":[13491,13907],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the DNS suffix for this interface, or <xref href=\"System.String.Empty\"></xref> if there is no DNS suffix for the interface.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the DNS suffix for this interface, or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> if there is no DNS suffix for the interface.","source":"A <xref href=\"System.String\"></xref> that contains the DNS suffix for this interface, or <xref href=\"System.String.Empty\"></xref> if there is no DNS suffix for the interface."}],"pos":[14455,14630],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows 2000.","nodes":[{"pos":[0,92],"content":"This property is not valid on computers running operating systems earlier than Windows 2000.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows 2000.","pos":[0,92]}]}],"pos":[14837,14930],"yaml":true},{"content":"Gets the IPv4 network gateway addresses for this interface.","nodes":[{"pos":[0,59],"content":"Gets the IPv4 network gateway addresses for this interface.","nodes":[{"content":"Gets the IPv4 network gateway addresses for this interface.","pos":[0,59]}]}],"pos":[16224,16284],"yaml":true},{"content":"Gateways that implement the Internet Protocol Version 4 (IPv4) to forward packets between networks are returned by this property.","nodes":[{"pos":[0,129],"content":"Gateways that implement the Internet Protocol Version 4 (IPv4) to forward packets between networks are returned by this property.","nodes":[{"content":"Gateways that implement the Internet Protocol Version 4 (IPv4) to forward packets between networks are returned by this property.","pos":[0,129]}]}],"pos":[16295,16425],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformationCollection\"></xref> that contains the address information for network gateways, or an empty array if no gateways are found.","nodes":[{"pos":[0,195],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformationCollection\"&gt;&lt;/xref&gt;</ph> that contains the address information for network gateways, or an empty array if no gateways are found.","source":"An <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformationCollection\"></xref> that contains the address information for network gateways, or an empty array if no gateways are found."}],"pos":[17151,17347],"yaml":true},{"content":"Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.","nodes":[{"pos":[0,90],"content":"Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.","nodes":[{"content":"Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.","pos":[0,90]}]}],"pos":[18750,18841],"yaml":true},{"content":"This property returns `null` for <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback> interfaces.  \n  \n For a detailed description of the information available for an interface that supports IPv4, see the <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> class documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.","nodes":[{"pos":[0,111],"content":"This property returns <ph id=\"ph1\">`null`</ph> for <ph id=\"ph2\">&lt;xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback&gt;</ph> interfaces.","source":"This property returns `null` for <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback> interfaces."},{"pos":[118,534],"content":"For a detailed description of the information available for an interface that supports IPv4, see the <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> class documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.","nodes":[{"content":"For a detailed description of the information available for an interface that supports IPv4, see the <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> class documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.","pos":[0,416],"nodes":[{"content":"For a detailed description of the information available for an interface that supports IPv4, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPv4InterfaceProperties&gt;</ph> class documentation.","pos":[0,182],"source":"For a detailed description of the information available for an interface that supports IPv4, see the <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> class documentation."},{"content":"Note that the object returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A&gt;</ph> method reflects the configuration as of the time the object is created.","pos":[183,371],"source":" Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method reflects the configuration as of the time the object is created."},{"content":"This information is not updated dynamically.","pos":[372,416]}]}]}],"pos":[18852,19391],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"></xref> object that contains IPv4 configuration data, or `null` if no data is available for the interface.","nodes":[{"pos":[0,176],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"&gt;&lt;/xref&gt;</ph> object that contains IPv4 configuration data, or <ph id=\"ph2\">`null`</ph> if no data is available for the interface.","source":"An <xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"></xref> object that contains IPv4 configuration data, or `null` if no data is available for the interface."}],"pos":[19622,19799],"yaml":true},{"content":"The interface does not support the IPv4 protocol.","nodes":[{"pos":[0,49],"content":"The interface does not support the IPv4 protocol.","nodes":[{"content":"The interface does not support the IPv4 protocol.","pos":[0,49]}]}],"pos":[20056,20106],"yaml":true},{"content":"Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.","nodes":[{"pos":[0,90],"content":"Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.","nodes":[{"content":"Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.","pos":[0,90]}]}],"pos":[21410,21501],"yaml":true},{"content":"For a detailed description of the information available for an interface that supports IPv6, see the <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.","nodes":[{"pos":[0,410],"content":"For a detailed description of the information available for an interface that supports IPv6, see the <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.","nodes":[{"content":"For a detailed description of the information available for an interface that supports IPv6, see the <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.","pos":[0,410],"nodes":[{"content":"For a detailed description of the information available for an interface that supports IPv6, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPv6InterfaceProperties&gt;</ph> documentation.","pos":[0,176],"source":"For a detailed description of the information available for an interface that supports IPv6, see the <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> documentation."},{"content":"Note that the object returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A&gt;</ph> method reflects the configuration as of the time the object is created.","pos":[177,365],"source":" Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method reflects the configuration as of the time the object is created."},{"content":"This information is not updated dynamically.","pos":[366,410]}]}]}],"pos":[21512,21923],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPv6InterfaceProperties\"></xref> object that contains IPv6 configuration data.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPv6InterfaceProperties\"&gt;&lt;/xref&gt;</ph> object that contains IPv6 configuration data.","source":"An <xref href=\"System.Net.NetworkInformation.IPv6InterfaceProperties\"></xref> object that contains IPv6 configuration data."}],"pos":[22154,22278],"yaml":true},{"content":"The interface does not support the IPv6 protocol.","nodes":[{"pos":[0,49],"content":"The interface does not support the IPv6 protocol.","nodes":[{"content":"The interface does not support the IPv6 protocol.","pos":[0,49]}]}],"pos":[22535,22585],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether NetBt is configured to use DNS name resolution on this interface.","nodes":[{"pos":[0,137],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether NetBt is configured to use DNS name resolution on this interface.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether NetBt is configured to use DNS name resolution on this interface."}],"pos":[23855,23993],"yaml":true},{"content":"DNS is a hierarchical naming system used to map host names to IP addresses.","nodes":[{"pos":[0,75],"content":"DNS is a hierarchical naming system used to map host names to IP addresses.","nodes":[{"content":"DNS is a hierarchical naming system used to map host names to IP addresses.","pos":[0,75]}]}],"pos":[24004,24080],"yaml":true,"extradata":"MT"},{"content":"`true` if NetBt is configured to use DNS name resolution on this interface; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if NetBt is configured to use DNS name resolution on this interface; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if NetBt is configured to use DNS name resolution on this interface; otherwise, `false`."}],"pos":[24642,24740],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).","nodes":[{"pos":[0,188],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS)."}],"pos":[26147,26336],"yaml":true},{"content":"Dynamic DNS enables a client to inform the DNS servers that its dynamic IP address is mapped to its static host name.","nodes":[{"pos":[0,117],"content":"Dynamic DNS enables a client to inform the DNS servers that its dynamic IP address is mapped to its static host name.","nodes":[{"content":"Dynamic DNS enables a client to inform the DNS servers that its dynamic IP address is mapped to its static host name.","pos":[0,117]}]}],"pos":[26347,26465],"yaml":true,"extradata":"MT"},{"content":"`true` if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, `false`.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">`true`</ph> if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, `false`."}],"pos":[27034,27187],"yaml":true},{"content":"Gets the multicast addresses assigned to this interface.","nodes":[{"pos":[0,56],"content":"Gets the multicast addresses assigned to this interface.","nodes":[{"content":"Gets the multicast addresses assigned to this interface.","pos":[0,56]}]}],"pos":[28595,28652],"yaml":true},{"content":"A multicast address identifies multiple computers. Packets sent to a multicast address are sent to all computers identified by the address.","nodes":[{"pos":[0,139],"content":"A multicast address identifies multiple computers. Packets sent to a multicast address are sent to all computers identified by the address.","nodes":[{"content":"A multicast address identifies multiple computers. Packets sent to a multicast address are sent to all computers identified by the address.","pos":[0,139],"nodes":[{"content":"A multicast address identifies multiple computers.","pos":[0,50]},{"content":"Packets sent to a multicast address are sent to all computers identified by the address.","pos":[51,139]}]}]}],"pos":[28663,28803],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformationCollection\"></xref> that contains the multicast addresses for this interface.","nodes":[{"pos":[0,151],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformationCollection\"&gt;&lt;/xref&gt;</ph> that contains the multicast addresses for this interface.","source":"An <xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformationCollection\"></xref> that contains the multicast addresses for this interface."}],"pos":[29537,29689],"yaml":true},{"content":"Gets the unicast addresses assigned to this interface.","nodes":[{"pos":[0,54],"content":"Gets the unicast addresses assigned to this interface.","nodes":[{"content":"Gets the unicast addresses assigned to this interface.","pos":[0,54]}]}],"pos":[31084,31139],"yaml":true},{"content":"A unicast address identifies a single computer. Packets sent to a unicast address are sent to the computer identified by the address.","nodes":[{"pos":[0,133],"content":"A unicast address identifies a single computer. Packets sent to a unicast address are sent to the computer identified by the address.","nodes":[{"content":"A unicast address identifies a single computer. Packets sent to a unicast address are sent to the computer identified by the address.","pos":[0,133],"nodes":[{"content":"A unicast address identifies a single computer.","pos":[0,47]},{"content":"Packets sent to a unicast address are sent to the computer identified by the address.","pos":[48,133]}]}]}],"pos":[31150,31284],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"></xref> that contains the unicast addresses for this interface.","nodes":[{"pos":[0,147],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"&gt;&lt;/xref&gt;</ph> that contains the unicast addresses for this interface.","source":"An <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"></xref> that contains the unicast addresses for this interface."}],"pos":[32010,32158],"yaml":true},{"content":"Gets the addresses of Windows Internet Name Service (WINS) servers.","nodes":[{"pos":[0,67],"content":"Gets the addresses of Windows Internet Name Service (WINS) servers.","nodes":[{"content":"Gets the addresses of Windows Internet Name Service (WINS) servers.","pos":[0,67]}]}],"pos":[33575,33643],"yaml":true},{"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.","nodes":[{"pos":[0,111],"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.","nodes":[{"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.","pos":[0,111]}]}],"pos":[33654,33766],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the address information for WINS servers, or an empty array if no servers are found.","nodes":[{"pos":[0,172],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPAddressCollection\"&gt;&lt;/xref&gt;</ph> that contains the address information for WINS servers, or an empty array if no servers are found.","source":"An <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the address information for WINS servers, or an empty array if no servers are found."}],"pos":[33978,34151],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.IPInterfaceProperties\n  commentId: T:System.Net.NetworkInformation.IPInterfaceProperties\n  id: IPInterfaceProperties\n  children:\n  - System.Net.NetworkInformation.IPInterfaceProperties.#ctor\n  - System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses\n  - System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses\n  - System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses\n  - System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix\n  - System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses\n  - System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties\n  - System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties\n  - System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled\n  - System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled\n  - System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses\n  - System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses\n  - System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses\n  langs:\n  - csharp\n  name: IPInterfaceProperties\n  nameWithType: IPInterfaceProperties\n  fullName: System.Net.NetworkInformation.IPInterfaceProperties\n  type: Class\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).\n  remarks: \"This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> method.  \\n  \\n To access IPv4-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method. To access IPv6-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method.\"\n  example:\n  - \"The following code example displays address information.  \\n  \\n [!code-cpp[NclNetInfoReport#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#8)]\\n [!code-csharp[NclNetInfoReport#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#8)]\"\n  syntax:\n    content: public abstract class IPInterfaceProperties\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor\n  commentId: M:System.Net.NetworkInformation.IPInterfaceProperties.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: IPInterfaceProperties()\n  nameWithType: IPInterfaceProperties.IPInterfaceProperties()\n  fullName: IPInterfaceProperties.IPInterfaceProperties()\n  type: Constructor\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPInterfaceProperties\"></xref> class.\n  remarks: This constructor can be called only from classes that derive from <xref:System.Net.NetworkInformation.IPInterfaceProperties>.\n  syntax:\n    content: protected IPInterfaceProperties ();\n    parameters: []\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses\n  id: AnycastAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: AnycastAddresses\n  nameWithType: IPInterfaceProperties.AnycastAddresses\n  fullName: IPInterfaceProperties.AnycastAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the anycast IP addresses assigned to this interface.\n  remarks: An anycast address identifies multiple computers. Packets sent to an anycast address are sent to one of the computers identified by the address. Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.\n  example:\n  - \"The following code example displays the anycast addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#43](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#43)]\\n [!code-csharp[NclNetInfo2#43](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#43)]\\n [!code-vb[NclNetInfo2#43](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#43)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.IPAddressInformationCollection\n      description: An <xref href=\"System.Net.NetworkInformation.IPAddressInformationCollection\"></xref> that contains the anycast addresses for this interface.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses\n  id: DhcpServerAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: DhcpServerAddresses\n  nameWithType: IPInterfaceProperties.DhcpServerAddresses\n  fullName: IPInterfaceProperties.DhcpServerAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.\n  remarks: Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.\n  example:\n  - \"The following code example displays the DHCP address information for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#46](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#46)]\\n [!code-csharp[NclNetInfo2#46](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#46)]\\n [!code-vb[NclNetInfo2#46](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#46)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.IPAddressCollection\n      description: An <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the address information for DHCP servers, or an empty array if no servers are found.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses\n  id: DnsAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: DnsAddresses\n  nameWithType: IPInterfaceProperties.DnsAddresses\n  fullName: IPInterfaceProperties.DnsAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the addresses of Domain Name System (DNS) servers for this interface.\n  remarks: DNS is a hierarchical naming system used to map host names to IP addresses.\n  example:\n  - \"The following code example displays the DNS addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#42)]\\n [!code-csharp[NclNetInfo2#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#42)]\\n [!code-vb[NclNetInfo2#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#42)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPAddressCollection DnsAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.IPAddressCollection\n      description: A <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the DNS server addresses.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix\n  id: DnsSuffix\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: DnsSuffix\n  nameWithType: IPInterfaceProperties.DnsSuffix\n  fullName: IPInterfaceProperties.DnsSuffix\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the Domain Name System (DNS) suffix associated with this interface.\n  remarks: The DNS suffix identifies the domain name (for example, \"contoso.com\") that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query. For example, if the local machine has \"contoso.com\" as its <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>, and must resolve the unqualified host name \"www\", the FQDN to query is \"www.contoso.com\".\n  example:\n  - \"The following code example displays the DNS suffix.  \\n  \\n [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]\\n [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]\\n [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]\"\n  syntax:\n    content: public abstract string DnsSuffix { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the DNS suffix for this interface, or <xref href=\"System.String.Empty\"></xref> if there is no DNS suffix for the interface.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows 2000.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses\n  id: GatewayAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: GatewayAddresses\n  nameWithType: IPInterfaceProperties.GatewayAddresses\n  fullName: IPInterfaceProperties.GatewayAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the IPv4 network gateway addresses for this interface.\n  remarks: Gateways that implement the Internet Protocol Version 4 (IPv4) to forward packets between networks are returned by this property.\n  example:\n  - \"The following code example displays the gateway addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#47](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#47)]\\n [!code-csharp[NclNetInfo2#47](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#47)]\\n [!code-vb[NclNetInfo2#47](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#47)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n      description: An <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformationCollection\"></xref> that contains the address information for network gateways, or an empty array if no gateways are found.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties\n  commentId: M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties\n  id: GetIPv4Properties\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: GetIPv4Properties()\n  nameWithType: IPInterfaceProperties.GetIPv4Properties()\n  fullName: IPInterfaceProperties.GetIPv4Properties()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.\n  remarks: \"This property returns `null` for <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback> interfaces.  \\n  \\n For a detailed description of the information available for an interface that supports IPv4, see the <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> class documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPv4InterfaceProperties\n      description: An <xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"></xref> object that contains IPv4 configuration data, or `null` if no data is available for the interface.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The interface does not support the IPv4 protocol.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties\n  commentId: M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties\n  id: GetIPv6Properties\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: GetIPv6Properties()\n  nameWithType: IPInterfaceProperties.GetIPv6Properties()\n  fullName: IPInterfaceProperties.GetIPv6Properties()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.\n  remarks: For a detailed description of the information available for an interface that supports IPv6, see the <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> documentation. Note that the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method reflects the configuration as of the time the object is created. This information is not updated dynamically.\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPv6InterfaceProperties\n      description: An <xref href=\"System.Net.NetworkInformation.IPv6InterfaceProperties\"></xref> object that contains IPv6 configuration data.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The interface does not support the IPv6 protocol.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled\n  id: IsDnsEnabled\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: IsDnsEnabled\n  nameWithType: IPInterfaceProperties.IsDnsEnabled\n  fullName: IPInterfaceProperties.IsDnsEnabled\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether NetBt is configured to use DNS name resolution on this interface.\n  remarks: DNS is a hierarchical naming system used to map host names to IP addresses.\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]\\n [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]\\n [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]\"\n  syntax:\n    content: public abstract bool IsDnsEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if NetBt is configured to use DNS name resolution on this interface; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled\n  id: IsDynamicDnsEnabled\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: IsDynamicDnsEnabled\n  nameWithType: IPInterfaceProperties.IsDynamicDnsEnabled\n  fullName: IPInterfaceProperties.IsDynamicDnsEnabled\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).\n  remarks: Dynamic DNS enables a client to inform the DNS servers that its dynamic IP address is mapped to its static host name.\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]\\n [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]\\n [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]\"\n  syntax:\n    content: public abstract bool IsDynamicDnsEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses\n  id: MulticastAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: MulticastAddresses\n  nameWithType: IPInterfaceProperties.MulticastAddresses\n  fullName: IPInterfaceProperties.MulticastAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the multicast addresses assigned to this interface.\n  remarks: A multicast address identifies multiple computers. Packets sent to a multicast address are sent to all computers identified by the address.\n  example:\n  - \"The following code example displays the multicast addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#44](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#44)]\\n [!code-csharp[NclNetInfo2#44](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#44)]\\n [!code-vb[NclNetInfo2#44](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#44)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n      description: An <xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformationCollection\"></xref> that contains the multicast addresses for this interface.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses\n  id: UnicastAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: UnicastAddresses\n  nameWithType: IPInterfaceProperties.UnicastAddresses\n  fullName: IPInterfaceProperties.UnicastAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the unicast addresses assigned to this interface.\n  remarks: A unicast address identifies a single computer. Packets sent to a unicast address are sent to the computer identified by the address.\n  example:\n  - \"The following code example displays the unicast addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#45](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#45)]\\n [!code-csharp[NclNetInfo2#45](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#45)]\\n [!code-vb[NclNetInfo2#45](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#45)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n      description: An <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"></xref> that contains the unicast addresses for this interface.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses\n  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses\n  id: WinsServersAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  langs:\n  - csharp\n  name: WinsServersAddresses\n  nameWithType: IPInterfaceProperties.WinsServersAddresses\n  fullName: IPInterfaceProperties.WinsServersAddresses\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the addresses of Windows Internet Name Service (WINS) servers.\n  remarks: WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses { get; }\n    return:\n      type: System.Net.NetworkInformation.IPAddressCollection\n      description: An <xref href=\"System.Net.NetworkInformation.IPAddressCollection\"></xref> that contains the address information for WINS servers, or an empty array if no servers are found.\n  overload: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Net.NetworkInformation.NetworkInformationException\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInformationException\n  nameWithType: NetworkInformationException\n  fullName: System.Net.NetworkInformation.NetworkInformationException\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: IPInterfaceProperties()\n  nameWithType: IPInterfaceProperties.IPInterfaceProperties()\n  fullName: IPInterfaceProperties.IPInterfaceProperties()\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: AnycastAddresses\n  nameWithType: IPInterfaceProperties.AnycastAddresses\n  fullName: IPInterfaceProperties.AnycastAddresses\n- uid: System.Net.NetworkInformation.IPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPAddressInformationCollection\n  nameWithType: IPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.IPAddressInformationCollection\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: DhcpServerAddresses\n  nameWithType: IPInterfaceProperties.DhcpServerAddresses\n  fullName: IPInterfaceProperties.DhcpServerAddresses\n- uid: System.Net.NetworkInformation.IPAddressCollection\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPAddressCollection\n  nameWithType: IPAddressCollection\n  fullName: System.Net.NetworkInformation.IPAddressCollection\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: DnsAddresses\n  nameWithType: IPInterfaceProperties.DnsAddresses\n  fullName: IPInterfaceProperties.DnsAddresses\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: DnsSuffix\n  nameWithType: IPInterfaceProperties.DnsSuffix\n  fullName: IPInterfaceProperties.DnsSuffix\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: GatewayAddresses\n  nameWithType: IPInterfaceProperties.GatewayAddresses\n  fullName: IPInterfaceProperties.GatewayAddresses\n- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: GatewayIPAddressInformationCollection\n  nameWithType: GatewayIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: GetIPv4Properties()\n  nameWithType: IPInterfaceProperties.GetIPv4Properties()\n  fullName: IPInterfaceProperties.GetIPv4Properties()\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPv4InterfaceProperties\n  nameWithType: IPv4InterfaceProperties\n  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: GetIPv6Properties()\n  nameWithType: IPInterfaceProperties.GetIPv6Properties()\n  fullName: IPInterfaceProperties.GetIPv6Properties()\n- uid: System.Net.NetworkInformation.IPv6InterfaceProperties\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPv6InterfaceProperties\n  nameWithType: IPv6InterfaceProperties\n  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: IsDnsEnabled\n  nameWithType: IPInterfaceProperties.IsDnsEnabled\n  fullName: IPInterfaceProperties.IsDnsEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: IsDynamicDnsEnabled\n  nameWithType: IPInterfaceProperties.IsDynamicDnsEnabled\n  fullName: IPInterfaceProperties.IsDynamicDnsEnabled\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: MulticastAddresses\n  nameWithType: IPInterfaceProperties.MulticastAddresses\n  fullName: IPInterfaceProperties.MulticastAddresses\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: MulticastIPAddressInformationCollection\n  nameWithType: MulticastIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: UnicastAddresses\n  nameWithType: IPInterfaceProperties.UnicastAddresses\n  fullName: IPInterfaceProperties.UnicastAddresses\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: UnicastIPAddressInformationCollection\n  nameWithType: UnicastIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: WinsServersAddresses\n  nameWithType: IPInterfaceProperties.WinsServersAddresses\n  fullName: IPInterfaceProperties.WinsServersAddresses\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: IPInterfaceProperties\n  nameWithType: IPInterfaceProperties.IPInterfaceProperties\n  fullName: IPInterfaceProperties.IPInterfaceProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: AnycastAddresses\n  nameWithType: IPInterfaceProperties.AnycastAddresses\n  fullName: IPInterfaceProperties.AnycastAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: DhcpServerAddresses\n  nameWithType: IPInterfaceProperties.DhcpServerAddresses\n  fullName: IPInterfaceProperties.DhcpServerAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: DnsAddresses\n  nameWithType: IPInterfaceProperties.DnsAddresses\n  fullName: IPInterfaceProperties.DnsAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: DnsSuffix\n  nameWithType: IPInterfaceProperties.DnsSuffix\n  fullName: IPInterfaceProperties.DnsSuffix\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: GatewayAddresses\n  nameWithType: IPInterfaceProperties.GatewayAddresses\n  fullName: IPInterfaceProperties.GatewayAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: GetIPv4Properties\n  nameWithType: IPInterfaceProperties.GetIPv4Properties\n  fullName: IPInterfaceProperties.GetIPv4Properties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: GetIPv6Properties\n  nameWithType: IPInterfaceProperties.GetIPv6Properties\n  fullName: IPInterfaceProperties.GetIPv6Properties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: IsDnsEnabled\n  nameWithType: IPInterfaceProperties.IsDnsEnabled\n  fullName: IPInterfaceProperties.IsDnsEnabled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: IsDynamicDnsEnabled\n  nameWithType: IPInterfaceProperties.IsDynamicDnsEnabled\n  fullName: IPInterfaceProperties.IsDynamicDnsEnabled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: MulticastAddresses\n  nameWithType: IPInterfaceProperties.MulticastAddresses\n  fullName: IPInterfaceProperties.MulticastAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: UnicastAddresses\n  nameWithType: IPInterfaceProperties.UnicastAddresses\n  fullName: IPInterfaceProperties.UnicastAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses*\n  parent: System.Net.NetworkInformation.IPInterfaceProperties\n  isExternal: false\n  name: WinsServersAddresses\n  nameWithType: IPInterfaceProperties.WinsServersAddresses\n  fullName: IPInterfaceProperties.WinsServersAddresses\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}