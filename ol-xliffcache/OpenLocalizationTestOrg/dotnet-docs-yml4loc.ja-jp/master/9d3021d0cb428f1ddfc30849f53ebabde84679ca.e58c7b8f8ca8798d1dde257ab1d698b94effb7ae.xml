{"nodes":[{"content":"Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> with a linear gradient. This class cannot be inherited.","nodes":[{"pos":[0,112],"content":"Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> with a linear gradient. This class cannot be inherited.","nodes":[{"content":"Encapsulates a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Brush\"&gt;&lt;/xref&gt;</ph> with a linear gradient.","pos":[0,80],"source":"Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> with a linear gradient."},{"content":"This class cannot be inherited.","pos":[81,112]}]}],"pos":[3422,3535],"yaml":true},{"content":"This class encapsulates both two-color gradients and custom multicolor gradients.  \n  \n All linear gradients are defined along a line specified either by the width of a rectangle or by two points.  \n  \n By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line. Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods. Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.  \n  \n Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.  \n  \n The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.","nodes":[{"pos":[0,81],"content":"This class encapsulates both two-color gradients and custom multicolor gradients.","nodes":[{"content":"This class encapsulates both two-color gradients and custom multicolor gradients.","pos":[0,81]}]},{"pos":[88,196],"content":"All linear gradients are defined along a line specified either by the width of a rectangle or by two points.","nodes":[{"content":"All linear gradients are defined along a line specified either by the width of a rectangle or by two points.","pos":[0,108]}]},{"pos":[203,765],"content":"By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line. Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods. Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.","nodes":[{"content":"By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line. Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods. Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.","pos":[0,562],"nodes":[{"content":"By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line.","pos":[0,144]},{"content":"Customize the blend pattern using the <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.Blend&gt;</ph> class, the <ph id=\"ph2\">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A&gt;</ph> methods, or the <ph id=\"ph3\">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A&gt;</ph> methods.","pos":[145,408],"source":" Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods."},{"content":"Customize the direction of the gradient by specifying the <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.LinearGradientMode&gt;</ph> enumeration or the angle in the constructor.","pos":[409,562],"source":" Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor."}]}]},{"pos":[772,896],"content":"Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A&gt;</ph> property to create a multicolor gradient.","pos":[0,124],"source":"Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient."}]},{"pos":[903,1043],"content":"The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A&gt;</ph> property specifies a local geometric transform applied to the gradient.","pos":[0,140],"source":"The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient."}]}],"pos":[3546,4600],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class with the specified points and colors.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class with the specified points and colors.","source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class with the specified points and colors."}],"pos":[7722,7866],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> structure that represents the starting point of the linear gradient.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> structure that represents the starting point of the linear gradient.","source":"A <xref href=\"System.Drawing.Point\"></xref> structure that represents the starting point of the linear gradient."}],"pos":[8119,8232],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> structure that represents the endpoint of the linear gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> structure that represents the endpoint of the linear gradient.","source":"A <xref href=\"System.Drawing.Point\"></xref> structure that represents the endpoint of the linear gradient."}],"pos":[8301,8408],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color of the linear gradient.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color of the linear gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color of the linear gradient."}],"pos":[8477,8590],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color of the linear gradient.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color of the linear gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color of the linear gradient."}],"pos":[8659,8770],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class with the specified points and colors.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class with the specified points and colors.","source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class with the specified points and colors."}],"pos":[10197,10341],"yaml":true},{"content":"A <xref href=\"System.Drawing.PointF\"></xref> structure that represents the starting point of the linear gradient.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure that represents the starting point of the linear gradient.","source":"A <xref href=\"System.Drawing.PointF\"></xref> structure that represents the starting point of the linear gradient."}],"pos":[10597,10711],"yaml":true},{"content":"A <xref href=\"System.Drawing.PointF\"></xref> structure that represents the endpoint of the linear gradient.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure that represents the endpoint of the linear gradient.","source":"A <xref href=\"System.Drawing.PointF\"></xref> structure that represents the endpoint of the linear gradient."}],"pos":[10781,10889],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color of the linear gradient.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color of the linear gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color of the linear gradient."}],"pos":[10958,11071],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color of the linear gradient.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color of the linear gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color of the linear gradient."}],"pos":[11140,11251],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and orientation.","nodes":[{"pos":[0,168],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class based on a rectangle, starting and ending colors, and orientation.","source":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and orientation."}],"pos":[12798,12967],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> structure that specifies the bounds of the linear gradient.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient."}],"pos":[13259,13367],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient."}],"pos":[13436,13543],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient."}],"pos":[13612,13717],"yaml":true},{"content":"A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.","nodes":[{"pos":[0,400],"content":"A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"&gt;&lt;/xref&gt;</ph> enumeration element that specifies the orientation of the gradient.","pos":[0,134],"source":"A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient."},{"content":"The orientation determines the starting and ending points of the gradient.","pos":[135,209]},{"content":"For example, <ph id=\"ph1\">`LinearGradientMode.ForwardDiagonal`</ph> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.","pos":[210,400],"source":" For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle."}]}],"pos":[13821,14222],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.","nodes":[{"pos":[0,177],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class based on a rectangle, starting and ending colors, and an orientation angle.","source":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle."}],"pos":[15643,15821],"yaml":true},{"content":"All points along any line perpendicular to the orientation line are the same color.  \n  \n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \n  \n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"pos":[0,83],"content":"All points along any line perpendicular to the orientation line are the same color.","nodes":[{"content":"All points along any line perpendicular to the orientation line are the same color.","pos":[0,83]}]},{"pos":[90,426],"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","pos":[0,336],"nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[0,114]},{"content":"All points on the starting line are the starting color.","pos":[115,170]},{"content":"Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[171,284]},{"content":"All points on the ending line are the ending color.","pos":[285,336]}]}]},{"pos":[433,705],"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[0,272],"nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through.","pos":[0,102]},{"content":"For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[103,272]}]}]}],"pos":[15832,16544],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> structure that specifies the bounds of the linear gradient.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient."}],"pos":[16785,16893],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient."}],"pos":[16962,17069],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient."}],"pos":[17138,17243],"yaml":true},{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"pos":[0,93],"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","pos":[0,93]}]}],"pos":[17304,17398],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> based on a rectangle, starting and ending colors, and an orientation mode.","nodes":[{"pos":[0,170],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> based on a rectangle, starting and ending colors, and an orientation mode.","source":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> based on a rectangle, starting and ending colors, and an orientation mode."}],"pos":[18951,19122],"yaml":true},{"content":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;&lt;/xref&gt;</ph> structure that specifies the bounds of the linear gradient.","source":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient."}],"pos":[19416,19525],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient."}],"pos":[19594,19701],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient."}],"pos":[19770,19875],"yaml":true},{"content":"A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.","nodes":[{"pos":[0,400],"content":"A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"&gt;&lt;/xref&gt;</ph> enumeration element that specifies the orientation of the gradient.","pos":[0,134],"source":"A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient."},{"content":"The orientation determines the starting and ending points of the gradient.","pos":[135,209]},{"content":"For example, <ph id=\"ph1\">`LinearGradientMode.ForwardDiagonal`</ph> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.","pos":[210,400],"source":" For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle."}]}],"pos":[19979,20380],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.","nodes":[{"pos":[0,177],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class based on a rectangle, starting and ending colors, and an orientation angle.","source":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle."}],"pos":[21807,21985],"yaml":true},{"content":"All points along any line perpendicular to the orientation line are the same color.  \n  \n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \n  \n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"pos":[0,83],"content":"All points along any line perpendicular to the orientation line are the same color.","nodes":[{"content":"All points along any line perpendicular to the orientation line are the same color.","pos":[0,83]}]},{"pos":[90,426],"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","pos":[0,336],"nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[0,114]},{"content":"All points on the starting line are the starting color.","pos":[115,170]},{"content":"Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[171,284]},{"content":"All points on the ending line are the ending color.","pos":[285,336]}]}]},{"pos":[433,705],"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[0,272],"nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through.","pos":[0,102]},{"content":"For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[103,272]}]}]}],"pos":[21996,22708],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;&lt;/xref&gt;</ph> structure that specifies the bounds of the linear gradient.","source":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient."}],"pos":[22951,23060],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient."}],"pos":[23129,23236],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient."}],"pos":[23305,23410],"yaml":true},{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"pos":[0,93],"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","pos":[0,93]}]}],"pos":[23471,23565],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.","nodes":[{"pos":[0,177],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class based on a rectangle, starting and ending colors, and an orientation angle.","source":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle."}],"pos":[25058,25236],"yaml":true},{"content":"All points along any line perpendicular to the orientation line are the same color.  \n  \n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \n  \n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"pos":[0,83],"content":"All points along any line perpendicular to the orientation line are the same color.","nodes":[{"content":"All points along any line perpendicular to the orientation line are the same color.","pos":[0,83]}]},{"pos":[90,426],"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","pos":[0,336],"nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[0,114]},{"content":"All points on the starting line are the starting color.","pos":[115,170]},{"content":"Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[171,284]},{"content":"All points on the ending line are the ending color.","pos":[285,336]}]}]},{"pos":[433,705],"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[0,272],"nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through.","pos":[0,102]},{"content":"For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[103,272]}]}]}],"pos":[25247,25959],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> structure that specifies the bounds of the linear gradient.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient."}],"pos":[26223,26331],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient."}],"pos":[26400,26507],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient."}],"pos":[26576,26681],"yaml":true},{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"pos":[0,93],"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","pos":[0,93]}]}],"pos":[26742,26836],"yaml":true},{"content":"Set to `true` to specify that the angle is affected by the transform associated with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,176],"content":"Set to <ph id=\"ph1\">`true`</ph> to specify that the angle is affected by the transform associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"Set to `true` to specify that the angle is affected by the transform associated with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`."}],"pos":[26909,27086],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.","nodes":[{"pos":[0,177],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> class based on a rectangle, starting and ending colors, and an orientation angle.","source":"Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle."}],"pos":[28585,28763],"yaml":true},{"content":"All points along any line perpendicular to the orientation line are the same color.  \n  \n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \n  \n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"pos":[0,83],"content":"All points along any line perpendicular to the orientation line are the same color.","nodes":[{"content":"All points along any line perpendicular to the orientation line are the same color.","pos":[0,83]}]},{"pos":[90,426],"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.","pos":[0,336],"nodes":[{"content":"The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[0,114]},{"content":"All points on the starting line are the starting color.","pos":[115,170]},{"content":"Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.","pos":[171,284]},{"content":"All points on the ending line are the ending color.","pos":[285,336]}]}]},{"pos":[433,705],"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[0,272],"nodes":[{"content":"The angle of the orientation line determines which corners the starting and ending lines pass through.","pos":[0,102]},{"content":"For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.","pos":[103,272]}]}]}],"pos":[28774,29486],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;&lt;/xref&gt;</ph> structure that specifies the bounds of the linear gradient.","source":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient."}],"pos":[29752,29861],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the starting color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient."}],"pos":[29930,30037],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that represents the ending color for the gradient.","source":"A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient."}],"pos":[30106,30211],"yaml":true},{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"pos":[0,93],"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","nodes":[{"content":"The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.","pos":[0,93]}]}],"pos":[30272,30366],"yaml":true},{"content":"Set to `true` to specify that the angle is affected by the transform associated with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,176],"content":"Set to <ph id=\"ph1\">`true`</ph> to specify that the angle is affected by the transform associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"Set to `true` to specify that the angle is affected by the transform associated with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`."}],"pos":[30439,30616],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that specifies positions and factors that define a custom falloff for the gradient.","nodes":[{"pos":[0,150],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Blend\"&gt;&lt;/xref&gt;</ph> that specifies positions and factors that define a custom falloff for the gradient.","source":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that specifies positions and factors that define a custom falloff for the gradient."}],"pos":[31645,31796],"yaml":true},{"content":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient line.","nodes":[{"pos":[0,297],"content":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient line.","nodes":[{"content":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient line.","pos":[0,297],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.Blend&gt;</ph> contains corresponding arrays of blend factors and positions.","pos":[0,101],"source":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions."},{"content":"The blend factors specify the percentages of the starting color and ending color to use at the corresponding position.","pos":[102,220]},{"content":"The positions are given as a percentage of distance along the gradient line.","pos":[221,297]}]}]}],"pos":[31807,32105],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that represents a custom falloff for the gradient.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Blend\"&gt;&lt;/xref&gt;</ph> that represents a custom falloff for the gradient.","source":"A <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that represents a custom falloff for the gradient."}],"pos":[32260,32365],"yaml":true},{"content":"Creates an exact copy of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.","nodes":[{"pos":[0,96],"content":"Creates an exact copy of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an exact copy of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>."}],"pos":[33398,33495],"yaml":true},{"content":"The <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> this method creates, cast as an object.","nodes":[{"pos":[0,109],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> this method creates, cast as an object.","source":"The <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> this method creates, cast as an object."}],"pos":[34782,34892],"yaml":true},{"content":"Gets or sets a value indicating whether gamma correction is enabled for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.","nodes":[{"pos":[0,143],"content":"Gets or sets a value indicating whether gamma correction is enabled for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value indicating whether gamma correction is enabled for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>."}],"pos":[35981,36125],"yaml":true},{"content":"The value is `true` if gamma correction is enabled for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,146],"content":"The value is <ph id=\"ph1\">`true`</ph> if gamma correction is enabled for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"The value is `true` if gamma correction is enabled for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`."}],"pos":[36248,36395],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient.","nodes":[{"pos":[0,114],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.ColorBlend\"&gt;&lt;/xref&gt;</ph> that defines a multicolor linear gradient.","source":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient."}],"pos":[37518,37633],"yaml":true},{"content":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.  \n  \n Setting this property creates a multicolor gradient with one color at each position along the gradient line. Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.","nodes":[{"pos":[0,251],"content":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.","nodes":[{"content":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.","pos":[0,251],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.ColorBlend&gt;</ph> contains corresponding arrays of colors and positions.","pos":[0,99],"source":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions."},{"content":"The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.","pos":[100,251]}]}]},{"pos":[258,511],"content":"Setting this property creates a multicolor gradient with one color at each position along the gradient line. Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.","nodes":[{"content":"Setting this property creates a multicolor gradient with one color at each position along the gradient line. Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.","pos":[0,253],"nodes":[{"content":"Setting this property creates a multicolor gradient with one color at each position along the gradient line.","pos":[0,108]},{"content":"Setting this property nullifies all previous color, position, and falloff settings for this <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush&gt;</ph>.","pos":[109,253],"source":" Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>."}]}]}],"pos":[37644,38160],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.ColorBlend\"&gt;&lt;/xref&gt;</ph> that defines a multicolor linear gradient.","source":"A <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient."}],"pos":[38339,38441],"yaml":true},{"content":"Gets or sets the starting and ending colors of the gradient.","nodes":[{"pos":[0,60],"content":"Gets or sets the starting and ending colors of the gradient.","nodes":[{"content":"Gets or sets the starting and ending colors of the gradient.","pos":[0,60]}]}],"pos":[39526,39587],"yaml":true},{"content":"An array of two <xref href=\"System.Drawing.Color\"></xref> structures that represents the starting and ending colors of the gradient.","nodes":[{"pos":[0,132],"content":"An array of two <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structures that represents the starting and ending colors of the gradient.","source":"An array of two <xref href=\"System.Drawing.Color\"></xref> structures that represents the starting and ending colors of the gradient."}],"pos":[39733,39866],"yaml":true},{"content":"Multiplies the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that represents the local geometric transform of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> by the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> in the specified order.","nodes":[{"pos":[0,281],"content":"Multiplies the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> that represents the local geometric transform of this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> by the specified <ph id=\"ph3\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> in the specified order.","source":"Multiplies the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that represents the local geometric transform of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> by the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> in the specified order."}],"pos":[41245,41527],"yaml":true},{"content":"The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by which to multiply the geometric transform.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> by which to multiply the geometric transform.","source":"The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by which to multiply the geometric transform."}],"pos":[43140,43243],"yaml":true},{"content":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies in which order to multiply the two matrices.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.MatrixOrder\"&gt;&lt;/xref&gt;</ph> that specifies in which order to multiply the two matrices.","source":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies in which order to multiply the two matrices."}],"pos":[43327,43447],"yaml":true},{"content":"Multiplies the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that represents the local geometric transform of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> by the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by prepending the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref>.","nodes":[{"pos":[0,339],"content":"Multiplies the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> that represents the local geometric transform of this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> by the specified <ph id=\"ph3\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> by prepending the specified <ph id=\"ph4\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph>.","source":"Multiplies the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that represents the local geometric transform of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> by the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by prepending the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref>."}],"pos":[44681,45021],"yaml":true},{"content":"The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by which to multiply the geometric transform.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> by which to multiply the geometric transform.","source":"The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by which to multiply the geometric transform."}],"pos":[45335,45438],"yaml":true},{"content":"Gets a rectangular region that defines the starting and ending points of the gradient.","nodes":[{"pos":[0,86],"content":"Gets a rectangular region that defines the starting and ending points of the gradient.","nodes":[{"content":"Gets a rectangular region that defines the starting and ending points of the gradient.","pos":[0,86]}]}],"pos":[46503,46590],"yaml":true},{"content":"The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.","nodes":[{"pos":[0,143],"content":"The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.","nodes":[{"content":"The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.","pos":[0,143]}]}],"pos":[46601,46745],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the starting and ending points of the gradient.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;&lt;/xref&gt;</ph> structure that specifies the starting and ending points of the gradient.","source":"A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the starting and ending points of the gradient."}],"pos":[46889,47011],"yaml":true},{"content":"Resets the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush.Transform\"></xref> property to identity.","nodes":[{"pos":[0,108],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush.Transform\"&gt;&lt;/xref&gt;</ph> property to identity.","source":"Resets the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush.Transform\"></xref> property to identity."}],"pos":[48102,48211],"yaml":true},{"content":"Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.","nodes":[{"pos":[0,114],"content":"Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.","nodes":[{"content":"Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.","pos":[0,114],"nodes":[{"content":"Rotates the local geometric transform by the specified amount.","pos":[0,62]},{"content":"This method prepends the rotation to the transform.","pos":[63,114]}]}]}],"pos":[51015,51130],"yaml":true},{"content":"The angle of rotation.","nodes":[{"pos":[0,22],"content":"The angle of rotation.","nodes":[{"content":"The angle of rotation.","pos":[0,22]}]}],"pos":[51394,51417],"yaml":true},{"content":"Rotates the local geometric transform by the specified amount in the specified order.","nodes":[{"pos":[0,85],"content":"Rotates the local geometric transform by the specified amount in the specified order.","nodes":[{"content":"Rotates the local geometric transform by the specified amount in the specified order.","pos":[0,85]}]}],"pos":[52733,52819],"yaml":true},{"content":"The angle of rotation.","nodes":[{"pos":[0,22],"content":"The angle of rotation.","nodes":[{"content":"The angle of rotation.","pos":[0,22]}]}],"pos":[54536,54559],"yaml":true},{"content":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the rotation matrix.","nodes":[{"pos":[0,124],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.MatrixOrder\"&gt;&lt;/xref&gt;</ph> that specifies whether to append or prepend the rotation matrix.","source":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the rotation matrix."}],"pos":[54643,54768],"yaml":true},{"content":"Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.","nodes":[{"pos":[0,120],"content":"Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.","nodes":[{"content":"Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.","pos":[0,120],"nodes":[{"content":"Scales the local geometric transform by the specified amounts.","pos":[0,62]},{"content":"This method prepends the scaling matrix to the transform.","pos":[63,120]}]}]}],"pos":[55994,56115],"yaml":true},{"content":"The amount by which to scale the transform in the x-axis direction.","nodes":[{"pos":[0,67],"content":"The amount by which to scale the transform in the x-axis direction.","nodes":[{"content":"The amount by which to scale the transform in the x-axis direction.","pos":[0,67]}]}],"pos":[56381,56449],"yaml":true},{"content":"The amount by which to scale the transform in the y-axis direction.","nodes":[{"pos":[0,67],"content":"The amount by which to scale the transform in the y-axis direction.","nodes":[{"content":"The amount by which to scale the transform in the y-axis direction.","pos":[0,67]}]}],"pos":[56507,56575],"yaml":true},{"content":"Scales the local geometric transform by the specified amounts in the specified order.","nodes":[{"pos":[0,85],"content":"Scales the local geometric transform by the specified amounts in the specified order.","nodes":[{"content":"Scales the local geometric transform by the specified amounts in the specified order.","pos":[0,85]}]}],"pos":[57950,58036],"yaml":true},{"content":"The amount by which to scale the transform in the x-axis direction.","nodes":[{"pos":[0,67],"content":"The amount by which to scale the transform in the x-axis direction.","nodes":[{"content":"The amount by which to scale the transform in the x-axis direction.","pos":[0,67]}]}],"pos":[59679,59747],"yaml":true},{"content":"The amount by which to scale the transform in the y-axis direction.","nodes":[{"pos":[0,67],"content":"The amount by which to scale the transform in the y-axis direction.","nodes":[{"content":"The amount by which to scale the transform in the y-axis direction.","pos":[0,67]}]}],"pos":[59805,59873],"yaml":true},{"content":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the scaling matrix.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.MatrixOrder\"&gt;&lt;/xref&gt;</ph> that specifies whether to append or prepend the scaling matrix.","source":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the scaling matrix."}],"pos":[59957,60081],"yaml":true},{"content":"Creates a linear gradient with a center color and a linear falloff to a single color on both ends.","nodes":[{"pos":[0,98],"content":"Creates a linear gradient with a center color and a linear falloff to a single color on both ends.","nodes":[{"content":"Creates a linear gradient with a center color and a linear falloff to a single color on both ends.","pos":[0,98]}]}],"pos":[61294,61393],"yaml":true},{"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.","nodes":[{"pos":[0,279],"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.","nodes":[{"content":"This method specifies a <ph id=\"ph1\">`focus`</ph>, which is the point where the gradient is composed only of the ending color.","pos":[0,108],"source":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color."},{"content":"The <ph id=\"ph1\">`focus`</ph> parameter represents a location as a proportion of the distance along the gradient line.","pos":[109,209],"source":" The `focus` parameter represents a location as a proportion of the distance along the gradient line."},{"content":"The gradient falls off to the starting color linearly to either side.","pos":[210,279]}]}],"pos":[61404,61684],"yaml":true,"extradata":"MT"},{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","nodes":[{"pos":[0,135],"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","nodes":[{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","pos":[0,135]}]}],"pos":[61950,62086],"yaml":true},{"content":"Creates a linear gradient with a center color and a linear falloff to a single color on both ends.","nodes":[{"pos":[0,98],"content":"Creates a linear gradient with a center color and a linear falloff to a single color on both ends.","nodes":[{"content":"Creates a linear gradient with a center color and a linear falloff to a single color on both ends.","pos":[0,98]}]}],"pos":[63374,63473],"yaml":true},{"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.","nodes":[{"pos":[0,279],"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.","nodes":[{"content":"This method specifies a <ph id=\"ph1\">`focus`</ph>, which is the point where the gradient is composed only of the ending color.","pos":[0,108],"source":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color."},{"content":"The <ph id=\"ph1\">`focus`</ph> parameter represents a location as a proportion of the distance along the gradient line.","pos":[109,209],"source":" The `focus` parameter represents a location as a proportion of the distance along the gradient line."},{"content":"The gradient falls off to the starting color linearly to either side.","pos":[210,279]}]}],"pos":[63484,63764],"yaml":true,"extradata":"MT"},{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","nodes":[{"pos":[0,135],"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","nodes":[{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","pos":[0,135]}]}],"pos":[65245,65381],"yaml":true},{"content":"A value from 0 through1 that specifies how fast the colors falloff from the starting color to <code>focus</code> (ending color)","nodes":[{"pos":[0,127],"content":"A value from 0 through1 that specifies how fast the colors falloff from the starting color to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">focus</ph><ept id=\"p1\">&lt;/code&gt;</ept> (ending color)","source":"A value from 0 through1 that specifies how fast the colors falloff from the starting color to <code>focus</code> (ending color)"}],"pos":[65442,65570],"yaml":true},{"content":"Creates a gradient falloff based on a bell-shaped curve.","nodes":[{"pos":[0,56],"content":"Creates a gradient falloff based on a bell-shaped curve.","nodes":[{"content":"Creates a gradient falloff based on a bell-shaped curve.","pos":[0,56]}]}],"pos":[66756,66813],"yaml":true},{"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.","nodes":[{"pos":[0,320],"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.","nodes":[{"content":"This method specifies a <ph id=\"ph1\">`focus`</ph>, which is the point where the gradient is composed only of the ending color.","pos":[0,108],"source":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color."},{"content":"The <ph id=\"ph1\">`focus`</ph> parameter represents a location as a proportion of the distance along the gradient line.","pos":[109,209],"source":" The `focus` parameter represents a location as a proportion of the distance along the gradient line."},{"content":"The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.","pos":[210,320]}]}],"pos":[66824,67145],"yaml":true,"extradata":"MT"},{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).","nodes":[{"pos":[0,141],"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).","nodes":[{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).","pos":[0,141]}]}],"pos":[67401,67543],"yaml":true},{"content":"Creates a gradient falloff based on a bell-shaped curve.","nodes":[{"pos":[0,56],"content":"Creates a gradient falloff based on a bell-shaped curve.","nodes":[{"content":"Creates a gradient falloff based on a bell-shaped curve.","pos":[0,56]}]}],"pos":[68789,68846],"yaml":true},{"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.","nodes":[{"pos":[0,320],"content":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.","nodes":[{"content":"This method specifies a <ph id=\"ph1\">`focus`</ph>, which is the point where the gradient is composed only of the ending color.","pos":[0,108],"source":"This method specifies a `focus`, which is the point where the gradient is composed only of the ending color."},{"content":"The <ph id=\"ph1\">`focus`</ph> parameter represents a location as a proportion of the distance along the gradient line.","pos":[109,209],"source":" The `focus` parameter represents a location as a proportion of the distance along the gradient line."},{"content":"The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.","pos":[210,320]}]}],"pos":[68857,69178],"yaml":true,"extradata":"MT"},{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","nodes":[{"pos":[0,135],"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","nodes":[{"content":"A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).","pos":[0,135]}]}],"pos":[70657,70793],"yaml":true},{"content":"A value from 0 through 1 that specifies how fast the colors falloff from the <code>focus</code>.","nodes":[{"pos":[0,96],"content":"A value from 0 through 1 that specifies how fast the colors falloff from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">focus</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A value from 0 through 1 that specifies how fast the colors falloff from the <code>focus</code>."}],"pos":[70854,70951],"yaml":true},{"content":"Gets or sets a copy <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a local geometric transform for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.","nodes":[{"pos":[0,189],"content":"Gets or sets a copy <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> that defines a local geometric transform for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a copy <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a local geometric transform for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>."}],"pos":[72016,72206],"yaml":true},{"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","nodes":[{"pos":[0,309],"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","nodes":[{"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","pos":[0,309],"nodes":[{"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill.","pos":[0,89]},{"content":"Because the matrix returned and by the <ph id=\"ph1\">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A&gt;</ph> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","pos":[90,309],"source":" Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it."}]}]}],"pos":[72217,72527],"yaml":true,"extradata":"MT"},{"content":"A copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a geometric transform that applies only to fills drawn with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.","nodes":[{"pos":[0,211],"content":"A copy of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;&lt;/xref&gt;</ph> that defines a geometric transform that applies only to fills drawn with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>.","source":"A copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a geometric transform that applies only to fills drawn with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>."}],"pos":[72688,72900],"yaml":true},{"content":"Translates the local geometric transform by the specified dimensions in the specified order.","nodes":[{"pos":[0,92],"content":"Translates the local geometric transform by the specified dimensions in the specified order.","nodes":[{"content":"Translates the local geometric transform by the specified dimensions in the specified order.","pos":[0,92]}]}],"pos":[74294,74387],"yaml":true},{"content":"The value of the translation in x.","nodes":[{"pos":[0,34],"content":"The value of the translation in x.","nodes":[{"content":"The value of the translation in x.","pos":[0,34]}]}],"pos":[76172,76207],"yaml":true},{"content":"The value of the translation in y.","nodes":[{"pos":[0,34],"content":"The value of the translation in y.","nodes":[{"content":"The value of the translation in y.","pos":[0,34]}]}],"pos":[76265,76300],"yaml":true},{"content":"The order (prepend or append) in which to apply the translation.","nodes":[{"pos":[0,64],"content":"The order (prepend or append) in which to apply the translation.","nodes":[{"content":"The order (prepend or append) in which to apply the translation.","pos":[0,64]}]}],"pos":[76384,76449],"yaml":true},{"content":"Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.","nodes":[{"pos":[0,124],"content":"Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.","nodes":[{"content":"Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.","pos":[0,124],"nodes":[{"content":"Translates the local geometric transform by the specified dimensions.","pos":[0,69]},{"content":"This method prepends the translation to the transform.","pos":[70,124]}]}]}],"pos":[77702,77827],"yaml":true},{"content":"The value of the translation in x.","nodes":[{"pos":[0,34],"content":"The value of the translation in x.","nodes":[{"content":"The value of the translation in x.","pos":[0,34]}]}],"pos":[78101,78136],"yaml":true},{"content":"The value of the translation in y.","nodes":[{"pos":[0,34],"content":"The value of the translation in y.","nodes":[{"content":"The value of the translation in y.","pos":[0,34]}]}],"pos":[78194,78229],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> enumeration that indicates the wrap mode for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.","nodes":[{"pos":[0,186],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;&lt;/xref&gt;</ph> enumeration that indicates the wrap mode for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> enumeration that indicates the wrap mode for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>."}],"pos":[79289,79476],"yaml":true},{"content":"A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> are tiled.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;&lt;/xref&gt;</ph> that specifies how fills drawn with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"&gt;&lt;/xref&gt;</ph> are tiled.","source":"A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> are tiled."}],"pos":[79640,79815],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Drawing2D.LinearGradientBrush\n  commentId: T:System.Drawing.Drawing2D.LinearGradientBrush\n  id: LinearGradientBrush\n  children:\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  - System.Drawing.Drawing2D.LinearGradientBrush.Blend\n  - System.Drawing.Drawing2D.LinearGradientBrush.Clone\n  - System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection\n  - System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors\n  - System.Drawing.Drawing2D.LinearGradientBrush.LinearColors\n  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  - System.Drawing.Drawing2D.LinearGradientBrush.Rectangle\n  - System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform\n  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.Transform\n  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)\n  - System.Drawing.Drawing2D.LinearGradientBrush.WrapMode\n  langs:\n  - csharp\n  name: LinearGradientBrush\n  nameWithType: LinearGradientBrush\n  fullName: System.Drawing.Drawing2D.LinearGradientBrush\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> with a linear gradient. This class cannot be inherited.\n  remarks: \"This class encapsulates both two-color gradients and custom multicolor gradients.  \\n  \\n All linear gradients are defined along a line specified either by the width of a rectangle or by two points.  \\n  \\n By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line. Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods. Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.  \\n  \\n Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.  \\n  \\n The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.\"\n  example:\n  - \"The following example creates a horizontal <xref:System.Drawing.Drawing2D.LinearGradientBrush>; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200. For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255. This example is designed for use with Windows Forms. The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \\n  \\n [!code-csharp[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#21)]\\n [!code-vb[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#21)]\"\n  syntax:\n    content: 'public sealed class LinearGradientBrush : System.Drawing.Brush'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Drawing.Brush\n  implements: []\n  inheritedMembers:\n  - System.Drawing.Brush.Dispose\n  - System.Drawing.Brush.Dispose(System.Boolean)\n  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)\n  id: '#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(Point, Point, Color, Color)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Point, Point, Color, Color)\n  fullName: LinearGradientBrush.LinearGradientBrush(Point, Point, Color, Color)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class with the specified points and colors.\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);\n    parameters:\n    - id: point1\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> structure that represents the starting point of the linear gradient.\n    - id: point2\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> structure that represents the endpoint of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color of the linear gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color of the linear gradient.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)\n  id: '#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(PointF, PointF, Color, Color)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF, PointF, Color, Color)\n  fullName: LinearGradientBrush.LinearGradientBrush(PointF, PointF, Color, Color)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class with the specified points and colors.\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);\n    parameters:\n    - id: point1\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure that represents the starting point of the linear gradient.\n    - id: point2\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure that represents the endpoint of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color of the linear gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color of the linear gradient.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(Rectangle, Color, Color, LinearGradientMode)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, LinearGradientMode)\n  fullName: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, LinearGradientMode)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and orientation.\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.\n    - id: linearGradientMode\n      type: System.Drawing.Drawing2D.LinearGradientMode\n      description: A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)\n  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(Rectangle, Color, Color, Single)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single)\n  fullName: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.\n  remarks: \"All points along any line perpendicular to the orientation line are the same color.  \\n  \\n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \\n  \\n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.\"\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.\n    - id: angle\n      type: System.Single\n      description: The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(RectangleF, Color, Color, LinearGradientMode)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, LinearGradientMode)\n  fullName: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, LinearGradientMode)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> based on a rectangle, starting and ending colors, and an orientation mode.\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.\n    - id: linearGradientMode\n      type: System.Drawing.Drawing2D.LinearGradientMode\n      description: A <xref href=\"System.Drawing.Drawing2D.LinearGradientMode\"></xref> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, `LinearGradientMode.ForwardDiagonal` specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)\n  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(RectangleF, Color, Color, Single)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single)\n  fullName: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.\n  remarks: \"All points along any line perpendicular to the orientation line are the same color.  \\n  \\n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \\n  \\n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.\"\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.\n    - id: angle\n      type: System.Single\n      description: The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(Rectangle, Color, Color, Single, Boolean)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single, Boolean)\n  fullName: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.\n  remarks: \"All points along any line perpendicular to the orientation line are the same color.  \\n  \\n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \\n  \\n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.\"\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> structure that specifies the bounds of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.\n    - id: angle\n      type: System.Single\n      description: The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.\n    - id: isAngleScaleable\n      type: System.Boolean\n      description: Set to `true` to specify that the angle is affected by the transform associated with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearGradientBrush(RectangleF, Color, Color, Single, Boolean)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single, Boolean)\n  fullName: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a new instance of the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> class based on a rectangle, starting and ending colors, and an orientation angle.\n  remarks: \"All points along any line perpendicular to the orientation line are the same color.  \\n  \\n The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  \\n  \\n The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.\"\n  syntax:\n    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the bounds of the linear gradient.\n    - id: color1\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the starting color for the gradient.\n    - id: color2\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> structure that represents the ending color for the gradient.\n    - id: angle\n      type: System.Single\n      description: The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.\n    - id: isAngleScaleable\n      type: System.Boolean\n      description: Set to `true` to specify that the angle is affected by the transform associated with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.Blend\n  id: Blend\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: Blend\n  nameWithType: LinearGradientBrush.Blend\n  fullName: LinearGradientBrush.Blend\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that specifies positions and factors that define a custom falloff for the gradient.\n  remarks: A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient line.\n  syntax:\n    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.Blend\n      description: A <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that represents a custom falloff for the gradient.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.Blend*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.Clone\n  id: Clone\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: LinearGradientBrush.Clone()\n  fullName: LinearGradientBrush.Clone()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates an exact copy of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draws an ellipse to the screen using this brush.  \\n  \\n-   Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).  \\n  \\n-   Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#1)]\"\n  syntax:\n    content: public override object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> this method creates, cast as an object.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection\n  id: GammaCorrection\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: GammaCorrection\n  nameWithType: LinearGradientBrush.GammaCorrection\n  fullName: LinearGradientBrush.GammaCorrection\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a value indicating whether gamma correction is enabled for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.\n  syntax:\n    content: public bool GammaCorrection { get; set; }\n    return:\n      type: System.Boolean\n      description: The value is `true` if gamma correction is enabled for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>; otherwise, `false`.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors\n  id: InterpolationColors\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: InterpolationColors\n  nameWithType: LinearGradientBrush.InterpolationColors\n  fullName: LinearGradientBrush.InterpolationColors\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient.\n  remarks: \"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.  \\n  \\n Setting this property creates a multicolor gradient with one color at each position along the gradient line. Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.\"\n  syntax:\n    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.ColorBlend\n      description: A <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors\n  id: LinearColors\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: LinearColors\n  nameWithType: LinearGradientBrush.LinearColors\n  fullName: LinearGradientBrush.LinearColors\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the starting and ending colors of the gradient.\n  syntax:\n    content: public System.Drawing.Color[] LinearColors { get; set; }\n    return:\n      type: System.Drawing.Color[]\n      description: An array of two <xref href=\"System.Drawing.Color\"></xref> structures that represents the starting and ending colors of the gradient.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: MultiplyTransform(Matrix, MatrixOrder)\n  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix, MatrixOrder)\n  fullName: LinearGradientBrush.MultiplyTransform(Matrix, MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Multiplies the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that represents the local geometric transform of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> by the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> in the specified order.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draws an ellipse to the screen using this brush.  \\n  \\n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \\n  \\n Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#2)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#2)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#2)]\"\n  syntax:\n    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: matrix\n      type: System.Drawing.Drawing2D.Matrix\n      description: The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by which to multiply the geometric transform.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies in which order to multiply the two matrices.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: MultiplyTransform(Matrix)\n  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)\n  fullName: LinearGradientBrush.MultiplyTransform(Matrix)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Multiplies the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that represents the local geometric transform of this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> by the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by prepending the specified <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref>.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.\n  syntax:\n    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);\n    parameters:\n    - id: matrix\n      type: System.Drawing.Drawing2D.Matrix\n      description: The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> by which to multiply the geometric transform.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle\n  id: Rectangle\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: Rectangle\n  nameWithType: LinearGradientBrush.Rectangle\n  fullName: LinearGradientBrush.Rectangle\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets a rectangular region that defines the starting and ending points of the gradient.\n  remarks: The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.\n  syntax:\n    content: public System.Drawing.RectangleF Rectangle { get; }\n    return:\n      type: System.Drawing.RectangleF\n      description: A <xref href=\"System.Drawing.RectangleF\"></xref> structure that specifies the starting and ending points of the gradient.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform\n  id: ResetTransform\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: ResetTransform()\n  nameWithType: LinearGradientBrush.ResetTransform()\n  fullName: LinearGradientBrush.ResetTransform()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Resets the <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush.Transform\"></xref> property to identity.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draws an ellipse to the screen using this brush.  \\n  \\n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \\n  \\n-   Resets the transform.  \\n  \\n-   Draws a third ellipse to the screen below the first two.  \\n  \\n Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> method, the gradient has been reduced to match.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#3)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#3)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#3)]\"\n  syntax:\n    content: public void ResetTransform ();\n    parameters: []\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)\n  id: RotateTransform(System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: RotateTransform(Single)\n  nameWithType: LinearGradientBrush.RotateTransform(Single)\n  fullName: LinearGradientBrush.RotateTransform(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.\n  syntax:\n    content: public void RotateTransform (float angle);\n    parameters:\n    - id: angle\n      type: System.Single\n      description: The angle of rotation.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: RotateTransform(Single, MatrixOrder)\n  nameWithType: LinearGradientBrush.RotateTransform(Single, MatrixOrder)\n  fullName: LinearGradientBrush.RotateTransform(Single, MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Rotates the local geometric transform by the specified amount in the specified order.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draws an ellipse to the screen using this brush.  \\n  \\n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.  \\n  \\n-   Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.  \\n  \\n Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#4)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#4)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#4)]\"\n  syntax:\n    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: angle\n      type: System.Single\n      description: The angle of rotation.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the rotation matrix.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)\n  id: ScaleTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: ScaleTransform(Single, Single)\n  nameWithType: LinearGradientBrush.ScaleTransform(Single, Single)\n  fullName: LinearGradientBrush.ScaleTransform(Single, Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.\n  syntax:\n    content: public void ScaleTransform (float sx, float sy);\n    parameters:\n    - id: sx\n      type: System.Single\n      description: The amount by which to scale the transform in the x-axis direction.\n    - id: sy\n      type: System.Single\n      description: The amount by which to scale the transform in the y-axis direction.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: ScaleTransform(Single, Single, MatrixOrder)\n  nameWithType: LinearGradientBrush.ScaleTransform(Single, Single, MatrixOrder)\n  fullName: LinearGradientBrush.ScaleTransform(Single, Single, MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Scales the local geometric transform by the specified amounts in the specified order.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Draw an ellipse to the screen using this brush.  \\n  \\n-   Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.  \\n  \\n-   Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.  \\n  \\n Notice that the gradient of the lower ellipse is stretched by a factor of two. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#5)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#5)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#5)]\"\n  syntax:\n    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: sx\n      type: System.Single\n      description: The amount by which to scale the transform in the x-axis direction.\n    - id: sy\n      type: System.Single\n      description: The amount by which to scale the transform in the y-axis direction.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the scaling matrix.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)\n  id: SetBlendTriangularShape(System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: SetBlendTriangularShape(Single)\n  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)\n  fullName: LinearGradientBrush.SetBlendTriangularShape(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a linear gradient with a center color and a linear falloff to a single color on both ends.\n  remarks: This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.\n  syntax:\n    content: public void SetBlendTriangularShape (float focus);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  id: SetBlendTriangularShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: SetBlendTriangularShape(Single, Single)\n  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single, Single)\n  fullName: LinearGradientBrush.SetBlendTriangularShape(Single, Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a linear gradient with a center color and a linear falloff to a single color on both ends.\n  remarks: This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \\n  \\n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.  \\n  \\n-   Draws a second ellipse to the screen using the transformed brush.  \\n  \\n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#6)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#6)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#6)]\"\n  syntax:\n    content: public void SetBlendTriangularShape (float focus, float scale);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).\n    - id: scale\n      type: System.Single\n      description: A value from 0 through1 that specifies how fast the colors falloff from the starting color to <code>focus</code> (ending color)\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)\n  id: SetSigmaBellShape(System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: SetSigmaBellShape(Single)\n  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)\n  fullName: LinearGradientBrush.SetSigmaBellShape(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a gradient falloff based on a bell-shaped curve.\n  remarks: This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`\n  syntax:\n    content: public void SetSigmaBellShape (float focus);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  id: SetSigmaBellShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: SetSigmaBellShape(Single, Single)\n  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single, Single)\n  fullName: LinearGradientBrush.SetSigmaBellShape(Single, Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a gradient falloff based on a bell-shaped curve.\n  remarks: This method specifies a `focus`, which is the point where the gradient is composed only of the ending color. The `focus` parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \\n  \\n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.  \\n  \\n-   Draws a second ellipse to the screen using the bell-shaped brush.  \\n  \\n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#7)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#7)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#7)]\"\n  syntax:\n    content: public void SetSigmaBellShape (float focus, float scale);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).\n    - id: scale\n      type: System.Single\n      description: A value from 0 through 1 that specifies how fast the colors falloff from the <code>focus</code>.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.Transform\n  id: Transform\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: Transform\n  nameWithType: LinearGradientBrush.Transform\n  fullName: LinearGradientBrush.Transform\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a copy <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a local geometric transform for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.\n  remarks: A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.\n  syntax:\n    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.Matrix\n      description: A copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a geometric transform that applies only to fills drawn with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.Transform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: TranslateTransform(Single, Single, MatrixOrder)\n  nameWithType: LinearGradientBrush.TranslateTransform(Single, Single, MatrixOrder)\n  fullName: LinearGradientBrush.TranslateTransform(Single, Single, MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Translates the local geometric transform by the specified dimensions in the specified order.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \\n  \\n-   Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.  \\n  \\n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.  \\n  \\n-   Draws the rectangle, with the rotated and scaled gradient, to the screen.  \\n  \\n-   Translates the rectangle so that it has a linear gradient running from top to bottom.  \\n  \\n-   Draws the translated rectangle to the screen.  \\n  \\n Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.  \\n  \\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#8)]\\n [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#8)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#8)]\"\n  syntax:\n    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: dx\n      type: System.Single\n      description: The value of the translation in x.\n    - id: dy\n      type: System.Single\n      description: The value of the translation in y.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: The order (prepend or append) in which to apply the translation.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)\n  commentId: M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)\n  id: TranslateTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: TranslateTransform(Single, Single)\n  nameWithType: LinearGradientBrush.TranslateTransform(Single, Single)\n  fullName: LinearGradientBrush.TranslateTransform(Single, Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.\n  syntax:\n    content: public void TranslateTransform (float dx, float dy);\n    parameters:\n    - id: dx\n      type: System.Single\n      description: The value of the translation in x.\n    - id: dy\n      type: System.Single\n      description: The value of the translation in y.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode\n  commentId: P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode\n  id: WrapMode\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  langs:\n  - csharp\n  name: WrapMode\n  nameWithType: LinearGradientBrush.WrapMode\n  fullName: LinearGradientBrush.WrapMode\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> enumeration that indicates the wrap mode for this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref>.\n  syntax:\n    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.WrapMode\n      description: A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\"></xref> are tiled.\n  overload: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Drawing.Brush\n  parent: System.Drawing\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Drawing.Brush\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(Point, Point, Color, Color)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Point, Point, Color, Color)\n  fullName: LinearGradientBrush.LinearGradientBrush(Point, Point, Color, Color)\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(PointF, PointF, Color, Color)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF, PointF, Color, Color)\n  fullName: LinearGradientBrush.LinearGradientBrush(PointF, PointF, Color, Color)\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(Rectangle, Color, Color, LinearGradientMode)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, LinearGradientMode)\n  fullName: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, LinearGradientMode)\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Drawing.Drawing2D.LinearGradientMode\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: LinearGradientMode\n  nameWithType: LinearGradientMode\n  fullName: System.Drawing.Drawing2D.LinearGradientMode\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(Rectangle, Color, Color, Single)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single)\n  fullName: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(RectangleF, Color, Color, LinearGradientMode)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, LinearGradientMode)\n  fullName: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, LinearGradientMode)\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  nameWithType: RectangleF\n  fullName: System.Drawing.RectangleF\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(RectangleF, Color, Color, Single)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single)\n  fullName: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(Rectangle, Color, Color, Single, Boolean)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single, Boolean)\n  fullName: LinearGradientBrush.LinearGradientBrush(Rectangle, Color, Color, Single, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush(RectangleF, Color, Color, Single, Boolean)\n  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single, Boolean)\n  fullName: LinearGradientBrush.LinearGradientBrush(RectangleF, Color, Color, Single, Boolean)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Blend\n  nameWithType: LinearGradientBrush.Blend\n  fullName: LinearGradientBrush.Blend\n- uid: System.Drawing.Drawing2D.Blend\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: Blend\n  nameWithType: Blend\n  fullName: System.Drawing.Drawing2D.Blend\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Clone()\n  nameWithType: LinearGradientBrush.Clone()\n  fullName: LinearGradientBrush.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: GammaCorrection\n  nameWithType: LinearGradientBrush.GammaCorrection\n  fullName: LinearGradientBrush.GammaCorrection\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: InterpolationColors\n  nameWithType: LinearGradientBrush.InterpolationColors\n  fullName: LinearGradientBrush.InterpolationColors\n- uid: System.Drawing.Drawing2D.ColorBlend\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: ColorBlend\n  nameWithType: ColorBlend\n  fullName: System.Drawing.Drawing2D.ColorBlend\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearColors\n  nameWithType: LinearGradientBrush.LinearColors\n  fullName: LinearGradientBrush.LinearColors\n- uid: System.Drawing.Color[]\n  parent: System.Drawing\n  isExternal: false\n  name: Color[]\n  nameWithType: Color[]\n  fullName: System.Drawing.Color[]\n  spec.csharp:\n  - uid: System.Drawing.Color\n    name: Color\n    nameWithType: Color\n    fullName: System.Drawing.Color\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: MultiplyTransform(Matrix, MatrixOrder)\n  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix, MatrixOrder)\n  fullName: LinearGradientBrush.MultiplyTransform(Matrix, MatrixOrder)\n- uid: System.Drawing.Drawing2D.Matrix\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Drawing.Drawing2D.Matrix\n- uid: System.Drawing.Drawing2D.MatrixOrder\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: MatrixOrder\n  nameWithType: MatrixOrder\n  fullName: System.Drawing.Drawing2D.MatrixOrder\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: MultiplyTransform(Matrix)\n  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)\n  fullName: LinearGradientBrush.MultiplyTransform(Matrix)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Rectangle\n  nameWithType: LinearGradientBrush.Rectangle\n  fullName: LinearGradientBrush.Rectangle\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: ResetTransform()\n  nameWithType: LinearGradientBrush.ResetTransform()\n  fullName: LinearGradientBrush.ResetTransform()\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: RotateTransform(Single)\n  nameWithType: LinearGradientBrush.RotateTransform(Single)\n  fullName: LinearGradientBrush.RotateTransform(Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: RotateTransform(Single, MatrixOrder)\n  nameWithType: LinearGradientBrush.RotateTransform(Single, MatrixOrder)\n  fullName: LinearGradientBrush.RotateTransform(Single, MatrixOrder)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: ScaleTransform(Single, Single)\n  nameWithType: LinearGradientBrush.ScaleTransform(Single, Single)\n  fullName: LinearGradientBrush.ScaleTransform(Single, Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: ScaleTransform(Single, Single, MatrixOrder)\n  nameWithType: LinearGradientBrush.ScaleTransform(Single, Single, MatrixOrder)\n  fullName: LinearGradientBrush.ScaleTransform(Single, Single, MatrixOrder)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: SetBlendTriangularShape(Single)\n  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)\n  fullName: LinearGradientBrush.SetBlendTriangularShape(Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: SetBlendTriangularShape(Single, Single)\n  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single, Single)\n  fullName: LinearGradientBrush.SetBlendTriangularShape(Single, Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: SetSigmaBellShape(Single)\n  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)\n  fullName: LinearGradientBrush.SetSigmaBellShape(Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: SetSigmaBellShape(Single, Single)\n  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single, Single)\n  fullName: LinearGradientBrush.SetSigmaBellShape(Single, Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Transform\n  nameWithType: LinearGradientBrush.Transform\n  fullName: LinearGradientBrush.Transform\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: TranslateTransform(Single, Single, MatrixOrder)\n  nameWithType: LinearGradientBrush.TranslateTransform(Single, Single, MatrixOrder)\n  fullName: LinearGradientBrush.TranslateTransform(Single, Single, MatrixOrder)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: TranslateTransform(Single, Single)\n  nameWithType: LinearGradientBrush.TranslateTransform(Single, Single)\n  fullName: LinearGradientBrush.TranslateTransform(Single, Single)\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: WrapMode\n  nameWithType: LinearGradientBrush.WrapMode\n  fullName: LinearGradientBrush.WrapMode\n- uid: System.Drawing.Drawing2D.WrapMode\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: WrapMode\n  nameWithType: WrapMode\n  fullName: System.Drawing.Drawing2D.WrapMode\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearGradientBrush\n  nameWithType: LinearGradientBrush.LinearGradientBrush\n  fullName: LinearGradientBrush.LinearGradientBrush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Blend\n  nameWithType: LinearGradientBrush.Blend\n  fullName: LinearGradientBrush.Blend\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Clone\n  nameWithType: LinearGradientBrush.Clone\n  fullName: LinearGradientBrush.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: GammaCorrection\n  nameWithType: LinearGradientBrush.GammaCorrection\n  fullName: LinearGradientBrush.GammaCorrection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: InterpolationColors\n  nameWithType: LinearGradientBrush.InterpolationColors\n  fullName: LinearGradientBrush.InterpolationColors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: LinearColors\n  nameWithType: LinearGradientBrush.LinearColors\n  fullName: LinearGradientBrush.LinearColors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: MultiplyTransform\n  nameWithType: LinearGradientBrush.MultiplyTransform\n  fullName: LinearGradientBrush.MultiplyTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Rectangle\n  nameWithType: LinearGradientBrush.Rectangle\n  fullName: LinearGradientBrush.Rectangle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: ResetTransform\n  nameWithType: LinearGradientBrush.ResetTransform\n  fullName: LinearGradientBrush.ResetTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: RotateTransform\n  nameWithType: LinearGradientBrush.RotateTransform\n  fullName: LinearGradientBrush.RotateTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: ScaleTransform\n  nameWithType: LinearGradientBrush.ScaleTransform\n  fullName: LinearGradientBrush.ScaleTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: SetBlendTriangularShape\n  nameWithType: LinearGradientBrush.SetBlendTriangularShape\n  fullName: LinearGradientBrush.SetBlendTriangularShape\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: SetSigmaBellShape\n  nameWithType: LinearGradientBrush.SetSigmaBellShape\n  fullName: LinearGradientBrush.SetSigmaBellShape\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: Transform\n  nameWithType: LinearGradientBrush.Transform\n  fullName: LinearGradientBrush.Transform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: TranslateTransform\n  nameWithType: LinearGradientBrush.TranslateTransform\n  fullName: LinearGradientBrush.TranslateTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*\n  parent: System.Drawing.Drawing2D.LinearGradientBrush\n  isExternal: false\n  name: WrapMode\n  nameWithType: LinearGradientBrush.WrapMode\n  fullName: LinearGradientBrush.WrapMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.Drawing.Brush.Dispose\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Dispose()\n  nameWithType: Brush.Dispose()\n  fullName: Brush.Dispose()\n- uid: System.Drawing.Brush.Dispose(System.Boolean)\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Brush.Dispose(Boolean)\n  fullName: Brush.Dispose(Boolean)\n- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: SetNativeBrush(IntPtr)\n  nameWithType: Brush.SetNativeBrush(IntPtr)\n  fullName: Brush.SetNativeBrush(IntPtr)\n"}