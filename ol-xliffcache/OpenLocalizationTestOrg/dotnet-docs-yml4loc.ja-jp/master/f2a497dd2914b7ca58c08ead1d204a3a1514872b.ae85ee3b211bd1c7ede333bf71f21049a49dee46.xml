{"nodes":[{"content":"Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.","nodes":[{"pos":[0,130],"content":"Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.","nodes":[{"content":"Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.","pos":[0,130]}]}],"pos":[847,978],"yaml":true},{"content":"You can control when in the \"spring\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \n  \n ![ElasticEase with graphs of different easingmodes.](~/add/media/elasticease-graph.png \"ElasticEase with graphs of different easingmodes.\")  \n  \n You can specify how many times the animation oscillates back and forth using the <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> property and how tight the springiness of the oscillations are using the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> property.  \n  \n> [!NOTE]\n>  Because this animation causes values to oscillate back and forth, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.  \n  \n There are several other easing functions besides <xref:System.Windows.Media.Animation.ElasticEase> which you can explore using the following Silverlight sample.  \n  \n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \n  \n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \n  \n<a name=\"xamlObjectElementUsage_ElasticEase\"></a>   \n## XAML Object Element Usage  \n  \n```  \n<ElasticEase .../>  \n```","nodes":[{"pos":[0,376],"content":"You can control when in the \"spring\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.","nodes":[{"content":"You can control when in the \"spring\" behavior occurs in an animation by specifying the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph> property value.","pos":[0,173],"source":"You can control when in the \"spring\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value."},{"content":"The following graph demonstrates the different values of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>, where <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) represents the animation progress and <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept> represents time.","pos":[174,376],"source":" The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time."}]},{"pos":[383,522],"content":"<bpt id=\"p1\">![</bpt>ElasticEase with graphs of different easingmodes.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/elasticease-graph.png \"</bpt>ElasticEase with graphs of different easingmodes.<ept id=\"p2\">\")</ept>","source":"![ElasticEase with graphs of different easingmodes.](~/add/media/elasticease-graph.png \"ElasticEase with graphs of different easingmodes.\")"},{"pos":[529,823],"content":"You can specify how many times the animation oscillates back and forth using the <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> property and how tight the springiness of the oscillations are using the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> property.","nodes":[{"content":"You can specify how many times the animation oscillates back and forth using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A&gt;</ph> property and how tight the springiness of the oscillations are using the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A&gt;</ph> property.","pos":[0,294],"source":"You can specify how many times the animation oscillates back and forth using the <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> property and how tight the springiness of the oscillations are using the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> property."}]},{"pos":[831,1476],"content":"[!NOTE]\n Because this animation causes values to oscillate back and forth, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.","leadings":["","> "],"nodes":[{"content":" Because this animation causes values to oscillate back and forth, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.","pos":[8,643],"nodes":[{"content":"Because this animation causes values to oscillate back and forth, the animation might interpolate into negative numbers unexpectedly.","pos":[1,134]},{"content":"This can cause errors when animating properties that do not allow negative numbers.","pos":[135,218]},{"content":"For example, if you apply this animation to the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> of an object (e.g. from 0 to 200 with an <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph>), the animation will attempt to interpolate through negative numbers for <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> which will throw an error.","pos":[219,635],"source":" For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error."}]}]},{"pos":[1483,1643],"content":"There are several other easing functions besides <xref:System.Windows.Media.Animation.ElasticEase> which you can explore using the following Silverlight sample.","nodes":[{"content":"There are several other easing functions besides <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ElasticEase&gt;</ph> which you can explore using the following Silverlight sample.","pos":[0,160],"source":"There are several other easing functions besides <xref:System.Windows.Media.Animation.ElasticEase> which you can explore using the following Silverlight sample."}]},{"pos":[1650,1744],"content":"<bpt id=\"p1\">[</bpt>Run this sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=139798&amp;sref=easing_functions_gallery)</ept>","source":"[Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)"},{"pos":[1751,1943],"content":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.","nodes":[{"content":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase&gt;</ph>.","pos":[0,192],"source":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>."}]},{"pos":[2005,2030],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]}],"pos":[989,3084],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ElasticEase\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ElasticEase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ElasticEase\"></xref> class."}],"pos":[7871,7976],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","nodes":[{"pos":[0,152],"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","nodes":[{"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph> derived class.","pos":[0,90],"source":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"content":"When creating a derived class, you must override this method.","pos":[91,152]}]}],"pos":[9129,9282],"yaml":true},{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","nodes":[{"pos":[0,232],"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","nodes":[{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","pos":[0,232],"nodes":[{"content":"Animation classes inherit indirectly from <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph>.","pos":[0,74],"source":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>."},{"content":"Because of this, you need to override the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A&gt;</ph> method to construct a custom animation object.","pos":[75,232],"source":" Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object."}]}]}],"pos":[9293,9526],"yaml":true,"extradata":"MT"},{"content":"The new instance.","nodes":[{"pos":[0,17],"content":"The new instance.","nodes":[{"content":"The new instance.","pos":[0,17]}]}],"pos":[10229,10247],"yaml":true},{"content":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function.","nodes":[{"pos":[0,192],"content":"Provides the logic portion of the easing function that you can override to produce the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"&gt;&lt;/xref&gt;</ph> mode of the custom easing function.","source":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function."}],"pos":[11363,11556],"yaml":true},{"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \n  \n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.","nodes":[{"pos":[0,218],"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.","nodes":[{"content":"This method transforms normalized time to control the pace of an animation for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph> case of <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>.","pos":[0,218],"source":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."}]},{"pos":[225,608],"content":"You only have to specify your easing function for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph> case because the implementation of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A&gt;</ph> method transforms <ph id=\"ph3\">`normalizedTime`</ph> for the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseOut&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseInOut&gt;</ph> cases.","source":"You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases."}],"pos":[11567,12180],"yaml":true,"extradata":"MT"},{"content":"Normalized time (progress) of the animation.","nodes":[{"pos":[0,44],"content":"Normalized time (progress) of the animation.","nodes":[{"content":"Normalized time (progress) of the animation.","pos":[0,44]}]}],"pos":[12351,12396],"yaml":true},{"content":"A double that represents the transformed progress.","nodes":[{"pos":[0,50],"content":"A double that represents the transformed progress.","nodes":[{"content":"A double that represents the transformed progress.","pos":[0,50]}]}],"pos":[12453,12504],"yaml":true},{"content":"Gets or sets the number of times the target slides back and forth over the animation destination.","nodes":[{"pos":[0,97],"content":"Gets or sets the number of times the target slides back and forth over the animation destination.","nodes":[{"content":"Gets or sets the number of times the target slides back and forth over the animation destination.","pos":[0,97]}]}],"pos":[13557,13655],"yaml":true},{"content":"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>  \n  \n<a name=\"xamlAttributeUsage_Occilations\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<ElasticEase Oscillations=\"int\"/>  \n```","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty&gt;</ph>","source":"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>"},{"pos":[194,214],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]}],"pos":[13666,13945],"yaml":true,"extradata":"MT"},{"content":"The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.","nodes":[{"pos":[0,149],"content":"The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.","nodes":[{"content":"The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.","pos":[0,149],"nodes":[{"content":"The number of times the target slides back and forth over the animation destination.","pos":[0,84]},{"content":"This value must be greater than or equal to 0.","pos":[85,131]},{"content":"The default is 3.","pos":[132,149]}]}]}],"pos":[14463,14613],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.ElasticEase.Oscillations\"></xref> dependency property.","nodes":[{"pos":[0,112],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ElasticEase.Oscillations\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.ElasticEase.Oscillations\"></xref> dependency property."}],"pos":[15713,15826],"yaml":true},{"content":"Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.","nodes":[{"pos":[0,178],"content":"Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.","nodes":[{"content":"Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.","pos":[0,178],"nodes":[{"content":"Gets or sets the stiffness of the spring.","pos":[0,41]},{"content":"The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.","pos":[42,178]}]}]}],"pos":[16988,17167],"yaml":true},{"content":"The smaller the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.  \n  \n [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>  \n  \n The following diagram illustrates the effect of different values of <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>.  \n  \n ![Demonstrates different Springiness values.](~/add/media/elasticease-springiness.png \"Demonstrates different Springiness values.\")  \n  \n<a name=\"xamlAttributeUsage_Springiness\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<ElasticEase Springiness=\"double\"/>  \n```","nodes":[{"pos":[0,189],"content":"The smaller the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.","nodes":[{"content":"The smaller the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A&gt;</ph> value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.","pos":[0,189],"source":"The smaller the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation."}]},{"pos":[196,331],"content":"<ph id=\"ph1\">[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty&gt;</ph>","source":"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>"},{"pos":[338,471],"content":"The following diagram illustrates the effect of different values of <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>.","nodes":[{"content":"The following diagram illustrates the effect of different values of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A&gt;</ph>.","pos":[0,133],"source":"The following diagram illustrates the effect of different values of <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>."}]},{"pos":[478,609],"content":"<bpt id=\"p1\">![</bpt>Demonstrates different Springiness values.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/elasticease-springiness.png \"</bpt>Demonstrates different Springiness values.<ept id=\"p2\">\")</ept>","source":"![Demonstrates different Springiness values.](~/add/media/elasticease-springiness.png \"Demonstrates different Springiness values.\")"},{"pos":[667,687],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]}],"pos":[17178,17940],"yaml":true,"extradata":"MT"},{"content":"A positive number that specifies the stiffness of the spring. The default value is 3.","nodes":[{"pos":[0,85],"content":"A positive number that specifies the stiffness of the spring. The default value is 3.","nodes":[{"content":"A positive number that specifies the stiffness of the spring. The default value is 3.","pos":[0,85],"nodes":[{"content":"A positive number that specifies the stiffness of the spring.","pos":[0,61]},{"content":"The default value is 3.","pos":[62,85]}]}]}],"pos":[18461,18547],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.ElasticEase.Springiness\"></xref> dependency property.","nodes":[{"pos":[0,111],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ElasticEase.Springiness\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.ElasticEase.Springiness\"></xref> dependency property."}],"pos":[19618,19730],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.ElasticEase\n  commentId: T:System.Windows.Media.Animation.ElasticEase\n  id: ElasticEase\n  children:\n  - System.Windows.Media.Animation.ElasticEase.#ctor\n  - System.Windows.Media.Animation.ElasticEase.CreateInstanceCore\n  - System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)\n  - System.Windows.Media.Animation.ElasticEase.Oscillations\n  - System.Windows.Media.Animation.ElasticEase.OscillationsProperty\n  - System.Windows.Media.Animation.ElasticEase.Springiness\n  - System.Windows.Media.Animation.ElasticEase.SpringinessProperty\n  langs:\n  - csharp\n  name: ElasticEase\n  nameWithType: ElasticEase\n  fullName: System.Windows.Media.Animation.ElasticEase\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.\n  remarks: \"You can control when in the \\\"spring\\\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \\n  \\n ![ElasticEase with graphs of different easingmodes.](~/add/media/elasticease-graph.png \\\"ElasticEase with graphs of different easingmodes.\\\")  \\n  \\n You can specify how many times the animation oscillates back and forth using the <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> property and how tight the springiness of the oscillations are using the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> property.  \\n  \\n> [!NOTE]\\n>  Because this animation causes values to oscillate back and forth, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.  \\n  \\n There are several other easing functions besides <xref:System.Windows.Media.Animation.ElasticEase> which you can explore using the following Silverlight sample.  \\n  \\n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \\n  \\n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \\n  \\n<a name=\\\"xamlObjectElementUsage_ElasticEase\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<ElasticEase .../>  \\n```\"\n  example:\n  - \"The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.  \\n  \\n [!code-xml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]\"\n  syntax:\n    content: 'public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.EasingFunctionBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ElasticEase.#ctor\n  commentId: M:System.Windows.Media.Animation.ElasticEase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: ElasticEase()\n  nameWithType: ElasticEase.ElasticEase()\n  fullName: ElasticEase.ElasticEase()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ElasticEase\"></xref> class.\n  syntax:\n    content: public ElasticEase ();\n    parameters: []\n  overload: System.Windows.Media.Animation.ElasticEase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore\n  commentId: M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: ElasticEase.CreateInstanceCore()\n  fullName: ElasticEase.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.\n  remarks: Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]\\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)\n  commentId: M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)\n  id: EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: EaseInCore(Double)\n  nameWithType: ElasticEase.EaseInCore(Double)\n  fullName: ElasticEase.EaseInCore(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function.\n  remarks: \"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \\n  \\n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.\"\n  syntax:\n    content: protected override double EaseInCore (double normalizedTime);\n    parameters:\n    - id: normalizedTime\n      type: System.Double\n      description: Normalized time (progress) of the animation.\n    return:\n      type: System.Double\n      description: A double that represents the transformed progress.\n  overload: System.Windows.Media.Animation.ElasticEase.EaseInCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ElasticEase.Oscillations\n  commentId: P:System.Windows.Media.Animation.ElasticEase.Oscillations\n  id: Oscillations\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: Oscillations\n  nameWithType: ElasticEase.Oscillations\n  fullName: ElasticEase.Oscillations\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the number of times the target slides back and forth over the animation destination.\n  remarks: \"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>  \\n  \\n<a name=\\\"xamlAttributeUsage_Occilations\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<ElasticEase Oscillations=\\\"int\\\"/>  \\n```\"\n  example:\n  - \"The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.  \\n  \\n [!code-xml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]\"\n  syntax:\n    content: public int Oscillations { get; set; }\n    return:\n      type: System.Int32\n      description: The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.\n  overload: System.Windows.Media.Animation.ElasticEase.Oscillations*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ElasticEase.OscillationsProperty\n  commentId: F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty\n  id: OscillationsProperty\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: OscillationsProperty\n  nameWithType: ElasticEase.OscillationsProperty\n  fullName: ElasticEase.OscillationsProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.ElasticEase.Oscillations\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OscillationsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ElasticEase.Springiness\n  commentId: P:System.Windows.Media.Animation.ElasticEase.Springiness\n  id: Springiness\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: Springiness\n  nameWithType: ElasticEase.Springiness\n  fullName: ElasticEase.Springiness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.\n  remarks: \"The smaller the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.  \\n  \\n [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>  \\n  \\n The following diagram illustrates the effect of different values of <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>.  \\n  \\n ![Demonstrates different Springiness values.](~/add/media/elasticease-springiness.png \\\"Demonstrates different Springiness values.\\\")  \\n  \\n<a name=\\\"xamlAttributeUsage_Springiness\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<ElasticEase Springiness=\\\"double\\\"/>  \\n```\"\n  example:\n  - \"The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.  \\n  \\n [!code-xml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]\"\n  syntax:\n    content: public double Springiness { get; set; }\n    return:\n      type: System.Double\n      description: A positive number that specifies the stiffness of the spring. The default value is 3.\n  overload: System.Windows.Media.Animation.ElasticEase.Springiness*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.ElasticEase.SpringinessProperty\n  commentId: F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty\n  id: SpringinessProperty\n  parent: System.Windows.Media.Animation.ElasticEase\n  langs:\n  - csharp\n  name: SpringinessProperty\n  nameWithType: ElasticEase.SpringinessProperty\n  fullName: ElasticEase.SpringinessProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.ElasticEase.Springiness\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SpringinessProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Media.Animation.EasingFunctionBase\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: EasingFunctionBase\n  nameWithType: EasingFunctionBase\n  fullName: System.Windows.Media.Animation.EasingFunctionBase\n- uid: System.Windows.Media.Animation.ElasticEase.#ctor\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: ElasticEase()\n  nameWithType: ElasticEase.ElasticEase()\n  fullName: ElasticEase.ElasticEase()\n- uid: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: ElasticEase.CreateInstanceCore()\n  fullName: ElasticEase.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: EaseInCore(Double)\n  nameWithType: ElasticEase.EaseInCore(Double)\n  fullName: ElasticEase.EaseInCore(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Animation.ElasticEase.Oscillations\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: Oscillations\n  nameWithType: ElasticEase.Oscillations\n  fullName: ElasticEase.Oscillations\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Animation.ElasticEase.OscillationsProperty\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: OscillationsProperty\n  nameWithType: ElasticEase.OscillationsProperty\n  fullName: ElasticEase.OscillationsProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.ElasticEase.Springiness\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: Springiness\n  nameWithType: ElasticEase.Springiness\n  fullName: ElasticEase.Springiness\n- uid: System.Windows.Media.Animation.ElasticEase.SpringinessProperty\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: SpringinessProperty\n  nameWithType: ElasticEase.SpringinessProperty\n  fullName: ElasticEase.SpringinessProperty\n- uid: System.Windows.Media.Animation.ElasticEase.#ctor*\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: ElasticEase\n  nameWithType: ElasticEase.ElasticEase\n  fullName: ElasticEase.ElasticEase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n- uid: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: ElasticEase.CreateInstanceCore\n  fullName: ElasticEase.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n- uid: System.Windows.Media.Animation.ElasticEase.EaseInCore*\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: EaseInCore\n  nameWithType: ElasticEase.EaseInCore\n  fullName: ElasticEase.EaseInCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n- uid: System.Windows.Media.Animation.ElasticEase.Oscillations*\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: Oscillations\n  nameWithType: ElasticEase.Oscillations\n  fullName: ElasticEase.Oscillations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n- uid: System.Windows.Media.Animation.ElasticEase.Springiness*\n  parent: System.Windows.Media.Animation.ElasticEase\n  isExternal: false\n  name: Springiness\n  nameWithType: ElasticEase.Springiness\n  fullName: ElasticEase.Springiness\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ElasticEase.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.Clone\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Clone()\n  nameWithType: Freezable.Clone()\n  fullName: Freezable.Clone()\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValue\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: Freezable.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Freezable.FreezeCore(System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Freezable.FreezeCore(Boolean)\n  fullName: Freezable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: Ease(Double)\n  nameWithType: EasingFunctionBase.Ease(Double)\n  fullName: EasingFunctionBase.Ease(Double)\n- uid: System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: EasingMode\n  nameWithType: EasingFunctionBase.EasingMode\n  fullName: EasingFunctionBase.EasingMode\n- uid: System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: EasingModeProperty\n  nameWithType: EasingFunctionBase.EasingModeProperty\n  fullName: EasingFunctionBase.EasingModeProperty\n"}