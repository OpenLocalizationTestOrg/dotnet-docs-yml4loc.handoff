{"nodes":[{"content":"Represents an *n*-value tuple, where *n* is 8 or greater.","nodes":[{"pos":[0,57],"content":"Represents an <bpt id=\"p1\">*</bpt><ph id=\"ph1\">n</ph><ept id=\"p1\">*</ept>-value tuple, where <bpt id=\"p2\">*</bpt><ph id=\"ph2\">n</ph><ept id=\"p2\">*</ept> is 8 or greater.","source":"Represents an *n*-value tuple, where *n* is 8 or greater."}],"pos":[1577,1635],"yaml":true},{"content":"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%608> structure represents a value tuple that has eight or more elements.  \n  \n The value tuple types differ from the tuple types (such as <xref:System.Tuple%608>) as follows:  \n  \n-   They are structures (value types) rather than classes (reference types).  \n  \n-   Members such as <xref:System.ValueTuple%608.Item1> and   <xref:System.ValueTuple%608.Item2> are fields rather than properties.  \n  \n-   Their fields are mutable rather than read-only.  \n  \n The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.  In addition to creating a <xref:System.ValueTuple%608> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> factory method.","nodes":[{"pos":[0,185],"content":"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%608> structure represents a value tuple that has eight or more elements.","nodes":[{"content":"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%608> structure represents a value tuple that has eight or more elements.","pos":[0,185],"nodes":[{"content":"A value tuple is a data structure that has a specific number and sequence of values.","pos":[0,84]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> structure represents a value tuple that has eight or more elements.","pos":[85,185],"source":" The <xref:System.ValueTuple%608> structure represents a value tuple that has eight or more elements."}]}]},{"pos":[192,287],"content":"The value tuple types differ from the tuple types (such as <xref:System.Tuple%608>) as follows:","nodes":[{"content":"The value tuple types differ from the tuple types (such as <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph>) as follows:","pos":[0,95],"source":"The value tuple types differ from the tuple types (such as <xref:System.Tuple%608>) as follows:"}]},{"pos":[297,369],"content":"They are structures (value types) rather than classes (reference types).","nodes":[{"content":"They are structures (value types) rather than classes (reference types).","pos":[0,72]}]},{"pos":[379,505],"content":"Members such as <xref:System.ValueTuple%608.Item1> and   <xref:System.ValueTuple%608.Item2> are fields rather than properties.","nodes":[{"content":"Members such as <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.Item1&gt;</ph> and   <ph id=\"ph2\">&lt;xref:System.ValueTuple%608.Item2&gt;</ph> are fields rather than properties.","pos":[0,126],"source":"Members such as <xref:System.ValueTuple%608.Item1> and   <xref:System.ValueTuple%608.Item2> are fields rather than properties."}]},{"pos":[515,562],"content":"Their fields are mutable rather than read-only.","nodes":[{"content":"Their fields are mutable rather than read-only.","pos":[0,47]}]},{"pos":[569,975],"content":"The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.  In addition to creating a <xref:System.ValueTuple%608> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> factory method.","nodes":[{"content":"The value tuple types provide the runtime implementation that supports <bpt id=\"p1\">[</bpt>tuples in C#<ept id=\"p1\">](~/docs/csharp/tuples.md)</ept> and struct tuples in F#.","pos":[0,135],"source":"The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#."},{"content":"In addition to creating a <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> instance by using language syntax, you can call the <ph id=\"ph2\">&lt;xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName&gt;</ph> factory method.","pos":[137,406],"source":"  In addition to creating a <xref:System.ValueTuple%608> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> factory method."}]}],"pos":[1646,2634],"yaml":true,"extradata":"MT"},{"content":"The type of the value tuple's first element.","nodes":[{"pos":[0,44],"content":"The type of the value tuple's first element.","nodes":[{"content":"The type of the value tuple's first element.","pos":[0,44]}]}],"pos":[2987,3032],"yaml":true},{"content":"The type of the value tuple's second element.","nodes":[{"pos":[0,45],"content":"The type of the value tuple's second element.","nodes":[{"content":"The type of the value tuple's second element.","pos":[0,45]}]}],"pos":[3064,3110],"yaml":true},{"content":"The type of the value tuple's third element.","nodes":[{"pos":[0,44],"content":"The type of the value tuple's third element.","nodes":[{"content":"The type of the value tuple's third element.","pos":[0,44]}]}],"pos":[3142,3187],"yaml":true},{"content":"The type of the value tuple's fourth element.","nodes":[{"pos":[0,45],"content":"The type of the value tuple's fourth element.","nodes":[{"content":"The type of the value tuple's fourth element.","pos":[0,45]}]}],"pos":[3219,3265],"yaml":true},{"content":"The type of the value tuple's fifth element.","nodes":[{"pos":[0,44],"content":"The type of the value tuple's fifth element.","nodes":[{"content":"The type of the value tuple's fifth element.","pos":[0,44]}]}],"pos":[3297,3342],"yaml":true},{"content":"The type of the value tuple's sixth element.","nodes":[{"pos":[0,44],"content":"The type of the value tuple's sixth element.","nodes":[{"content":"The type of the value tuple's sixth element.","pos":[0,44]}]}],"pos":[3374,3419],"yaml":true},{"content":"The type of the value tuple's seventh element.","nodes":[{"pos":[0,46],"content":"The type of the value tuple's seventh element.","nodes":[{"content":"The type of the value tuple's seventh element.","pos":[0,46]}]}],"pos":[3451,3498],"yaml":true},{"content":"Any generic value tuple instance that defines the types of the tuple's remaining elements.","nodes":[{"pos":[0,90],"content":"Any generic value tuple instance that defines the types of the tuple's remaining elements.","nodes":[{"content":"Any generic value tuple instance that defines the types of the tuple's remaining elements.","pos":[0,90]}]}],"pos":[3533,3624],"yaml":true},{"content":"Initializes a new <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,68],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"Initializes a new <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[7136,7205],"yaml":true},{"content":"In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> method without having to explicitly specify the types of its elements.","nodes":[{"pos":[0,339],"content":"In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> method without having to explicitly specify the types of its elements.","nodes":[{"content":"In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <ph id=\"ph1\">&lt;xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName&gt;</ph> method without having to explicitly specify the types of its elements.","pos":[0,339],"source":"In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> method without having to explicitly specify the types of its elements."}]}],"pos":[7216,7556],"yaml":true,"extradata":"MT"},{"content":"The value tuple's first element.","nodes":[{"pos":[0,32],"content":"The value tuple's first element.","nodes":[{"content":"The value tuple's first element.","pos":[0,32]}]}],"pos":[7747,7780],"yaml":true},{"content":"The value tuple's second element.","nodes":[{"pos":[0,33],"content":"The value tuple's second element.","nodes":[{"content":"The value tuple's second element.","pos":[0,33]}]}],"pos":[7830,7864],"yaml":true},{"content":"The value tuple's third element.","nodes":[{"pos":[0,32],"content":"The value tuple's third element.","nodes":[{"content":"The value tuple's third element.","pos":[0,32]}]}],"pos":[7914,7947],"yaml":true},{"content":"The value tuple's fourth element.","nodes":[{"pos":[0,33],"content":"The value tuple's fourth element.","nodes":[{"content":"The value tuple's fourth element.","pos":[0,33]}]}],"pos":[7997,8031],"yaml":true},{"content":"The value tuple's fifth element.","nodes":[{"pos":[0,32],"content":"The value tuple's fifth element.","nodes":[{"content":"The value tuple's fifth element.","pos":[0,32]}]}],"pos":[8081,8114],"yaml":true},{"content":"The value tuple's sixth element.","nodes":[{"pos":[0,32],"content":"The value tuple's sixth element.","nodes":[{"content":"The value tuple's sixth element.","pos":[0,32]}]}],"pos":[8164,8197],"yaml":true},{"content":"The value tuple's seventh element.","nodes":[{"pos":[0,34],"content":"The value tuple's seventh element.","nodes":[{"content":"The value tuple's seventh element.","pos":[0,34]}]}],"pos":[8247,8282],"yaml":true},{"content":"An instance of any value tuple type that contains the values of the value's tuple's remaining elements.","nodes":[{"pos":[0,103],"content":"An instance of any value tuple type that contains the values of the value's tuple's remaining elements.","nodes":[{"content":"An instance of any value tuple type that contains the values of the value's tuple's remaining elements.","pos":[0,103]}]}],"pos":[8334,8438],"yaml":true},{"content":"<code>rest</code> is not a generic value tuple type.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;rest&lt;/code&gt;</ph> is not a generic value tuple type.","source":"<code>rest</code> is not a generic value tuple type."}],"pos":[8585,8638],"yaml":true},{"content":"Compares the current <xref href=\"System.ValueTuple`8\"></xref> instance to a specified <xref href=\"System.ValueTuple`8\"></xref> instance","nodes":[{"pos":[0,135],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance to a specified <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance","source":"Compares the current <xref href=\"System.ValueTuple`8\"></xref> instance to a specified <xref href=\"System.ValueTuple`8\"></xref> instance"}],"pos":[9700,9836],"yaml":true},{"content":"The tuple to compare with this instance.","nodes":[{"pos":[0,40],"content":"The tuple to compare with this instance.","nodes":[{"content":"The tuple to compare with this instance.","pos":[0,40]}]}],"pos":[10011,10052],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able.  \n  \n <table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,144],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following able.","source":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able."},{"pos":[151,585],"content":"<table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Vaue","pos":[23,32],"source":" Vaue  \n  \n "},{"content":"Description","pos":[44,60],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[96,119],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[130,180],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[199,208],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[219,305],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[324,347],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[358,407],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[10108,10713],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified object.","nodes":[{"pos":[0,132],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance is equal to a specified object.","source":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified object."}],"pos":[11634,11767],"yaml":true},{"content":"The `obj` argument is considered to be equal to the current instance under the following conditions:  \n  \n-   It is a <xref:System.ValueTuple%608> value type.  \n  \n-   Its components are of the same types as those of the current instance.  \n  \n-   Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">`obj`</ph> argument is considered to be equal to the current instance under the following conditions:","source":"The `obj` argument is considered to be equal to the current instance under the following conditions:"},{"pos":[110,158],"content":"It is a <xref:System.ValueTuple%608> value type.","nodes":[{"content":"It is a <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> value type.","pos":[0,48],"source":"It is a <xref:System.ValueTuple%608> value type."}]},{"pos":[168,238],"content":"Its components are of the same types as those of the current instance.","nodes":[{"content":"Its components are of the same types as those of the current instance.","pos":[0,70]}]},{"pos":[248,382],"content":"Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"content":"Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","pos":[0,134],"nodes":[{"content":"Its components are equal to those of the current instance.","pos":[0,58]},{"content":"Equality is determined by the default equality comparer for each component.","pos":[59,134]}]}]}],"pos":[11778,12169],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[12309,12351],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[12409,12496],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,175],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance is equal to a specified <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[13597,13773],"yaml":true},{"content":"The `other` argument is considered to be equal to the current instance under the following conditions:  \n  \n-   Its components are of the same types as those of the current instance.  \n  \n-   Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">`other`</ph> argument is considered to be equal to the current instance under the following conditions:","source":"The `other` argument is considered to be equal to the current instance under the following conditions:"},{"pos":[112,182],"content":"Its components are of the same types as those of the current instance.","nodes":[{"content":"Its components are of the same types as those of the current instance.","pos":[0,70]}]},{"pos":[192,326],"content":"Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"content":"Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","pos":[0,134],"nodes":[{"content":"Its components are equal to those of the current instance.","pos":[0,58]},{"content":"Equality is determined by the default equality comparer for each component.","pos":[59,134]}]}]}],"pos":[13784,14117],"yaml":true,"extradata":"MT"},{"content":"The value tuple to compare with this instance.","nodes":[{"pos":[0,46],"content":"The value tuple to compare with this instance.","nodes":[{"content":"The value tuple to compare with this instance.","pos":[0,46]}]}],"pos":[14290,14337],"yaml":true},{"content":"`true` if the current instance is equal to the specified tuple; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified tuple; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified tuple; otherwise, `false`."}],"pos":[14395,14481],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,91],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"Calculates the hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[15366,15458],"yaml":true},{"content":"The hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,80],"content":"The hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"The hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[15592,15673],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's first element.","nodes":[{"pos":[0,96],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's first element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's first element."}],"pos":[16520,16617],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's second element.","nodes":[{"pos":[0,97],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's second element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's second element."}],"pos":[17508,17606],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's third element.","nodes":[{"pos":[0,96],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's third element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's third element."}],"pos":[18497,18594],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's fourth element.","nodes":[{"pos":[0,97],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's fourth element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's fourth element."}],"pos":[19485,19583],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's fifth element.","nodes":[{"pos":[0,96],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's fifth element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's fifth element."}],"pos":[20474,20571],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's sixth element.","nodes":[{"pos":[0,96],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's sixth element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's sixth element."}],"pos":[21462,21559],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's seventh element.","nodes":[{"pos":[0,98],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's seventh element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's seventh element."}],"pos":[22450,22549],"yaml":true},{"content":"Gets the current <xref href=\"System.ValueTuple`8\"></xref> instance's remaining elements.","nodes":[{"pos":[0,88],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance's remaining elements.","source":"Gets the current <xref href=\"System.ValueTuple`8\"></xref> instance's remaining elements."}],"pos":[23434,23523],"yaml":true},{"content":"The <xref:System.ValueTuple%608.Rest> field returns a nested value tuple that allows access to the eighth though *n*th elements of the tuple. Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's `Item1` through `Item7` properties. You can then use the <xref:System.ValueTuple%608.Rest> property of a nested <xref:System.ValueTuple%608> object to retrieve the value tuple at the next level of nesting.","nodes":[{"pos":[0,505],"content":"The <xref:System.ValueTuple%608.Rest> field returns a nested value tuple that allows access to the eighth though *n*th elements of the tuple. Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's `Item1` through `Item7` properties. You can then use the <xref:System.ValueTuple%608.Rest> property of a nested <xref:System.ValueTuple%608> object to retrieve the value tuple at the next level of nesting.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> field returns a nested value tuple that allows access to the eighth though <bpt id=\"p1\">*</bpt><ph id=\"ph2\">n</ph><ept id=\"p1\">*</ept>th elements of the tuple.","pos":[0,141],"source":"The <xref:System.ValueTuple%608.Rest> field returns a nested value tuple that allows access to the eighth though *n*th elements of the tuple."},{"content":"Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's <ph id=\"ph1\">`Item1`</ph> through <ph id=\"ph2\">`Item7`</ph> properties.","pos":[142,335],"source":" Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's `Item1` through `Item7` properties."},{"content":"You can then use the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> property of a nested <ph id=\"ph2\">&lt;xref:System.ValueTuple%608&gt;</ph> object to retrieve the value tuple at the next level of nesting.","pos":[336,505],"source":" You can then use the <xref:System.ValueTuple%608.Rest> property of a nested <xref:System.ValueTuple%608> object to retrieve the value tuple at the next level of nesting."}]}],"pos":[23534,24040],"yaml":true,"extradata":"MT"},{"content":"Returns a string that represents the value of this <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,101],"content":"Returns a string that represents the value of this <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a string that represents the value of this <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[24961,25063],"yaml":true},{"content":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, *Item7*, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.ValueTuple%608.Item1>, <xref:System.ValueTuple%608.Item2>, <xref:System.ValueTuple%608.Item3>, <xref:System.ValueTuple%608.Item4>, <xref:System.ValueTuple%608.Item5>, <xref:System.ValueTuple%608.Item6>, and <xref:System.ValueTuple%608.Item7> fields. *Item8* represents the value of the <xref:System.ValueTuple%608> instance's `Next.Item1` field. The value of any additional nested elements follows *Item8*. If any of the field values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"pos":[0,756],"content":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, *Item7*, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.ValueTuple%608.Item1>, <xref:System.ValueTuple%608.Item2>, <xref:System.ValueTuple%608.Item3>, <xref:System.ValueTuple%608.Item4>, <xref:System.ValueTuple%608.Item5>, <xref:System.ValueTuple%608.Item6>, and <xref:System.ValueTuple%608.Item7> fields. *Item8* represents the value of the <xref:System.ValueTuple%608> instance's `Next.Item1` field. The value of any additional nested elements follows *Item8*. If any of the field values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"content":"The string returned by this method takes the form (<bpt id=\"p1\">*</bpt>Item1<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>Item2<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>Item3<ept id=\"p3\">*</ept>, <bpt id=\"p4\">*</bpt>Item4<ept id=\"p4\">*</ept>, <bpt id=\"p5\">*</bpt>Item5<ept id=\"p5\">*</ept>, <bpt id=\"p6\">*</bpt>Item6<ept id=\"p6\">*</ept>, <bpt id=\"p7\">*</bpt>Item7<ept id=\"p7\">*</ept>, <bpt id=\"p8\">*</bpt>Item8<ept id=\"p8\">*</ept>…), where <bpt id=\"p9\">*</bpt>Item1<ept id=\"p9\">*</ept>, <bpt id=\"p10\">*</bpt>Item2<ept id=\"p10\">*</ept>, <bpt id=\"p11\">*</bpt>Item3<ept id=\"p11\">*</ept>, <bpt id=\"p12\">*</bpt>Item4<ept id=\"p12\">*</ept>, <bpt id=\"p13\">*</bpt>Item5<ept id=\"p13\">*</ept>, <bpt id=\"p14\">*</bpt>Item6<ept id=\"p14\">*</ept>, and <bpt id=\"p15\">*</bpt>Item7<ept id=\"p15\">*</ept> represent the values of the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.Item1&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ValueTuple%608.Item2&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ValueTuple%608.Item3&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ValueTuple%608.Item4&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.ValueTuple%608.Item5&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.ValueTuple%608.Item6&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.ValueTuple%608.Item7&gt;</ph> fields.","pos":[0,487],"source":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, *Item7*, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.ValueTuple%608.Item1>, <xref:System.ValueTuple%608.Item2>, <xref:System.ValueTuple%608.Item3>, <xref:System.ValueTuple%608.Item4>, <xref:System.ValueTuple%608.Item5>, <xref:System.ValueTuple%608.Item6>, and <xref:System.ValueTuple%608.Item7> fields."},{"content":"<bpt id=\"p1\">*</bpt>Item8<ept id=\"p1\">*</ept> represents the value of the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> instance's <ph id=\"ph2\">`Next.Item1`</ph> field.","pos":[488,583],"source":"*Item8* represents the value of the <xref:System.ValueTuple%608> instance's `Next.Item1` field."},{"content":"The value of any additional nested elements follows <bpt id=\"p1\">*</bpt>Item8<ept id=\"p1\">*</ept>.","pos":[584,644],"source":" The value of any additional nested elements follows *Item8*."},{"content":"If any of the field values is <ph id=\"ph1\">`null`</ph>, it is represented as <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[645,756],"source":" If any of the field values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>."}]}],"pos":[25074,25831],"yaml":true,"extradata":"MT"},{"content":"The string representation of this <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,84],"content":"The string representation of this <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"The string representation of this <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[25966,26051],"yaml":true},{"content":"Compares the current <xref href=\"System.ValueTuple`8\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,272],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.ValueTuple`8\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[27312,27585],"yaml":true},{"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralComparable> interface.  \n  \n This method lets you define customized comparisons of <xref:System.ValueTuple%608> objects. For example, you can use this method to order <xref:System.ValueTuple%608> objects based on the value of a specific component.  \n  \n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \n  \n> [!CAUTION]\n>  The <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","nodes":[{"pos":[0,193],"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralComparable> interface.","nodes":[{"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralComparable> interface.","pos":[0,193],"nodes":[{"content":"This member is an explicit interface implementation.","pos":[0,52]},{"content":"It can only be used when the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an  <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.","pos":[53,193],"source":" It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralComparable> interface."}]}]},{"pos":[200,418],"content":"This method lets you define customized comparisons of <xref:System.ValueTuple%608> objects. For example, you can use this method to order <xref:System.ValueTuple%608> objects based on the value of a specific component.","nodes":[{"content":"This method lets you define customized comparisons of <xref:System.ValueTuple%608> objects. For example, you can use this method to order <xref:System.ValueTuple%608> objects based on the value of a specific component.","pos":[0,218],"nodes":[{"content":"This method lets you define customized comparisons of <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> objects.","pos":[0,91],"source":"This method lets you define customized comparisons of <xref:System.ValueTuple%608> objects."},{"content":"For example, you can use this method to order <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> objects based on the value of a specific component.","pos":[92,218],"source":" For example, you can use this method to order <xref:System.ValueTuple%608> objects based on the value of a specific component."}]}]},{"pos":[425,1022],"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.","nodes":[{"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.","pos":[0,597],"nodes":[{"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id=\"ph1\">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.","pos":[0,199],"source":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection."},{"content":"For example, it is called by the <ph id=\"ph1\">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id=\"ph3\">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id=\"ph4\">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName&gt;</ph> constructor.","pos":[200,597],"source":" For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor."}]}]},{"pos":[1030,1442],"content":"[!CAUTION]\n The <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","pos":[11,410],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.","pos":[1,143],"source":" The <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations."},{"content":"It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.","pos":[144,253]},{"content":"To determine whether two objects are equal, call the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method.","pos":[254,399],"source":" To determine whether two objects are equal, call the <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method."}]}]}],"pos":[27596,29048],"yaml":true,"extradata":"MT"},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[29239,29288],"yaml":true},{"content":"An object that provides custom rules for comparison.","nodes":[{"pos":[0,52],"content":"An object that provides custom rules for comparison.","nodes":[{"content":"An object that provides custom rules for comparison.","pos":[0,52]}]}],"pos":[29367,29420],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able.  \n  \n <table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,144],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following able.","source":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able."},{"pos":[151,585],"content":"<table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Vaue","pos":[23,32],"source":" Vaue  \n  \n "},{"content":"Description","pos":[44,60],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[96,119],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[130,180],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[199,208],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[219,305],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[324,347],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[358,407],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[29476,30081],"yaml":true},{"content":"<code>other</code> is not a <xref href=\"System.ValueTuple`8\"></xref> object.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>other</code> is not a <xref href=\"System.ValueTuple`8\"></xref> object."}],"pos":[30273,30350],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified object based on a specified comparison method.","nodes":[{"pos":[0,171],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance is equal to a specified object based on a specified comparison method.","source":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified object based on a specified comparison method."}],"pos":[31576,31748],"yaml":true},{"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.  \n  \n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple%608> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance. The <xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=fullName> method first passes the <xref:System.ValueTuple%608.Item1> values of the <xref:System.ValueTuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.ValueTuple%608.Item2> values of the two <xref:System.ValueTuple%608> objects. This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.ValueTuple%608.Rest> values are passed to the method.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.","nodes":[{"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface implementation.","pos":[0,52]},{"content":"It can only be used when the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an  <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.","pos":[53,192],"source":" It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface."}]}]},{"pos":[199,1255],"content":"The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple%608> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance. The <xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=fullName> method first passes the <xref:System.ValueTuple%608.Item1> values of the <xref:System.ValueTuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.ValueTuple%608.Item2> values of the two <xref:System.ValueTuple%608> objects. This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.ValueTuple%608.Rest> values are passed to the method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> implementation is called only if <ph id=\"ph2\">`other`</ph> is not <ph id=\"ph3\">`null`</ph>, and if it can be successfully cast to a <ph id=\"ph4\">&lt;xref:System.ValueTuple%608&gt;</ph> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance.","pos":[0,344],"source":"The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple%608> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=fullName&gt;</ph> method first passes the <ph id=\"ph2\">&lt;xref:System.ValueTuple%608.Item1&gt;</ph> values of the <ph id=\"ph3\">&lt;xref:System.ValueTuple%608&gt;</ph> objects to be compared to the <ph id=\"ph4\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> implementation.","pos":[345,712],"source":" The <xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=fullName> method first passes the <xref:System.ValueTuple%608.Item1> values of the <xref:System.ValueTuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation."},{"content":"If this method call returns <ph id=\"ph1\">`true`</ph>, the method is called again and passed the <ph id=\"ph2\">&lt;xref:System.ValueTuple%608.Item2&gt;</ph> values of the two <ph id=\"ph3\">&lt;xref:System.ValueTuple%608&gt;</ph> objects.","pos":[713,881],"source":" If this method call returns `true`, the method is called again and passed the <xref:System.ValueTuple%608.Item2> values of the two <xref:System.ValueTuple%608> objects."},{"content":"This continues until the method call returns <ph id=\"ph1\">`false`</ph> when it compares a specific pair of values, or the two <ph id=\"ph2\">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> values are passed to the method.","pos":[882,1056],"source":" This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.ValueTuple%608.Rest> values are passed to the method."}]}],"pos":[31759,33019],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[33215,33257],"yaml":true},{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"pos":[0,87],"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","pos":[0,87]}]}],"pos":[33344,33432],"yaml":true},{"content":"`true` if the current instance is equal to the specified objects; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified objects; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified objects; otherwise, `false`."}],"pos":[33490,33578],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance by using a specified computation method.","nodes":[{"pos":[0,131],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance by using a specified computation method.","source":"Calculates the hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance by using a specified computation method."}],"pos":[34865,34997],"yaml":true},{"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.  The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \n  \n The algorithm used to compute the hash code should return the same hash code for two <xref:System.ValueTuple%608> objects that are considered to be equal.","nodes":[{"pos":[0,351],"content":"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.  The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.","nodes":[{"content":"This member is an explicit interface implementation.","pos":[0,52]},{"content":"It can only be used when the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an  <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.","pos":[53,192],"source":" It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface."},{"content":"The method simply wraps a call to the <ph id=\"ph1\">`comparer`</ph> object's <ph id=\"ph2\">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName&gt;</ph> implementation.","pos":[194,351],"source":"  The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation."}]},{"pos":[358,512],"content":"The algorithm used to compute the hash code should return the same hash code for two <xref:System.ValueTuple%608> objects that are considered to be equal.","nodes":[{"content":"The algorithm used to compute the hash code should return the same hash code for two <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> objects that are considered to be equal.","pos":[0,154],"source":"The algorithm used to compute the hash code should return the same hash code for two <xref:System.ValueTuple%608> objects that are considered to be equal."}]}],"pos":[35008,35525],"yaml":true,"extradata":"MT"},{"content":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.ValueTuple`8\"></xref> instance.","nodes":[{"pos":[0,198],"content":"An object whose <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"&gt;&lt;/xref&gt;</ph> method calculates the hash code of the current <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.ValueTuple`8\"></xref> instance."}],"pos":[35737,35936],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[35992,36027],"yaml":true},{"content":"Compares the current <xref href=\"System.ValueTuple`8\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,240],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.ValueTuple`8\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[37115,37356],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ValueTuple%608> instance is cast to an <xref:System.IComparable> interface.  \n  \n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.ValueTuple%608> structure. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \n  \n> [!CAUTION]\n>  The <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=fullName> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=fullName> method.  \n  \n This method uses the default object comparer to compare each component.","nodes":[{"pos":[0,177],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ValueTuple%608> instance is cast to an <xref:System.IComparable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ValueTuple%608> instance is cast to an <xref:System.IComparable> interface.","pos":[0,177],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IComparable&gt;</ph> interface.","pos":[60,177],"source":" It can be used only when the <xref:System.ValueTuple%608> instance is cast to an <xref:System.IComparable> interface."}]}]},{"pos":[184,650],"content":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.ValueTuple%608> structure. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.","nodes":[{"content":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.ValueTuple%608> structure. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.","pos":[0,466],"nodes":[{"content":"This method provides the <ph id=\"ph1\">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=fullName&gt;</ph> implementation for the <ph id=\"ph2\">&lt;xref:System.ValueTuple%608&gt;</ph> structure.","pos":[0,151],"source":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.ValueTuple%608> structure."},{"content":"Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id=\"ph1\">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=fullName&gt;</ph>, to order the members of a collection.","pos":[152,466],"source":" Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection."}]}]},{"pos":[658,1066],"content":"[!CAUTION]\n The <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=fullName> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=fullName> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=fullName> method.","pos":[11,406],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=fullName&gt;</ph> method is intended for use in sorting operations.","pos":[1,144],"source":" The <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=fullName> method is intended for use in sorting operations."},{"content":"It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.","pos":[145,254]},{"content":"To determine whether two objects are equal, call the <ph id=\"ph1\">&lt;xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method.","pos":[255,395],"source":" To determine whether two objects are equal, call the <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=fullName> method."}]}]},{"pos":[1073,1144],"content":"This method uses the default object comparer to compare each component.","nodes":[{"content":"This method uses the default object comparer to compare each component.","pos":[0,71]}]}],"pos":[37367,38521],"yaml":true,"extradata":"MT"},{"content":"An object to compare with the current instance.","nodes":[{"pos":[0,47],"content":"An object to compare with the current instance.","nodes":[{"content":"An object to compare with the current instance.","pos":[0,47]}]}],"pos":[38663,38711],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,143],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following table.","source":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table."},{"pos":[150,585],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[97,120],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[131,181],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[200,209],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[220,306],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[325,348],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[359,408],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[38767,39372],"yaml":true},{"content":"<code>other</code> is not a <xref href=\"System.ValueTuple`8\"></xref> object.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>other</code> is not a <xref href=\"System.ValueTuple`8\"></xref> object."}],"pos":[39542,39619],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`8\n  commentId: T:System.ValueTuple`8\n  id: ValueTuple`8\n  children:\n  - System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  - System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  - System.ValueTuple`8.Equals(System.Object)\n  - System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  - System.ValueTuple`8.GetHashCode\n  - System.ValueTuple`8.Item1\n  - System.ValueTuple`8.Item2\n  - System.ValueTuple`8.Item3\n  - System.ValueTuple`8.Item4\n  - System.ValueTuple`8.Item5\n  - System.ValueTuple`8.Item6\n  - System.ValueTuple`8.Item7\n  - System.ValueTuple`8.Rest\n  - System.ValueTuple`8.ToString\n  - System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  - System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  type: Struct\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Represents an *n*-value tuple, where *n* is 8 or greater.\n  remarks: \"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%608> structure represents a value tuple that has eight or more elements.  \\n  \\n The value tuple types differ from the tuple types (such as <xref:System.Tuple%608>) as follows:  \\n  \\n-   They are structures (value types) rather than classes (reference types).  \\n  \\n-   Members such as <xref:System.ValueTuple%608.Item1> and   <xref:System.ValueTuple%608.Item2> are fields rather than properties.  \\n  \\n-   Their fields are mutable rather than read-only.  \\n  \\n The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.  In addition to creating a <xref:System.ValueTuple%608> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> factory method.\"\n  syntax:\n    content: 'public struct ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest> : IComparable, IComparable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>, IEquatable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable where TRest : struct'\n    typeParameters:\n    - id: T1\n      description: The type of the value tuple's first element.\n    - id: T2\n      description: The type of the value tuple's second element.\n    - id: T3\n      description: The type of the value tuple's third element.\n    - id: T4\n      description: The type of the value tuple's fourth element.\n    - id: T5\n      description: The type of the value tuple's fifth element.\n    - id: T6\n      description: The type of the value tuple's sixth element.\n    - id: T7\n      description: The type of the value tuple's seventh element.\n    - id: TRest\n      description: Any generic value tuple instance that defines the types of the tuple's remaining elements.\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable{System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,TRest}}\n  - System.IEquatable{System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,TRest}}\n  extensionMethods:\n  - System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})\n  - System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})\n  - System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})\n  - System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})\n  - System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})\n  - System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})\n  - System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})\n  - System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})\n  - System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})\n  - System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})\n  - System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})\n  - System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})\n  - System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})\n  - System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  commentId: M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  id: '#ctor(`0,`1,`2,`3,`4,`5,`6,`7)'\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  type: Constructor\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new <xref href=\"System.ValueTuple`8\"></xref> instance.\n  remarks: In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=fullName> method without having to explicitly specify the types of its elements.\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);\n    parameters:\n    - id: item1\n      type: T1\n      description: The value tuple's first element.\n    - id: item2\n      type: T2\n      description: The value tuple's second element.\n    - id: item3\n      type: T3\n      description: The value tuple's third element.\n    - id: item4\n      type: T4\n      description: The value tuple's fourth element.\n    - id: item5\n      type: T5\n      description: The value tuple's fifth element.\n    - id: item6\n      type: T6\n      description: The value tuple's sixth element.\n    - id: item7\n      type: T7\n      description: The value tuple's seventh element.\n    - id: rest\n      type: TRest\n      description: An instance of any value tuple type that contains the values of the value's tuple's remaining elements.\n  overload: System.ValueTuple`8.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>rest</code> is not a generic value tuple type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  commentId: M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  id: CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.ValueTuple`8\"></xref> instance to a specified <xref href=\"System.ValueTuple`8\"></xref> instance\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`8\n      description: The tuple to compare with this instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able.  \\n  \\n <table><thead><tr><th> Vaue  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.ValueTuple`8.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Equals(System.Object)\n  commentId: M:System.ValueTuple`8.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified object.\n  remarks: \"The `obj` argument is considered to be equal to the current instance under the following conditions:  \\n  \\n-   It is a <xref:System.ValueTuple%608> value type.  \\n  \\n-   Its components are of the same types as those of the current instance.  \\n  \\n-   Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.ValueTuple`8.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  commentId: M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  id: Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified <xref href=\"System.ValueTuple`8\"></xref> instance.\n  remarks: \"The `other` argument is considered to be equal to the current instance under the following conditions:  \\n  \\n-   Its components are of the same types as those of the current instance.  \\n  \\n-   Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.\"\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`8\n      description: The value tuple to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified tuple; otherwise, `false`.'\n  overload: System.ValueTuple`8.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.GetHashCode\n  commentId: M:System.ValueTuple`8.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance.\n  overload: System.ValueTuple`8.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item1\n  commentId: F:System.ValueTuple`8.Item1\n  id: Item1\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's first element.\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item2\n  commentId: F:System.ValueTuple`8.Item2\n  id: Item2\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's second element.\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item3\n  commentId: F:System.ValueTuple`8.Item3\n  id: Item3\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's third element.\n  syntax:\n    content: public T3 Item3;\n    return:\n      type: T3\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item4\n  commentId: F:System.ValueTuple`8.Item4\n  id: Item4\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's fourth element.\n  syntax:\n    content: public T4 Item4;\n    return:\n      type: T4\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item5\n  commentId: F:System.ValueTuple`8.Item5\n  id: Item5\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's fifth element.\n  syntax:\n    content: public T5 Item5;\n    return:\n      type: T5\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item6\n  commentId: F:System.ValueTuple`8.Item6\n  id: Item6\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item6\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's sixth element.\n  syntax:\n    content: public T6 Item6;\n    return:\n      type: T6\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Item7\n  commentId: F:System.ValueTuple`8.Item7\n  id: Item7\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item7\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`8\"></xref> instance's seventh element.\n  syntax:\n    content: public T7 Item7;\n    return:\n      type: T7\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.Rest\n  commentId: F:System.ValueTuple`8.Rest\n  id: Rest\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Rest\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the current <xref href=\"System.ValueTuple`8\"></xref> instance's remaining elements.\n  remarks: The <xref:System.ValueTuple%608.Rest> field returns a nested value tuple that allows access to the eighth though *n*th elements of the tuple. Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's `Item1` through `Item7` properties. You can then use the <xref:System.ValueTuple%608.Rest> property of a nested <xref:System.ValueTuple%608> object to retrieve the value tuple at the next level of nesting.\n  syntax:\n    content: public TRest Rest;\n    return:\n      type: TRest\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.ToString\n  commentId: M:System.ValueTuple`8.ToString\n  id: ToString\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a string that represents the value of this <xref href=\"System.ValueTuple`8\"></xref> instance.\n  remarks: The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, *Item7*, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.ValueTuple%608.Item1>, <xref:System.ValueTuple%608.Item2>, <xref:System.ValueTuple%608.Item3>, <xref:System.ValueTuple%608.Item4>, <xref:System.ValueTuple%608.Item5>, <xref:System.ValueTuple%608.Item6>, and <xref:System.ValueTuple%608.Item7> fields. *Item8* represents the value of the <xref:System.ValueTuple%608> instance's `Next.Item1` field. The value of any additional nested elements follows *Item8*. If any of the field values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this <xref href=\"System.ValueTuple`8\"></xref> instance.\n  overload: System.ValueTuple`8.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  commentId: M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.ValueTuple`8\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  remarks: \"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralComparable> interface.  \\n  \\n This method lets you define customized comparisons of <xref:System.ValueTuple%608> objects. For example, you can use this method to order <xref:System.ValueTuple%608> objects based on the value of a specific component.  \\n  \\n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.\"\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with the current instance.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: An object that provides custom rules for comparison.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able.  \\n  \\n <table><thead><tr><th> Vaue  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>other</code> is not a <xref href=\"System.ValueTuple`8\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.ValueTuple`8\"></xref> instance is equal to a specified object based on a specified comparison method.\n  remarks: \"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.  \\n  \\n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple%608> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance. The <xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=fullName> method first passes the <xref:System.ValueTuple%608.Item1> values of the <xref:System.ValueTuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.ValueTuple%608.Item2> values of the two <xref:System.ValueTuple%608> objects. This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.ValueTuple%608.Rest> values are passed to the method.\"\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with this instance.\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object that defines the method to use to evaluate whether the two objects are equal.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified objects; otherwise, `false`.'\n  overload: System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.ValueTuple`8\"></xref> instance by using a specified computation method.\n  remarks: \"This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.  The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \\n  \\n The algorithm used to compute the hash code should return the same hash code for two <xref:System.ValueTuple%608> objects that are considered to be equal.\"\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.ValueTuple`8\"></xref> instance.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.ValueTuple`8\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.ValueTuple%608> instance is cast to an <xref:System.IComparable> interface.  \\n  \\n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.ValueTuple%608> structure. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=fullName> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=fullName> method.  \\n  \\n This method uses the default object comparer to compare each component.\"\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: An object to compare with the current instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.ValueTuple`8.System#IComparable#CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>other</code> is not a <xref href=\"System.ValueTuple`8\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  commentId: P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  id: System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: ITuple.Item(Int32)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length\n  commentId: P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length\n  id: System#Runtime#CompilerServices#ITuple#Length\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: ITuple.Length\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int System.Runtime.CompilerServices.ITuple.Length { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n- uid: T1\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: TRest\n  isExternal: true\n  name: TRest\n  nameWithType: TRest\n  fullName: TRest\n- uid: System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`8\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n- uid: System.ValueTuple`8.Equals(System.Object)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n- uid: System.ValueTuple`8.GetHashCode\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n- uid: System.ValueTuple`8.Item1\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n- uid: System.ValueTuple`8.Item2\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n- uid: System.ValueTuple`8.Item3\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n- uid: System.ValueTuple`8.Item4\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n- uid: System.ValueTuple`8.Item5\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n- uid: System.ValueTuple`8.Item6\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item6\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n- uid: System.ValueTuple`8.Item7\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item7\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n- uid: System.ValueTuple`8.Rest\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Rest\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n- uid: System.ValueTuple`8.ToString\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n- uid: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ITuple.Item(Int32)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n- uid: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ITuple.Length\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n- uid: System.ValueTuple`8.#ctor*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.CompareTo*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: CompareTo\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.Equals*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Equals\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.GetHashCode*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.ToString*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ToString\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#IComparable#CompareTo*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Item\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Item\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Item\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length*\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Length\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Length\n  fullName: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Length\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`8.xml\n- uid: System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10>>)\n- uid: System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11>>)\n- uid: System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12>>)\n- uid: System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13>>)\n- uid: System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14>>)\n- uid: System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15>>>)\n- uid: System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16>>>)\n- uid: System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17>>>)\n- uid: System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18>>>)\n- uid: System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19>>>)\n- uid: System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19,T20>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19,T20>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19,T20>>>)\n- uid: System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19,T20,T21>>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19,T20,T21>>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9,T10,T11,T12,T13,T14,ValueTuple<T15,T16,T17,T18,T19,T20,T21>>>)\n- uid: System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>)\n- uid: System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9>>)\n  nameWithType: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9>>)\n  fullName: TupleExtensions.ToTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>(ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8,T9>>)\n- uid: System.Collections.IStructuralComparable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralComparable\n  nameWithType: IStructuralComparable\n  fullName: System.Collections.IStructuralComparable\n- uid: System.Collections.IStructuralEquatable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralEquatable\n  nameWithType: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,TRest}}\n  parent: System\n  isExternal: false\n  name: IComparable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  nameWithType: IComparable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  fullName: System.IComparable<System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ValueTuple`8\n    name: ValueTuple\n    nameWithType: ValueTuple\n    fullName: System.ValueTuple\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T2\n    name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T3\n    name: T3\n    nameWithType: T3\n    fullName: T3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T4\n    name: T4\n    nameWithType: T4\n    fullName: T4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T5\n    name: T5\n    nameWithType: T5\n    fullName: T5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T6\n    name: T6\n    nameWithType: T6\n    fullName: T6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T7\n    name: T7\n    nameWithType: T7\n    fullName: T7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TRest\n    name: TRest\n    nameWithType: TRest\n    fullName: TRest\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,TRest}}\n  parent: System\n  isExternal: false\n  name: IEquatable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  nameWithType: IEquatable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  fullName: System.IEquatable<System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ValueTuple`8\n    name: ValueTuple\n    nameWithType: ValueTuple\n    fullName: System.ValueTuple\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T2\n    name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T3\n    name: T3\n    nameWithType: T3\n    fullName: T3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T4\n    name: T4\n    nameWithType: T4\n    fullName: T4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T5\n    name: T5\n    nameWithType: T5\n    fullName: T5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T6\n    name: T6\n    nameWithType: T6\n    fullName: T6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T7\n    name: T7\n    nameWithType: T7\n    fullName: T7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TRest\n    name: TRest\n    nameWithType: TRest\n    fullName: TRest\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}