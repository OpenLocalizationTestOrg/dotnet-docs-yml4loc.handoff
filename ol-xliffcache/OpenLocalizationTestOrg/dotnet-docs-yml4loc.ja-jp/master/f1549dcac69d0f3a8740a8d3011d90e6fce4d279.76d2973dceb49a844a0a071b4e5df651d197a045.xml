{"nodes":[{"content":"Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.","nodes":[{"pos":[0,183],"content":"Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.","nodes":[{"content":"Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.","pos":[0,183],"nodes":[{"content":"Defines a workflow communication activity that is used to call a method on a local service.","pos":[0,91]},{"content":"This activity is used to send data from the workflow to the host through the local service.","pos":[92,183]}]}]}],"pos":[2126,2310],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.  \n  \n> [!NOTE]\n>  When the external method is called all parameters of the method are cloned. If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,335],"content":"A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.","nodes":[{"content":"A local service is a class that implements a local service interface (an interface that is marked with <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;</ph>) and is added to the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph>.","pos":[0,250],"source":"A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>."}]},{"pos":[343,634],"content":"[!NOTE]\n When the external method is called all parameters of the method are cloned. If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.","leadings":["","> "],"nodes":[{"content":" When the external method is called all parameters of the method are cloned. If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.","pos":[8,289],"nodes":[{"content":"When the external method is called all parameters of the method are cloned.","pos":[1,76]},{"content":"If the parameter types implement <ph id=\"ph1\">&lt;xref:System.ICloneable&gt;</ph> the <ph id=\"ph2\">`Clone`</ph> method is called or they are serialized and deserialized with a <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.","pos":[77,281],"source":" If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>."}]}]}],"pos":[2321,2964],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class."}],"pos":[11720,11836],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class using the name of the activity.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;&lt;/xref&gt;</ph> class using the name of the activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class using the name of the activity."}],"pos":[14059,14206],"yaml":true},{"content":"The user-defined name of the activity, used to initialize the activity name property.","nodes":[{"pos":[0,85],"content":"The user-defined name of the activity, used to initialize the activity name property.","nodes":[{"content":"The user-defined name of the activity, used to initialize the activity name property.","pos":[0,85]}]}],"pos":[14354,14440],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref> for the external method.","nodes":[{"pos":[0,103],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.CorrelationToken\"&gt;&lt;/xref&gt;</ph> for the external method.","source":"Gets or sets the <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref> for the external method."}],"pos":[15567,15671],"yaml":true},{"content":"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from. This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.  \n  \n [!INCLUDE[crexample](~/includes/crexample-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).","nodes":[{"pos":[0,337],"content":"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from. This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.","nodes":[{"content":"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from. This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.","pos":[0,337],"nodes":[{"content":"This property defines which specific <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity&gt;</ph> activity a given external method call comes from.","pos":[0,147],"source":"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from."},{"content":"This value can then be used in the payload of a local communication service event to direct that event to the correct <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> activity.","pos":[148,337],"source":" This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity."}]}]},{"pos":[344,519],"content":"<ph id=\"ph1\">[!INCLUDE[crexample](~/includes/crexample-md.md)]</ph> correlation, see the <bpt id=\"p1\">[</bpt>Correlated Local Service Sample<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)</ept>.","source":"[!INCLUDE[crexample](~/includes/crexample-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)."}],"pos":[15682,16206],"yaml":true,"extradata":"MT"},{"content":"The correlation token for the external method.","nodes":[{"pos":[0,46],"content":"The correlation token for the external method.","nodes":[{"content":"The correlation token for the external method.","pos":[0,46]}]}],"pos":[17148,17195],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\"></xref> property.","nodes":[{"pos":[0,204],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\"></xref> property."}],"pos":[18447,18652],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[18663,18745],"yaml":true,"extradata":"MT"},{"content":"Tries to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> with the specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.","nodes":[{"pos":[0,188],"content":"Tries to run the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;&lt;/xref&gt;</ph> with the specified <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph>.","source":"Tries to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> with the specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."}],"pos":[20210,20399],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the execution environment in which to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref>.","nodes":[{"pos":[0,216],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> that contains the execution environment in which to run the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the execution environment in which to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref>."}],"pos":[20717,20934],"yaml":true},{"content":"One of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> values.","nodes":[{"pos":[0,94],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> values."}],"pos":[21032,21127],"yaml":true},{"content":"This <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"></xref> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,142],"content":"This <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"&gt;&lt;/xref&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"This <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"></xref> is a null reference (`Nothing` in Visual Basic)."}],"pos":[21310,21453],"yaml":true},{"content":"<code>executionContext</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;executionContext&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>executionContext</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[21555,21634],"yaml":true},{"content":"The service object for the <code>executionContext</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,105],"content":"The service object for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">executionContext</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"The service object for the <code>executionContext</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[21744,21850],"yaml":true},{"content":"Performs initialization on dependency properties.","nodes":[{"pos":[0,49],"content":"Performs initialization on dependency properties.","nodes":[{"content":"Performs initialization on dependency properties.","pos":[0,49]}]}],"pos":[22915,22965],"yaml":true},{"content":"This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.","nodes":[{"pos":[0,573],"content":"This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.","nodes":[{"content":"This method initializes the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A&gt;</ph> property, verifies the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A&gt;</ph> properties are set and verifies that the event referenced in the <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A&gt;</ph> property can be found in the interface referenced in the <ph id=\"ph5\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A&gt;</ph> property.","pos":[0,573],"source":"This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property."}]}],"pos":[22976,23550],"yaml":true,"extradata":"MT"},{"content":"Gets or sets an external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.","nodes":[{"pos":[0,145],"content":"Gets or sets an external method's declaring interface that has the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets an external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>."}],"pos":[24765,24911],"yaml":true},{"content":"The external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.","nodes":[{"pos":[0,133],"content":"The external method's declaring interface that has the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"The external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>."}],"pos":[25934,26068],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"></xref> property.","nodes":[{"pos":[0,201],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"></xref> property."}],"pos":[27320,27522],"yaml":true},{"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  \n  \n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[{"pos":[0,221],"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A&gt;</ph> property corresponds to the name of the interface that was marked with the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;</ph>.","pos":[0,221],"source":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>."}]}],"pos":[27533,27845],"yaml":true,"extradata":"MT"},{"content":"Occurs before invoking the method.","nodes":[{"pos":[0,34],"content":"Occurs before invoking the method.","nodes":[{"content":"Occurs before invoking the method.","pos":[0,34]}]}],"pos":[29099,29134],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.","nodes":[{"pos":[0,199],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"&gt;&lt;/xref&gt;</ph> event.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event."}],"pos":[31034,31234],"yaml":true},{"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.  \n  \n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[{"pos":[0,198],"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&gt;</ph> event defines an event delegate that is executed before the activity invokes the external method on the local service.","pos":[0,198],"source":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service."}]}],"pos":[31245,31534],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the method to be called on the local service registered with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref>.","nodes":[{"pos":[0,166],"content":"Gets or sets the name of the method to be called on the local service registered with the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the name of the method to be called on the local service registered with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref>."}],"pos":[32765,32932],"yaml":true},{"content":"The method name of the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref> interface.","nodes":[{"pos":[0,109],"content":"The method name of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"&gt;&lt;/xref&gt;</ph> interface.","source":"The method name of the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref> interface."}],"pos":[33860,33970],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodName\"></xref> property.","nodes":[{"pos":[0,198],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodName\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodName\"></xref> property."}],"pos":[35180,35379],"yaml":true},{"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  \n  \n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[{"pos":[0,238],"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A&gt;</ph> property corresponds to the name of a method contained on an interface that is marked with the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;</ph>.","pos":[0,238],"source":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>."}]}],"pos":[35390,35719],"yaml":true,"extradata":"MT"},{"content":"Provides a hook for derived classes to extract out and return values from the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>. This method is called just after the external method is run.","nodes":[{"pos":[0,232],"content":"Provides a hook for derived classes to extract out and return values from the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>. This method is called just after the external method is run.","nodes":[{"content":"Provides a hook for derived classes to extract out and return values from the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"&gt;&lt;/xref&gt;</ph>.","pos":[0,171],"source":"Provides a hook for derived classes to extract out and return values from the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>."},{"content":"This method is called just after the external method is run.","pos":[172,232]}]}],"pos":[37064,37297],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.","nodes":[{"pos":[0,168],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the data for the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"&gt;&lt;/xref&gt;</ph> event.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event."}],"pos":[37771,37940],"yaml":true},{"content":"Provides a hook for derived classes to set <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>. This method is called just before the external method is run.","nodes":[{"pos":[0,198],"content":"Provides a hook for derived classes to set <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>. This method is called just before the external method is run.","nodes":[{"content":"Provides a hook for derived classes to set <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"&gt;&lt;/xref&gt;</ph>.","pos":[0,136],"source":"Provides a hook for derived classes to set <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>."},{"content":"This method is called just before the external method is run.","pos":[137,198]}]}],"pos":[39162,39361],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.","nodes":[{"pos":[0,168],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the data for the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"&gt;&lt;/xref&gt;</ph> event.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event."}],"pos":[40101,40270],"yaml":true},{"content":"Gets the collection of bindable parameters as found in the external method's formal parameter list.","nodes":[{"pos":[0,99],"content":"Gets the collection of bindable parameters as found in the external method's formal parameter list.","nodes":[{"content":"Gets the collection of bindable parameters as found in the external method's formal parameter list.","pos":[0,99]}]}],"pos":[41414,41514],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"&gt;&lt;/xref&gt;</ph> of parameters to bind to.","source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to."}],"pos":[42298,42415],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref> property.","nodes":[{"pos":[0,205],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref> property."}],"pos":[43670,43876],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[43887,43969],"yaml":true,"extradata":"MT"},{"content":"Returns the access type for the specified property.","nodes":[{"pos":[0,51],"content":"Returns the access type for the specified property.","nodes":[{"content":"Returns the access type for the specified property.","pos":[0,51]}]}],"pos":[45698,45750],"yaml":true},{"content":"Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.","nodes":[{"pos":[0,182],"content":"Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.","nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.","pos":[0,182],"nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one another.","pos":[0,91]},{"content":"Without this interface this information is inferred directly from property getter/setters.","pos":[92,182]}]}]}],"pos":[45761,45944],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.","nodes":[{"pos":[0,134],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> to provide access to design time services if they are required.","source":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required."}],"pos":[46216,46351],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[46419,46445],"yaml":true},{"content":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denotes the access level of the property.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"&gt;&lt;/xref&gt;</ph> enumeration value that denotes the access level of the property.","source":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denotes the access level of the property."}],"pos":[46540,46681],"yaml":true},{"content":"Returns the <xref href=\"System.Type\"></xref> of the specified property.","nodes":[{"pos":[0,71],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the specified property.","source":"Returns the <xref href=\"System.Type\"></xref> of the specified property."}],"pos":[48344,48416],"yaml":true},{"content":"Used at compile time to validate whether the properties are correctly bound to one other.","nodes":[{"pos":[0,89],"content":"Used at compile time to validate whether the properties are correctly bound to one other.","nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one other.","pos":[0,89]}]}],"pos":[48427,48517],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.","nodes":[{"pos":[0,134],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> to provide access to design time services if they are required.","source":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required."}],"pos":[48744,48879],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[48947,48973],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> for the property whose name is passed as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">propertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter."}],"pos":[49028,49147],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.CallExternalMethodActivity\n  commentId: T:System.Workflow.Activities.CallExternalMethodActivity\n  id: CallExternalMethodActivity\n  children:\n  - System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  - System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  langs:\n  - csharp\n  name: CallExternalMethodActivity\n  nameWithType: CallExternalMethodActivity\n  fullName: System.Workflow.Activities.CallExternalMethodActivity\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.  \\n  \\n> [!NOTE]\\n>  When the external method is called all parameters of the method are cloned. If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]\\n [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))]\n\n      public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  implements:\n  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.ObsoleteAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CallExternalMethodActivity()\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()\n  fullName: CallExternalMethodActivity.CallExternalMethodActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>. The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]\\n [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]\"\n  syntax:\n    content: public CallExternalMethodActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CallExternalMethodActivity(String)\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)\n  fullName: CallExternalMethodActivity.CallExternalMethodActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public CallExternalMethodActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity, used to initialize the activity name property.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  commentId: P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  id: CorrelationToken\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CorrelationToken\n  nameWithType: CallExternalMethodActivity.CorrelationToken\n  fullName: CallExternalMethodActivity.CorrelationToken\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref> for the external method.\n  remarks: \"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from. This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.  \\n  \\n [!INCLUDE[crexample](~/includes/crexample-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).\"\n  example:\n  - \"The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object. This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \\n  \\n [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]\\n [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))]\n\n      public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }\n    return:\n      type: System.Workflow.Runtime.CorrelationToken\n      description: The correlation token for the external method.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  commentId: F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  id: CorrelationTokenProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CorrelationTokenProperty\n  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty\n  fullName: CallExternalMethodActivity.CorrelationTokenProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)\n  fullName: CallExternalMethodActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Tries to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> with the specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the execution environment in which to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: One of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> values.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.Execute*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: This <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"></xref> is a null reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>executionContext</code> is a null reference (`Nothing` in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service object for the <code>executionContext</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  id: InitializeProperties\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: InitializeProperties()\n  nameWithType: CallExternalMethodActivity.InitializeProperties()\n  fullName: CallExternalMethodActivity.InitializeProperties()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Performs initialization on dependency properties.\n  remarks: This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.\n  syntax:\n    content: protected override void InitializeProperties ();\n    parameters: []\n  overload: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  commentId: P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  id: InterfaceType\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: InterfaceType\n  nameWithType: CallExternalMethodActivity.InterfaceType\n  fullName: CallExternalMethodActivity.InterfaceType\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets an external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property. The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]\\n [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]\"\n  syntax:\n    content: >-\n      [System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))]\n\n      public virtual Type InterfaceType { get; set; }\n    return:\n      type: System.Type\n      description: The external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*\n  exceptions: []\n  attributes:\n  - type: System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  commentId: F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  id: InterfaceTypeProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: InterfaceTypeProperty\n  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty\n  fullName: CallExternalMethodActivity.InterfaceTypeProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\"></xref> property.\n  remarks: \"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  commentId: E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  id: MethodInvoking\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodInvoking\n  nameWithType: CallExternalMethodActivity.MethodInvoking\n  fullName: CallExternalMethodActivity.MethodInvoking\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs before invoking the method.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]\\n [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]\"\n  syntax:\n    content: public event EventHandler MethodInvoking;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  commentId: F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  id: MethodInvokingEvent\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodInvokingEvent\n  nameWithType: CallExternalMethodActivity.MethodInvokingEvent\n  fullName: CallExternalMethodActivity.MethodInvokingEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.\n  remarks: \"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  commentId: P:System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  id: MethodName\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: CallExternalMethodActivity.MethodName\n  fullName: CallExternalMethodActivity.MethodName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the name of the method to be called on the local service registered with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]\\n [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))]\n\n      public virtual string MethodName { get; set; }\n    return:\n      type: System.String\n      description: The method name of the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref> interface.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.MethodName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  commentId: F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  id: MethodNameProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodNameProperty\n  nameWithType: CallExternalMethodActivity.MethodNameProperty\n  fullName: CallExternalMethodActivity.MethodNameProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodName\"></xref> property.\n  remarks: \"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  id: OnMethodInvoked(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: OnMethodInvoked(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n  fullName: CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Provides a hook for derived classes to extract out and return values from the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>. This method is called just after the external method is run.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of the `OnMethodInvoked` method.  \\n  \\n [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]\\n [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]\"\n  syntax:\n    content: protected virtual void OnMethodInvoked (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  id: OnMethodInvoking(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: OnMethodInvoking(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n  fullName: CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Provides a hook for derived classes to set <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref>. This method is called just before the external method is run.\n  remarks: ''\n  example:\n  - \"The following example demonstrates an implementation of the `OnMethodInvoking` method. This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \\n  \\n [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]\\n [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]\"\n  syntax:\n    content: protected virtual void OnMethodInvoking (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  commentId: P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  id: ParameterBindings\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: ParameterBindings\n  nameWithType: CallExternalMethodActivity.ParameterBindings\n  fullName: CallExternalMethodActivity.ParameterBindings\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the collection of bindable parameters as found in the external method's formal parameter list.\n  remarks: ''\n  example:\n  - \"The following example shows how to add a parameter binding to the parameter bindings collection. This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Host Communication Sample](http://msdn.microsoft.com/en-us/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).  \\n  \\n [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }\n    return:\n      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  commentId: F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  id: ParameterBindingsProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: ParameterBindingsProperty\n  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty\n  fullName: CallExternalMethodActivity.ParameterBindingsProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  nameWithType: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  fullName: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the access type for the specified property.\n  remarks: Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.\n  syntax:\n    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Workflow.ComponentModel.Compiler.AccessTypes\n      description: An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denotes the access level of the property.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  commentId: M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  nameWithType: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  fullName: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the <xref href=\"System.Type\"></xref> of the specified property.\n  remarks: Used at compile time to validate whether the properties are correctly bound to one other.\n  syntax:\n    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CallExternalMethodActivity()\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()\n  fullName: CallExternalMethodActivity.CallExternalMethodActivity()\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CallExternalMethodActivity(String)\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)\n  fullName: CallExternalMethodActivity.CallExternalMethodActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CallExternalMethodActivity.CorrelationToken\n  fullName: CallExternalMethodActivity.CorrelationToken\n- uid: System.Workflow.Runtime.CorrelationToken\n  parent: System.Workflow.Runtime\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CorrelationToken\n  fullName: System.Workflow.Runtime.CorrelationToken\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CorrelationTokenProperty\n  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty\n  fullName: CallExternalMethodActivity.CorrelationTokenProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)\n  fullName: CallExternalMethodActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: CallExternalMethodActivity.InitializeProperties()\n  fullName: CallExternalMethodActivity.InitializeProperties()\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InterfaceType\n  nameWithType: CallExternalMethodActivity.InterfaceType\n  fullName: CallExternalMethodActivity.InterfaceType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InterfaceTypeProperty\n  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty\n  fullName: CallExternalMethodActivity.InterfaceTypeProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodInvoking\n  nameWithType: CallExternalMethodActivity.MethodInvoking\n  fullName: CallExternalMethodActivity.MethodInvoking\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodInvokingEvent\n  nameWithType: CallExternalMethodActivity.MethodInvokingEvent\n  fullName: CallExternalMethodActivity.MethodInvokingEvent\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodName\n  nameWithType: CallExternalMethodActivity.MethodName\n  fullName: CallExternalMethodActivity.MethodName\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodNameProperty\n  nameWithType: CallExternalMethodActivity.MethodNameProperty\n  fullName: CallExternalMethodActivity.MethodNameProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoked(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n  fullName: CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoking(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n  fullName: CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: CallExternalMethodActivity.ParameterBindings\n  fullName: CallExternalMethodActivity.ParameterBindings\n- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowParameterBindingCollection\n  nameWithType: WorkflowParameterBindingCollection\n  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: ParameterBindingsProperty\n  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty\n  fullName: CallExternalMethodActivity.ParameterBindingsProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  nameWithType: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  fullName: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n- uid: System.Workflow.ComponentModel.Compiler.AccessTypes\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: AccessTypes\n  nameWithType: AccessTypes\n  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  nameWithType: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  fullName: CallExternalMethodActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CallExternalMethodActivity\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity\n  fullName: CallExternalMethodActivity.CallExternalMethodActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CallExternalMethodActivity.CorrelationToken\n  fullName: CallExternalMethodActivity.CorrelationToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: Execute\n  nameWithType: CallExternalMethodActivity.Execute\n  fullName: CallExternalMethodActivity.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InitializeProperties\n  nameWithType: CallExternalMethodActivity.InitializeProperties\n  fullName: CallExternalMethodActivity.InitializeProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InterfaceType\n  nameWithType: CallExternalMethodActivity.InterfaceType\n  fullName: CallExternalMethodActivity.InterfaceType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodName\n  nameWithType: CallExternalMethodActivity.MethodName\n  fullName: CallExternalMethodActivity.MethodName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoked\n  nameWithType: CallExternalMethodActivity.OnMethodInvoked\n  fullName: CallExternalMethodActivity.OnMethodInvoked\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoking\n  nameWithType: CallExternalMethodActivity.OnMethodInvoking\n  fullName: CallExternalMethodActivity.OnMethodInvoking\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: CallExternalMethodActivity.ParameterBindings\n  fullName: CallExternalMethodActivity.ParameterBindings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  fullName: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  fullName: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/CallExternalMethodActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DependencyObject.Dispose(Boolean)\n  fullName: DependencyObject.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: Activity.Cancel(ActivityExecutionContext)\n  fullName: Activity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: Activity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: Activity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: Activity.Initialize(IServiceProvider)\n  fullName: Activity.Initialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: Activity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: Activity.Uninitialize(IServiceProvider)\n  fullName: Activity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IDynamicPropertyTypeProvider\n  nameWithType: IDynamicPropertyTypeProvider\n  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n"}