### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.NetCodeGroup
  commentId: T:System.Security.Policy.NetCodeGroup
  id: NetCodeGroup
  children:
  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  - System.Security.Policy.NetCodeGroup.AttributeString
  - System.Security.Policy.NetCodeGroup.Copy
  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.Equals(System.Object)
  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  - System.Security.Policy.NetCodeGroup.GetHashCode
  - System.Security.Policy.NetCodeGroup.MergeLogic
  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.PermissionSetName
  - System.Security.Policy.NetCodeGroup.ResetConnectAccess
  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: NetCodeGroup
  nameWithType: NetCodeGroup
  fullName: System.Security.Policy.NetCodeGroup
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.
  remarks: "Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.  \n  \n <xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence. However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.  \n  \n When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.  \n  \n|URI Scheme|Rule|  \n|----------------|----------|  \n|file|No connection access to the origin server is permitted.|  \n|http|HTTP and HTTPS access is permitted using the origin port.|  \n|https|HTTPS access is permitted using the origin port.|  \n  \n You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> (\"\") as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> (\"*\") as the scheme.  \n  \n> [!NOTE]\n>  If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site."
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  commentId: M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  id: '#ctor(System.Security.Policy.IMembershipCondition)'
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Initializes a new instance of the <xref href="System.Security.Policy.NetCodeGroup"></xref> class.
  remarks: "When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.  \n  \n|Scheme|Rule|  \n|------------|----------|  \n|file|No connection access to the origin server is permitted.|  \n|http|HTTP and HTTPS access is permitted using the origin port.|  \n|https|HTTPS access is permitted using the origin port.|"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]"
  syntax:
    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: A membership condition that tests evidence to determine whether this code group applies code access security policy.
  overload: System.Security.Policy.NetCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>membershipCondition</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The type of the <code>membershipCondition</code> parameter is not valid.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  commentId: F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  id: AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: NetCodeGroup.AbsentOriginScheme
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.
  remarks: "When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value.  \n  \n The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string (\"\")."
  syntax:
    content: public static readonly string AbsentOriginScheme;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  commentId: M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AddConnectAccess(String, CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)
  fullName: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Adds the specified connection access to the current code group.
  remarks: You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`. If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect. If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server.
  example:
  - "The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \n  \n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]"
  syntax:
    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);
    parameters:
    - id: originScheme
      type: System.String
      description: A <xref href="System.String"></xref> containing the scheme to match against the code's scheme.
    - id: connectAccess
      type: System.Security.Policy.CodeConnectAccess
      description: A <xref href="System.Security.Policy.CodeConnectAccess"></xref> that specifies the scheme and port code can use to connect back to its origin server.
  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>originScheme</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>originScheme</code> contains characters that are not permitted in schemes.  \n  \n -or-  \n  \n <code>originScheme</code> = <xref href=\"System.Security.Policy.NetCodeGroup.AbsentOriginScheme\"></xref> and <code>connectAccess</code> specifies <xref href=\"System.Security.Policy.CodeConnectAccess.OriginScheme\"></xref> as its scheme."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  commentId: F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  id: AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: NetCodeGroup.AnyOtherOriginScheme
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Contains a value used to specify any other unspecified origin scheme.
  remarks: "When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value.  \n  \n The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is \"*\"."
  syntax:
    content: public static readonly string AnyOtherOriginScheme;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  commentId: P:System.Security.Policy.NetCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: NetCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets a string representation of the attributes of the policy statement for the code group.
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: Always `null`.
  overload: System.Security.Policy.NetCodeGroup.AttributeString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.Copy
  commentId: M:System.Security.Policy.NetCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: NetCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Makes a deep copy of the current code group.
  remarks: This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: An equivalent copy of the current code group, including its membership conditions and child code groups.
  overload: System.Security.Policy.NetCodeGroup.Copy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  commentId: M:System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement, PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)
  fullName: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: ''
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: ''
  overload: System.Security.Policy.NetCodeGroup.CreateXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  commentId: M:System.Security.Policy.NetCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: NetCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Determines whether the specified code group is equivalent to the current code group.
  remarks: "The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:  \n  \n-   The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties.  \n  \n-   The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property.  \n  \n-   The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: The <xref href="System.Security.Policy.NetCodeGroup"></xref> object to compare with the current code group.
    return:
      type: System.Boolean
      description: '`true` if the specified code group is equivalent to the current code group; otherwise, `false`.'
  overload: System.Security.Policy.NetCodeGroup.Equals*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  commentId: M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  id: GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: NetCodeGroup.GetConnectAccessRules()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets the connection access information for the current code group.
  remarks: In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects. If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> returns an empty array.
  example:
  - "The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n [!code-cpp[NclCodeGroup#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#8)]\n [!code-csharp[NclCodeGroup#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#8)]"
  syntax:
    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();
    parameters: []
    return:
      type: System.Collections.DictionaryEntry[]
      description: A <xref href="System.Collections.DictionaryEntry"></xref> array containing connection access information.
  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  commentId: M:System.Security.Policy.NetCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: NetCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets the hash code of the current code group.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code of the current code group.
  overload: System.Security.Policy.NetCodeGroup.GetHashCode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  commentId: P:System.Security.Policy.NetCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: NetCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets the logic to use for merging groups.
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: The string "Union".
  overload: System.Security.Policy.NetCodeGroup.MergeLogic*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  commentId: M:System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement, PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)
  fullName: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: ''
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: ''
  overload: System.Security.Policy.NetCodeGroup.ParseXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  commentId: P:System.Security.Policy.NetCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: NetCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets the name of the <xref href="System.Security.NamedPermissionSet"></xref> for the code group.
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: Always the string "Same site Web."
  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  commentId: M:System.Security.Policy.NetCodeGroup.ResetConnectAccess
  id: ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: NetCodeGroup.ResetConnectAccess()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Removes all connection access information for the current code group.
  remarks: "Use this method to remove the system-supplied default connection access rules.  \n  \n The default rules are shown in the following table.  \n  \n|Scheme|Rule|  \n|------------|----------|  \n|file|No connection access to the origin server is permitted.|  \n|http|HTTP and HTTPS access is permitted using the origin port.|  \n|https|HTTPS access is permitted using the origin port.|"
  example:
  - "The following code example demonstrates calling this method to remove the default code access connection rules.  \n  \n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]"
  syntax:
    content: public void ResetConnectAccess ();
    parameters: []
  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  commentId: M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: NetCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Resolves policy for the code group and its descendants for a set of evidence.
  remarks: "Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \n  \n The operation of this method is as follows:  \n  \n If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement)."
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The <xref href="System.Security.Policy.Evidence"></xref> for the assembly.
    return:
      type: System.Security.Policy.PolicyStatement
      description: A <xref href="System.Security.Policy.PolicyStatement"></xref> that consists of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).
  overload: System.Security.Policy.NetCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>evidence</code> parameter is `null`.
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: More than one code group (including the parent code group and any child code groups) is marked <xref href="System.Security.Policy.PolicyStatementAttribute.Exclusive"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  commentId: M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Resolves matching code groups.
  remarks: Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The evidence for the assembly.
    return:
      type: System.Security.Policy.CodeGroup
      description: The complete set of code groups that were matched by the evidence.
  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>evidence</code> parameter is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Policy.CodeGroup
  parent: System.Security.Policy
  isExternal: false
  name: CodeGroup
  nameWithType: CodeGroup
  fullName: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: NetCodeGroup.NetCodeGroup(IMembershipCondition)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: NetCodeGroup.AbsentOriginScheme
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess(String, CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)
  fullName: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: NetCodeGroup.AnyOtherOriginScheme
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: NetCodeGroup.Copy()
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement, PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)
  fullName: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: NetCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: NetCodeGroup.GetConnectAccessRules()
- uid: System.Collections.DictionaryEntry
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: false
  name: DictionaryEntry[]
  nameWithType: DictionaryEntry[]
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: System.Collections.DictionaryEntry
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: NetCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement, PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)
  fullName: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: NetCodeGroup.ResetConnectAccess()
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: NetCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.NetCodeGroup.#ctor*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup
  nameWithType: NetCodeGroup.NetCodeGroup
  fullName: NetCodeGroup.NetCodeGroup
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess
  nameWithType: NetCodeGroup.AddConnectAccess
  fullName: NetCodeGroup.AddConnectAccess
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.AttributeString*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: NetCodeGroup.AttributeString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.Copy*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy
  nameWithType: NetCodeGroup.Copy
  fullName: NetCodeGroup.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.CreateXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: NetCodeGroup.CreateXml
  fullName: NetCodeGroup.CreateXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.Equals*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals
  nameWithType: NetCodeGroup.Equals
  fullName: NetCodeGroup.Equals
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules
  nameWithType: NetCodeGroup.GetConnectAccessRules
  fullName: NetCodeGroup.GetConnectAccessRules
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.GetHashCode*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: NetCodeGroup.GetHashCode
  fullName: NetCodeGroup.GetHashCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.MergeLogic*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: NetCodeGroup.MergeLogic
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.ParseXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: NetCodeGroup.ParseXml
  fullName: NetCodeGroup.ParseXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: NetCodeGroup.PermissionSetName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess
  nameWithType: NetCodeGroup.ResetConnectAccess
  fullName: NetCodeGroup.ResetConnectAccess
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.Resolve*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: NetCodeGroup.Resolve
  fullName: NetCodeGroup.Resolve
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups
  fullName: NetCodeGroup.ResolveMatchingCodeGroups
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: AddChild(CodeGroup)
  nameWithType: CodeGroup.AddChild(CodeGroup)
  fullName: CodeGroup.AddChild(CodeGroup)
- uid: System.Security.Policy.CodeGroup.Children
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Children
  nameWithType: CodeGroup.Children
  fullName: CodeGroup.Children
- uid: System.Security.Policy.CodeGroup.Description
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Description
  nameWithType: CodeGroup.Description
  fullName: CodeGroup.Description
- uid: System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Equals(CodeGroup, Boolean)
  nameWithType: CodeGroup.Equals(CodeGroup, Boolean)
  fullName: CodeGroup.Equals(CodeGroup, Boolean)
- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: CodeGroup.FromXml(SecurityElement)
  fullName: CodeGroup.FromXml(SecurityElement)
- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: FromXml(SecurityElement, PolicyLevel)
  nameWithType: CodeGroup.FromXml(SecurityElement, PolicyLevel)
  fullName: CodeGroup.FromXml(SecurityElement, PolicyLevel)
- uid: System.Security.Policy.CodeGroup.MembershipCondition
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: MembershipCondition
  nameWithType: CodeGroup.MembershipCondition
  fullName: CodeGroup.MembershipCondition
- uid: System.Security.Policy.CodeGroup.Name
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: Name
  nameWithType: CodeGroup.Name
  fullName: CodeGroup.Name
- uid: System.Security.Policy.CodeGroup.PolicyStatement
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: PolicyStatement
  nameWithType: CodeGroup.PolicyStatement
  fullName: CodeGroup.PolicyStatement
- uid: System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: RemoveChild(CodeGroup)
  nameWithType: CodeGroup.RemoveChild(CodeGroup)
  fullName: CodeGroup.RemoveChild(CodeGroup)
- uid: System.Security.Policy.CodeGroup.ToXml
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ToXml()
  nameWithType: CodeGroup.ToXml()
  fullName: CodeGroup.ToXml()
- uid: System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.CodeGroup
  isExternal: false
  name: ToXml(PolicyLevel)
  nameWithType: CodeGroup.ToXml(PolicyLevel)
  fullName: CodeGroup.ToXml(PolicyLevel)
