{"nodes":[{"content":"Provides thread-local storage of data.","nodes":[{"pos":[0,38],"content":"Provides thread-local storage of data.","nodes":[{"content":"Provides thread-local storage of data.","pos":[0,38]}]}],"pos":[941,980],"yaml":true},{"content":"Specifies the type of data stored per-thread.","nodes":[{"pos":[0,45],"content":"Specifies the type of data stored per-thread.","nodes":[{"content":"Specifies the type of data stored per-thread.","pos":[0,45]}]}],"pos":[1516,1562],"yaml":true},{"content":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance.","nodes":[{"pos":[0,77],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance."}],"pos":[3360,3438],"yaml":true},{"content":"The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.  \n  \n This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.","nodes":[{"pos":[0,145],"content":"The default value of <ph id=\"ph1\">`T`</ph> is used to initialize the instance when <ph id=\"ph2\">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> is accessed for the first time.","source":"The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time."},{"pos":[152,336],"content":"This constructor is equivalent to calling the <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29&gt;</ph> constructor with a value of <ph id=\"ph2\">`false`</ph> for the <ph id=\"ph3\">`trackAllValues`</ph> argument.","source":"This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument."}],"pos":[3449,3790],"yaml":true,"extradata":"MT"},{"content":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance and specifies whether all values are accessible from any thread.","nodes":[{"pos":[0,141],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance and specifies whether all values are accessible from any thread.","source":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance and specifies whether all values are accessible from any thread."}],"pos":[5435,5577],"yaml":true},{"content":"If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,266],"content":"If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"If <ph id=\"ph1\">`trackAllValues`</ph> is <ph id=\"ph2\">`false`</ph>, only the value of this instance for the current thread is accessible.","pos":[0,101],"source":"If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible."},{"content":"Attempting to use the <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> property to retrieve all values throws an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[102,266],"source":" Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception."}]}],"pos":[5588,5855],"yaml":true,"extradata":"MT"},{"content":"`true` to track all values set on the instance and expose them through the <xref href=\"System.Threading.ThreadLocal`1.Values\"></xref> property; `false` otherwise.","nodes":[{"pos":[0,162],"content":"<ph id=\"ph1\">`true`</ph> to track all values set on the instance and expose them through the <ph id=\"ph2\">&lt;xref href=\"System.Threading.ThreadLocal`1.Values\"&gt;&lt;/xref&gt;</ph> property; <ph id=\"ph3\">`false`</ph> otherwise.","source":"`true` to track all values set on the instance and expose them through the <xref href=\"System.Threading.ThreadLocal`1.Values\"></xref> property; `false` otherwise."}],"pos":[6007,6172],"yaml":true},{"content":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance with the specified <code>valueFactory</code> function.","nodes":[{"pos":[0,131],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">valueFactory</ph><ept id=\"p1\">&lt;/code&gt;</ept> function.","source":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance with the specified <code>valueFactory</code> function."}],"pos":[7755,7887],"yaml":true},{"content":"The  <xref href=\"System.Func`1\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> without it having been previously initialized.","nodes":[{"pos":[0,226],"content":"The  <ph id=\"ph1\">&lt;xref href=\"System.Func`1\"&gt;&lt;/xref&gt;</ph> invoked to produce a lazily-initialized value when an attempt is made to retrieve <ph id=\"ph2\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> without it having been previously initialized.","source":"The  <xref href=\"System.Func`1\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> without it having been previously initialized."}],"pos":[8038,8265],"yaml":true},{"content":"<code>valueFactory</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">&lt;code&gt;valueFactory&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>valueFactory</code> is a null reference (Nothing in Visual Basic)."}],"pos":[8431,8504],"yaml":true},{"content":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance with the specified <code>valueFactory</code> function and a flag that indicates whether all values are accessible from any thread.","nodes":[{"pos":[0,207],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">valueFactory</ph><ept id=\"p1\">&lt;/code&gt;</ept> function and a flag that indicates whether all values are accessible from any thread.","source":"Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance with the specified <code>valueFactory</code> function and a flag that indicates whether all values are accessible from any thread."}],"pos":[10092,10300],"yaml":true},{"content":"If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,266],"content":"If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"If <ph id=\"ph1\">`trackAllValues`</ph> is <ph id=\"ph2\">`false`</ph>, only the value of this instance for the current thread is accessible.","pos":[0,101],"source":"If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible."},{"content":"Attempting to use the <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> property to retrieve all values throws an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[102,266],"source":" Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception."}]}],"pos":[10311,10578],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Func`1\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> without it having been previously initialized.","nodes":[{"pos":[0,225],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Func`1\"&gt;&lt;/xref&gt;</ph> invoked to produce a lazily-initialized value when an attempt is made to retrieve <ph id=\"ph2\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> without it having been previously initialized.","source":"The <xref href=\"System.Func`1\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> without it having been previously initialized."}],"pos":[10750,10976],"yaml":true},{"content":"`true` to track all values set on the instance and expose them through the <xref href=\"System.Threading.ThreadLocal`1.Values\"></xref> property; `false` otherwise.","nodes":[{"pos":[0,162],"content":"<ph id=\"ph1\">`true`</ph> to track all values set on the instance and expose them through the <ph id=\"ph2\">&lt;xref href=\"System.Threading.ThreadLocal`1.Values\"&gt;&lt;/xref&gt;</ph> property; <ph id=\"ph3\">`false`</ph> otherwise.","source":"`true` to track all values set on the instance and expose them through the <xref href=\"System.Threading.ThreadLocal`1.Values\"></xref> property; `false` otherwise."}],"pos":[11047,11212],"yaml":true},{"content":"<code>valueFactory</code> is a `null` reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;valueFactory&lt;/code&gt;</ph> is a <ph id=\"ph2\">`null`</ph> reference (<ph id=\"ph3\">`Nothing`</ph> in Visual Basic).","source":"<code>valueFactory</code> is a `null` reference (`Nothing` in Visual Basic)."}],"pos":[11378,11455],"yaml":true},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Threading.ThreadLocal`1\"></xref> class.","nodes":[{"pos":[0,117],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Threading.ThreadLocal`1\"></xref> class."}],"pos":[12877,12995],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>. The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.","nodes":[{"pos":[0,397],"content":"Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>. The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.","pos":[0,87],"source":"Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> in an unusable state.","pos":[88,181],"source":" The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> was occupying.","pos":[182,397],"source":" After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying."}]},{"pos":[404,609],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[617,897],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.","pos":[8,278],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.","pos":[1,109],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[110,270],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method."}]}]}],"pos":[13006,13911],"yaml":true,"extradata":"MT"},{"content":"Releases the resources used by this <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance.","nodes":[{"pos":[0,97],"content":"Releases the resources used by this <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Releases the resources used by this <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance."}],"pos":[15537,15635],"yaml":true},{"content":"Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.","nodes":[{"pos":[0,102],"content":"Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.","nodes":[{"content":"Unlike most of the members of <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>, this method is not thread-safe.","pos":[0,102],"source":"Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe."}]}],"pos":[15646,15749],"yaml":true,"extradata":"MT"},{"content":"A Boolean value that indicates whether this method is being called due to a call to <xref href=\"System.Threading.ThreadLocal`1.Dispose\"></xref>.","nodes":[{"pos":[0,144],"content":"A Boolean value that indicates whether this method is being called due to a call to <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1.Dispose\"&gt;&lt;/xref&gt;</ph>.","source":"A Boolean value that indicates whether this method is being called due to a call to <xref href=\"System.Threading.ThreadLocal`1.Dispose\"></xref>."}],"pos":[15903,16048],"yaml":true},{"content":"Releases the resources used by this <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance.","nodes":[{"pos":[0,97],"content":"Releases the resources used by this <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Releases the resources used by this <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance."}],"pos":[17545,17643],"yaml":true},{"content":"Gets whether <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> is initialized on the current thread.","nodes":[{"pos":[0,108],"content":"Gets whether <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> is initialized on the current thread.","source":"Gets whether <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> is initialized on the current thread."}],"pos":[19234,19343],"yaml":true},{"content":"true if <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> is initialized on the current thread; otherwise false.","nodes":[{"pos":[0,120],"content":"true if <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> is initialized on the current thread; otherwise false.","source":"true if <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> is initialized on the current thread; otherwise false."}],"pos":[19460,19581],"yaml":true},{"content":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance has been disposed.","source":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed."}],"pos":[19760,19844],"yaml":true},{"content":"Creates and returns a string representation of this instance for the current thread.","nodes":[{"pos":[0,84],"content":"Creates and returns a string representation of this instance for the current thread.","nodes":[{"content":"Creates and returns a string representation of this instance for the current thread.","pos":[0,84]}]}],"pos":[21272,21357],"yaml":true},{"content":"Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.","nodes":[{"pos":[0,154],"content":"Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.","nodes":[{"content":"Calling this method forces initialization for the current thread, as is the case with accessing <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> directly.","pos":[0,154],"source":"Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly."}]}],"pos":[21368,21523],"yaml":true,"extradata":"MT"},{"content":"The result of calling <xref href=\"System.Object.ToString\"></xref> on the <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref>.","nodes":[{"pos":[0,131],"content":"The result of calling <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> on the <ph id=\"ph2\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph>.","source":"The result of calling <xref href=\"System.Object.ToString\"></xref> on the <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref>."}],"pos":[21658,21790],"yaml":true},{"content":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance has been disposed.","source":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed."}],"pos":[21963,22047],"yaml":true},{"content":"The <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> for the current thread is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> for the current thread is a null reference (Nothing in Visual Basic).","source":"The <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> for the current thread is a null reference (Nothing in Visual Basic)."}],"pos":[22151,22283],"yaml":true},{"content":"The initialization function attempted to reference <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> recursively.","nodes":[{"pos":[0,121],"content":"The initialization function attempted to reference <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> recursively.","source":"The initialization function attempted to reference <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> recursively."}],"pos":[22393,22515],"yaml":true},{"content":"No default constructor is provided and no value factory is supplied.","nodes":[{"pos":[0,68],"content":"No default constructor is provided and no value factory is supplied.","nodes":[{"content":"No default constructor is provided and no value factory is supplied.","pos":[0,68]}]}],"pos":[22619,22688],"yaml":true},{"content":"Gets or sets the value of this instance for the current thread.","nodes":[{"pos":[0,63],"content":"Gets or sets the value of this instance for the current thread.","nodes":[{"content":"Gets or sets the value of this instance for the current thread.","pos":[0,63]}]}],"pos":[24094,24158],"yaml":true},{"content":"If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it. If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>. Otherwise, the default value of will be used. If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.","nodes":[{"pos":[0,522],"content":"If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it. If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>. Otherwise, the default value of will be used. If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.","nodes":[{"content":"If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it. If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>. Otherwise, the default value of will be used. If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.","pos":[0,522],"nodes":[{"content":"If this instance was not previously initialized for the current thread, accessing <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> will attempt to initialize it.","pos":[0,161],"source":"If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it."},{"content":"If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <ph id=\"ph1\">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>.","pos":[162,370],"source":" If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>."},{"content":"Otherwise, the default value of will be used.","pos":[371,416]},{"content":"If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.","pos":[417,522]}]}]}],"pos":[24169,24692],"yaml":true,"extradata":"MT"},{"content":"Returns an instance of the object that this ThreadLocal is responsible for initializing.","nodes":[{"pos":[0,88],"content":"Returns an instance of the object that this ThreadLocal is responsible for initializing.","nodes":[{"content":"Returns an instance of the object that this ThreadLocal is responsible for initializing.","pos":[0,88]}]}],"pos":[24789,24878],"yaml":true},{"content":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance has been disposed.","source":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed."}],"pos":[25048,25132],"yaml":true},{"content":"The initialization function attempted to reference <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> recursively.","nodes":[{"pos":[0,121],"content":"The initialization function attempted to reference <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1.Value\"&gt;&lt;/xref&gt;</ph> recursively.","source":"The initialization function attempted to reference <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> recursively."}],"pos":[25242,25364],"yaml":true},{"content":"No default constructor is provided and no value factory is supplied.","nodes":[{"pos":[0,68],"content":"No default constructor is provided and no value factory is supplied.","nodes":[{"content":"No default constructor is provided and no value factory is supplied.","pos":[0,68]}]}],"pos":[25468,25537],"yaml":true},{"content":"Gets a list for all of the values currently stored by all of the threads that have accessed this instance.","nodes":[{"pos":[0,106],"content":"Gets a list for all of the values currently stored by all of the threads that have accessed this instance.","nodes":[{"content":"Gets a list for all of the values currently stored by all of the threads that have accessed this instance.","pos":[0,106]}]}],"pos":[26966,27073],"yaml":true},{"content":"A list for all of the values currently stored by all of the threads that have accessed this instance.","nodes":[{"pos":[0,101],"content":"A list for all of the values currently stored by all of the threads that have accessed this instance.","nodes":[{"content":"A list for all of the values currently stored by all of the threads that have accessed this instance.","pos":[0,101]}]}],"pos":[27233,27335],"yaml":true},{"content":"Values stored by all threads are not available because this instance was initialized with the <code>trackAllValues</code> argument set to `false` in the call to a class constructor.","nodes":[{"pos":[0,181],"content":"Values stored by all threads are not available because this instance was initialized with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">trackAllValues</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument set to <ph id=\"ph2\">`false`</ph> in the call to a class constructor.","source":"Values stored by all threads are not available because this instance was initialized with the <code>trackAllValues</code> argument set to `false` in the call to a class constructor."}],"pos":[27510,27692],"yaml":true},{"content":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadLocal`1\"&gt;&lt;/xref&gt;</ph> instance has been disposed.","source":"The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed."}],"pos":[27798,27882],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.ThreadLocal`1\n  commentId: T:System.Threading.ThreadLocal`1\n  id: ThreadLocal`1\n  children:\n  - System.Threading.ThreadLocal`1.#ctor\n  - System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  - System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  - System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  - System.Threading.ThreadLocal`1.Dispose\n  - System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  - System.Threading.ThreadLocal`1.Finalize\n  - System.Threading.ThreadLocal`1.IsValueCreated\n  - System.Threading.ThreadLocal`1.ToString\n  - System.Threading.ThreadLocal`1.Value\n  - System.Threading.ThreadLocal`1.Values\n  langs:\n  - csharp\n  name: ThreadLocal<T>\n  nameWithType: ThreadLocal<T>\n  fullName: System.Threading.ThreadLocal<T>\n  type: Class\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Provides thread-local storage of data.\n  remarks: ''\n  example:\n  - \"The following example shows how to use <xref:System.Threading.ThreadLocal%601>:  \\n  \\n [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]\\n [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]\"\n  syntax:\n    content: 'public class ThreadLocal<T> : IDisposable'\n    typeParameters:\n    - id: T\n      description: Specifies the type of data stored per-thread.\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.#ctor\n  commentId: M:System.Threading.ThreadLocal`1.#ctor\n  id: '#ctor'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: ThreadLocal<T>()\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>()\n  fullName: ThreadLocal<T>.ThreadLocal<T>()\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance.\n  remarks: \"The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.  \\n  \\n This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.\"\n  syntax:\n    content: public ThreadLocal ();\n    parameters: []\n  overload: System.Threading.ThreadLocal`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: ThreadLocal<T>(Boolean)\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Boolean)\n  fullName: ThreadLocal<T>.ThreadLocal<T>(Boolean)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance and specifies whether all values are accessible from any thread.\n  remarks: If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.\n  syntax:\n    content: public ThreadLocal (bool trackAllValues);\n    parameters:\n    - id: trackAllValues\n      type: System.Boolean\n      description: '`true` to track all values set on the instance and expose them through the <xref href=\"System.Threading.ThreadLocal`1.Values\"></xref> property; `false` otherwise.'\n  overload: System.Threading.ThreadLocal`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  id: '#ctor(System.Func{`0})'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: ThreadLocal<T>(Func<T>)\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>)\n  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance with the specified <code>valueFactory</code> function.\n  syntax:\n    content: public ThreadLocal (Func<T> valueFactory);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: The  <xref href=\"System.Func`1\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> without it having been previously initialized.\n  overload: System.Threading.ThreadLocal`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>valueFactory</code> is a null reference (Nothing in Visual Basic).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  id: '#ctor(System.Func{`0},System.Boolean)'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: ThreadLocal<T>(Func<T>, Boolean)\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)\n  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes the <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance with the specified <code>valueFactory</code> function and a flag that indicates whether all values are accessible from any thread.\n  remarks: If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.\n  syntax:\n    content: public ThreadLocal (Func<T> valueFactory, bool trackAllValues);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: The <xref href=\"System.Func`1\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> without it having been previously initialized.\n    - id: trackAllValues\n      type: System.Boolean\n      description: '`true` to track all values set on the instance and expose them through the <xref href=\"System.Threading.ThreadLocal`1.Values\"></xref> property; `false` otherwise.'\n  overload: System.Threading.ThreadLocal`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>valueFactory</code> is a `null` reference (`Nothing` in Visual Basic).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.Dispose\n  commentId: M:System.Threading.ThreadLocal`1.Dispose\n  id: Dispose\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ThreadLocal<T>.Dispose()\n  fullName: ThreadLocal<T>.Dispose()\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Threading.ThreadLocal`1\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>. The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Threading.ThreadLocal`1.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  commentId: M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ThreadLocal<T>.Dispose(Boolean)\n  fullName: ThreadLocal<T>.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Releases the resources used by this <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance.\n  remarks: Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: A Boolean value that indicates whether this method is being called due to a call to <xref href=\"System.Threading.ThreadLocal`1.Dispose\"></xref>.\n  overload: System.Threading.ThreadLocal`1.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.Finalize\n  commentId: M:System.Threading.ThreadLocal`1.Finalize\n  id: Finalize\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: ThreadLocal<T>.Finalize()\n  fullName: ThreadLocal<T>.Finalize()\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Releases the resources used by this <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance.\n  syntax:\n    content: ~ThreadLocal`1 ();\n    parameters: []\n  overload: System.Threading.ThreadLocal`1.Finalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.IsValueCreated\n  commentId: P:System.Threading.ThreadLocal`1.IsValueCreated\n  id: IsValueCreated\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: IsValueCreated\n  nameWithType: ThreadLocal<T>.IsValueCreated\n  fullName: ThreadLocal<T>.IsValueCreated\n  type: Property\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Gets whether <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> is initialized on the current thread.\n  syntax:\n    content: public bool IsValueCreated { get; }\n    return:\n      type: System.Boolean\n      description: true if <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> is initialized on the current thread; otherwise false.\n  overload: System.Threading.ThreadLocal`1.IsValueCreated*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.ToString\n  commentId: M:System.Threading.ThreadLocal`1.ToString\n  id: ToString\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ThreadLocal<T>.ToString()\n  fullName: ThreadLocal<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Creates and returns a string representation of this instance for the current thread.\n  remarks: Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The result of calling <xref href=\"System.Object.ToString\"></xref> on the <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref>.\n  overload: System.Threading.ThreadLocal`1.ToString*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: The <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> for the current thread is a null reference (Nothing in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The initialization function attempted to reference <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> recursively.\n  - type: System.MissingMemberException\n    commentId: T:System.MissingMemberException\n    description: No default constructor is provided and no value factory is supplied.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.Value\n  commentId: P:System.Threading.ThreadLocal`1.Value\n  id: Value\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: ThreadLocal<T>.Value\n  fullName: ThreadLocal<T>.Value\n  type: Property\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Gets or sets the value of this instance for the current thread.\n  remarks: If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it. If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>. Otherwise, the default value of will be used. If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.\n  syntax:\n    content: public T Value { get; set; }\n    return:\n      type: T\n      description: Returns an instance of the object that this ThreadLocal is responsible for initializing.\n  overload: System.Threading.ThreadLocal`1.Value*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The initialization function attempted to reference <xref href=\"System.Threading.ThreadLocal`1.Value\"></xref> recursively.\n  - type: System.MissingMemberException\n    commentId: T:System.MissingMemberException\n    description: No default constructor is provided and no value factory is supplied.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadLocal`1.Values\n  commentId: P:System.Threading.ThreadLocal`1.Values\n  id: Values\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ThreadLocal<T>.Values\n  fullName: ThreadLocal<T>.Values\n  type: Property\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Gets a list for all of the values currently stored by all of the threads that have accessed this instance.\n  syntax:\n    content: public System.Collections.Generic.IList<T> Values { get; }\n    return:\n      type: System.Collections.Generic.IList`1\n      description: A list for all of the values currently stored by all of the threads that have accessed this instance.\n  overload: System.Threading.ThreadLocal`1.Values*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Values stored by all threads are not available because this instance was initialized with the <code>trackAllValues</code> argument set to `false` in the call to a class constructor.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.ThreadLocal`1\"></xref> instance has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.NullReferenceException\n  parent: System\n  isExternal: false\n  name: NullReferenceException\n  nameWithType: NullReferenceException\n  fullName: System.NullReferenceException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.MissingMemberException\n  parent: System\n  isExternal: false\n  name: MissingMemberException\n  nameWithType: MissingMemberException\n  fullName: System.MissingMemberException\n- uid: System.Threading.ThreadLocal`1.#ctor\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ThreadLocal<T>()\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>()\n  fullName: ThreadLocal<T>.ThreadLocal<T>()\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ThreadLocal<T>(Boolean)\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Boolean)\n  fullName: ThreadLocal<T>.ThreadLocal<T>(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ThreadLocal<T>(Func<T>)\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>)\n  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>)\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Func{T}\n  parent: System\n  isExternal: false\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ThreadLocal<T>(Func<T>, Boolean)\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)\n  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)\n- uid: System.Threading.ThreadLocal`1.Dispose\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Dispose()\n  nameWithType: ThreadLocal<T>.Dispose()\n  fullName: ThreadLocal<T>.Dispose()\n- uid: System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ThreadLocal<T>.Dispose(Boolean)\n  fullName: ThreadLocal<T>.Dispose(Boolean)\n- uid: System.Threading.ThreadLocal`1.Finalize\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Finalize()\n  nameWithType: ThreadLocal<T>.Finalize()\n  fullName: ThreadLocal<T>.Finalize()\n- uid: System.Threading.ThreadLocal`1.IsValueCreated\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: IsValueCreated\n  nameWithType: ThreadLocal<T>.IsValueCreated\n  fullName: ThreadLocal<T>.IsValueCreated\n- uid: System.Threading.ThreadLocal`1.ToString\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ToString()\n  nameWithType: ThreadLocal<T>.ToString()\n  fullName: ThreadLocal<T>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Threading.ThreadLocal`1.Value\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Value\n  nameWithType: ThreadLocal<T>.Value\n  fullName: ThreadLocal<T>.Value\n- uid: System.Threading.ThreadLocal`1.Values\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Values\n  nameWithType: ThreadLocal<T>.Values\n  fullName: ThreadLocal<T>.Values\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Threading.ThreadLocal`1.#ctor*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ThreadLocal<T>\n  nameWithType: ThreadLocal<T>.ThreadLocal<T>\n  fullName: ThreadLocal<T>.ThreadLocal<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Threading.ThreadLocal`1.Dispose*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Dispose\n  nameWithType: ThreadLocal<T>.Dispose\n  fullName: ThreadLocal<T>.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Threading.ThreadLocal`1.Finalize*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Finalize\n  nameWithType: ThreadLocal<T>.Finalize\n  fullName: ThreadLocal<T>.Finalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Threading.ThreadLocal`1.IsValueCreated*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: IsValueCreated\n  nameWithType: ThreadLocal<T>.IsValueCreated\n  fullName: ThreadLocal<T>.IsValueCreated\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Threading.ThreadLocal`1.ToString*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: ToString\n  nameWithType: ThreadLocal<T>.ToString\n  fullName: ThreadLocal<T>.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Threading.ThreadLocal`1.Value*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Value\n  nameWithType: ThreadLocal<T>.Value\n  fullName: ThreadLocal<T>.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Threading.ThreadLocal`1.Values*\n  parent: System.Threading.ThreadLocal`1\n  isExternal: false\n  name: Values\n  nameWithType: ThreadLocal<T>.Values\n  fullName: ThreadLocal<T>.Values\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}