{"nodes":[{"content":"Defines the interface for an STL/CLR [vector](http://msdn.microsoft.com/library/f90060d5-097a-4e9d-9a26-a634b5b9c6c2) object.","nodes":[{"pos":[0,125],"content":"Defines the interface for an STL/CLR <bpt id=\"p1\">[</bpt>vector<ept id=\"p1\">](http://msdn.microsoft.com/library/f90060d5-097a-4e9d-9a26-a634b5b9c6c2)</ept> object.","source":"Defines the interface for an STL/CLR [vector](http://msdn.microsoft.com/library/f90060d5-097a-4e9d-9a26-a634b5b9c6c2) object."}],"pos":[3067,3193],"yaml":true},{"content":"[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]","nodes":[],"pos":[3204,3262],"yaml":true,"extradata":"MT"},{"content":"The type of an element in the controlled sequence.","nodes":[{"pos":[0,50],"content":"The type of an element in the controlled sequence.","nodes":[{"content":"The type of an element in the controlled sequence.","pos":[0,50]}]}],"pos":[3486,3537],"yaml":true},{"content":"Replaces all elements in the container with the elements in the specified enumeration.","nodes":[{"pos":[0,86],"content":"Replaces all elements in the container with the elements in the specified enumeration.","nodes":[{"content":"Replaces all elements in the container with the elements in the specified enumeration.","pos":[0,86]}]}],"pos":[4971,5058],"yaml":true},{"content":"For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1)</ept>.","source":"For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1)."}],"pos":[5069,5195],"yaml":true,"extradata":"MT"},{"content":"The enumeration whose elements are to be inserted into the container.","nodes":[{"pos":[0,69],"content":"The enumeration whose elements are to be inserted into the container.","nodes":[{"content":"The enumeration whose elements are to be inserted into the container.","pos":[0,69]}]}],"pos":[5373,5443],"yaml":true},{"content":"Replaces all elements in the container with the elements between the given iterators.","nodes":[{"pos":[0,85],"content":"Replaces all elements in the container with the elements between the given iterators.","nodes":[{"content":"Replaces all elements in the container with the elements between the given iterators.","pos":[0,85]}]}],"pos":[6830,6916],"yaml":true},{"content":"For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1)</ept>.","source":"For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1)."}],"pos":[6927,7053],"yaml":true,"extradata":"MT"},{"content":"The beginning position of the range of elements to insert.","nodes":[{"pos":[0,58],"content":"The beginning position of the range of elements to insert.","nodes":[{"content":"The beginning position of the range of elements to insert.","pos":[0,58]}]}],"pos":[7338,7397],"yaml":true},{"content":"The first position beyond the end of the range of elements to insert.","nodes":[{"pos":[0,69],"content":"The first position beyond the end of the range of elements to insert.","nodes":[{"content":"The first position beyond the end of the range of elements to insert.","pos":[0,69]}]}],"pos":[7494,7564],"yaml":true},{"content":"Replaces all elements in the container with the specified number of elements that have given values.","nodes":[{"pos":[0,100],"content":"Replaces all elements in the container with the specified number of elements that have given values.","nodes":[{"content":"Replaces all elements in the container with the specified number of elements that have given values.","pos":[0,100]}]}],"pos":[8588,8689],"yaml":true},{"content":"For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1)</ept>.","source":"For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1)."}],"pos":[8700,8826],"yaml":true,"extradata":"MT"},{"content":"The number of elements to insert into the container.","nodes":[{"pos":[0,52],"content":"The number of elements to insert into the container.","nodes":[{"content":"The number of elements to insert into the container.","pos":[0,52]}]}],"pos":[8972,9025],"yaml":true},{"content":"The value of the element to insert.","nodes":[{"pos":[0,35],"content":"The value of the element to insert.","nodes":[{"content":"The value of the element to insert.","pos":[0,35]}]}],"pos":[9078,9114],"yaml":true},{"content":"Accesses an element at a specified position in the container.","nodes":[{"pos":[0,61],"content":"Accesses an element at a specified position in the container.","nodes":[{"content":"Accesses an element at a specified position in the container.","pos":[0,61]}]}],"pos":[10081,10143],"yaml":true},{"content":"For more information, see [vector::at (STL/CLR)](http://msdn.microsoft.com/library/9af9f829-48b8-4906-ba4a-b43454acb2c7).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::at (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/9af9f829-48b8-4906-ba4a-b43454acb2c7)</ept>.","source":"For more information, see [vector::at (STL/CLR)](http://msdn.microsoft.com/library/9af9f829-48b8-4906-ba4a-b43454acb2c7)."}],"pos":[10154,10276],"yaml":true,"extradata":"MT"},{"content":"The position of the element to access.","nodes":[{"pos":[0,38],"content":"The position of the element to access.","nodes":[{"content":"The position of the element to access.","pos":[0,38]}]}],"pos":[10403,10442],"yaml":true},{"content":"The element of the controlled sequence at position <code>_Pos</code>.","nodes":[{"pos":[0,69],"content":"The element of the controlled sequence at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">_Pos</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The element of the controlled sequence at position <code>_Pos</code>."}],"pos":[10493,10563],"yaml":true},{"content":"Accesses the last element of the container.","nodes":[{"pos":[0,43],"content":"Accesses the last element of the container.","nodes":[{"content":"Accesses the last element of the container.","pos":[0,43]}]}],"pos":[11481,11525],"yaml":true},{"content":"For more information, see [vector::back (STL/CLR)](http://msdn.microsoft.com/library/5edb3fcc-74c5-4f04-b8dd-edab49ba45a0).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/5edb3fcc-74c5-4f04-b8dd-edab49ba45a0)</ept>.","source":"For more information, see [vector::back (STL/CLR)](http://msdn.microsoft.com/library/5edb3fcc-74c5-4f04-b8dd-edab49ba45a0)."}],"pos":[11536,11660],"yaml":true,"extradata":"MT"},{"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,69],"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The last element of the controlled sequence, which must be non-empty.","pos":[0,69]}]}],"pos":[11776,11846],"yaml":true},{"content":"Accesses the last element of the container.","nodes":[{"pos":[0,43],"content":"Accesses the last element of the container.","nodes":[{"content":"Accesses the last element of the container.","pos":[0,43]}]}],"pos":[12792,12836],"yaml":true},{"content":"For more information, see [vector::back_item (STL/CLR)](http://msdn.microsoft.com/library/9658ffa8-7bde-4242-9ed9-ca42be0d1433).","nodes":[{"pos":[0,128],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::back_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/9658ffa8-7bde-4242-9ed9-ca42be0d1433)</ept>.","source":"For more information, see [vector::back_item (STL/CLR)](http://msdn.microsoft.com/library/9658ffa8-7bde-4242-9ed9-ca42be0d1433)."}],"pos":[12847,12976],"yaml":true,"extradata":"MT"},{"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,69],"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The last element of the controlled sequence, which must be non-empty.","pos":[0,69]}]}],"pos":[13087,13157],"yaml":true},{"content":"Designates the beginning of the controlled sequence.","nodes":[{"pos":[0,52],"content":"Designates the beginning of the controlled sequence.","nodes":[{"content":"Designates the beginning of the controlled sequence.","pos":[0,52]}]}],"pos":[14406,14459],"yaml":true},{"content":"For more information, see [vector::begin (STL/CLR)](http://msdn.microsoft.com/library/f9cdf854-0770-4334-a3dd-7f4d728a42bd).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::begin (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/f9cdf854-0770-4334-a3dd-7f4d728a42bd)</ept>.","source":"For more information, see [vector::begin (STL/CLR)](http://msdn.microsoft.com/library/f9cdf854-0770-4334-a3dd-7f4d728a42bd)."}],"pos":[14470,14595],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[15002,15015],"yaml":true},{"content":"Reports the size of allocated storage for the container.","nodes":[{"pos":[0,56],"content":"Reports the size of allocated storage for the container.","nodes":[{"content":"Reports the size of allocated storage for the container.","pos":[0,56]}]}],"pos":[15960,16017],"yaml":true},{"content":"For more information, see [vector::capacity (STL/CLR)](http://msdn.microsoft.com/library/f82d8da9-8b4d-4288-8d18-8e9ca5911d87).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::capacity (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/f82d8da9-8b4d-4288-8d18-8e9ca5911d87)</ept>.","source":"For more information, see [vector::capacity (STL/CLR)](http://msdn.microsoft.com/library/f82d8da9-8b4d-4288-8d18-8e9ca5911d87)."}],"pos":[16028,16156],"yaml":true,"extradata":"MT"},{"content":"The storage that is currently allocated to hold the controlled sequence, a value at least as large as <xref href=\"Microsoft.VisualC.StlClr.IVector`1.size\"></xref>.","nodes":[{"pos":[0,163],"content":"The storage that is currently allocated to hold the controlled sequence, a value at least as large as <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.IVector`1.size\"&gt;&lt;/xref&gt;</ph>.","source":"The storage that is currently allocated to hold the controlled sequence, a value at least as large as <xref href=\"Microsoft.VisualC.StlClr.IVector`1.size\"></xref>."}],"pos":[16278,16442],"yaml":true},{"content":"Removes all elements from the container.","nodes":[{"pos":[0,40],"content":"Removes all elements from the container.","nodes":[{"content":"Removes all elements from the container.","pos":[0,40]}]}],"pos":[17372,17413],"yaml":true},{"content":"For more information, see [vector::clear (STL/CLR)](http://msdn.microsoft.com/library/4ed20ec8-3089-4c36-b68f-1b51c639041f).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::clear (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/4ed20ec8-3089-4c36-b68f-1b51c639041f)</ept>.","source":"For more information, see [vector::clear (STL/CLR)](http://msdn.microsoft.com/library/4ed20ec8-3089-4c36-b68f-1b51c639041f)."}],"pos":[17424,17549],"yaml":true,"extradata":"MT"},{"content":"Tests whether the container has no elements.","nodes":[{"pos":[0,44],"content":"Tests whether the container has no elements.","nodes":[{"content":"Tests whether the container has no elements.","pos":[0,44]}]}],"pos":[18540,18585],"yaml":true},{"content":"For more information, see [vector::empty (STL/CLR)](http://msdn.microsoft.com/library/c09fc4a3-bd79-4458-9a36-1d9c82ac36b1).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::empty (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c09fc4a3-bd79-4458-9a36-1d9c82ac36b1)</ept>.","source":"For more information, see [vector::empty (STL/CLR)](http://msdn.microsoft.com/library/c09fc4a3-bd79-4458-9a36-1d9c82ac36b1)."}],"pos":[18596,18721],"yaml":true,"extradata":"MT"},{"content":"`true` if the container has no elements; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the container has no elements; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the container has no elements; otherwise, `false`."}],"pos":[18843,18906],"yaml":true},{"content":"Designates the end of the controlled sequence.","nodes":[{"pos":[0,46],"content":"Designates the end of the controlled sequence.","nodes":[{"content":"Designates the end of the controlled sequence.","pos":[0,46]}]}],"pos":[20139,20186],"yaml":true},{"content":"For more information, see [vector::end (STL/CLR)](http://msdn.microsoft.com/library/21fcaf1b-7f14-4dc4-a312-fa30e631ea0d).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::end (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/21fcaf1b-7f14-4dc4-a312-fa30e631ea0d)</ept>.","source":"For more information, see [vector::end (STL/CLR)](http://msdn.microsoft.com/library/21fcaf1b-7f14-4dc4-a312-fa30e631ea0d)."}],"pos":[20197,20320],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[20725,20738],"yaml":true},{"content":"Accesses the first element of the container.","nodes":[{"pos":[0,44],"content":"Accesses the first element of the container.","nodes":[{"content":"Accesses the first element of the container.","pos":[0,44]}]}],"pos":[26432,26477],"yaml":true},{"content":"For more information, see [vector::front (STL/CLR)](http://msdn.microsoft.com/library/37a36157-8220-4d5b-85b5-c6a63211a322).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/37a36157-8220-4d5b-85b5-c6a63211a322)</ept>.","source":"For more information, see [vector::front (STL/CLR)](http://msdn.microsoft.com/library/37a36157-8220-4d5b-85b5-c6a63211a322)."}],"pos":[26488,26613],"yaml":true,"extradata":"MT"},{"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,70],"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The first element of the controlled sequence, which must be non-empty.","pos":[0,70]}]}],"pos":[26730,26801],"yaml":true},{"content":"Accesses the first element of the container.","nodes":[{"pos":[0,44],"content":"Accesses the first element of the container.","nodes":[{"content":"Accesses the first element of the container.","pos":[0,44]}]}],"pos":[27754,27799],"yaml":true},{"content":"For more information, see [vector::front_item (STL/CLR)](http://msdn.microsoft.com/library/7db87868-3e54-4c67-a06b-01bcfff3128d).","nodes":[{"pos":[0,129],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::front_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/7db87868-3e54-4c67-a06b-01bcfff3128d)</ept>.","source":"For more information, see [vector::front_item (STL/CLR)](http://msdn.microsoft.com/library/7db87868-3e54-4c67-a06b-01bcfff3128d)."}],"pos":[27810,27940],"yaml":true,"extradata":"MT"},{"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,70],"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The first element of the controlled sequence, which must be non-empty.","pos":[0,70]}]}],"pos":[28052,28123],"yaml":true},{"content":"Accesses an element at a specified position in the container.","nodes":[{"pos":[0,61],"content":"Accesses an element at a specified position in the container.","nodes":[{"content":"Accesses an element at a specified position in the container.","pos":[0,61]}]}],"pos":[36987,37049],"yaml":true},{"content":"For more information, see [vector::operator(STL/CLR)](http://msdn.microsoft.com/library/379a7029-460d-4de8-918b-c79e3e13b9d4).","nodes":[{"pos":[0,126],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::operator(STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/379a7029-460d-4de8-918b-c79e3e13b9d4)</ept>.","source":"For more information, see [vector::operator(STL/CLR)](http://msdn.microsoft.com/library/379a7029-460d-4de8-918b-c79e3e13b9d4)."}],"pos":[37060,37187],"yaml":true,"extradata":"MT"},{"content":"The position of the element to access.","nodes":[{"pos":[0,38],"content":"The position of the element to access.","nodes":[{"content":"The position of the element to access.","pos":[0,38]}]}],"pos":[37328,37367],"yaml":true},{"content":"The element at position <code>_Pos</code>.","nodes":[{"pos":[0,42],"content":"The element at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">_Pos</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The element at position <code>_Pos</code>."}],"pos":[37417,37460],"yaml":true},{"content":"Removes the last element from the container.","nodes":[{"pos":[0,44],"content":"Removes the last element from the container.","nodes":[{"content":"Removes the last element from the container.","pos":[0,44]}]}],"pos":[38404,38449],"yaml":true},{"content":"For more information, see [vector::pop_back (STL/CLR)](http://msdn.microsoft.com/library/7e9fb72c-e733-4434-a71c-e4389629a821).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::pop_back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/7e9fb72c-e733-4434-a71c-e4389629a821)</ept>.","source":"For more information, see [vector::pop_back (STL/CLR)](http://msdn.microsoft.com/library/7e9fb72c-e733-4434-a71c-e4389629a821)."}],"pos":[38460,38588],"yaml":true,"extradata":"MT"},{"content":"Adds a new element to the end of the container.","nodes":[{"pos":[0,47],"content":"Adds a new element to the end of the container.","nodes":[{"content":"Adds a new element to the end of the container.","pos":[0,47]}]}],"pos":[39639,39687],"yaml":true},{"content":"For more information, see [vector::push_back (STL/CLR)](http://msdn.microsoft.com/library/4a4c302b-e29f-4b68-b759-2f831814d896).","nodes":[{"pos":[0,128],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::push_back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/4a4c302b-e29f-4b68-b759-2f831814d896)</ept>.","source":"For more information, see [vector::push_back (STL/CLR)](http://msdn.microsoft.com/library/4a4c302b-e29f-4b68-b759-2f831814d896)."}],"pos":[39698,39827],"yaml":true,"extradata":"MT"},{"content":"The value of the element to insert into the container.","nodes":[{"pos":[0,54],"content":"The value of the element to insert into the container.","nodes":[{"content":"The value of the element to insert into the container.","pos":[0,54]}]}],"pos":[39956,40011],"yaml":true},{"content":"Designates the beginning of the reversed controlled sequence.","nodes":[{"pos":[0,61],"content":"Designates the beginning of the reversed controlled sequence.","nodes":[{"content":"Designates the beginning of the reversed controlled sequence.","pos":[0,61]}]}],"pos":[41254,41316],"yaml":true},{"content":"For more information, see [vector::rbegin (STL/CLR)](http://msdn.microsoft.com/library/fad410b9-fe79-4820-9be5-6b7e0219a1af).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::rbegin (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/fad410b9-fe79-4820-9be5-6b7e0219a1af)</ept>.","source":"For more information, see [vector::rbegin (STL/CLR)](http://msdn.microsoft.com/library/fad410b9-fe79-4820-9be5-6b7e0219a1af)."}],"pos":[41327,41453],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[41857,41870],"yaml":true},{"content":"Designates the end of the reversed controlled sequence.","nodes":[{"pos":[0,55],"content":"Designates the end of the reversed controlled sequence.","nodes":[{"content":"Designates the end of the reversed controlled sequence.","pos":[0,55]}]}],"pos":[43098,43154],"yaml":true},{"content":"For more information, see [vector::rend (STL/CLR)](http://msdn.microsoft.com/library/8dc1927f-9214-468d-877e-eda20c03e90d).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::rend (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/8dc1927f-9214-468d-877e-eda20c03e90d)</ept>.","source":"For more information, see [vector::rend (STL/CLR)](http://msdn.microsoft.com/library/8dc1927f-9214-468d-877e-eda20c03e90d)."}],"pos":[43165,43289],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[43691,43704],"yaml":true},{"content":"Reserves storage to ensure the minimum growth capacity for the container.","nodes":[{"pos":[0,73],"content":"Reserves storage to ensure the minimum growth capacity for the container.","nodes":[{"content":"Reserves storage to ensure the minimum growth capacity for the container.","pos":[0,73]}]}],"pos":[44699,44773],"yaml":true},{"content":"For more information, see [vector::reserve (STL/CLR)](http://msdn.microsoft.com/library/d1d5ede9-9628-4b55-95ec-f087a57205f2).","nodes":[{"pos":[0,126],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::reserve (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/d1d5ede9-9628-4b55-95ec-f087a57205f2)</ept>.","source":"For more information, see [vector::reserve (STL/CLR)](http://msdn.microsoft.com/library/d1d5ede9-9628-4b55-95ec-f087a57205f2)."}],"pos":[44784,44911],"yaml":true,"extradata":"MT"},{"content":"The new minimum capacity of the container.","nodes":[{"pos":[0,42],"content":"The new minimum capacity of the container.","nodes":[{"content":"The new minimum capacity of the container.","pos":[0,42]}]}],"pos":[45051,45094],"yaml":true},{"content":"Changes the number of elements in the container to the specified size.","nodes":[{"pos":[0,70],"content":"Changes the number of elements in the container to the specified size.","nodes":[{"content":"Changes the number of elements in the container to the specified size.","pos":[0,70]}]}],"pos":[46086,46157],"yaml":true},{"content":"For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::resize (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f)</ept>.","source":"For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f)."}],"pos":[46168,46294],"yaml":true,"extradata":"MT"},{"content":"The new size of the controlled sequence.","nodes":[{"pos":[0,40],"content":"The new size of the controlled sequence.","nodes":[{"content":"The new size of the controlled sequence.","pos":[0,40]}]}],"pos":[46431,46472],"yaml":true},{"content":"Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the method appends elements that have value <code>_Val</code>.","nodes":[{"pos":[0,178],"content":"Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the method appends elements that have value <code>_Val</code>.","nodes":[{"content":"Changes the number of elements in the container to the specified size.","pos":[0,70]},{"content":"If the new size is larger than the old size, the method appends elements that have value <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">_Val</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[71,178],"source":" If the new size is larger than the old size, the method appends elements that have value <code>_Val</code>."}]}],"pos":[47496,47675],"yaml":true},{"content":"For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::resize (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f)</ept>.","source":"For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f)."}],"pos":[47686,47812],"yaml":true,"extradata":"MT"},{"content":"The new size of the controlled sequence.","nodes":[{"pos":[0,40],"content":"The new size of the controlled sequence.","nodes":[{"content":"The new size of the controlled sequence.","pos":[0,40]}]}],"pos":[47962,48003],"yaml":true},{"content":"The value of the elements to insert.","nodes":[{"pos":[0,36],"content":"The value of the elements to insert.","nodes":[{"content":"The value of the elements to insert.","pos":[0,36]}]}],"pos":[48056,48093],"yaml":true},{"content":"Counts the number of elements in the container.","nodes":[{"pos":[0,47],"content":"Counts the number of elements in the container.","nodes":[{"content":"Counts the number of elements in the container.","pos":[0,47]}]}],"pos":[49015,49063],"yaml":true},{"content":"For more information, see [vector::size (STL/CLR)](http://msdn.microsoft.com/library/3d2a156e-5871-4441-9307-21a20cd1430f).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::size (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/3d2a156e-5871-4441-9307-21a20cd1430f)</ept>.","source":"For more information, see [vector::size (STL/CLR)](http://msdn.microsoft.com/library/3d2a156e-5871-4441-9307-21a20cd1430f)."}],"pos":[49074,49198],"yaml":true,"extradata":"MT"},{"content":"The length of the controlled sequence.","nodes":[{"pos":[0,38],"content":"The length of the controlled sequence.","nodes":[{"content":"The length of the controlled sequence.","pos":[0,38]}]}],"pos":[49316,49355],"yaml":true},{"content":"Swaps the contents of two containers.","nodes":[{"pos":[0,37],"content":"Swaps the contents of two containers.","nodes":[{"content":"Swaps the contents of two containers.","pos":[0,37]}]}],"pos":[50434,50472],"yaml":true},{"content":"For more information, see [vector::swap (STL/CLR)](http://msdn.microsoft.com/library/9ad083fe-f79b-4b97-8013-581fd00c059a).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>vector::swap (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/9ad083fe-f79b-4b97-8013-581fd00c059a)</ept>.","source":"For more information, see [vector::swap (STL/CLR)](http://msdn.microsoft.com/library/9ad083fe-f79b-4b97-8013-581fd00c059a)."}],"pos":[50483,50607],"yaml":true,"extradata":"MT"},{"content":"The container with which to swap contents.","nodes":[{"pos":[0,42],"content":"The container with which to swap contents.","nodes":[{"content":"The container with which to swap contents.","pos":[0,42]}]}],"pos":[50791,50834],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IVector`1\n  commentId: T:Microsoft.VisualC.StlClr.IVector`1\n  id: IVector`1\n  children:\n  - Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.back\n  - Microsoft.VisualC.StlClr.IVector`1.back_item\n  - Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IVector`1.capacity\n  - Microsoft.VisualC.StlClr.IVector`1.clear\n  - Microsoft.VisualC.StlClr.IVector`1.empty\n  - Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IVector`1.front\n  - Microsoft.VisualC.StlClr.IVector`1.front_item\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.pop_back\n  - Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  - Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.size\n  - Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})\n  langs:\n  - csharp\n  name: IVector<TValue>\n  nameWithType: IVector<TValue>\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Defines the interface for an STL/CLR [vector](http://msdn.microsoft.com/library/f90060d5-097a-4e9d-9a26-a634b5b9c6c2) object.\n  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'\n  syntax:\n    content: 'public interface IVector<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>, System.Collections.ICollection'\n    typeParameters:\n    - id: TValue\n      description: The type of an element in the controlled sequence.\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{TValue}\n  - System.Collections.ICollection\n  - System.ICloneable\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  id: assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: assign(IEnumerable)\n  nameWithType: IVector<TValue>.assign(IEnumerable)\n  fullName: IVector<TValue>.assign(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements in the container with the elements in the specified enumeration.\n  remarks: For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).\n  syntax:\n    content: public void assign (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: The enumeration whose elements are to be inserted into the container.\n  overload: Microsoft.VisualC.StlClr.IVector`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IVector<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements in the container with the elements between the given iterators.\n  remarks: For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The beginning position of the range of elements to insert.\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The first position beyond the end of the range of elements to insert.\n  overload: Microsoft.VisualC.StlClr.IVector`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  id: assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: assign(Int32, TValue)\n  nameWithType: IVector<TValue>.assign(Int32, TValue)\n  fullName: IVector<TValue>.assign(Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements in the container with the specified number of elements that have given values.\n  remarks: For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).\n  syntax:\n    content: public void assign (int _Count, TValue _Val);\n    parameters:\n    - id: _Count\n      type: System.Int32\n      description: The number of elements to insert into the container.\n    - id: _Val\n      type: TValue\n      description: The value of the element to insert.\n  overload: Microsoft.VisualC.StlClr.IVector`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  id: at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: at(Int32)\n  nameWithType: IVector<TValue>.at(Int32)\n  fullName: IVector<TValue>.at(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses an element at a specified position in the container.\n  remarks: For more information, see [vector::at (STL/CLR)](http://msdn.microsoft.com/library/9af9f829-48b8-4906-ba4a-b43454acb2c7).\n  syntax:\n    content: public TValue at (int _Pos);\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: The position of the element to access.\n    return:\n      type: TValue@\n      description: The element of the controlled sequence at position <code>_Pos</code>.\n  overload: Microsoft.VisualC.StlClr.IVector`1.at*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.back\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.back\n  id: back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: back()\n  nameWithType: IVector<TValue>.back()\n  fullName: IVector<TValue>.back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the last element of the container.\n  remarks: For more information, see [vector::back (STL/CLR)](http://msdn.microsoft.com/library/5edb3fcc-74c5-4f04-b8dd-edab49ba45a0).\n  syntax:\n    content: public TValue back ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The last element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IVector`1.back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.back_item\n  commentId: P:Microsoft.VisualC.StlClr.IVector`1.back_item\n  id: back_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: back_item\n  nameWithType: IVector<TValue>.back_item\n  fullName: IVector<TValue>.back_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the last element of the container.\n  remarks: For more information, see [vector::back_item (STL/CLR)](http://msdn.microsoft.com/library/9658ffa8-7bde-4242-9ed9-ca42be0d1433).\n  syntax:\n    content: public TValue back_item { get; set; }\n    return:\n      type: TValue\n      description: The last element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IVector`1.back_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the beginning of the controlled sequence.\n  remarks: For more information, see [vector::begin (STL/CLR)](http://msdn.microsoft.com/library/f9cdf854-0770-4334-a3dd-7f4d728a42bd).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IVector`1.begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.capacity\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.capacity\n  id: capacity\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: capacity()\n  nameWithType: IVector<TValue>.capacity()\n  fullName: IVector<TValue>.capacity()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Reports the size of allocated storage for the container.\n  remarks: For more information, see [vector::capacity (STL/CLR)](http://msdn.microsoft.com/library/f82d8da9-8b4d-4288-8d18-8e9ca5911d87).\n  syntax:\n    content: public int capacity ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The storage that is currently allocated to hold the controlled sequence, a value at least as large as <xref href=\"Microsoft.VisualC.StlClr.IVector`1.size\"></xref>.\n  overload: Microsoft.VisualC.StlClr.IVector`1.capacity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.clear\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IVector<TValue>.clear()\n  fullName: IVector<TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes all elements from the container.\n  remarks: For more information, see [vector::clear (STL/CLR)](http://msdn.microsoft.com/library/4ed20ec8-3089-4c36-b68f-1b51c639041f).\n  syntax:\n    content: public void clear ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IVector`1.clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.empty\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IVector<TValue>.empty()\n  fullName: IVector<TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Tests whether the container has no elements.\n  remarks: For more information, see [vector::empty (STL/CLR)](http://msdn.microsoft.com/library/c09fc4a3-bd79-4458-9a36-1d9c82ac36b1).\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the container has no elements; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.IVector`1.empty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the end of the controlled sequence.\n  remarks: For more information, see [vector::end (STL/CLR)](http://msdn.microsoft.com/library/21fcaf1b-7f14-4dc4-a312-fa30e631ea0d).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IVector`1.end*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  fullName: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IVector`1.erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  fullName: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IVector`1.erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.front\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.front\n  id: front\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: front()\n  nameWithType: IVector<TValue>.front()\n  fullName: IVector<TValue>.front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the first element of the container.\n  remarks: For more information, see [vector::front (STL/CLR)](http://msdn.microsoft.com/library/37a36157-8220-4d5b-85b5-c6a63211a322).\n  syntax:\n    content: public TValue front ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The first element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IVector`1.front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.front_item\n  commentId: P:Microsoft.VisualC.StlClr.IVector`1.front_item\n  id: front_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: front_item\n  nameWithType: IVector<TValue>.front_item\n  fullName: IVector<TValue>.front_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the first element of the container.\n  remarks: For more information, see [vector::front_item (STL/CLR)](http://msdn.microsoft.com/library/7db87868-3e54-4c67-a06b-01bcfff3128d).\n  syntax:\n    content: public TValue front_item { get; set; }\n    return:\n      type: TValue\n      description: The first element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IVector`1.front_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator, IEnumerable)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where_iter, System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Where_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: ''\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator, Int32, TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, int _Count, TValue _Val);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Count\n      type: System.Int32\n      description: ''\n    - id: _Val\n      type: TValue\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Val\n      type: TValue\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  commentId: P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IVector<TValue>.Item(Int32)\n  fullName: IVector<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses an element at a specified position in the container.\n  remarks: For more information, see [vector::operator(STL/CLR)](http://msdn.microsoft.com/library/379a7029-460d-4de8-918b-c79e3e13b9d4).\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: The position of the element to access.\n    return:\n      type: TValue\n      description: The element at position <code>_Pos</code>.\n  overload: Microsoft.VisualC.StlClr.IVector`1.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.pop_back\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.pop_back\n  id: pop_back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: pop_back()\n  nameWithType: IVector<TValue>.pop_back()\n  fullName: IVector<TValue>.pop_back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes the last element from the container.\n  remarks: For more information, see [vector::pop_back (STL/CLR)](http://msdn.microsoft.com/library/7e9fb72c-e733-4434-a71c-e4389629a821).\n  syntax:\n    content: public void pop_back ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IVector`1.pop_back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  id: push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: push_back(TValue)\n  nameWithType: IVector<TValue>.push_back(TValue)\n  fullName: IVector<TValue>.push_back(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Adds a new element to the end of the container.\n  remarks: For more information, see [vector::push_back (STL/CLR)](http://msdn.microsoft.com/library/4a4c302b-e29f-4b68-b759-2f831814d896).\n  syntax:\n    content: public void push_back (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: The value of the element to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IVector`1.push_back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the beginning of the reversed controlled sequence.\n  remarks: For more information, see [vector::rbegin (STL/CLR)](http://msdn.microsoft.com/library/fad410b9-fe79-4820-9be5-6b7e0219a1af).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IVector`1.rbegin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the end of the reversed controlled sequence.\n  remarks: For more information, see [vector::rend (STL/CLR)](http://msdn.microsoft.com/library/8dc1927f-9214-468d-877e-eda20c03e90d).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IVector`1.rend*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  id: reserve(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: reserve(Int32)\n  nameWithType: IVector<TValue>.reserve(Int32)\n  fullName: IVector<TValue>.reserve(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Reserves storage to ensure the minimum growth capacity for the container.\n  remarks: For more information, see [vector::reserve (STL/CLR)](http://msdn.microsoft.com/library/d1d5ede9-9628-4b55-95ec-f087a57205f2).\n  syntax:\n    content: public void reserve (int _Capacity);\n    parameters:\n    - id: _Capacity\n      type: System.Int32\n      description: The new minimum capacity of the container.\n  overload: Microsoft.VisualC.StlClr.IVector`1.reserve*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  id: resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: resize(Int32)\n  nameWithType: IVector<TValue>.resize(Int32)\n  fullName: IVector<TValue>.resize(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Changes the number of elements in the container to the specified size.\n  remarks: For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).\n  syntax:\n    content: public void resize (int _Newsize);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: The new size of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IVector`1.resize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  id: resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: resize(Int32, TValue)\n  nameWithType: IVector<TValue>.resize(Int32, TValue)\n  fullName: IVector<TValue>.resize(Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the method appends elements that have value <code>_Val</code>.\n  remarks: For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).\n  syntax:\n    content: public void resize (int _Newsize, TValue _Val);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: The new size of the controlled sequence.\n    - id: _Val\n      type: TValue\n      description: The value of the elements to insert.\n  overload: Microsoft.VisualC.StlClr.IVector`1.resize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.size\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IVector<TValue>.size()\n  fullName: IVector<TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Counts the number of elements in the container.\n  remarks: For more information, see [vector::size (STL/CLR)](http://msdn.microsoft.com/library/3d2a156e-5871-4441-9307-21a20cd1430f).\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The length of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IVector`1.size*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})\n  id: swap(Microsoft.VisualC.StlClr.IVector{`0})\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: swap(IVector<TValue>)\n  nameWithType: IVector<TValue>.swap(IVector<TValue>)\n  fullName: IVector<TValue>.swap(IVector<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Swaps the contents of two containers.\n  remarks: For more information, see [vector::swap (STL/CLR)](http://msdn.microsoft.com/library/9ad083fe-f79b-4b97-8013-581fd00c059a).\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IVector<TValue> A_0);\n    parameters:\n    - id: A_0\n      type: Microsoft.VisualC.StlClr.IVector`1\n      description: The container with which to swap contents.\n  overload: Microsoft.VisualC.StlClr.IVector`1.swap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign(IEnumerable)\n  nameWithType: IVector<TValue>.assign(IEnumerable)\n  fullName: IVector<TValue>.assign(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IVector<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign(Int32, TValue)\n  nameWithType: IVector<TValue>.assign(Int32, TValue)\n  fullName: IVector<TValue>.assign(Int32, TValue)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: at(Int32)\n  nameWithType: IVector<TValue>.at(Int32)\n  fullName: IVector<TValue>.at(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back()\n  nameWithType: IVector<TValue>.back()\n  fullName: IVector<TValue>.back()\n- uid: Microsoft.VisualC.StlClr.IVector`1.back_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back_item\n  nameWithType: IVector<TValue>.back_item\n  fullName: IVector<TValue>.back_item\n- uid: Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.capacity\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: capacity()\n  nameWithType: IVector<TValue>.capacity()\n  fullName: IVector<TValue>.capacity()\n- uid: Microsoft.VisualC.StlClr.IVector`1.clear\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: clear()\n  nameWithType: IVector<TValue>.clear()\n  fullName: IVector<TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IVector`1.empty\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: empty()\n  nameWithType: IVector<TValue>.empty()\n  fullName: IVector<TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  fullName: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  fullName: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.IVector`1.front\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front()\n  nameWithType: IVector<TValue>.front()\n  fullName: IVector<TValue>.front()\n- uid: Microsoft.VisualC.StlClr.IVector`1.front_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front_item\n  nameWithType: IVector<TValue>.front_item\n  fullName: IVector<TValue>.front_item\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator, IEnumerable)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator, Int32, TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  fullName: IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IVector<TValue>.Item(Int32)\n  fullName: IVector<TValue>.Item(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.pop_back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: pop_back()\n  nameWithType: IVector<TValue>.pop_back()\n  fullName: IVector<TValue>.pop_back()\n- uid: Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: push_back(TValue)\n  nameWithType: IVector<TValue>.push_back(TValue)\n  fullName: IVector<TValue>.push_back(TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: reserve(Int32)\n  nameWithType: IVector<TValue>.reserve(Int32)\n  fullName: IVector<TValue>.reserve(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: resize(Int32)\n  nameWithType: IVector<TValue>.resize(Int32)\n  fullName: IVector<TValue>.resize(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: resize(Int32, TValue)\n  nameWithType: IVector<TValue>.resize(Int32, TValue)\n  fullName: IVector<TValue>.resize(Int32, TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.size\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: size()\n  nameWithType: IVector<TValue>.size()\n  fullName: IVector<TValue>.size()\n- uid: Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: swap(IVector<TValue>)\n  nameWithType: IVector<TValue>.swap(IVector<TValue>)\n  fullName: IVector<TValue>.swap(IVector<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IVector<TValue>\n  nameWithType: IVector<TValue>\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign\n  nameWithType: IVector<TValue>.assign\n  fullName: IVector<TValue>.assign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: erase\n  nameWithType: IVector<TValue>.erase\n  fullName: IVector<TValue>.erase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert\n  nameWithType: IVector<TValue>.insert\n  fullName: IVector<TValue>.insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: resize\n  nameWithType: IVector<TValue>.resize\n  fullName: IVector<TValue>.resize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.at*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: at\n  nameWithType: IVector<TValue>.at\n  fullName: IVector<TValue>.at\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.back*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back\n  nameWithType: IVector<TValue>.back\n  fullName: IVector<TValue>.back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.back_item*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back_item\n  nameWithType: IVector<TValue>.back_item\n  fullName: IVector<TValue>.back_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.begin*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: begin\n  nameWithType: IVector<TValue>.begin\n  fullName: IVector<TValue>.begin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.capacity*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: capacity\n  nameWithType: IVector<TValue>.capacity\n  fullName: IVector<TValue>.capacity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.clear*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: clear\n  nameWithType: IVector<TValue>.clear\n  fullName: IVector<TValue>.clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.empty*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: empty\n  nameWithType: IVector<TValue>.empty\n  fullName: IVector<TValue>.empty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.end*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: end\n  nameWithType: IVector<TValue>.end\n  fullName: IVector<TValue>.end\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.front*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front\n  nameWithType: IVector<TValue>.front\n  fullName: IVector<TValue>.front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.front_item*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front_item\n  nameWithType: IVector<TValue>.front_item\n  fullName: IVector<TValue>.front_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.Item*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: Item\n  nameWithType: IVector<TValue>.Item\n  fullName: IVector<TValue>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.pop_back*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: pop_back\n  nameWithType: IVector<TValue>.pop_back\n  fullName: IVector<TValue>.pop_back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.push_back*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: push_back\n  nameWithType: IVector<TValue>.push_back\n  fullName: IVector<TValue>.push_back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.rbegin*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rbegin\n  nameWithType: IVector<TValue>.rbegin\n  fullName: IVector<TValue>.rbegin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.rend*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rend\n  nameWithType: IVector<TValue>.rend\n  fullName: IVector<TValue>.rend\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.reserve*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: reserve\n  nameWithType: IVector<TValue>.reserve\n  fullName: IVector<TValue>.reserve\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.size*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: size\n  nameWithType: IVector<TValue>.size\n  fullName: IVector<TValue>.size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: Microsoft.VisualC.StlClr.IVector`1.swap*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: swap\n  nameWithType: IVector<TValue>.swap\n  fullName: IVector<TValue>.swap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IVector`1.xml\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessContainer<TValue>\n  nameWithType: IRandomAccessContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}