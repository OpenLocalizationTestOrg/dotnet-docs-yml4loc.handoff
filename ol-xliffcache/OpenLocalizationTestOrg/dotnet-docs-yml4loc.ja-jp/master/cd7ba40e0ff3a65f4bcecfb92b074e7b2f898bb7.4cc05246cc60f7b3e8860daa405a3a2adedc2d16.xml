{"nodes":[{"content":"Provides contextual information that the provider can use when persisting settings.","nodes":[{"pos":[0,83],"content":"Provides contextual information that the provider can use when persisting settings.","nodes":[{"content":"Provides contextual information that the provider can use when persisting settings.","pos":[0,83]}]}],"pos":[468,552],"yaml":true},{"content":"The <xref:System.Configuration.SettingsContext> class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from <xref:System.Configuration.SettingsContext> class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.  \n  \n The primary purpose of the <xref:System.Configuration.SettingsContext> class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The <xref:System.Configuration.SettingsContext> class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a <xref:System.Configuration.SettingsContext> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.  \n  \n For example, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to identify authenticated versus anonymous Profile data.","nodes":[{"pos":[0,456],"content":"The <xref:System.Configuration.SettingsContext> class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from <xref:System.Configuration.SettingsContext> class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.","nodes":[{"content":"The <xref:System.Configuration.SettingsContext> class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from <xref:System.Configuration.SettingsContext> class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.","pos":[0,456],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class is the base class used by applications to provide contextual information to the settings provider.","pos":[0,152],"source":"The <xref:System.Configuration.SettingsContext> class is the base class used by applications to provide contextual information to the settings provider."},{"content":"Although the class is not abstract, an application can choose to create a specialized class that inherits from <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class and provides additional information to specific types of providers.","pos":[153,381],"source":" Although the class is not abstract, an application can choose to create a specialized class that inherits from <xref:System.Configuration.SettingsContext> class and provides additional information to specific types of providers."},{"content":"The provider can then examine contextual settings when writing properties.","pos":[382,456]}]}]},{"pos":[463,1103],"content":"The primary purpose of the <xref:System.Configuration.SettingsContext> class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The <xref:System.Configuration.SettingsContext> class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a <xref:System.Configuration.SettingsContext> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.","nodes":[{"content":"The primary purpose of the <xref:System.Configuration.SettingsContext> class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The <xref:System.Configuration.SettingsContext> class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a <xref:System.Configuration.SettingsContext> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.","pos":[0,640],"nodes":[{"content":"The primary purpose of the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class is to provide features that use the <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsBase&gt;</ph> class and related infrastructure.","pos":[0,187],"source":"The primary purpose of the <xref:System.Configuration.SettingsContext> class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class provides additional feature-specific contextual information about the property data being stored by the <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance.","pos":[188,396],"source":" The <xref:System.Configuration.SettingsContext> class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance."},{"content":"Therefore, it is very simple to store additional information in a <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.","pos":[397,640],"source":" Therefore, it is very simple to store additional information in a <xref:System.Configuration.SettingsContext> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information."}]}]},{"pos":[1110,1521],"content":"For example, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to identify authenticated versus anonymous Profile data.","nodes":[{"content":"For example, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to identify authenticated versus anonymous Profile data.","pos":[0,411],"nodes":[{"content":"For example, ASP.NET uses the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class to pass along the username associated with the data managed by a <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance, as well as a property indicating whether the user is considered authenticated.","pos":[0,274],"source":"For example, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated."},{"content":"In this way, ASP.NET uses the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class to identify authenticated versus anonymous Profile data.","pos":[275,411],"source":" In this way, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to identify authenticated versus anonymous Profile data."}]}]}],"pos":[563,2091],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsContext\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsContext\"></xref> class."}],"pos":[5350,5449],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SettingsContext\n  commentId: T:System.Configuration.SettingsContext\n  id: SettingsContext\n  children:\n  - System.Configuration.SettingsContext.#ctor\n  langs:\n  - csharp\n  name: SettingsContext\n  nameWithType: SettingsContext\n  fullName: System.Configuration.SettingsContext\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Provides contextual information that the provider can use when persisting settings.\n  remarks: \"The <xref:System.Configuration.SettingsContext> class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from <xref:System.Configuration.SettingsContext> class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.  \\n  \\n The primary purpose of the <xref:System.Configuration.SettingsContext> class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The <xref:System.Configuration.SettingsContext> class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a <xref:System.Configuration.SettingsContext> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.  \\n  \\n For example, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to identify authenticated versus anonymous Profile data.\"\n  syntax:\n    content: 'public class SettingsContext : System.Collections.Hashtable'\n  inheritance:\n  - System.Object\n  - System.Collections.Hashtable\n  implements: []\n  inheritedMembers:\n  - System.Collections.Hashtable.Add(System.Object,System.Object)\n  - System.Collections.Hashtable.Clear\n  - System.Collections.Hashtable.Clone\n  - System.Collections.Hashtable.comparer\n  - System.Collections.Hashtable.Contains(System.Object)\n  - System.Collections.Hashtable.ContainsKey(System.Object)\n  - System.Collections.Hashtable.ContainsValue(System.Object)\n  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)\n  - System.Collections.Hashtable.Count\n  - System.Collections.Hashtable.EqualityComparer\n  - System.Collections.Hashtable.GetEnumerator\n  - System.Collections.Hashtable.GetHash(System.Object)\n  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Hashtable.hcp\n  - System.Collections.Hashtable.IsFixedSize\n  - System.Collections.Hashtable.IsReadOnly\n  - System.Collections.Hashtable.IsSynchronized\n  - System.Collections.Hashtable.Item(System.Object)\n  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)\n  - System.Collections.Hashtable.Keys\n  - System.Collections.Hashtable.OnDeserialization(System.Object)\n  - System.Collections.Hashtable.Remove(System.Object)\n  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)\n  - System.Collections.Hashtable.SyncRoot\n  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Hashtable.Values\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsContext.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.SettingsContext.#ctor\n  commentId: M:System.Configuration.SettingsContext.#ctor\n  id: '#ctor'\n  parent: System.Configuration.SettingsContext\n  langs:\n  - csharp\n  name: SettingsContext()\n  nameWithType: SettingsContext.SettingsContext()\n  fullName: SettingsContext.SettingsContext()\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.SettingsContext\"></xref> class.\n  syntax:\n    content: public SettingsContext ();\n    parameters: []\n  overload: System.Configuration.SettingsContext.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsContext.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Collections.Hashtable\n  parent: System.Collections\n  isExternal: false\n  name: Hashtable\n  nameWithType: Hashtable\n  fullName: System.Collections.Hashtable\n- uid: System.Configuration.SettingsContext.#ctor\n  parent: System.Configuration.SettingsContext\n  isExternal: false\n  name: SettingsContext()\n  nameWithType: SettingsContext.SettingsContext()\n  fullName: SettingsContext.SettingsContext()\n- uid: System.Configuration.SettingsContext.#ctor*\n  parent: System.Configuration.SettingsContext\n  isExternal: false\n  name: SettingsContext\n  nameWithType: SettingsContext.SettingsContext\n  fullName: SettingsContext.SettingsContext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Hashtable.Add(System.Object,System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Add(Object, Object)\n  nameWithType: Hashtable.Add(Object, Object)\n  fullName: Hashtable.Add(Object, Object)\n- uid: System.Collections.Hashtable.Clear\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Clear()\n  nameWithType: Hashtable.Clear()\n  fullName: Hashtable.Clear()\n- uid: System.Collections.Hashtable.Clone\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Clone()\n  nameWithType: Hashtable.Clone()\n  fullName: Hashtable.Clone()\n- uid: System.Collections.Hashtable.comparer\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: comparer\n  nameWithType: Hashtable.comparer\n  fullName: Hashtable.comparer\n- uid: System.Collections.Hashtable.Contains(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: Hashtable.Contains(Object)\n  fullName: Hashtable.Contains(Object)\n- uid: System.Collections.Hashtable.ContainsKey(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: ContainsKey(Object)\n  nameWithType: Hashtable.ContainsKey(Object)\n  fullName: Hashtable.ContainsKey(Object)\n- uid: System.Collections.Hashtable.ContainsValue(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: ContainsValue(Object)\n  nameWithType: Hashtable.ContainsValue(Object)\n  fullName: Hashtable.ContainsValue(Object)\n- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: Hashtable.CopyTo(Array, Int32)\n  fullName: Hashtable.CopyTo(Array, Int32)\n- uid: System.Collections.Hashtable.Count\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Count\n  nameWithType: Hashtable.Count\n  fullName: Hashtable.Count\n- uid: System.Collections.Hashtable.EqualityComparer\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: EqualityComparer\n  nameWithType: Hashtable.EqualityComparer\n  fullName: Hashtable.EqualityComparer\n- uid: System.Collections.Hashtable.GetEnumerator\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Hashtable.GetEnumerator()\n  fullName: Hashtable.GetEnumerator()\n- uid: System.Collections.Hashtable.GetHash(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: GetHash(Object)\n  nameWithType: Hashtable.GetHash(Object)\n  fullName: Hashtable.GetHash(Object)\n- uid: System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Hashtable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Hashtable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Collections.Hashtable.hcp\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: hcp\n  nameWithType: Hashtable.hcp\n  fullName: Hashtable.hcp\n- uid: System.Collections.Hashtable.IsFixedSize\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: Hashtable.IsFixedSize\n  fullName: Hashtable.IsFixedSize\n- uid: System.Collections.Hashtable.IsReadOnly\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Hashtable.IsReadOnly\n  fullName: Hashtable.IsReadOnly\n- uid: System.Collections.Hashtable.IsSynchronized\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: Hashtable.IsSynchronized\n  fullName: Hashtable.IsSynchronized\n- uid: System.Collections.Hashtable.Item(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Item(Object)\n  nameWithType: Hashtable.Item(Object)\n  fullName: Hashtable.Item(Object)\n- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: KeyEquals(Object, Object)\n  nameWithType: Hashtable.KeyEquals(Object, Object)\n  fullName: Hashtable.KeyEquals(Object, Object)\n- uid: System.Collections.Hashtable.Keys\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Keys\n  nameWithType: Hashtable.Keys\n  fullName: Hashtable.Keys\n- uid: System.Collections.Hashtable.OnDeserialization(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: Hashtable.OnDeserialization(Object)\n  fullName: Hashtable.OnDeserialization(Object)\n- uid: System.Collections.Hashtable.Remove(System.Object)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: Hashtable.Remove(Object)\n  fullName: Hashtable.Remove(Object)\n- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Synchronized(Hashtable)\n  nameWithType: Hashtable.Synchronized(Hashtable)\n  fullName: Hashtable.Synchronized(Hashtable)\n- uid: System.Collections.Hashtable.SyncRoot\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: SyncRoot\n  nameWithType: Hashtable.SyncRoot\n  fullName: Hashtable.SyncRoot\n- uid: System.Collections.Hashtable.Values\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: Values\n  nameWithType: Hashtable.Values\n  fullName: Hashtable.Values\n- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Hashtable\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: Hashtable.IEnumerable.GetEnumerator()\n  fullName: Hashtable.IEnumerable.GetEnumerator()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}