{"nodes":[{"content":"Represents the exception that is thrown when an action is tried on a <xref href=\"System.Data.DataRow\"></xref> that has been deleted.","nodes":[{"pos":[0,132],"content":"Represents the exception that is thrown when an action is tried on a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> that has been deleted.","source":"Represents the exception that is thrown when an action is tried on a <xref href=\"System.Data.DataRow\"></xref> that has been deleted."}],"pos":[836,969],"yaml":true},{"content":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the <xref:System.Data.DeletedRowInaccessibleException>.  \n  \n The <xref:System.Data.DeletedRowInaccessibleException> is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:  \n  \n-   <xref:System.Data.DataRow.Item%2A> property  \n  \n-   <xref:System.Data.DataRow.ItemArray%2A> property  \n  \n-   <xref:System.Data.DataRow.BeginEdit%2A> method  \n  \n Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.","nodes":[{"pos":[0,261],"content":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the <xref:System.Data.DeletedRowInaccessibleException>.","nodes":[{"content":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the <xref:System.Data.DeletedRowInaccessibleException>.","pos":[0,261],"nodes":[{"content":"To delete a <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> method of a <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph> class.","pos":[0,130],"source":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class."},{"content":"As soon as you have deleted a row, any attempts to modify it will generate the <ph id=\"ph1\">&lt;xref:System.Data.DeletedRowInaccessibleException&gt;</ph>.","pos":[131,261],"source":" As soon as you have deleted a row, any attempts to modify it will generate the <xref:System.Data.DeletedRowInaccessibleException>."}]}]},{"pos":[268,462],"content":"The <xref:System.Data.DeletedRowInaccessibleException> is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DeletedRowInaccessibleException&gt;</ph> is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph>:","pos":[0,194],"source":"The <xref:System.Data.DeletedRowInaccessibleException> is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:"}]},{"pos":[472,515],"content":"<xref:System.Data.DataRow.Item%2A> property","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataRow.Item%2A&gt;</ph> property","pos":[0,43],"source":"<xref:System.Data.DataRow.Item%2A> property"}]},{"pos":[525,573],"content":"<xref:System.Data.DataRow.ItemArray%2A> property","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataRow.ItemArray%2A&gt;</ph> property","pos":[0,48],"source":"<xref:System.Data.DataRow.ItemArray%2A> property"}]},{"pos":[583,629],"content":"<xref:System.Data.DataRow.BeginEdit%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method","pos":[0,46],"source":"<xref:System.Data.DataRow.BeginEdit%2A> method"}]},{"pos":[636,965],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.","nodes":[{"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.","pos":[0,329],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of a <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph> class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."},{"content":"If it has been deleted, you can use the <ph id=\"ph1\">&lt;xref:System.Data.DataRow.Original%2A&gt;</ph> method to retrieve it because deleted rows have no values available for the <ph id=\"ph2\">&lt;xref:System.Data.DataRow.Current%2A&gt;</ph> state.","pos":[130,329],"source":" If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state."}]}]}],"pos":[980,1958],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class."}],"pos":[4213,4319],"yaml":true},{"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","nodes":[{"pos":[0,129],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of a <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph> class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."}]}],"pos":[4330,4460],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with the specified string.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;&lt;/xref&gt;</ph> class with the specified string.","source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with the specified string."}],"pos":[5966,6098],"yaml":true},{"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","nodes":[{"pos":[0,129],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of a <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph> class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."}]}],"pos":[6109,6239],"yaml":true,"extradata":"MT"},{"content":"The string to display when the exception is thrown.","nodes":[{"pos":[0,51],"content":"The string to display when the exception is thrown.","nodes":[{"content":"The string to display when the exception is thrown.","pos":[0,51]}]}],"pos":[6386,6438],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with serialization information.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;&lt;/xref&gt;</ph> class with serialization information.","source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with serialization information."}],"pos":[8183,8320],"yaml":true},{"content":"The data that is required to serialize or deserialize an object.","nodes":[{"pos":[0,64],"content":"The data that is required to serialize or deserialize an object.","nodes":[{"content":"The data that is required to serialize or deserialize an object.","pos":[0,64]}]}],"pos":[8604,8669],"yaml":true},{"content":"Description of the source and destination of the specified serialized stream.","nodes":[{"pos":[0,77],"content":"Description of the source and destination of the specified serialized stream.","nodes":[{"content":"Description of the source and destination of the specified serialized stream.","pos":[0,77]}]}],"pos":[8764,8842],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,211],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[10347,10559],"yaml":true},{"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","nodes":[{"pos":[0,129],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of a <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph> class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."}]}],"pos":[10570,10700],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[10885,10947],"yaml":true},{"content":"The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.","nodes":[{"pos":[0,141],"content":"The exception that is the cause of the current exception, or a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if no inner exception is specified.","source":"The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified."}],"pos":[11020,11162],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DeletedRowInaccessibleException\n  commentId: T:System.Data.DeletedRowInaccessibleException\n  id: DeletedRowInaccessibleException\n  children:\n  - System.Data.DeletedRowInaccessibleException.#ctor\n  - System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  - System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException\n  nameWithType: DeletedRowInaccessibleException\n  fullName: System.Data.DeletedRowInaccessibleException\n  type: Class\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Represents the exception that is thrown when an action is tried on a <xref href=\"System.Data.DataRow\"></xref> that has been deleted.\n  remarks: \"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the <xref:System.Data.DeletedRowInaccessibleException>.  \\n  \\n The <xref:System.Data.DeletedRowInaccessibleException> is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:  \\n  \\n-   <xref:System.Data.DataRow.Item%2A> property  \\n  \\n-   <xref:System.Data.DataRow.ItemArray%2A> property  \\n  \\n-   <xref:System.Data.DataRow.BeginEdit%2A> method  \\n  \\n Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.\"\n  syntax:\n    content: 'public class DeletedRowInaccessibleException : System.Data.DataException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.Data.DataException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DeletedRowInaccessibleException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DeletedRowInaccessibleException.#ctor\n  commentId: M:System.Data.DeletedRowInaccessibleException.#ctor\n  id: '#ctor'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException()\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n  type: Constructor\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class.\n  remarks: Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.\n  syntax:\n    content: public DeletedRowInaccessibleException ();\n    parameters: []\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DeletedRowInaccessibleException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  commentId: M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException(String)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with the specified string.\n  remarks: Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.\n  syntax:\n    content: public DeletedRowInaccessibleException (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string to display when the exception is thrown.\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DeletedRowInaccessibleException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException(SerializationInfo, StreamingContext)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo, StreamingContext)\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with serialization information.\n  syntax:\n    content: protected DeletedRowInaccessibleException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The data that is required to serialize or deserialize an object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Description of the source and destination of the specified serialized stream.\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DeletedRowInaccessibleException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  commentId: M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException(String, Exception)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String, Exception)\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.\n  syntax:\n    content: public DeletedRowInaccessibleException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DeletedRowInaccessibleException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.DataException\n  parent: System.Data\n  isExternal: false\n  name: DataException\n  nameWithType: DataException\n  fullName: System.Data.DataException\n- uid: System.Data.DeletedRowInaccessibleException.#ctor\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException()\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException(String)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException(SerializationInfo, StreamingContext)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo, StreamingContext)\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException(String, Exception)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String, Exception)\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Data.DeletedRowInaccessibleException.#ctor*\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException\n  fullName: DeletedRowInaccessibleException.DeletedRowInaccessibleException\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DeletedRowInaccessibleException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}