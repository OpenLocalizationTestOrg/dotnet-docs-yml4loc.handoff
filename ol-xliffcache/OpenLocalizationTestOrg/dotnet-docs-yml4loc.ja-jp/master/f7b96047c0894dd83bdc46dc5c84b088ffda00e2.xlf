<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7b96047c0894dd83bdc46dc5c84b088ffda00e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.IDataGridViewEditingCell.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e2e120e7351e6f78147426726f4558580056166</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">084c054b9060407c6d7002e19b6c043858d31a88</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines common functionality for a cell that allows the manipulation of its value.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is implemented by classes such as <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> that derive from <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> and provide a user interface (UI) for specifying values without hosting an editing control.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI in this case is displayed regardless of whether the cell is in edit mode.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other cell types, such as <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;</ph>, provide a UI but do not store user-specified values.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the cell type does not implement <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;</ph> or host an editing control.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cell types that display an editing control when the cell is in edit mode, such as <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxCell&gt;</ph>, do not implement <ph id="ph2">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;</ph> but instead provide a companion class that implements <ph id="ph3">&lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxCell&gt;</ph> provides a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTextBoxEditingControl&gt;</ph> that derives from the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control and implements <ph id="ph4">&lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object representing the editing control type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about implementing <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</ph>, see <bpt id="p1">[</bpt>How to: Host Controls in Windows Forms DataGridView Cells<ept id="p1">](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets the formatted value of the cell.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value represents the value as it is displayed in the cell's user interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value may be different in absolute value and even data type than the actual value contained in the cell.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations of this property typically return a value retrieved by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue%2A&gt;</ph> method and passing in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Formatting&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the cell's value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the value of the cell has changed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is set to <ph id="ph1">`true`</ph> to indicate that the cell value has been modified and that its user interface (UI) may need to be updated to reflect this change in value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owning cell or table should reset this property to <ph id="ph1">`false`</ph> after an update.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the value of the cell has changed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieves the formatted value of the cell.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value represents the value as it is displayed in the cell's user interface.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value may be different in absolute value and even data type than the actual value contained in the cell.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the formatted value of the cell, use the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values that specifies the context in which the data is needed.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the formatted version of the cell contents.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Prepares the currently selected cell for editing</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is to prepare the cell and its contents for editing.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might want to put the insertion point at the end of the cell contents, or change how the contents are aligned.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to select the cell contents; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>