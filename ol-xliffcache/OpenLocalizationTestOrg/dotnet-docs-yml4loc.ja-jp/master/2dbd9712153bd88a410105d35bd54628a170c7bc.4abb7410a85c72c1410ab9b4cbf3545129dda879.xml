{"nodes":[{"content":"Holds values for an object type registered on the service end as one that can be activated on request from a client.","nodes":[{"pos":[0,116],"content":"Holds values for an object type registered on the service end as one that can be activated on request from a client.","nodes":[{"content":"Holds values for an object type registered on the service end as one that can be activated on request from a client.","pos":[0,116]}]}],"pos":[811,928],"yaml":true},{"content":"The current class is used by the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName> method, which is the server-side counterpart of the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName> method. The <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method is used on the server to allow remote activation by clients of specified object types.  \n  \n To create a client-activated object on the server, you must know its <xref:System.Type>, and it must be registered on the server end by using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method. To obtain a proxy for a new client-activated object, the client must first register a channel with <xref:System.Runtime.Remoting.Channels.ChannelServices> and then activate the object by calling `new` or <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>.  \n  \n To activate a client-activated object type with the `new` keyword, you must first register the object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> you are giving the remoting infrastructure the location of the remote application where `new` attempts to create it. If, on the other hand, you use the <xref:System.Activator.CreateInstance%2A> method to create a new instance of the client-activated object, you must supply the remote application's URL as a parameter, so no prior registration on the client is necessary. To supply the <xref:System.Activator.CreateInstance%2A> method with the URL of the server on which you want to create the object, you must encapsulate the URL in an instance of the <xref:System.Runtime.Remoting.Activation.UrlAttribute> class.  \n  \n For a detailed description of client-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25).","nodes":[{"pos":[0,494],"content":"The current class is used by the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName> method, which is the server-side counterpart of the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName> method. The <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method is used on the server to allow remote activation by clients of specified object types.","nodes":[{"content":"The current class is used by the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName> method, which is the server-side counterpart of the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName> method. The <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method is used on the server to allow remote activation by clients of specified object types.","pos":[0,494],"nodes":[{"content":"The current class is used by the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName&gt;</ph> method, which is the server-side counterpart of the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,311],"source":"The current class is used by the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName> method, which is the server-side counterpart of the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A&gt;</ph> method is used on the server to allow remote activation by clients of specified object types.","pos":[312,494],"source":" The <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method is used on the server to allow remote activation by clients of specified object types."}]}]},{"pos":[501,1011],"content":"To create a client-activated object on the server, you must know its <xref:System.Type>, and it must be registered on the server end by using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method. To obtain a proxy for a new client-activated object, the client must first register a channel with <xref:System.Runtime.Remoting.Channels.ChannelServices> and then activate the object by calling `new` or <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>.","nodes":[{"content":"To create a client-activated object on the server, you must know its <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph>, and it must be registered on the server end by using the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A&gt;</ph> method.","pos":[0,238],"source":"To create a client-activated object on the server, you must know its <xref:System.Type>, and it must be registered on the server end by using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method."},{"content":"To obtain a proxy for a new client-activated object, the client must first register a channel with <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices&gt;</ph> and then activate the object by calling <ph id=\"ph2\">`new`</ph> or <ph id=\"ph3\">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=fullName&gt;</ph>.","pos":[239,510],"source":" To obtain a proxy for a new client-activated object, the client must first register a channel with <xref:System.Runtime.Remoting.Channels.ChannelServices> and then activate the object by calling `new` or <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>."}]},{"pos":[1018,1950],"content":"To activate a client-activated object type with the `new` keyword, you must first register the object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> you are giving the remoting infrastructure the location of the remote application where `new` attempts to create it. If, on the other hand, you use the <xref:System.Activator.CreateInstance%2A> method to create a new instance of the client-activated object, you must supply the remote application's URL as a parameter, so no prior registration on the client is necessary. To supply the <xref:System.Activator.CreateInstance%2A> method with the URL of the server on which you want to create the object, you must encapsulate the URL in an instance of the <xref:System.Runtime.Remoting.Activation.UrlAttribute> class.","nodes":[{"content":"To activate a client-activated object type with the <ph id=\"ph1\">`new`</ph> keyword, you must first register the object type on the client using the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A&gt;</ph> method.","pos":[0,222],"source":"To activate a client-activated object type with the `new` keyword, you must first register the object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> method."},{"content":"By calling <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A&gt;</ph> you are giving the remoting infrastructure the location of the remote application where <ph id=\"ph2\">`new`</ph> attempts to create it.","pos":[223,434],"source":" By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> you are giving the remoting infrastructure the location of the remote application where `new` attempts to create it."},{"content":"If, on the other hand, you use the <ph id=\"ph1\">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method to create a new instance of the client-activated object, you must supply the remote application's URL as a parameter, so no prior registration on the client is necessary.","pos":[435,689],"source":" If, on the other hand, you use the <xref:System.Activator.CreateInstance%2A> method to create a new instance of the client-activated object, you must supply the remote application's URL as a parameter, so no prior registration on the client is necessary."},{"content":"To supply the <ph id=\"ph1\">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method with the URL of the server on which you want to create the object, you must encapsulate the URL in an instance of the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Activation.UrlAttribute&gt;</ph> class.","pos":[690,932],"source":" To supply the <xref:System.Activator.CreateInstance%2A> method with the URL of the server on which you want to create the object, you must encapsulate the URL in an instance of the <xref:System.Runtime.Remoting.Activation.UrlAttribute> class."}]},{"pos":[1957,2155],"content":"For a detailed description of client-activated objects and remote object activation, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconActivation&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)</ept>.","source":"For a detailed description of client-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)."}],"pos":[939,3104],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"></xref> class with the given <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"&gt;&lt;/xref&gt;</ph> class with the given <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"></xref> class with the given <xref href=\"System.Type\"></xref>."}],"pos":[5621,5781],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the client-activated service type.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the client-activated service type.","source":"The <xref href=\"System.Type\"></xref> of the client-activated service type."}],"pos":[5924,5999],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"></xref> class with the given type name and assembly name.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"&gt;&lt;/xref&gt;</ph> class with the given type name and assembly name.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"></xref> class with the given type name and assembly name."}],"pos":[7341,7496],"yaml":true},{"content":"The type name of the client-activated service type.","nodes":[{"pos":[0,51],"content":"The type name of the client-activated service type.","nodes":[{"content":"The type name of the client-activated service type.","pos":[0,51]}]}],"pos":[7672,7724],"yaml":true},{"content":"The assembly name of the client-activated service type.","nodes":[{"pos":[0,55],"content":"The assembly name of the client-activated service type.","nodes":[{"content":"The assembly name of the client-activated service type.","pos":[0,55]}]}],"pos":[7792,7848],"yaml":true},{"content":"Gets or sets the context attributes for the client-activated service type.","nodes":[{"pos":[0,74],"content":"Gets or sets the context attributes for the client-activated service type.","nodes":[{"content":"Gets or sets the context attributes for the client-activated service type.","pos":[0,74]}]}],"pos":[9062,9137],"yaml":true},{"content":"Currently, this indexer is not implemented and operations on it will not produce any results.  \n  \n Context attributes provide context properties which when added to a context can enforce policies such as synchronization and transactions.","nodes":[{"pos":[0,93],"content":"Currently, this indexer is not implemented and operations on it will not produce any results.","nodes":[{"content":"Currently, this indexer is not implemented and operations on it will not produce any results.","pos":[0,93]}]},{"pos":[100,238],"content":"Context attributes provide context properties which when added to a context can enforce policies such as synchronization and transactions.","nodes":[{"content":"Context attributes provide context properties which when added to a context can enforce policies such as synchronization and transactions.","pos":[0,138]}]}],"pos":[9148,9391],"yaml":true,"extradata":"MT"},{"content":"The context attributes for the client-activated service type.","nodes":[{"pos":[0,61],"content":"The context attributes for the client-activated service type.","nodes":[{"content":"The context attributes for the client-activated service type.","pos":[0,61]}]}],"pos":[9602,9664],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the client-activated service type.","nodes":[{"pos":[0,79],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the client-activated service type.","source":"Gets the <xref href=\"System.Type\"></xref> of the client-activated service type."}],"pos":[10848,10928],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the client-activated service type.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the client-activated service type.","source":"The <xref href=\"System.Type\"></xref> of the client-activated service type."}],"pos":[11038,11113],"yaml":true},{"content":"Returns the type and assembly name of the client-activated service type as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,112],"content":"Returns the type and assembly name of the client-activated service type as a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the type and assembly name of the client-activated service type as a <xref href=\"System.String\"></xref>."}],"pos":[12282,12395],"yaml":true},{"content":"The type and assembly name of the client-activated service type as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,104],"content":"The type and assembly name of the client-activated service type as a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"The type and assembly name of the client-activated service type as a <xref href=\"System.String\"></xref>."}],"pos":[12530,12635],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  commentId: T:System.Runtime.Remoting.ActivatedServiceTypeEntry\n  id: ActivatedServiceTypeEntry\n  children:\n  - System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)\n  - System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)\n  - System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes\n  - System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType\n  - System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString\n  langs:\n  - csharp\n  name: ActivatedServiceTypeEntry\n  nameWithType: ActivatedServiceTypeEntry\n  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Holds values for an object type registered on the service end as one that can be activated on request from a client.\n  remarks: \"The current class is used by the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName> method, which is the server-side counterpart of the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName> method. The <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method is used on the server to allow remote activation by clients of specified object types.  \\n  \\n To create a client-activated object on the server, you must know its <xref:System.Type>, and it must be registered on the server end by using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method. To obtain a proxy for a new client-activated object, the client must first register a channel with <xref:System.Runtime.Remoting.Channels.ChannelServices> and then activate the object by calling `new` or <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>.  \\n  \\n To activate a client-activated object type with the `new` keyword, you must first register the object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> you are giving the remoting infrastructure the location of the remote application where `new` attempts to create it. If, on the other hand, you use the <xref:System.Activator.CreateInstance%2A> method to create a new instance of the client-activated object, you must supply the remote application's URL as a parameter, so no prior registration on the client is necessary. To supply the <xref:System.Activator.CreateInstance%2A> method with the URL of the server on which you want to create the object, you must encapsulate the URL in an instance of the <xref:System.Runtime.Remoting.Activation.UrlAttribute> class.  \\n  \\n For a detailed description of client-activated objects and remote object activation, see [&#91;\\\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25).\"\n  example:\n  - >-\n    [!code-cpp[ActivatedServiceTypeEntry_ObjectType_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ActivatedServiceTypeEntry_ObjectType_Client/CPP/activatedservicetypeentry_objecttype_server.cpp#1)]\n     [!code-csharp[ActivatedServiceTypeEntry_ObjectType_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ActivatedServiceTypeEntry_ObjectType_Client/CS/activatedservicetypeentry_objecttype_server.cs#1)]\n     [!code-vb[ActivatedServiceTypeEntry_ObjectType_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ActivatedServiceTypeEntry_ObjectType_Client/VB/activatedservicetypeentry_objecttype_server.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ActivatedServiceTypeEntry : System.Runtime.Remoting.TypeEntry\n  inheritance:\n  - System.Object\n  - System.Runtime.Remoting.TypeEntry\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Runtime.Remoting.TypeEntry.AssemblyName\n  - System.Runtime.Remoting.TypeEntry.TypeName\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)\n  commentId: M:System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  langs:\n  - csharp\n  name: ActivatedServiceTypeEntry(Type)\n  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)\n  fullName: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"></xref> class with the given <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public ActivatedServiceTypeEntry (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the client-activated service type.\n  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)\n  commentId: M:System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  langs:\n  - csharp\n  name: ActivatedServiceTypeEntry(String, String)\n  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String, String)\n  fullName: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.ActivatedServiceTypeEntry\"></xref> class with the given type name and assembly name.\n  syntax:\n    content: public ActivatedServiceTypeEntry (string typeName, string assemblyName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The type name of the client-activated service type.\n    - id: assemblyName\n      type: System.String\n      description: The assembly name of the client-activated service type.\n  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes\n  commentId: P:System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes\n  id: ContextAttributes\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  langs:\n  - csharp\n  name: ContextAttributes\n  nameWithType: ActivatedServiceTypeEntry.ContextAttributes\n  fullName: ActivatedServiceTypeEntry.ContextAttributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets or sets the context attributes for the client-activated service type.\n  remarks: \"Currently, this indexer is not implemented and operations on it will not produce any results.  \\n  \\n Context attributes provide context properties which when added to a context can enforce policies such as synchronization and transactions.\"\n  syntax:\n    content: public System.Runtime.Remoting.Contexts.IContextAttribute[] ContextAttributes { get; set; }\n    return:\n      type: System.Runtime.Remoting.Contexts.IContextAttribute[]\n      description: The context attributes for the client-activated service type.\n  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType\n  commentId: P:System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType\n  id: ObjectType\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  langs:\n  - csharp\n  name: ObjectType\n  nameWithType: ActivatedServiceTypeEntry.ObjectType\n  fullName: ActivatedServiceTypeEntry.ObjectType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets the <xref href=\"System.Type\"></xref> of the client-activated service type.\n  syntax:\n    content: public Type ObjectType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the client-activated service type.\n  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString\n  commentId: M:System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString\n  id: ToString\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ActivatedServiceTypeEntry.ToString()\n  fullName: ActivatedServiceTypeEntry.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the type and assembly name of the client-activated service type as a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The type and assembly name of the client-activated service type as a <xref href=\"System.String\"></xref>.\n  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.TypeEntry\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: TypeEntry\n  nameWithType: TypeEntry\n  fullName: System.Runtime.Remoting.TypeEntry\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ActivatedServiceTypeEntry(Type)\n  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)\n  fullName: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ActivatedServiceTypeEntry(String, String)\n  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String, String)\n  fullName: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ContextAttributes\n  nameWithType: ActivatedServiceTypeEntry.ContextAttributes\n  fullName: ActivatedServiceTypeEntry.ContextAttributes\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute\n  name: IContextAttribute\n  nameWithType: IContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute[]\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextAttribute[]\n  nameWithType: IContextAttribute[]\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute[]\n  spec.csharp:\n  - uid: System.Runtime.Remoting.Contexts.IContextAttribute\n    name: IContextAttribute\n    nameWithType: IContextAttribute\n    fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ObjectType\n  nameWithType: ActivatedServiceTypeEntry.ObjectType\n  fullName: ActivatedServiceTypeEntry.ObjectType\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ToString()\n  nameWithType: ActivatedServiceTypeEntry.ToString()\n  fullName: ActivatedServiceTypeEntry.ToString()\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor*\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ActivatedServiceTypeEntry\n  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry\n  fullName: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes*\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ContextAttributes\n  nameWithType: ActivatedServiceTypeEntry.ContextAttributes\n  fullName: ActivatedServiceTypeEntry.ContextAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType*\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ObjectType\n  nameWithType: ActivatedServiceTypeEntry.ObjectType\n  fullName: ActivatedServiceTypeEntry.ObjectType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString*\n  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry\n  isExternal: false\n  name: ToString\n  nameWithType: ActivatedServiceTypeEntry.ToString\n  fullName: ActivatedServiceTypeEntry.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/ActivatedServiceTypeEntry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Runtime.Remoting.TypeEntry.AssemblyName\n  parent: System.Runtime.Remoting.TypeEntry\n  isExternal: false\n  name: AssemblyName\n  nameWithType: TypeEntry.AssemblyName\n  fullName: TypeEntry.AssemblyName\n- uid: System.Runtime.Remoting.TypeEntry.TypeName\n  parent: System.Runtime.Remoting.TypeEntry\n  isExternal: false\n  name: TypeName\n  nameWithType: TypeEntry.TypeName\n  fullName: TypeEntry.TypeName\n"}