{"nodes":[{"content":"Represents a generic collection of <xref href=\"System.AddIn.Contract.IContract\"></xref> objects that can be individually accessed by index.","nodes":[{"pos":[0,139],"content":"Represents a generic collection of <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> objects that can be individually accessed by index.","source":"Represents a generic collection of <xref href=\"System.AddIn.Contract.IContract\"></xref> objects that can be individually accessed by index."}],"pos":[825,965],"yaml":true},{"content":"The type of objects in the list. <code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface.","nodes":[{"pos":[0,130],"content":"The type of objects in the list. <code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface.","nodes":[{"content":"The type of objects in the list.","pos":[0,32]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">C</ph><ept id=\"p1\">&lt;/code&gt;</ept> must implement the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> interface.","pos":[33,130],"source":"<code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface."}]}],"pos":[1212,1343],"yaml":true},{"content":"Returns the element at the specified index.","nodes":[{"pos":[0,43],"content":"Returns the element at the specified index.","nodes":[{"content":"Returns the element at the specified index.","pos":[0,43]}]}],"pos":[2531,2575],"yaml":true},{"content":"The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index. To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.","nodes":[{"pos":[0,309],"content":"The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index. To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.","nodes":[{"content":"The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index. To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.","pos":[0,309],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A&gt;</ph> method does not remove the element at the specified index.","pos":[0,132],"source":"The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index."},{"content":"To remove an element from the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A&gt;</ph> method.","pos":[133,309],"source":" To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method."}]}]}],"pos":[2586,2896],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get.","nodes":[{"pos":[0,43],"content":"The zero-based index of the element to get.","nodes":[{"content":"The zero-based index of the element to get.","pos":[0,43]}]}],"pos":[3025,3069],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[3114,3150],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,208],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."}],"pos":[3343,3560],"yaml":true},{"content":"Returns the index of a specific element in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>.","nodes":[{"pos":[0,118],"content":"Returns the index of a specific element in the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the index of a specific element in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>."}],"pos":[4570,4689],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> to locate in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>.","nodes":[{"pos":[0,145],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> to locate in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>."}],"pos":[4805,4951],"yaml":true},{"content":"The index of <code>item</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,67],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>item</code> if found in the list; otherwise, -1."}],"pos":[5007,5075],"yaml":true},{"content":"Inserts an element in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> at the specified index.","nodes":[{"pos":[0,120],"content":"Inserts an element in the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an element in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> at the specified index."}],"pos":[6227,6348],"yaml":true},{"content":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element. The indexes of the elements that are moved are also updated. To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.","nodes":[{"pos":[0,357],"content":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element. The indexes of the elements that are moved are also updated. To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.","nodes":[{"content":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element. The indexes of the elements that are moved are also updated. To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.","pos":[0,357],"nodes":[{"content":"After you call <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A&gt;</ph>, the elements that follow the insertion point move to accommodate the new element.","pos":[0,166],"source":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element."},{"content":"The indexes of the elements that are moved are also updated.","pos":[167,227]},{"content":"To replace an element at a specified index, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A&gt;</ph> method.","pos":[228,357],"source":" To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method."}]}]},{"pos":[364,559],"content":"To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.","nodes":[{"content":"To determine whether an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601&gt;</ph> is read-only, call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> method.","pos":[0,195],"source":"To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method."}]}],"pos":[6359,6923],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which to insert <code>item</code>.","nodes":[{"pos":[0,58],"content":"The zero-based index at which to insert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The zero-based index at which to insert <code>item</code>."}],"pos":[7062,7121],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> to insert in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>.","nodes":[{"pos":[0,145],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> to insert in the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> to insert in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>."}],"pos":[7169,7315],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,208],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."}],"pos":[7507,7724],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only."}],"pos":[7826,7915],"yaml":true},{"content":"Removes the element at the specified index.","nodes":[{"pos":[0,43],"content":"Removes the element at the specified index.","nodes":[{"content":"Removes the element at the specified index.","pos":[0,43]}]}],"pos":[8973,9017],"yaml":true},{"content":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot. The indexes of the elements that are moved are also updated.  \n  \n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.","nodes":[{"pos":[0,225],"content":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot. The indexes of the elements that are moved are also updated.","nodes":[{"content":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot. The indexes of the elements that are moved are also updated.","pos":[0,225],"nodes":[{"content":"After you call <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A&gt;</ph>, the elements that follow the removed element move to occupy the vacated spot.","pos":[0,164],"source":"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot."},{"content":"The indexes of the elements that are moved are also updated.","pos":[165,225]}]}]},{"pos":[232,427],"content":"To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.","nodes":[{"content":"To determine whether an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601&gt;</ph> is read-only, call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> method.","pos":[0,195],"source":"To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method."}]}],"pos":[9028,9460],"yaml":true,"extradata":"MT"},{"content":"The index of the element to remove.","nodes":[{"pos":[0,35],"content":"The index of the element to remove.","nodes":[{"content":"The index of the element to remove.","pos":[0,35]}]}],"pos":[9593,9629],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,208],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."}],"pos":[9823,10040],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only."}],"pos":[10142,10231],"yaml":true},{"content":"Replaces the element at the specified index.","nodes":[{"pos":[0,44],"content":"Replaces the element at the specified index.","nodes":[{"content":"Replaces the element at the specified index.","pos":[0,44]}]}],"pos":[11301,11346],"yaml":true},{"content":"The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index. To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.","nodes":[{"pos":[0,295],"content":"The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index. To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.","nodes":[{"content":"The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index. To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.","pos":[0,295],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A&gt;</ph> method replaces the element at the specified index.","pos":[0,125],"source":"The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index."},{"content":"To add an element to the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A&gt;</ph> method.","pos":[126,295],"source":" To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method."}]}]},{"pos":[302,497],"content":"To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.","nodes":[{"content":"To determine whether an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IListContract%601&gt;</ph> is read-only, call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> method.","pos":[0,195],"source":"To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method."}]}],"pos":[11357,11859],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which to set the element.","nodes":[{"pos":[0,49],"content":"The zero-based index at which to set the element.","nodes":[{"content":"The zero-based index at which to set the element.","pos":[0,49]}]}],"pos":[12000,12050],"yaml":true},{"content":"The element to set at the specified index.","nodes":[{"pos":[0,42],"content":"The element to set at the specified index.","nodes":[{"content":"The element to set at the specified index.","pos":[0,42]}]}],"pos":[12099,12142],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,208],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."}],"pos":[12335,12552],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only."}],"pos":[12654,12743],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IListContract`1\n  commentId: T:System.AddIn.Contract.Collections.IListContract`1\n  id: IListContract`1\n  children:\n  - System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  - System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  - System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  - System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  - System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  langs:\n  - csharp\n  name: IListContract<C>\n  nameWithType: IListContract<C>\n  fullName: System.AddIn.Contract.Collections.IListContract<C>\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Represents a generic collection of <xref href=\"System.AddIn.Contract.IContract\"></xref> objects that can be individually accessed by index.\n  syntax:\n    content: 'public interface IListContract<C> : System.AddIn.Contract.Collections.ICollectionContract<C>, System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'\n    typeParameters:\n    - id: C\n      description: The type of objects in the list. <code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface.\n  implements:\n  - System.AddIn.Contract.Collections.ICollectionContract{C}\n  - System.AddIn.Contract.Collections.IEnumerableContract{C}\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  commentId: M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IListContract<C>.GetItem(Int32)\n  fullName: IListContract<C>.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the element at the specified index.\n  remarks: The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index. To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.\n  syntax:\n    content: public C GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get.\n    return:\n      type: C\n      description: The element at the specified index.\n  overload: System.AddIn.Contract.Collections.IListContract`1.GetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  commentId: M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: IndexOf(C)\n  nameWithType: IListContract<C>.IndexOf(C)\n  fullName: IListContract<C>.IndexOf(C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the index of a specific element in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>.\n  syntax:\n    content: public int IndexOf (C item);\n    parameters:\n    - id: item\n      type: C\n      description: The <xref href=\"System.AddIn.Contract.IContract\"></xref> to locate in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>item</code> if found in the list; otherwise, -1.\n  overload: System.AddIn.Contract.Collections.IListContract`1.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  commentId: M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: Insert(Int32, C)\n  nameWithType: IListContract<C>.Insert(Int32, C)\n  fullName: IListContract<C>.Insert(Int32, C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Inserts an element in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> at the specified index.\n  remarks: \"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element. The indexes of the elements that are moved are also updated. To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.  \\n  \\n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.\"\n  syntax:\n    content: public void Insert (int index, C item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert <code>item</code>.\n    - id: item\n      type: C\n      description: The <xref href=\"System.AddIn.Contract.IContract\"></xref> to insert in the <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref>.\n  overload: System.AddIn.Contract.Collections.IListContract`1.Insert*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  commentId: M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<C>.RemoveAt(Int32)\n  fullName: IListContract<C>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Removes the element at the specified index.\n  remarks: \"After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot. The indexes of the elements that are moved are also updated.  \\n  \\n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the element to remove.\n  overload: System.AddIn.Contract.Collections.IListContract`1.RemoveAt*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  commentId: M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: SetItem(Int32, C)\n  nameWithType: IListContract<C>.SetItem(Int32, C)\n  fullName: IListContract<C>.SetItem(Int32, C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Replaces the element at the specified index.\n  remarks: \"The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index. To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.  \\n  \\n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.\"\n  syntax:\n    content: public void SetItem (int index, C value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to set the element.\n    - id: value\n      type: C\n      description: The element to set at the specified index.\n  overload: System.AddIn.Contract.Collections.IListContract`1.SetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IListContract<C>.GetItem(Int32)\n  fullName: IListContract<C>.GetItem(Int32)\n- uid: C\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: IndexOf(C)\n  nameWithType: IListContract<C>.IndexOf(C)\n  fullName: IListContract<C>.IndexOf(C)\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: Insert(Int32, C)\n  nameWithType: IListContract<C>.Insert(Int32, C)\n  fullName: IListContract<C>.Insert(Int32, C)\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<C>.RemoveAt(Int32)\n  fullName: IListContract<C>.RemoveAt(Int32)\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: SetItem(Int32, C)\n  nameWithType: IListContract<C>.SetItem(Int32, C)\n  fullName: IListContract<C>.SetItem(Int32, C)\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: GetItem\n  nameWithType: IListContract<C>.GetItem\n  fullName: IListContract<C>.GetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: IListContract<C>.IndexOf\n  fullName: IListContract<C>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: Insert\n  nameWithType: IListContract<C>.Insert\n  fullName: IListContract<C>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: RemoveAt\n  nameWithType: IListContract<C>.RemoveAt\n  fullName: IListContract<C>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: SetItem\n  nameWithType: IListContract<C>.SetItem\n  fullName: IListContract<C>.SetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1\n  parent: System.AddIn.Contract.Collections\n  isExternal: false\n  name: ICollectionContract<C>\n  nameWithType: ICollectionContract<C>\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>\n- uid: System.AddIn.Contract.Collections.IEnumerableContract`1\n  parent: System.AddIn.Contract.Collections\n  isExternal: false\n  name: IEnumerableContract<C>\n  nameWithType: IEnumerableContract<C>\n  fullName: System.AddIn.Contract.Collections.IEnumerableContract<C>\n"}