{"nodes":[{"content":"Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.","nodes":[{"pos":[0,100],"content":"Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.","nodes":[{"content":"Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.","pos":[0,100]}]}],"pos":[1055,1156],"yaml":true},{"content":"Returns the path to the application configuration file.","nodes":[{"pos":[0,55],"content":"Returns the path to the application configuration file.","nodes":[{"content":"Returns the path to the application configuration file.","pos":[0,55]}]}],"pos":[2563,2619],"yaml":true},{"content":"A string representing the path to the application configuration file.","nodes":[{"pos":[0,69],"content":"A string representing the path to the application configuration file.","nodes":[{"content":"A string representing the path to the application configuration file.","pos":[0,69]}]}],"pos":[2753,2823],"yaml":true},{"content":"Returns a string representing the path to the known local user configuration file.","nodes":[{"pos":[0,82],"content":"Returns a string representing the path to the known local user configuration file.","nodes":[{"content":"Returns a string representing the path to the known local user configuration file.","pos":[0,82]}]}],"pos":[4144,4227],"yaml":true},{"content":"A string representing the path to the known local user configuration file.","nodes":[{"pos":[0,74],"content":"A string representing the path to the known local user configuration file.","nodes":[{"content":"A string representing the path to the known local user configuration file.","pos":[0,74]}]}],"pos":[4367,4442],"yaml":true},{"content":"Returns a string representing the path to the known roaming user configuration file.","nodes":[{"pos":[0,84],"content":"Returns a string representing the path to the known roaming user configuration file.","nodes":[{"content":"Returns a string representing the path to the known roaming user configuration file.","pos":[0,84]}]}],"pos":[5781,5866],"yaml":true},{"content":"A string representing the path to the known roaming user configuration file.","nodes":[{"pos":[0,76],"content":"A string representing the path to the known roaming user configuration file.","nodes":[{"content":"A string representing the path to the known roaming user configuration file.","pos":[0,76]}]}],"pos":[6008,6085],"yaml":true},{"content":"Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.","nodes":[{"pos":[0,130],"content":"Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.","nodes":[{"content":"Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.","pos":[0,130]}]}],"pos":[7411,7542],"yaml":true},{"content":"A string representing the path to the application configuration file.","nodes":[{"pos":[0,69],"content":"A string representing the path to the application configuration file.","nodes":[{"content":"A string representing the path to the application configuration file.","pos":[0,69]}]}],"pos":[7692,7762],"yaml":true},{"content":"`true` if a string representing a configuration path is the same as a path to the application configuration file; `false` if a string representing a configuration path is not the same as a path to the application configuration file.","nodes":[{"pos":[0,232],"content":"<ph id=\"ph1\">`true`</ph> if a string representing a configuration path is the same as a path to the application configuration file; <ph id=\"ph2\">`false`</ph> if a string representing a configuration path is not the same as a path to the application configuration file.","source":"`true` if a string representing a configuration path is the same as a path to the application configuration file; `false` if a string representing a configuration path is not the same as a path to the application configuration file."}],"pos":[7820,8055],"yaml":true},{"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.","nodes":[{"pos":[0,139],"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.","nodes":[{"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.","pos":[0,139]}]}],"pos":[9404,9544],"yaml":true},{"content":"A string representing the path to the application configuration file.","nodes":[{"pos":[0,69],"content":"A string representing the path to the application configuration file.","nodes":[{"content":"A string representing the path to the application configuration file.","pos":[0,69]}]}],"pos":[9700,9770],"yaml":true},{"content":"`true` if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, `false`."}],"pos":[9828,9967],"yaml":true},{"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.","nodes":[{"pos":[0,141],"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.","nodes":[{"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.","pos":[0,141]}]}],"pos":[11334,11476],"yaml":true},{"content":"A string representing the path to an application configuration file.","nodes":[{"pos":[0,68],"content":"A string representing the path to an application configuration file.","nodes":[{"content":"A string representing the path to an application configuration file.","pos":[0,68]}]}],"pos":[11634,11703],"yaml":true},{"content":"`true` if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, `false`."}],"pos":[11761,11902],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Internal.IInternalConfigClientHost\n  commentId: T:System.Configuration.Internal.IInternalConfigClientHost\n  id: IInternalConfigClientHost\n  children:\n  - System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  - System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  - System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  - System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  - System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  - System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  langs:\n  - csharp\n  name: IInternalConfigClientHost\n  nameWithType: IInternalConfigClientHost\n  fullName: System.Configuration.Internal.IInternalConfigClientHost\n  type: Interface\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public interface IInternalConfigClientHost\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  commentId: M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  id: GetExeConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: GetExeConfigPath()\n  nameWithType: IInternalConfigClientHost.GetExeConfigPath()\n  fullName: IInternalConfigClientHost.GetExeConfigPath()\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Returns the path to the application configuration file.\n  syntax:\n    content: public string GetExeConfigPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path to the application configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  commentId: M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  id: GetLocalUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: GetLocalUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetLocalUserConfigPath()\n  fullName: IInternalConfigClientHost.GetLocalUserConfigPath()\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Returns a string representing the path to the known local user configuration file.\n  syntax:\n    content: public string GetLocalUserConfigPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path to the known local user configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  commentId: M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  id: GetRoamingUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: GetRoamingUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetRoamingUserConfigPath()\n  fullName: IInternalConfigClientHost.GetRoamingUserConfigPath()\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Returns a string representing the path to the known roaming user configuration file.\n  syntax:\n    content: public string GetRoamingUserConfigPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path to the known roaming user configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  commentId: M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  id: IsExeConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: IsExeConfig(String)\n  nameWithType: IInternalConfigClientHost.IsExeConfig(String)\n  fullName: IInternalConfigClientHost.IsExeConfig(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.\n  syntax:\n    content: public bool IsExeConfig (string configPath);\n    parameters:\n    - id: configPath\n      type: System.String\n      description: A string representing the path to the application configuration file.\n    return:\n      type: System.Boolean\n      description: '`true` if a string representing a configuration path is the same as a path to the application configuration file; `false` if a string representing a configuration path is not the same as a path to the application configuration file.'\n  overload: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  commentId: M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  id: IsLocalUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: IsLocalUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsLocalUserConfig(String)\n  fullName: IInternalConfigClientHost.IsLocalUserConfig(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.\n  syntax:\n    content: public bool IsLocalUserConfig (string configPath);\n    parameters:\n    - id: configPath\n      type: System.String\n      description: A string representing the path to the application configuration file.\n    return:\n      type: System.Boolean\n      description: '`true` if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, `false`.'\n  overload: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  commentId: M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  id: IsRoamingUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: IsRoamingUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsRoamingUserConfig(String)\n  fullName: IInternalConfigClientHost.IsRoamingUserConfig(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration.Internal\n  summary: Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.\n  syntax:\n    content: public bool IsRoamingUserConfig (string configPath);\n    parameters:\n    - id: configPath\n      type: System.String\n      description: A string representing the path to an application configuration file.\n    return:\n      type: System.Boolean\n      description: '`true` if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, `false`.'\n  overload: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetExeConfigPath()\n  nameWithType: IInternalConfigClientHost.GetExeConfigPath()\n  fullName: IInternalConfigClientHost.GetExeConfigPath()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetLocalUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetLocalUserConfigPath()\n  fullName: IInternalConfigClientHost.GetLocalUserConfigPath()\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetRoamingUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetRoamingUserConfigPath()\n  fullName: IInternalConfigClientHost.GetRoamingUserConfigPath()\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsExeConfig(String)\n  nameWithType: IInternalConfigClientHost.IsExeConfig(String)\n  fullName: IInternalConfigClientHost.IsExeConfig(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsLocalUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsLocalUserConfig(String)\n  fullName: IInternalConfigClientHost.IsLocalUserConfig(String)\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsRoamingUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsRoamingUserConfig(String)\n  fullName: IInternalConfigClientHost.IsRoamingUserConfig(String)\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetExeConfigPath\n  nameWithType: IInternalConfigClientHost.GetExeConfigPath\n  fullName: IInternalConfigClientHost.GetExeConfigPath\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetLocalUserConfigPath\n  nameWithType: IInternalConfigClientHost.GetLocalUserConfigPath\n  fullName: IInternalConfigClientHost.GetLocalUserConfigPath\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetRoamingUserConfigPath\n  nameWithType: IInternalConfigClientHost.GetRoamingUserConfigPath\n  fullName: IInternalConfigClientHost.GetRoamingUserConfigPath\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsExeConfig\n  nameWithType: IInternalConfigClientHost.IsExeConfig\n  fullName: IInternalConfigClientHost.IsExeConfig\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsLocalUserConfig\n  nameWithType: IInternalConfigClientHost.IsLocalUserConfig\n  fullName: IInternalConfigClientHost.IsLocalUserConfig\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsRoamingUserConfig\n  nameWithType: IInternalConfigClientHost.IsRoamingUserConfig\n  fullName: IInternalConfigClientHost.IsRoamingUserConfig\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Internal/IInternalConfigClientHost.xml\n"}