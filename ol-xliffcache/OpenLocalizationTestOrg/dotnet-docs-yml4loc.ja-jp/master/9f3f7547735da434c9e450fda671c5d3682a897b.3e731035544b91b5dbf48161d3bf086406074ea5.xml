{"nodes":[{"content":"Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.","nodes":[{"pos":[0,104],"content":"Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.","nodes":[{"content":"Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.","pos":[0,104]}]}],"pos":[1172,1277],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.FaultConverter\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.FaultConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.FaultConverter\"></xref> class."}],"pos":[2782,2888],"yaml":true},{"content":"Gets the default fault converter.","nodes":[{"pos":[0,33],"content":"Gets the default fault converter.","nodes":[{"content":"Gets the default fault converter.","pos":[0,33]}]}],"pos":[4397,4431],"yaml":true},{"content":"Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.","nodes":[{"pos":[0,104],"content":"Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.","nodes":[{"content":"Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.","pos":[0,104]}]}],"pos":[4442,4547],"yaml":true,"extradata":"MT"},{"content":"The message version.","nodes":[{"pos":[0,20],"content":"The message version.","nodes":[{"content":"The message version.","pos":[0,20]}]}],"pos":[4817,4838],"yaml":true},{"content":"An instance of <xref href=\"System.ServiceModel.Channels.FaultConverter\"></xref>.","nodes":[{"pos":[0,80],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.FaultConverter\"&gt;&lt;/xref&gt;</ph>.","source":"An instance of <xref href=\"System.ServiceModel.Channels.FaultConverter\"></xref>."}],"pos":[4925,5006],"yaml":true},{"content":"Tries to create the exception.","nodes":[{"pos":[0,30],"content":"Tries to create the exception.","nodes":[{"content":"Tries to create the exception.","pos":[0,30]}]}],"pos":[6652,6683],"yaml":true},{"content":"For a channel layer to implement `GetProperty<FaultConverter>` to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:  \n  \n-   Inspect the fault message.  \n  \n-   If recognized, do the appropriate conversion.  \n  \n-   If not recognized, convert it by a call to `GetProperty<FaultConverter>` on the inner channel.  \n  \n Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.","nodes":[{"pos":[0,193],"content":"For a channel layer to implement <ph id=\"ph1\">`GetProperty&lt;FaultConverter&gt;`</ph> to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:","source":"For a channel layer to implement `GetProperty<FaultConverter>` to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:"},{"pos":[203,229],"content":"Inspect the fault message.","nodes":[{"content":"Inspect the fault message.","pos":[0,26]}]},{"pos":[239,284],"content":"If recognized, do the appropriate conversion.","nodes":[{"content":"If recognized, do the appropriate conversion.","pos":[0,45]}]},{"pos":[294,388],"content":"If not recognized, convert it by a call to <ph id=\"ph1\">`GetProperty&lt;FaultConverter&gt;`</ph> on the inner channel.","source":"If not recognized, convert it by a call to `GetProperty<FaultConverter>` on the inner channel."},{"pos":[395,566],"content":"Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.","nodes":[{"content":"Transport channels should delegate to <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A&gt;</ph> to get the default SOAP/WS-Addressing fault converter.","pos":[0,171],"source":"Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter."}]}],"pos":[6694,7271],"yaml":true,"extradata":"MT"},{"content":"The fault message.","nodes":[{"pos":[0,18],"content":"The fault message.","nodes":[{"content":"The fault message.","pos":[0,18]}]}],"pos":[7563,7582],"yaml":true},{"content":"The fault.","nodes":[{"pos":[0,10],"content":"The fault.","nodes":[{"content":"The fault.","pos":[0,10]}]}],"pos":[7671,7682],"yaml":true},{"content":"If conversion is successful, the SOAP exception, returned as an `out` parameter.","nodes":[{"pos":[0,80],"content":"If conversion is successful, the SOAP exception, returned as an <ph id=\"ph1\">`out`</ph> parameter.","source":"If conversion is successful, the SOAP exception, returned as an `out` parameter."}],"pos":[7750,7831],"yaml":true},{"content":"`true` if fault was successfully converted; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,87],"content":"`true` if fault was successfully converted; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if fault was successfully converted; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` if fault was successfully converted; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[64,87],"source":" The default is `false`."}]}],"pos":[7889,7979],"yaml":true},{"content":"Tries to create the fault message once the fault has been converted to a SOAP exception.","nodes":[{"pos":[0,88],"content":"Tries to create the fault message once the fault has been converted to a SOAP exception.","nodes":[{"content":"Tries to create the fault message once the fault has been converted to a SOAP exception.","pos":[0,88]}]}],"pos":[9471,9560],"yaml":true},{"content":"Channels that support fault conversion implement `GetProperty<FaultConverter>` and override this method to do the following. If a layer can convert the exception it does; otherwise it calls `GetProperty<FaultConverter>` on its inner channel. Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.","nodes":[{"pos":[0,413],"content":"Channels that support fault conversion implement `GetProperty<FaultConverter>` and override this method to do the following. If a layer can convert the exception it does; otherwise it calls `GetProperty<FaultConverter>` on its inner channel. Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.","nodes":[{"content":"Channels that support fault conversion implement <ph id=\"ph1\">`GetProperty&lt;FaultConverter&gt;`</ph> and override this method to do the following.","pos":[0,124],"source":"Channels that support fault conversion implement `GetProperty<FaultConverter>` and override this method to do the following."},{"content":"If a layer can convert the exception it does; otherwise it calls <ph id=\"ph1\">`GetProperty&lt;FaultConverter&gt;`</ph> on its inner channel.","pos":[125,241],"source":" If a layer can convert the exception it does; otherwise it calls `GetProperty<FaultConverter>` on its inner channel."},{"content":"Transport channels should delegate to <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A&gt;</ph> to get the default SOAP/WS-Addressing fault converter.","pos":[242,413],"source":" Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter."}]}],"pos":[9571,9985],"yaml":true,"extradata":"MT"},{"content":"The SOAP exception.","nodes":[{"pos":[0,19],"content":"The SOAP exception.","nodes":[{"content":"The SOAP exception.","pos":[0,19]}]}],"pos":[10213,10233],"yaml":true},{"content":"The fault message returned as an `out` parameter.","nodes":[{"pos":[0,49],"content":"The fault message returned as an <ph id=\"ph1\">`out`</ph> parameter.","source":"The fault message returned as an `out` parameter."}],"pos":[10319,10369],"yaml":true},{"content":"`true` if fault message was successfully created; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,93],"content":"`true` if fault message was successfully created; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if fault message was successfully created; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,69],"source":"`true` if fault message was successfully created; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[70,93],"source":" The default is `false`."}]}],"pos":[10427,10523],"yaml":true},{"content":"Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> with error checking.","nodes":[{"pos":[0,210],"content":"Wraps <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"&gt;&lt;/xref&gt;</ph> with error checking.","source":"Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> with error checking."}],"pos":[12156,12367],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement. The current method wraps several parameter error tests around a call to that method.","nodes":[{"pos":[0,205],"content":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement. The current method wraps several parameter error tests around a call to that method.","nodes":[{"content":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement. The current method wraps several parameter error tests around a call to that method.","pos":[0,205],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A&gt;</ph> is an abstract class that you must implement.","pos":[0,120],"source":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement."},{"content":"The current method wraps several parameter error tests around a call to that method.","pos":[121,205]}]}]}],"pos":[12378,12584],"yaml":true,"extradata":"MT"},{"content":"The fault message.","nodes":[{"pos":[0,18],"content":"The fault message.","nodes":[{"content":"The fault message.","pos":[0,18]}]}],"pos":[12862,12881],"yaml":true},{"content":"The fault.","nodes":[{"pos":[0,10],"content":"The fault.","nodes":[{"content":"The fault.","pos":[0,10]}]}],"pos":[12970,12981],"yaml":true},{"content":"If conversion is successful, the SOAP exception, returned as an `out` parameter.","nodes":[{"pos":[0,80],"content":"If conversion is successful, the SOAP exception, returned as an <ph id=\"ph1\">`out`</ph> parameter.","source":"If conversion is successful, the SOAP exception, returned as an `out` parameter."}],"pos":[13049,13130],"yaml":true},{"content":"`true` if fault was successfully converted; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,87],"content":"`true` if fault was successfully converted; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if fault was successfully converted; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` if fault was successfully converted; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[64,87],"source":" The default is `false`."}]}],"pos":[13188,13278],"yaml":true},{"content":"<xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> returned `false` but <code>exception</code> is not `null`.","nodes":[{"pos":[0,242],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"&gt;&lt;/xref&gt;</ph> returned <ph id=\"ph2\">`false`</ph> but <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">exception</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph4\">`null`</ph>.","source":"<xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> returned `false` but <code>exception</code> is not `null`."}],"pos":[13470,13713],"yaml":true},{"content":"Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\"></xref> with error checking.","nodes":[{"pos":[0,171],"content":"Wraps <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\"&gt;&lt;/xref&gt;</ph> with error checking.","source":"Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\"></xref> with error checking."}],"pos":[15098,15270],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement. The current method wraps several error tests around a call to that method.","nodes":[{"pos":[0,198],"content":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement. The current method wraps several error tests around a call to that method.","nodes":[{"content":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement. The current method wraps several error tests around a call to that method.","pos":[0,198],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A&gt;</ph> is an abstract class that you must implement.","pos":[0,123],"source":"<xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement."},{"content":"The current method wraps several error tests around a call to that method.","pos":[124,198]}]}]}],"pos":[15281,15480],"yaml":true,"extradata":"MT"},{"content":"The SOAP exception.","nodes":[{"pos":[0,19],"content":"The SOAP exception.","nodes":[{"content":"The SOAP exception.","pos":[0,19]}]}],"pos":[15694,15714],"yaml":true},{"content":"The fault message returned as an `out` parameter.","nodes":[{"pos":[0,49],"content":"The fault message returned as an <ph id=\"ph1\">`out`</ph> parameter.","source":"The fault message returned as an `out` parameter."}],"pos":[15800,15850],"yaml":true},{"content":"`true` if fault message was successfully created; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,93],"content":"`true` if fault message was successfully created; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if fault message was successfully created; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,69],"source":"`true` if fault message was successfully created; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[70,93],"source":" The default is `false`."}]}],"pos":[15908,16004],"yaml":true},{"content":"<xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> returned `false` but <code>message</code> is not `null`.","nodes":[{"pos":[0,240],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"&gt;&lt;/xref&gt;</ph> returned <ph id=\"ph2\">`false`</ph> but <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph4\">`null`</ph>.","source":"<xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> returned `false` but <code>message</code> is not `null`."}],"pos":[16199,16440],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.FaultConverter\n  commentId: T:System.ServiceModel.Channels.FaultConverter\n  id: FaultConverter\n  children:\n  - System.ServiceModel.Channels.FaultConverter.#ctor\n  - System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)\n  - System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  - System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  - System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  - System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  langs:\n  - csharp\n  name: FaultConverter\n  nameWithType: FaultConverter\n  fullName: System.ServiceModel.Channels.FaultConverter\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.\n  syntax:\n    content: public abstract class FaultConverter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.FaultConverter.#ctor\n  commentId: M:System.ServiceModel.Channels.FaultConverter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.FaultConverter\n  langs:\n  - csharp\n  name: FaultConverter()\n  nameWithType: FaultConverter.FaultConverter()\n  fullName: FaultConverter.FaultConverter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.FaultConverter\"></xref> class.\n  syntax:\n    content: protected FaultConverter ();\n    parameters: []\n  overload: System.ServiceModel.Channels.FaultConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)\n  commentId: M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)\n  id: GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)\n  parent: System.ServiceModel.Channels.FaultConverter\n  langs:\n  - csharp\n  name: GetDefaultFaultConverter(MessageVersion)\n  nameWithType: FaultConverter.GetDefaultFaultConverter(MessageVersion)\n  fullName: FaultConverter.GetDefaultFaultConverter(MessageVersion)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default fault converter.\n  remarks: Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.\n  syntax:\n    content: public static System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter (System.ServiceModel.Channels.MessageVersion version);\n    parameters:\n    - id: version\n      type: System.ServiceModel.Channels.MessageVersion\n      description: The message version.\n    return:\n      type: System.ServiceModel.Channels.FaultConverter\n      description: An instance of <xref href=\"System.ServiceModel.Channels.FaultConverter\"></xref>.\n  overload: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  commentId: M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  id: OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  langs:\n  - csharp\n  name: OnTryCreateException(Message, MessageFault, Exception)\n  nameWithType: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)\n  fullName: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Tries to create the exception.\n  remarks: \"For a channel layer to implement `GetProperty<FaultConverter>` to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:  \\n  \\n-   Inspect the fault message.  \\n  \\n-   If recognized, do the appropriate conversion.  \\n  \\n-   If not recognized, convert it by a call to `GetProperty<FaultConverter>` on the inner channel.  \\n  \\n Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.\"\n  syntax:\n    content: protected abstract bool OnTryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The fault message.\n    - id: fault\n      type: System.ServiceModel.Channels.MessageFault\n      description: The fault.\n    - id: exception\n      type: System.Exception\n      description: If conversion is successful, the SOAP exception, returned as an `out` parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if fault was successfully converted; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.FaultConverter.OnTryCreateException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  commentId: M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  id: OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  langs:\n  - csharp\n  name: OnTryCreateFaultMessage(Exception, Message)\n  nameWithType: FaultConverter.OnTryCreateFaultMessage(Exception, Message)\n  fullName: FaultConverter.OnTryCreateFaultMessage(Exception, Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Tries to create the fault message once the fault has been converted to a SOAP exception.\n  remarks: Channels that support fault conversion implement `GetProperty<FaultConverter>` and override this method to do the following. If a layer can convert the exception it does; otherwise it calls `GetProperty<FaultConverter>` on its inner channel. Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.\n  syntax:\n    content: protected abstract bool OnTryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The SOAP exception.\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The fault message returned as an `out` parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if fault message was successfully created; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  commentId: M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  id: TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  langs:\n  - csharp\n  name: TryCreateException(Message, MessageFault, Exception)\n  nameWithType: FaultConverter.TryCreateException(Message, MessageFault, Exception)\n  fullName: FaultConverter.TryCreateException(Message, MessageFault, Exception)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> with error checking.\n  remarks: <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement. The current method wraps several parameter error tests around a call to that method.\n  syntax:\n    content: public bool TryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The fault message.\n    - id: fault\n      type: System.ServiceModel.Channels.MessageFault\n      description: The fault.\n    - id: exception\n      type: System.Exception\n      description: If conversion is successful, the SOAP exception, returned as an `out` parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if fault was successfully converted; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.FaultConverter.TryCreateException*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> returned `false` but <code>exception</code> is not `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  commentId: M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  id: TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  langs:\n  - csharp\n  name: TryCreateFaultMessage(Exception, Message)\n  nameWithType: FaultConverter.TryCreateFaultMessage(Exception, Message)\n  fullName: FaultConverter.TryCreateFaultMessage(Exception, Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\"></xref> with error checking.\n  remarks: <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement. The current method wraps several error tests around a call to that method.\n  syntax:\n    content: public bool TryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The SOAP exception.\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The fault message returned as an `out` parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if fault message was successfully created; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\"></xref> returned `false` but <code>message</code> is not `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.FaultConverter.#ctor\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: FaultConverter()\n  nameWithType: FaultConverter.FaultConverter()\n  fullName: FaultConverter.FaultConverter()\n- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: GetDefaultFaultConverter(MessageVersion)\n  nameWithType: FaultConverter.GetDefaultFaultConverter(MessageVersion)\n  fullName: FaultConverter.GetDefaultFaultConverter(MessageVersion)\n- uid: System.ServiceModel.Channels.FaultConverter\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: FaultConverter\n  nameWithType: FaultConverter\n  fullName: System.ServiceModel.Channels.FaultConverter\n- uid: System.ServiceModel.Channels.MessageVersion\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageVersion\n  nameWithType: MessageVersion\n  fullName: System.ServiceModel.Channels.MessageVersion\n- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: OnTryCreateException(Message, MessageFault, Exception)\n  nameWithType: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)\n  fullName: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Channels.MessageFault\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageFault\n  nameWithType: MessageFault\n  fullName: System.ServiceModel.Channels.MessageFault\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: OnTryCreateFaultMessage(Exception, Message)\n  nameWithType: FaultConverter.OnTryCreateFaultMessage(Exception, Message)\n  fullName: FaultConverter.OnTryCreateFaultMessage(Exception, Message)\n- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: TryCreateException(Message, MessageFault, Exception)\n  nameWithType: FaultConverter.TryCreateException(Message, MessageFault, Exception)\n  fullName: FaultConverter.TryCreateException(Message, MessageFault, Exception)\n- uid: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: TryCreateFaultMessage(Exception, Message)\n  nameWithType: FaultConverter.TryCreateFaultMessage(Exception, Message)\n  fullName: FaultConverter.TryCreateFaultMessage(Exception, Message)\n- uid: System.ServiceModel.Channels.FaultConverter.#ctor*\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: FaultConverter\n  nameWithType: FaultConverter.FaultConverter\n  fullName: FaultConverter.FaultConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter*\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: GetDefaultFaultConverter\n  nameWithType: FaultConverter.GetDefaultFaultConverter\n  fullName: FaultConverter.GetDefaultFaultConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException*\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: OnTryCreateException\n  nameWithType: FaultConverter.OnTryCreateException\n  fullName: FaultConverter.OnTryCreateException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage*\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: OnTryCreateFaultMessage\n  nameWithType: FaultConverter.OnTryCreateFaultMessage\n  fullName: FaultConverter.OnTryCreateFaultMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException*\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: TryCreateException\n  nameWithType: FaultConverter.TryCreateException\n  fullName: FaultConverter.TryCreateException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n- uid: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage*\n  parent: System.ServiceModel.Channels.FaultConverter\n  isExternal: false\n  name: TryCreateFaultMessage\n  nameWithType: FaultConverter.TryCreateFaultMessage\n  fullName: FaultConverter.TryCreateFaultMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}