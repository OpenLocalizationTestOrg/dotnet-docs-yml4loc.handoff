{"nodes":[{"content":"Implements a markup extension that returns static field and property references.","nodes":[{"pos":[0,80],"content":"Implements a markup extension that returns static field and property references.","nodes":[{"content":"Implements a markup extension that returns static field and property references.","pos":[0,80]}]}],"pos":[677,758],"yaml":true},{"content":"This class is a markup extension implementation for `{x:Static}` in the .NET XAML services support of XAML language features. For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).  \n  \n You typically use static references to obtain static values from types, including from types that cannot be instantiated in XAML because the type is static. Common examples of cases where `{x:Static}` is useful include values that can be thought of as constants, such as fixed math values or unique keys for states. The static members being referenced do not have to come from specific framework assemblies associated with XAML schema context. You can map other assemblies and CLR namespaces for XAML usage and then can refer to static members of types in XAML using the prefix you mapped.  \n  \n<a name=\"xamlTextUsage_StaticExtension\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,247],"content":"This class is a markup extension implementation for `{x:Static}` in the .NET XAML services support of XAML language features. For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).","nodes":[{"content":"This class is a markup extension implementation for <ph id=\"ph1\">`{x:Static}`</ph> in the .NET XAML services support of XAML language features.","pos":[0,125],"source":"This class is a markup extension implementation for `{x:Static}` in the .NET XAML services support of XAML language features."},{"content":"For XAML usage information, see <bpt id=\"p1\">[</bpt>x:Static Markup Extension<ept id=\"p1\">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.","pos":[126,247],"source":" For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md)."}]},{"pos":[254,843],"content":"You typically use static references to obtain static values from types, including from types that cannot be instantiated in XAML because the type is static. Common examples of cases where `{x:Static}` is useful include values that can be thought of as constants, such as fixed math values or unique keys for states. The static members being referenced do not have to come from specific framework assemblies associated with XAML schema context. You can map other assemblies and CLR namespaces for XAML usage and then can refer to static members of types in XAML using the prefix you mapped.","nodes":[{"content":"You typically use static references to obtain static values from types, including from types that cannot be instantiated in XAML because the type is static.","pos":[0,156]},{"content":"Common examples of cases where <ph id=\"ph1\">`{x:Static}`</ph> is useful include values that can be thought of as constants, such as fixed math values or unique keys for states.","pos":[157,315],"source":" Common examples of cases where `{x:Static}` is useful include values that can be thought of as constants, such as fixed math values or unique keys for states."},{"content":"The static members being referenced do not have to come from specific framework assemblies associated with XAML schema context.","pos":[316,443]},{"content":"You can map other assemblies and CLR namespaces for XAML usage and then can refer to static members of types in XAML using the prefix you mapped.","pos":[444,589]}]},{"pos":[900,915],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[769,1694],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.StaticExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\"></xref> class."}],"pos":[3401,3501],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\"></xref> class using the provided <code>member</code> string.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.StaticExtension\"&gt;&lt;/xref&gt;</ph> class using the provided <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">member</ph><ept id=\"p1\">&lt;/code&gt;</ept> string.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\"></xref> class using the provided <code>member</code> string."}],"pos":[4610,4756],"yaml":true},{"content":"The `member` value is not evaluated when you set it. If the initial value is not `null`,then the value is accepted. The actual parsing and evaluation of the `member` value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called when a XAML writer processes an extension usage. At that time, XAML schema context informs the type mapping and the value can be obtained.","nodes":[{"pos":[0,399],"content":"The `member` value is not evaluated when you set it. If the initial value is not `null`,then the value is accepted. The actual parsing and evaluation of the `member` value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called when a XAML writer processes an extension usage. At that time, XAML schema context informs the type mapping and the value can be obtained.","nodes":[{"content":"The <ph id=\"ph1\">`member`</ph> value is not evaluated when you set it.","pos":[0,52],"source":"The `member` value is not evaluated when you set it."},{"content":"If the initial value is not <ph id=\"ph1\">`null`</ph>,then the value is accepted.","pos":[53,115],"source":" If the initial value is not `null`,then the value is accepted."},{"content":"The actual parsing and evaluation of the <ph id=\"ph1\">`member`</ph> value is deferred until <ph id=\"ph2\">&lt;xref:System.Windows.Markup.StaticExtension.ProvideValue%2A&gt;</ph> is called when a XAML writer processes an extension usage.","pos":[116,309],"source":" The actual parsing and evaluation of the `member` value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called when a XAML writer processes an extension usage."},{"content":"At that time, XAML schema context informs the type mapping and the value can be obtained.","pos":[310,399]}]}],"pos":[4767,5167],"yaml":true,"extradata":"MT"},{"content":"A string that identifies the member to make a reference to. This string uses the format <code>prefix:typeName.fieldOrPropertyName</code>. <code>prefix</code> is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.","nodes":[{"pos":[0,300],"content":"A string that identifies the member to make a reference to. This string uses the format <code>prefix:typeName.fieldOrPropertyName</code>. <code>prefix</code> is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.","nodes":[{"content":"A string that identifies the member to make a reference to.","pos":[0,59]},{"content":"This string uses the format <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prefix:typeName.fieldOrPropertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[60,137],"source":" This string uses the format <code>prefix:typeName.fieldOrPropertyName</code>."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prefix</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.","pos":[138,300],"source":"<code>prefix</code> is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace."}]}],"pos":[5308,5609],"yaml":true},{"content":"<code>member</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;member&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>member</code> is `null`."}],"pos":[5782,5813],"yaml":true},{"content":"Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.","nodes":[{"pos":[0,129],"content":"Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.","nodes":[{"content":"Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.","pos":[0,129]}]}],"pos":[6681,6811],"yaml":true},{"content":"The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace). The string can also specify only the member name, so long as <xref:System.Windows.Markup.StaticExtension.MemberType%2A> is also supplied., but note that this technique will not support XML namespaces and prefixes; it is working at the type system level.  \n  \n For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).  \n  \n This value is not evaluated when you set it; so long as the value is not `null` it will be accepted. The actual parsing and evaluation of the value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called during parsing.  \n  \n Under the normal scenario of use by the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] XAML processor, the XAML processor passes a type resolver for CLR types as part of its service contract, and this resolver is used on the <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> call.  \n  \n<a name=\"xamlTextUsage_Member\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,549],"content":"The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace). The string can also specify only the member name, so long as <xref:System.Windows.Markup.StaticExtension.MemberType%2A> is also supplied., but note that this technique will not support XML namespaces and prefixes; it is working at the type system level.","nodes":[{"content":"The string for <ph id=\"ph1\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> typically uses the format <bpt id=\"p1\">*</bpt>prefix<ept id=\"p1\">*</ept><ph id=\"ph2\">`:`</ph><bpt id=\"p2\">*</bpt>typeName<ept id=\"p2\">*</ept><ph id=\"ph3\">`.`</ph><bpt id=\"p3\">*</bpt>fieldOrPropertyName<ept id=\"p3\">*</ept>.","pos":[0,142],"source":"The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*."},{"content":"(<bpt id=\"p1\">*</bpt>prefix<ept id=\"p1\">*</ept> is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).","pos":[143,295],"source":" (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace)."},{"content":"The string can also specify only the member name, so long as <ph id=\"ph1\">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph> is also supplied., but note that this technique will not support XML namespaces and prefixes; it is working at the type system level.","pos":[296,549],"source":" The string can also specify only the member name, so long as <xref:System.Windows.Markup.StaticExtension.MemberType%2A> is also supplied., but note that this technique will not support XML namespaces and prefixes; it is working at the type system level."}]},{"pos":[556,677],"content":"For XAML usage information, see <bpt id=\"p1\">[</bpt>x:Static Markup Extension<ept id=\"p1\">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.","source":"For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md)."},{"pos":[684,936],"content":"This value is not evaluated when you set it; so long as the value is not `null` it will be accepted. The actual parsing and evaluation of the value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called during parsing.","nodes":[{"content":"This value is not evaluated when you set it; so long as the value is not <ph id=\"ph1\">`null`</ph> it will be accepted.","pos":[0,100],"source":"This value is not evaluated when you set it; so long as the value is not `null` it will be accepted."},{"content":"The actual parsing and evaluation of the value is deferred until <ph id=\"ph1\">&lt;xref:System.Windows.Markup.StaticExtension.ProvideValue%2A&gt;</ph> is called during parsing.","pos":[101,252],"source":" The actual parsing and evaluation of the value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called during parsing."}]},{"pos":[943,1259],"content":"Under the normal scenario of use by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> XAML processor, the XAML processor passes a type resolver for CLR types as part of its service contract, and this resolver is used on the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.StaticExtension.ProvideValue%2A&gt;</ph> call.","source":"Under the normal scenario of use by the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] XAML processor, the XAML processor passes a type resolver for CLR types as part of its service contract, and this resolver is used on the <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> call."},{"pos":[1307,1322],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[6822,8158],"yaml":true,"extradata":"MT"},{"content":"A string that identifies the member to make a reference to.","nodes":[{"pos":[0,59],"content":"A string that identifies the member to make a reference to.","nodes":[{"content":"A string that identifies the member to make a reference to.","pos":[0,59]}]}],"pos":[8273,8333],"yaml":true},{"content":"Attempted to set <xref href=\"System.Windows.Markup.StaticExtension.Member\"></xref> to `null`.","nodes":[{"pos":[0,93],"content":"Attempted to set <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.StaticExtension.Member\"&gt;&lt;/xref&gt;</ph> to <ph id=\"ph2\">`null`</ph>.","source":"Attempted to set <xref href=\"System.Windows.Markup.StaticExtension.Member\"></xref> to `null`."}],"pos":[8507,8601],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Type\"></xref> that defines the static member to return.","nodes":[{"pos":[0,91],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that defines the static member to return.","source":"Gets or sets the <xref href=\"System.Type\"></xref> that defines the static member to return."}],"pos":[9510,9602],"yaml":true},{"content":"In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*. The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \".\" + Member`. Note that this technique will not support XAML namespaces and prefixes; it is working against the backing type system, not the XAML type system.  \n  \n The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).  \n  \n For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).  \n  \n<a name=\"xamlTextUsage_MemberType\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,869],"content":"In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*. The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \".\" + Member`. Note that this technique will not support XAML namespaces and prefixes; it is working against the backing type system, not the XAML type system.","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.StaticExtension&gt;</ph> supports an alternate mode whereby it can return a static member based on <ph id=\"ph3\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> being the simple member name and its owning type supplied as <ph id=\"ph4\">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph>, rather than <ph id=\"ph5\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> providing a full name in the form <bpt id=\"p1\">*</bpt>type<ept id=\"p1\">*</ept><ph id=\"ph6\">`.`</ph><bpt id=\"p2\">*</bpt>member<ept id=\"p2\">*</ept>.","pos":[0,476],"source":"In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*."},{"content":"The type resolver still acts, but in this case the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph> are basically combined: <ph id=\"ph3\">`memberFullName = MemberType.FullName + \".\" + Member`</ph>.","pos":[477,724],"source":" The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \".\" + Member`."},{"content":"Note that this technique will not support XAML namespaces and prefixes; it is working against the backing type system, not the XAML type system.","pos":[725,869]}]},{"pos":[876,1171],"content":"The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).","nodes":[{"content":"The string for <ph id=\"ph1\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> typically uses the format <bpt id=\"p1\">*</bpt>prefix<ept id=\"p1\">*</ept><ph id=\"ph2\">`:`</ph><bpt id=\"p2\">*</bpt>typeName<ept id=\"p2\">*</ept><ph id=\"ph3\">`.`</ph><bpt id=\"p3\">*</bpt>fieldOrPropertyName<ept id=\"p3\">*</ept>.","pos":[0,142],"source":"The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*."},{"content":"(<bpt id=\"p1\">*</bpt>prefix<ept id=\"p1\">*</ept> is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).","pos":[143,295],"source":" (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace)."}]},{"pos":[1178,1299],"content":"For XAML usage information, see <bpt id=\"p1\">[</bpt>x:Static Markup Extension<ept id=\"p1\">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.","source":"For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md)."},{"pos":[1351,1366],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[9613,10993],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> that defines the static member to return.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that defines the static member to return.","source":"The <xref href=\"System.Type\"></xref> that defines the static member to return."}],"pos":[11108,11187],"yaml":true},{"content":"Attempted to set <xref href=\"System.Windows.Markup.StaticExtension.MemberType\"></xref> to `null`.","nodes":[{"pos":[0,97],"content":"Attempted to set <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.StaticExtension.MemberType\"&gt;&lt;/xref&gt;</ph> to <ph id=\"ph2\">`null`</ph>.","source":"Attempted to set <xref href=\"System.Windows.Markup.StaticExtension.MemberType\"></xref> to `null`."}],"pos":[11365,11463],"yaml":true},{"content":"Returns an object value to set on the property where you apply this extension. For <xref href=\"System.Windows.Markup.StaticExtension\"></xref>, the return value is the static value that is evaluated for the requested static member.","nodes":[{"pos":[0,230],"content":"Returns an object value to set on the property where you apply this extension. For <xref href=\"System.Windows.Markup.StaticExtension\"></xref>, the return value is the static value that is evaluated for the requested static member.","nodes":[{"content":"Returns an object value to set on the property where you apply this extension.","pos":[0,78]},{"content":"For <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.StaticExtension\"&gt;&lt;/xref&gt;</ph>, the return value is the static value that is evaluated for the requested static member.","pos":[79,230],"source":" For <xref href=\"System.Windows.Markup.StaticExtension\"></xref>, the return value is the static value that is evaluated for the requested static member."}]}],"pos":[12511,12742],"yaml":true},{"content":"This method supports XAML language features and is generally not intended to be called directly. The XAML processor implementation uses this method to correctly handle the `x:Static` extension values during object creation.  \n  \n This implementation relies on services that are based on the passed `serviceProvider`. `serviceProvider` must not be `null`. The `serviceProvider` object is expected to return a service for <xref:System.Windows.Markup.IXamlTypeResolver>. Under the normal scenario of use by the default XAML readers and XAML writers, a suitable service provider is available. An invalid XAML schema context might have the side effect of breaking type mapping and thus the <xref:System.Windows.Markup.IXamlTypeResolver> service.  \n  \n In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*. The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \".\" + Member`.","nodes":[{"pos":[0,223],"content":"This method supports XAML language features and is generally not intended to be called directly. The XAML processor implementation uses this method to correctly handle the `x:Static` extension values during object creation.","nodes":[{"content":"This method supports XAML language features and is generally not intended to be called directly.","pos":[0,96]},{"content":"The XAML processor implementation uses this method to correctly handle the <ph id=\"ph1\">`x:Static`</ph> extension values during object creation.","pos":[97,223],"source":" The XAML processor implementation uses this method to correctly handle the `x:Static` extension values during object creation."}]},{"pos":[230,740],"content":"This implementation relies on services that are based on the passed `serviceProvider`. `serviceProvider` must not be `null`. The `serviceProvider` object is expected to return a service for <xref:System.Windows.Markup.IXamlTypeResolver>. Under the normal scenario of use by the default XAML readers and XAML writers, a suitable service provider is available. An invalid XAML schema context might have the side effect of breaking type mapping and thus the <xref:System.Windows.Markup.IXamlTypeResolver> service.","nodes":[{"content":"This implementation relies on services that are based on the passed <ph id=\"ph1\">`serviceProvider`</ph>.","pos":[0,86],"source":"This implementation relies on services that are based on the passed `serviceProvider`."},{"content":"<ph id=\"ph1\">`serviceProvider`</ph> must not be <ph id=\"ph2\">`null`</ph>.","pos":[87,124],"source":"`serviceProvider` must not be `null`."},{"content":"The <ph id=\"ph1\">`serviceProvider`</ph> object is expected to return a service for <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.","pos":[125,237],"source":" The `serviceProvider` object is expected to return a service for <xref:System.Windows.Markup.IXamlTypeResolver>."},{"content":"Under the normal scenario of use by the default XAML readers and XAML writers, a suitable service provider is available.","pos":[238,358]},{"content":"An invalid XAML schema context might have the side effect of breaking type mapping and thus the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> service.","pos":[359,510],"source":" An invalid XAML schema context might have the side effect of breaking type mapping and thus the <xref:System.Windows.Markup.IXamlTypeResolver> service."}]},{"pos":[747,1471],"content":"In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*. The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \".\" + Member`.","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.StaticExtension&gt;</ph> supports an alternate mode whereby it can return a static member based on <ph id=\"ph3\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> being the simple member name and its owning type supplied as <ph id=\"ph4\">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph>, rather than <ph id=\"ph5\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> providing a full name in the form <bpt id=\"p1\">*</bpt>type<ept id=\"p1\">*</ept><ph id=\"ph6\">`.`</ph><bpt id=\"p2\">*</bpt>member<ept id=\"p2\">*</ept>.","pos":[0,476],"source":"In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*."},{"content":"The type resolver still acts, but in this case the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.StaticExtension.Member%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Markup.StaticExtension.MemberType%2A&gt;</ph> are basically combined: <ph id=\"ph3\">`memberFullName = MemberType.FullName + \".\" + Member`</ph>.","pos":[477,724],"source":" The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \".\" + Member`."}]}],"pos":[12753,14233],"yaml":true,"extradata":"MT"},{"content":"An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (<xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>).","nodes":[{"pos":[0,211],"content":"An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (<xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>).","nodes":[{"content":"An object that can provide services for the markup extension.","pos":[0,61]},{"content":"The service provider is expected to provide a service that implements a type resolver (<ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.IXamlTypeResolver\"&gt;&lt;/xref&gt;</ph>).","pos":[62,211],"source":" The service provider is expected to provide a service that implements a type resolver (<xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>)."}]}],"pos":[14425,14637],"yaml":true},{"content":"The static value to set on the property where the extension is applied.","nodes":[{"pos":[0,71],"content":"The static value to set on the property where the extension is applied.","nodes":[{"content":"The static value to set on the property where the extension is applied.","pos":[0,71]}]}],"pos":[14694,14766],"yaml":true},{"content":"The <code>member</code> value for the extension is `null` at the time of evaluation.","nodes":[{"pos":[0,84],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">member</ph><ept id=\"p1\">&lt;/code&gt;</ept> value for the extension is <ph id=\"ph2\">`null`</ph> at the time of evaluation.","source":"The <code>member</code> value for the extension is `null` at the time of evaluation."}],"pos":[14954,15039],"yaml":true},{"content":"Some part of the <code>member</code> string did not parse properly  \n  \n -or-  \n  \n <code>serviceProvider</code> did not provide a service for <xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>  \n  \n -or-  \n  \n <code>member</code> value did not resolve to a static member.","nodes":[{"pos":[0,66],"content":"Some part of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">member</ph><ept id=\"p1\">&lt;/code&gt;</ept> string did not parse properly","source":"Some part of the <code>member</code> string did not parse properly"},{"pos":[73,77],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[84,203],"content":"<ph id=\"ph1\">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> did not provide a service for <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.IXamlTypeResolver\"&gt;&lt;/xref&gt;</ph>","source":"<code>serviceProvider</code> did not provide a service for <xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>"},{"pos":[210,214],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[221,282],"content":"<ph id=\"ph1\">&lt;code&gt;member&lt;/code&gt;</ph> value did not resolve to a static member.","source":"<code>member</code> value did not resolve to a static member."}],"pos":[15133,15428],"yaml":true},{"content":"<code>serviceProvider</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceProvider</code> is `null`."}],"pos":[15530,15570],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.StaticExtension\n  commentId: T:System.Windows.Markup.StaticExtension\n  id: StaticExtension\n  children:\n  - System.Windows.Markup.StaticExtension.#ctor\n  - System.Windows.Markup.StaticExtension.#ctor(System.String)\n  - System.Windows.Markup.StaticExtension.Member\n  - System.Windows.Markup.StaticExtension.MemberType\n  - System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)\n  langs:\n  - csharp\n  name: StaticExtension\n  nameWithType: StaticExtension\n  fullName: System.Windows.Markup.StaticExtension\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Implements a markup extension that returns static field and property references.\n  remarks: \"This class is a markup extension implementation for `{x:Static}` in the .NET XAML services support of XAML language features. For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).  \\n  \\n You typically use static references to obtain static values from types, including from types that cannot be instantiated in XAML because the type is static. Common examples of cases where `{x:Static}` is useful include values that can be thought of as constants, such as fixed math values or unique keys for states. The static members being referenced do not have to come from specific framework assemblies associated with XAML schema context. You can map other assemblies and CLR namespaces for XAML usage and then can refer to static members of types in XAML using the prefix you mapped.  \\n  \\n<a name=\\\"xamlTextUsage_StaticExtension\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.StaticExtensionConverter))]\n\n      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]\n\n      public class StaticExtension : System.Windows.Markup.MarkupExtension\n  inheritance:\n  - System.Object\n  - System.Windows.Markup.MarkupExtension\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Windows.Markup.MarkupExtensionReturnTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.StaticExtension.#ctor\n  commentId: M:System.Windows.Markup.StaticExtension.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.StaticExtension\n  langs:\n  - csharp\n  name: StaticExtension()\n  nameWithType: StaticExtension.StaticExtension()\n  fullName: StaticExtension.StaticExtension()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\"></xref> class.\n  syntax:\n    content: public StaticExtension ();\n    parameters: []\n  overload: System.Windows.Markup.StaticExtension.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.StaticExtension.#ctor(System.String)\n  commentId: M:System.Windows.Markup.StaticExtension.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Markup.StaticExtension\n  langs:\n  - csharp\n  name: StaticExtension(String)\n  nameWithType: StaticExtension.StaticExtension(String)\n  fullName: StaticExtension.StaticExtension(String)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\"></xref> class using the provided <code>member</code> string.\n  remarks: The `member` value is not evaluated when you set it. If the initial value is not `null`,then the value is accepted. The actual parsing and evaluation of the `member` value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called when a XAML writer processes an extension usage. At that time, XAML schema context informs the type mapping and the value can be obtained.\n  syntax:\n    content: public StaticExtension (string member);\n    parameters:\n    - id: member\n      type: System.String\n      description: A string that identifies the member to make a reference to. This string uses the format <code>prefix:typeName.fieldOrPropertyName</code>. <code>prefix</code> is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.\n  overload: System.Windows.Markup.StaticExtension.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>member</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.StaticExtension.Member\n  commentId: P:System.Windows.Markup.StaticExtension.Member\n  id: Member\n  parent: System.Windows.Markup.StaticExtension\n  langs:\n  - csharp\n  name: Member\n  nameWithType: StaticExtension.Member\n  fullName: StaticExtension.Member\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.\n  remarks: \"The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace). The string can also specify only the member name, so long as <xref:System.Windows.Markup.StaticExtension.MemberType%2A> is also supplied., but note that this technique will not support XML namespaces and prefixes; it is working at the type system level.  \\n  \\n For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).  \\n  \\n This value is not evaluated when you set it; so long as the value is not `null` it will be accepted. The actual parsing and evaluation of the value is deferred until <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> is called during parsing.  \\n  \\n Under the normal scenario of use by the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] XAML processor, the XAML processor passes a type resolver for CLR types as part of its service contract, and this resolver is used on the <xref:System.Windows.Markup.StaticExtension.ProvideValue%2A> call.  \\n  \\n<a name=\\\"xamlTextUsage_Member\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: public string Member { get; set; }\n    return:\n      type: System.String\n      description: A string that identifies the member to make a reference to.\n  overload: System.Windows.Markup.StaticExtension.Member*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Attempted to set <xref href=\"System.Windows.Markup.StaticExtension.Member\"></xref> to `null`.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.StaticExtension.MemberType\n  commentId: P:System.Windows.Markup.StaticExtension.MemberType\n  id: MemberType\n  parent: System.Windows.Markup.StaticExtension\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: StaticExtension.MemberType\n  fullName: StaticExtension.MemberType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets or sets the <xref href=\"System.Type\"></xref> that defines the static member to return.\n  remarks: \"In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*. The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \\\".\\\" + Member`. Note that this technique will not support XAML namespaces and prefixes; it is working against the backing type system, not the XAML type system.  \\n  \\n The string for <xref:System.Windows.Markup.StaticExtension.Member%2A> typically uses the format *prefix*`:`*typeName*`.`*fieldOrPropertyName*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference static values that are not mapped to the default XML namespace).  \\n  \\n For XAML usage information, see [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).  \\n  \\n<a name=\\\"xamlTextUsage_MemberType\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: public Type MemberType { get; set; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that defines the static member to return.\n  overload: System.Windows.Markup.StaticExtension.MemberType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Attempted to set <xref href=\"System.Windows.Markup.StaticExtension.MemberType\"></xref> to `null`.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)\n  commentId: M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)\n  id: ProvideValue(System.IServiceProvider)\n  parent: System.Windows.Markup.StaticExtension\n  langs:\n  - csharp\n  name: ProvideValue(IServiceProvider)\n  nameWithType: StaticExtension.ProvideValue(IServiceProvider)\n  fullName: StaticExtension.ProvideValue(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Returns an object value to set on the property where you apply this extension. For <xref href=\"System.Windows.Markup.StaticExtension\"></xref>, the return value is the static value that is evaluated for the requested static member.\n  remarks: \"This method supports XAML language features and is generally not intended to be called directly. The XAML processor implementation uses this method to correctly handle the `x:Static` extension values during object creation.  \\n  \\n This implementation relies on services that are based on the passed `serviceProvider`. `serviceProvider` must not be `null`. The `serviceProvider` object is expected to return a service for <xref:System.Windows.Markup.IXamlTypeResolver>. Under the normal scenario of use by the default XAML readers and XAML writers, a suitable service provider is available. An invalid XAML schema context might have the side effect of breaking type mapping and thus the <xref:System.Windows.Markup.IXamlTypeResolver> service.  \\n  \\n In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.Markup.StaticExtension> supports an alternate mode whereby it can return a static member based on <xref:System.Windows.Markup.StaticExtension.Member%2A> being the simple member name and its owning type supplied as <xref:System.Windows.Markup.StaticExtension.MemberType%2A>, rather than <xref:System.Windows.Markup.StaticExtension.Member%2A> providing a full name in the form *type*`.`*member*. The type resolver still acts, but in this case the <xref:System.Windows.Markup.StaticExtension.Member%2A> and <xref:System.Windows.Markup.StaticExtension.MemberType%2A> are basically combined: `memberFullName = MemberType.FullName + \\\".\\\" + Member`.\"\n  syntax:\n    content: public override object ProvideValue (IServiceProvider serviceProvider);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (<xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>).\n    return:\n      type: System.Object\n      description: The static value to set on the property where the extension is applied.\n  overload: System.Windows.Markup.StaticExtension.ProvideValue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>member</code> value for the extension is `null` at the time of evaluation.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"Some part of the <code>member</code> string did not parse properly  \\n  \\n -or-  \\n  \\n <code>serviceProvider</code> did not provide a service for <xref href=\\\"System.Windows.Markup.IXamlTypeResolver\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>member</code> value did not resolve to a static member.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceProvider</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Windows.Markup.MarkupExtension\n  parent: System.Windows.Markup\n  isExternal: false\n  name: MarkupExtension\n  nameWithType: MarkupExtension\n  fullName: System.Windows.Markup.MarkupExtension\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Markup.StaticExtension.#ctor\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: StaticExtension()\n  nameWithType: StaticExtension.StaticExtension()\n  fullName: StaticExtension.StaticExtension()\n- uid: System.Windows.Markup.StaticExtension.#ctor(System.String)\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: StaticExtension(String)\n  nameWithType: StaticExtension.StaticExtension(String)\n  fullName: StaticExtension.StaticExtension(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.StaticExtension.Member\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: Member\n  nameWithType: StaticExtension.Member\n  fullName: StaticExtension.Member\n- uid: System.Windows.Markup.StaticExtension.MemberType\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: MemberType\n  nameWithType: StaticExtension.MemberType\n  fullName: StaticExtension.MemberType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: ProvideValue(IServiceProvider)\n  nameWithType: StaticExtension.ProvideValue(IServiceProvider)\n  fullName: StaticExtension.ProvideValue(IServiceProvider)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Windows.Markup.StaticExtension.#ctor*\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: StaticExtension\n  nameWithType: StaticExtension.StaticExtension\n  fullName: StaticExtension.StaticExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n- uid: System.Windows.Markup.StaticExtension.Member*\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: Member\n  nameWithType: StaticExtension.Member\n  fullName: StaticExtension.Member\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n- uid: System.Windows.Markup.StaticExtension.MemberType*\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: MemberType\n  nameWithType: StaticExtension.MemberType\n  fullName: StaticExtension.MemberType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n- uid: System.Windows.Markup.StaticExtension.ProvideValue*\n  parent: System.Windows.Markup.StaticExtension\n  isExternal: false\n  name: ProvideValue\n  nameWithType: StaticExtension.ProvideValue\n  fullName: StaticExtension.ProvideValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/StaticExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}