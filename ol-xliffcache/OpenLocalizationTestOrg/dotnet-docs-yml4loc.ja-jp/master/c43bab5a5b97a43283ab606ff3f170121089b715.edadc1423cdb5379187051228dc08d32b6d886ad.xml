{"nodes":[{"content":"Resolves session security tokens from the current cache.","nodes":[{"pos":[0,56],"content":"Resolves session security tokens from the current cache.","nodes":[{"content":"Resolves session security tokens from the current cache.","pos":[0,56]}]}],"pos":[1197,1254],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.SessionSecurityTokenResolver\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionSecurityTokenResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.SessionSecurityTokenResolver\"></xref> class."}],"pos":[4391,4512],"yaml":true},{"content":"The token cache.","nodes":[{"pos":[0,16],"content":"The token cache.","nodes":[{"content":"The token cache.","pos":[0,16]}]}],"pos":[4780,4797],"yaml":true},{"content":"The identifier of the endpoint.","nodes":[{"pos":[0,31],"content":"The identifier of the endpoint.","nodes":[{"content":"The identifier of the endpoint.","pos":[0,31]}]}],"pos":[4863,4895],"yaml":true},{"content":"Attempts to resolve the security key core, given a specified key identifier clause.","nodes":[{"pos":[0,83],"content":"Attempts to resolve the security key core, given a specified key identifier clause.","nodes":[{"content":"Attempts to resolve the security key core, given a specified key identifier clause.","pos":[0,83]}]}],"pos":[6552,6636],"yaml":true},{"content":"The security key identifier clause.","nodes":[{"pos":[0,35],"content":"The security key identifier clause.","nodes":[{"content":"The security key identifier clause.","pos":[0,35]}]}],"pos":[6970,7006],"yaml":true},{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"pos":[0,97],"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","pos":[0,97],"nodes":[{"content":"When this method returns, contains the resolved key core.","pos":[0,57]},{"content":"This parameter is passed uninitialized.","pos":[58,97]}]}]}],"pos":[7091,7189],"yaml":true},{"content":"`true` if the key core was successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the key core was successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key core was successfully resolved; otherwise, `false`."}],"pos":[7247,7319],"yaml":true},{"content":"Attempts to resolve the token from the specified key identifier.","nodes":[{"pos":[0,64],"content":"Attempts to resolve the token from the specified key identifier.","nodes":[{"content":"Attempts to resolve the token from the specified key identifier.","pos":[0,64]}]}],"pos":[8936,9001],"yaml":true},{"content":"The key identifier.","nodes":[{"pos":[0,19],"content":"The key identifier.","nodes":[{"content":"The key identifier.","pos":[0,19]}]}],"pos":[9309,9329],"yaml":true},{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"pos":[0,97],"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","pos":[0,97],"nodes":[{"content":"When this method returns, contains the resolved key core.","pos":[0,57]},{"content":"This parameter is passed uninitialized.","pos":[58,97]}]}]}],"pos":[9418,9516],"yaml":true},{"content":"`true` if the key token was successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the key token was successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key token was successfully resolved; otherwise, `false`."}],"pos":[9574,9647],"yaml":true},{"content":"Attempts to resolve the token from the specified key identifier clause.","nodes":[{"pos":[0,71],"content":"Attempts to resolve the token from the specified key identifier clause.","nodes":[{"content":"Attempts to resolve the token from the specified key identifier clause.","pos":[0,71]}]}],"pos":[11294,11366],"yaml":true},{"content":"The key identifier clause.","nodes":[{"pos":[0,26],"content":"The key identifier clause.","nodes":[{"content":"The key identifier clause.","pos":[0,26]}]}],"pos":[11698,11725],"yaml":true},{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"pos":[0,97],"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","pos":[0,97],"nodes":[{"content":"When this method returns, contains the resolved key core.","pos":[0,57]},{"content":"This parameter is passed uninitialized.","pos":[58,97]}]}]}],"pos":[11814,11912],"yaml":true},{"content":"`true` if the key token was successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the key token was successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key token was successfully resolved; otherwise, `false`."}],"pos":[11970,12043],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver\n  commentId: T:System.IdentityModel.Services.SessionSecurityTokenResolver\n  id: SessionSecurityTokenResolver\n  children:\n  - System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)\n  - System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  langs:\n  - csharp\n  name: SessionSecurityTokenResolver\n  nameWithType: SessionSecurityTokenResolver\n  fullName: System.IdentityModel.Services.SessionSecurityTokenResolver\n  type: Class\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Resolves session security tokens from the current cache.\n  syntax:\n    content: 'public class SessionSecurityTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)\n  commentId: M:System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)\n  id: '#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)'\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  langs:\n  - csharp\n  name: SessionSecurityTokenResolver(SessionSecurityTokenCache, String)\n  nameWithType: SessionSecurityTokenResolver.SessionSecurityTokenResolver(SessionSecurityTokenCache, String)\n  fullName: SessionSecurityTokenResolver.SessionSecurityTokenResolver(SessionSecurityTokenCache, String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.SessionSecurityTokenResolver\"></xref> class.\n  syntax:\n    content: public SessionSecurityTokenResolver (System.IdentityModel.Tokens.SessionSecurityTokenCache tokenCache, string endpointId);\n    parameters:\n    - id: tokenCache\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCache\n      description: The token cache.\n    - id: endpointId\n      type: System.String\n      description: The identifier of the endpoint.\n  overload: System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  commentId: M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SessionSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SessionSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Attempts to resolve the security key core, given a specified key identifier clause.\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The security key identifier clause.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains the resolved key core. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key core was successfully resolved; otherwise, `false`.'\n  overload: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Attempts to resolve the token from the specified key identifier.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the resolved key core. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key token was successfully resolved; otherwise, `false`.'\n  overload: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Attempts to resolve the token from the specified key identifier clause.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the resolved key core. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key token was successfully resolved; otherwise, `false`.'\n  overload: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: SessionSecurityTokenResolver(SessionSecurityTokenCache, String)\n  nameWithType: SessionSecurityTokenResolver.SessionSecurityTokenResolver(SessionSecurityTokenCache, String)\n  fullName: SessionSecurityTokenResolver.SessionSecurityTokenResolver(SessionSecurityTokenCache, String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityTokenCache\n  nameWithType: SessionSecurityTokenCache\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SessionSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SessionSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SessionSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor*\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: SessionSecurityTokenResolver\n  nameWithType: SessionSecurityTokenResolver.SessionSecurityTokenResolver\n  fullName: SessionSecurityTokenResolver.SessionSecurityTokenResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: SessionSecurityTokenResolver.TryResolveSecurityKeyCore\n  fullName: SessionSecurityTokenResolver.TryResolveSecurityKeyCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n- uid: System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Services.SessionSecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: SessionSecurityTokenResolver.TryResolveTokenCore\n  fullName: SessionSecurityTokenResolver.TryResolveTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionSecurityTokenResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  fullName: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n"}