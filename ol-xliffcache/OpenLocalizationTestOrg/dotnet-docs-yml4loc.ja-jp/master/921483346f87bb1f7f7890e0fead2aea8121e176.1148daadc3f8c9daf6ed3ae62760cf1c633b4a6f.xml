{"nodes":[{"content":"Provides information about a network interface address.","nodes":[{"pos":[0,55],"content":"Provides information about a network interface address.","nodes":[{"content":"Provides information about a network interface address.","pos":[0,55]}]}],"pos":[751,807],"yaml":true},{"content":"You do not create instances of this class; instances are returned by methods in the <xref:System.Net.NetworkInformation.IPInterfaceProperties> class.","nodes":[{"pos":[0,149],"content":"You do not create instances of this class; instances are returned by methods in the <xref:System.Net.NetworkInformation.IPInterfaceProperties> class.","nodes":[{"content":"You do not create instances of this class; instances are returned by methods in the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties&gt;</ph> class.","pos":[0,149],"source":"You do not create instances of this class; instances are returned by methods in the <xref:System.Net.NetworkInformation.IPInterfaceProperties> class."}]}],"pos":[818,968],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPAddressInformation\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPAddressInformation\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPAddressInformation\"></xref> class."}],"pos":[3300,3413],"yaml":true},{"content":"This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPAddressInformation>.","nodes":[{"pos":[0,122],"content":"This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPAddressInformation>.","nodes":[{"content":"This constructor can be called only by classes that derive from <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPAddressInformation&gt;</ph>.","pos":[0,122],"source":"This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPAddressInformation>."}]}],"pos":[3424,3547],"yaml":true,"extradata":"MT"},{"content":"Gets the Internet Protocol (IP) address.","nodes":[{"pos":[0,40],"content":"Gets the Internet Protocol (IP) address.","nodes":[{"content":"Gets the Internet Protocol (IP) address.","pos":[0,40]}]}],"pos":[4945,4986],"yaml":true},{"content":"The IP address uniquely identifies the interface on the network.","nodes":[{"pos":[0,64],"content":"The IP address uniquely identifies the interface on the network.","nodes":[{"content":"The IP address uniquely identifies the interface on the network.","pos":[0,64]}]}],"pos":[4997,5062],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.IPAddress\"></xref> instance that contains the IP address of an interface.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph> instance that contains the IP address of an interface.","source":"An <xref href=\"System.Net.IPAddress\"></xref> instance that contains the IP address of an interface."}],"pos":[5687,5787],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the Internet Protocol (IP) address is valid to appear in a Domain Name System (DNS) server database.","nodes":[{"pos":[0,172],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the Internet Protocol (IP) address is valid to appear in a Domain Name System (DNS) server database.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the Internet Protocol (IP) address is valid to appear in a Domain Name System (DNS) server database."}],"pos":[7146,7319],"yaml":true},{"content":"Addresses in the range 169.254.0.0 to 169.254.255.255 are not DNS eligible. These addresses are reserved for Automatic Private IP Addressing (APIPA).","nodes":[{"pos":[0,149],"content":"Addresses in the range 169.254.0.0 to 169.254.255.255 are not DNS eligible. These addresses are reserved for Automatic Private IP Addressing (APIPA).","nodes":[{"content":"Addresses in the range 169.254.0.0 to 169.254.255.255 are not DNS eligible. These addresses are reserved for Automatic Private IP Addressing (APIPA).","pos":[0,149],"nodes":[{"content":"Addresses in the range 169.254.0.0 to 169.254.255.255 are not DNS eligible.","pos":[0,75]},{"content":"These addresses are reserved for Automatic Private IP Addressing (APIPA).","pos":[76,149]}]}]}],"pos":[7330,7480],"yaml":true,"extradata":"MT"},{"content":"`true` if the address can appear in a DNS database; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the address can appear in a DNS database; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the address can appear in a DNS database; otherwise, `false`."}],"pos":[8087,8161],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the Internet Protocol (IP) address is transient (a cluster address).","nodes":[{"pos":[0,140],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the Internet Protocol (IP) address is transient (a cluster address).","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the Internet Protocol (IP) address is transient (a cluster address)."}],"pos":[9514,9655],"yaml":true},{"content":"A transient address is assigned to a cluster and should not be used by most applications.","nodes":[{"pos":[0,89],"content":"A transient address is assigned to a cluster and should not be used by most applications.","nodes":[{"content":"A transient address is assigned to a cluster and should not be used by most applications.","pos":[0,89]}]}],"pos":[9666,9756],"yaml":true,"extradata":"MT"},{"content":"`true` if the address is transient; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the address is transient; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the address is transient; otherwise, `false`."}],"pos":[9879,9937],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.IPAddressInformation\n  commentId: T:System.Net.NetworkInformation.IPAddressInformation\n  id: IPAddressInformation\n  children:\n  - System.Net.NetworkInformation.IPAddressInformation.#ctor\n  - System.Net.NetworkInformation.IPAddressInformation.Address\n  - System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  - System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  langs:\n  - csharp\n  name: IPAddressInformation\n  nameWithType: IPAddressInformation\n  fullName: System.Net.NetworkInformation.IPAddressInformation\n  type: Class\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides information about a network interface address.\n  remarks: You do not create instances of this class; instances are returned by methods in the <xref:System.Net.NetworkInformation.IPInterfaceProperties> class.\n  example:\n  - \"The following code example displays the Domain Name Service (DNS) addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#42)]\\n [!code-csharp[NclNetInfo2#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#42)]\\n [!code-vb[NclNetInfo2#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#42)]\"\n  syntax:\n    content: public abstract class IPAddressInformation\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Net.NetworkInformation.MulticastIPAddressInformation\n  - System.Net.NetworkInformation.UnicastIPAddressInformation\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPAddressInformation.#ctor\n  commentId: M:System.Net.NetworkInformation.IPAddressInformation.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  langs:\n  - csharp\n  name: IPAddressInformation()\n  nameWithType: IPAddressInformation.IPAddressInformation()\n  fullName: IPAddressInformation.IPAddressInformation()\n  type: Constructor\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPAddressInformation\"></xref> class.\n  remarks: This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPAddressInformation>.\n  syntax:\n    content: protected IPAddressInformation ();\n    parameters: []\n  overload: System.Net.NetworkInformation.IPAddressInformation.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPAddressInformation.Address\n  commentId: P:System.Net.NetworkInformation.IPAddressInformation.Address\n  id: Address\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  langs:\n  - csharp\n  name: Address\n  nameWithType: IPAddressInformation.Address\n  fullName: IPAddressInformation.Address\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the Internet Protocol (IP) address.\n  remarks: The IP address uniquely identifies the interface on the network.\n  example:\n  - \"The following code example displays the multicast addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#44](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#44)]\\n [!code-csharp[NclNetInfo2#44](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#44)]\\n [!code-vb[NclNetInfo2#44](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#44)]\"\n  syntax:\n    content: public abstract System.Net.IPAddress Address { get; }\n    return:\n      type: System.Net.IPAddress\n      description: An <xref href=\"System.Net.IPAddress\"></xref> instance that contains the IP address of an interface.\n  overload: System.Net.NetworkInformation.IPAddressInformation.Address*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  commentId: P:System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  id: IsDnsEligible\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  langs:\n  - csharp\n  name: IsDnsEligible\n  nameWithType: IPAddressInformation.IsDnsEligible\n  fullName: IPAddressInformation.IsDnsEligible\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the Internet Protocol (IP) address is valid to appear in a Domain Name System (DNS) server database.\n  remarks: Addresses in the range 169.254.0.0 to 169.254.255.255 are not DNS eligible. These addresses are reserved for Automatic Private IP Addressing (APIPA).\n  example:\n  - \"The following code example displays the anycast addresses for the network interfaces on the local computer.  \\n  \\n [!code-cpp[NclNetInfo2#43](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#43)]\\n [!code-csharp[NclNetInfo2#43](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#43)]\\n [!code-vb[NclNetInfo2#43](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#43)]\"\n  syntax:\n    content: public abstract bool IsDnsEligible { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the address can appear in a DNS database; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  commentId: P:System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  id: IsTransient\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  langs:\n  - csharp\n  name: IsTransient\n  nameWithType: IPAddressInformation.IsTransient\n  fullName: IPAddressInformation.IsTransient\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the Internet Protocol (IP) address is transient (a cluster address).\n  remarks: A transient address is assigned to a cluster and should not be used by most applications.\n  syntax:\n    content: public abstract bool IsTransient { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the address is transient; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPAddressInformation.IsTransient*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.NetworkInformation.IPAddressInformation.#ctor\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IPAddressInformation()\n  nameWithType: IPAddressInformation.IPAddressInformation()\n  fullName: IPAddressInformation.IPAddressInformation()\n- uid: System.Net.NetworkInformation.IPAddressInformation.Address\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: Address\n  nameWithType: IPAddressInformation.Address\n  fullName: IPAddressInformation.Address\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsDnsEligible\n  nameWithType: IPAddressInformation.IsDnsEligible\n  fullName: IPAddressInformation.IsDnsEligible\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsTransient\n  nameWithType: IPAddressInformation.IsTransient\n  fullName: IPAddressInformation.IsTransient\n- uid: System.Net.NetworkInformation.IPAddressInformation.#ctor*\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IPAddressInformation\n  nameWithType: IPAddressInformation.IPAddressInformation\n  fullName: IPAddressInformation.IPAddressInformation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n- uid: System.Net.NetworkInformation.IPAddressInformation.Address*\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: Address\n  nameWithType: IPAddressInformation.Address\n  fullName: IPAddressInformation.Address\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible*\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsDnsEligible\n  nameWithType: IPAddressInformation.IsDnsEligible\n  fullName: IPAddressInformation.IsDnsEligible\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsTransient*\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsTransient\n  nameWithType: IPAddressInformation.IsTransient\n  fullName: IPAddressInformation.IsTransient\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPAddressInformation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}