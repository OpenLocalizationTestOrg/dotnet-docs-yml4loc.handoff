{"nodes":[{"content":"Contains properties and methods that when implemented by a <xref href=\"System.Xml.XmlDictionaryWriter\"></xref>, allows processing of XML fragments.","nodes":[{"pos":[0,147],"content":"Contains properties and methods that when implemented by a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph>, allows processing of XML fragments.","source":"Contains properties and methods that when implemented by a <xref href=\"System.Xml.XmlDictionaryWriter\"></xref>, allows processing of XML fragments."}],"pos":[864,1012],"yaml":true},{"content":"This class defines the properties and methods related to the capability of an <xref:System.Xml.XmlDictionaryWriter> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.","nodes":[{"pos":[0,345],"content":"This class defines the properties and methods related to the capability of an <xref:System.Xml.XmlDictionaryWriter> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.","nodes":[{"content":"This class defines the properties and methods related to the capability of an <ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.","pos":[0,345],"source":"This class defines the properties and methods related to the capability of an <xref:System.Xml.XmlDictionaryWriter> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point."}]}],"pos":[1023,1369],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether this <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> can process XML fragments.","nodes":[{"pos":[0,119],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> can process XML fragments.","source":"Gets a value that indicates whether this <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> can process XML fragments."}],"pos":[2733,2853],"yaml":true},{"content":"Returns `true` if the writer that implements this interface can generate and accept XML fragments.","nodes":[{"pos":[0,98],"content":"Returns <ph id=\"ph1\">`true`</ph> if the writer that implements this interface can generate and accept XML fragments.","source":"Returns `true` if the writer that implements this interface can generate and accept XML fragments."}],"pos":[2864,2963],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> can process XML fragments; otherwise, `false`.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> can process XML fragments; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> can process XML fragments; otherwise, `false`."}],"pos":[3077,3193],"yaml":true},{"content":"Ends the processing of an XML fragment.","nodes":[{"pos":[0,39],"content":"Ends the processing of an XML fragment.","nodes":[{"content":"Ends the processing of an XML fragment.","pos":[0,39]}]}],"pos":[4557,4597],"yaml":true},{"content":"Stops redirecting output to the stream supplied by the matching `StartFragment` call. After this call, the XML writing output goes to the stream originally used by the writer before the `StartFragment` call.","nodes":[{"pos":[0,207],"content":"Stops redirecting output to the stream supplied by the matching `StartFragment` call. After this call, the XML writing output goes to the stream originally used by the writer before the `StartFragment` call.","nodes":[{"content":"Stops redirecting output to the stream supplied by the matching <ph id=\"ph1\">`StartFragment`</ph> call.","pos":[0,85],"source":"Stops redirecting output to the stream supplied by the matching `StartFragment` call."},{"content":"After this call, the XML writing output goes to the stream originally used by the writer before the <ph id=\"ph1\">`StartFragment`</ph> call.","pos":[86,207],"source":" After this call, the XML writing output goes to the stream originally used by the writer before the `StartFragment` call."}]}],"pos":[4608,4816],"yaml":true,"extradata":"MT"},{"content":"Starts the processing of an XML fragment.","nodes":[{"pos":[0,41],"content":"Starts the processing of an XML fragment.","nodes":[{"content":"Starts the processing of an XML fragment.","pos":[0,41]}]}],"pos":[6406,6448],"yaml":true},{"content":"Temporarily starts redirecting the writing of the XML output to the supplied stream until `EndFragment` is called. If `generateSelfContainedTextFragment` is `true`, then the redirected XML output is always text XML and is self-contained in terms of its namespace context. `StartFragment`() calls cannot be nested.","nodes":[{"pos":[0,313],"content":"Temporarily starts redirecting the writing of the XML output to the supplied stream until `EndFragment` is called. If `generateSelfContainedTextFragment` is `true`, then the redirected XML output is always text XML and is self-contained in terms of its namespace context. `StartFragment`() calls cannot be nested.","nodes":[{"content":"Temporarily starts redirecting the writing of the XML output to the supplied stream until <ph id=\"ph1\">`EndFragment`</ph> is called.","pos":[0,114],"source":"Temporarily starts redirecting the writing of the XML output to the supplied stream until `EndFragment` is called."},{"content":"If <ph id=\"ph1\">`generateSelfContainedTextFragment`</ph> is <ph id=\"ph2\">`true`</ph>, then the redirected XML output is always text XML and is self-contained in terms of its namespace context.","pos":[115,271],"source":" If `generateSelfContainedTextFragment` is `true`, then the redirected XML output is always text XML and is self-contained in terms of its namespace context."},{"content":"<ph id=\"ph1\">`StartFragment`</ph>() calls cannot be nested.","pos":[272,313],"source":"`StartFragment`() calls cannot be nested."}]}],"pos":[6459,6773],"yaml":true,"extradata":"MT"},{"content":"The stream to write to.","nodes":[{"pos":[0,23],"content":"The stream to write to.","nodes":[{"content":"The stream to write to.","pos":[0,23]}]}],"pos":[6970,6994],"yaml":true},{"content":"If `true`, any namespaces declared outside the fragment is declared again if used inside of it; if `false` the namespaces are not declared again.","nodes":[{"pos":[0,145],"content":"If <ph id=\"ph1\">`true`</ph>, any namespaces declared outside the fragment is declared again if used inside of it; if <ph id=\"ph2\">`false`</ph> the namespaces are not declared again.","source":"If `true`, any namespaces declared outside the fragment is declared again if used inside of it; if `false` the namespaces are not declared again."}],"pos":[7084,7230],"yaml":true},{"content":"Writes an XML fragment to the underlying stream of the writer.","nodes":[{"pos":[0,62],"content":"Writes an XML fragment to the underlying stream of the writer.","nodes":[{"content":"Writes an XML fragment to the underlying stream of the writer.","pos":[0,62]}]}],"pos":[8791,8854],"yaml":true},{"content":"Writes a fragment captured between `StartFragment` and `EndFragment` and calls back into the XmlDictionaryWriter's main stream. The fragment written is `count` bytes starting at the index `offset` from the supplied `buffer`. The behavior is undefined if the supplied fragment was not captured using this writer instance.","nodes":[{"pos":[0,320],"content":"Writes a fragment captured between `StartFragment` and `EndFragment` and calls back into the XmlDictionaryWriter's main stream. The fragment written is `count` bytes starting at the index `offset` from the supplied `buffer`. The behavior is undefined if the supplied fragment was not captured using this writer instance.","nodes":[{"content":"Writes a fragment captured between <ph id=\"ph1\">`StartFragment`</ph> and <ph id=\"ph2\">`EndFragment`</ph> and calls back into the XmlDictionaryWriter's main stream.","pos":[0,127],"source":"Writes a fragment captured between `StartFragment` and `EndFragment` and calls back into the XmlDictionaryWriter's main stream."},{"content":"The fragment written is <ph id=\"ph1\">`count`</ph> bytes starting at the index <ph id=\"ph2\">`offset`</ph> from the supplied <ph id=\"ph3\">`buffer`</ph>.","pos":[128,224],"source":" The fragment written is `count` bytes starting at the index `offset` from the supplied `buffer`."},{"content":"The behavior is undefined if the supplied fragment was not captured using this writer instance.","pos":[225,320]}]}],"pos":[8865,9186],"yaml":true,"extradata":"MT"},{"content":"The buffer to write to.","nodes":[{"pos":[0,23],"content":"The buffer to write to.","nodes":[{"content":"The buffer to write to.","pos":[0,23]}]}],"pos":[10306,10330],"yaml":true},{"content":"The starting position from which to write in <code>buffer</code>.","nodes":[{"pos":[0,65],"content":"The starting position from which to write in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The starting position from which to write in <code>buffer</code>."}],"pos":[10391,10457],"yaml":true},{"content":"The number of bytes to be written to the <code>buffer</code>.","nodes":[{"pos":[0,61],"content":"The number of bytes to be written to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The number of bytes to be written to the <code>buffer</code>."}],"pos":[10517,10579],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter\n  commentId: T:System.Xml.IFragmentCapableXmlDictionaryWriter\n  id: IFragmentCapableXmlDictionaryWriter\n  children:\n  - System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment\n  - System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment\n  - System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)\n  - System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: IFragmentCapableXmlDictionaryWriter\n  nameWithType: IFragmentCapableXmlDictionaryWriter\n  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter\n  type: Interface\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: Contains properties and methods that when implemented by a <xref href=\"System.Xml.XmlDictionaryWriter\"></xref>, allows processing of XML fragments.\n  remarks: This class defines the properties and methods related to the capability of an <xref:System.Xml.XmlDictionaryWriter> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.\n  syntax:\n    content: public interface IFragmentCapableXmlDictionaryWriter\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment\n  commentId: P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment\n  id: CanFragment\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  langs:\n  - csharp\n  name: CanFragment\n  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment\n  fullName: IFragmentCapableXmlDictionaryWriter.CanFragment\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> can process XML fragments.\n  remarks: Returns `true` if the writer that implements this interface can generate and accept XML fragments.\n  syntax:\n    content: public bool CanFragment { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> can process XML fragments; otherwise, `false`.'\n  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment\n  commentId: M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment\n  id: EndFragment\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  langs:\n  - csharp\n  name: EndFragment()\n  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()\n  fullName: IFragmentCapableXmlDictionaryWriter.EndFragment()\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: Ends the processing of an XML fragment.\n  remarks: Stops redirecting output to the stream supplied by the matching `StartFragment` call. After this call, the XML writing output goes to the stream originally used by the writer before the `StartFragment` call.\n  syntax:\n    content: public void EndFragment ();\n    parameters: []\n  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)\n  commentId: M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)\n  id: StartFragment(System.IO.Stream,System.Boolean)\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  langs:\n  - csharp\n  name: StartFragment(Stream, Boolean)\n  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream, Boolean)\n  fullName: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream, Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: Starts the processing of an XML fragment.\n  remarks: Temporarily starts redirecting the writing of the XML output to the supplied stream until `EndFragment` is called. If `generateSelfContainedTextFragment` is `true`, then the redirected XML output is always text XML and is self-contained in terms of its namespace context. `StartFragment`() calls cannot be nested.\n  syntax:\n    content: public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write to.\n    - id: generateSelfContainedTextFragment\n      type: System.Boolean\n      description: If `true`, any namespaces declared outside the fragment is declared again if used inside of it; if `false` the namespaces are not declared again.\n  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)\n  id: WriteFragment(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  langs:\n  - csharp\n  name: WriteFragment(Byte[], Int32, Int32)\n  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[], Int32, Int32)\n  fullName: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: Writes an XML fragment to the underlying stream of the writer.\n  remarks: Writes a fragment captured between `StartFragment` and `EndFragment` and calls back into the XmlDictionaryWriter's main stream. The fragment written is `count` bytes starting at the index `offset` from the supplied `buffer`. The behavior is undefined if the supplied fragment was not captured using this writer instance.\n  example:\n  - \"```  \\nMemoryStream stream = new MemoryStream();  \\nMemoryStream fragmentStream = new MemoryStream();  \\nXmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  \\nIXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  \\nif (fragmentWriter == null || !fragmentWriter.CanFragment)  \\n{  \\nConsole.WriteLine(\\\"This writer doesn't support fragments\\\");  \\nreturn;  \\n}  \\nwriter.WriteStartElement(\\\"Root\\\");  \\nfragmentWriter.StartFragment(fragmentStream, false);  \\nwriter.WriteStartElement(\\\"Body\\\");  \\nwriter.WriteString(\\\"This is my body\\\");  \\nwriter.WriteEndElement();  \\nfragmentWriter.EndFragment();  \\nwriter.WriteStartElement(\\\"CharsInTheBody\\\");  \\nwriter.WriteValue(fragmentStream.Length);  \\nwriter.WriteEndElement();  \\nfragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  \\nwriter.WriteEndElement(); // Root  \\n```\"\n  syntax:\n    content: public void WriteFragment (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to write to.\n    - id: offset\n      type: System.Int32\n      description: The starting position from which to write in <code>buffer</code>.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to be written to the <code>buffer</code>.\n  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: CanFragment\n  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment\n  fullName: IFragmentCapableXmlDictionaryWriter.CanFragment\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: EndFragment()\n  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()\n  fullName: IFragmentCapableXmlDictionaryWriter.EndFragment()\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: StartFragment(Stream, Boolean)\n  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream, Boolean)\n  fullName: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream, Boolean)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: WriteFragment(Byte[], Int32, Int32)\n  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[], Int32, Int32)\n  fullName: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[], Int32, Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: CanFragment\n  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment\n  fullName: IFragmentCapableXmlDictionaryWriter.CanFragment\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: EndFragment\n  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment\n  fullName: IFragmentCapableXmlDictionaryWriter.EndFragment\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: StartFragment\n  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment\n  fullName: IFragmentCapableXmlDictionaryWriter.StartFragment\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*\n  parent: System.Xml.IFragmentCapableXmlDictionaryWriter\n  isExternal: false\n  name: WriteFragment\n  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment\n  fullName: IFragmentCapableXmlDictionaryWriter.WriteFragment\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml\n"}