### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.WmiConfigurationAttribute
  commentId: T:System.Management.Instrumentation.WmiConfigurationAttribute
  id: WmiConfigurationAttribute
  children:
  - System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  - System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  - System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  - System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  - System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  - System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  - System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  langs:
  - csharp
  name: WmiConfigurationAttribute
  nameWithType: WmiConfigurationAttribute
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute
  type: Class
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "The WmiConfiguration attribute indicates that an assembly contains code that implements a WMI provider by using the WMI.NET Provider Extensions model. The attribute accepts parameters that establish the high-level configuration of the implemented WMI provider.  \n  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."
  remarks: "The following table lists the parameters accepted by this attribute along with what aspect of the provider configuration it enables you to control.  \n  \n|Parameter|Configures|  \n|---------------|----------------|  \n|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|The namespace in which your provider exposes classes.|  \n|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-   The security (DACL) on the namespace used.|  \n|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-   The hosting model that will be used by the provider.|  \n|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-   The impersonation mode of the provider.|  \n|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|The hosting group that the provider belongs to. This parameter only applies to in-process providers.|  \n|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|The security (DACL) on the WMI provider.|"
  example:
  - "```  \n// Specify that this assembly contains code that implements a WMI  \n// Provider. Use the assembly:WmiConfiguration attribute to define  \n// the WMI namespace, the hosting model, and the impersonation mode  \n// of the WMI provider.  \n// The attribute below specifies that the class this provider  \n// exposes to WMI will be in the root/MortgageCalc namespace, will  \n// use the decoupled hosting model and will not allow the provider  \n// to impersonate its callers.  \n  \n[assembly: WmiConfiguration(\"root/MortgageCalc\",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly)]

      public sealed class WmiConfigurationAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  commentId: M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: WmiConfigurationAttribute(String)
  nameWithType: WmiConfigurationAttribute.WmiConfigurationAttribute(String)
  fullName: WmiConfigurationAttribute.WmiConfigurationAttribute(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Initializes a new instance of the <xref href="System.Management.WmiConfigurationAttribute"></xref> class that specifies the WMI namespace in which the WMI provider will expose classes.
  remarks: A WMI provider must expose its classes in a namespace. That is why the constructor requires scope as a parameter.
  syntax:
    content: public WmiConfigurationAttribute (string scope);
    parameters:
    - id: scope
      type: System.String
      description: The WMI namespace in which the provider will expose classes. For example, "root\MyProviderNamespace".
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  commentId: P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  id: HostingGroup
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: HostingGroup
  nameWithType: WmiConfigurationAttribute.HostingGroup
  fullName: WmiConfigurationAttribute.HostingGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Gets or sets the hosting group for the WMI provider.
  remarks: "Hosting groups only apply to providers that are hosted in-process. The value is ignored for decoupled providers.  \n  \n A hosting group is a set of in-process providers that are all assigned the same hosting group name. The hosting group name is a string that you define to logically group the providers. All of the in-process providers in the same hosting group running under the same security context are hosted within a single instance of the Wmiprvse.exe process. So, providers that share the same hosting group and security context share the same service host process."
  example:
  - "In the following example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements an in-process provider that runs under the NetworkService security context and is hosted in a instance of the Wmiprvse.exe process that also hosts any other in-process providers in the same hosting group that also run within the NetworkService security context.  \n  \n```  \n[assembly: WmiConfiguration(\"root\\\\NVPair\", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = \"MyProviders\"]  \n```"
  syntax:
    content: public string HostingGroup { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> value that indicates the hosting group for the WMI provider.
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  commentId: P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  id: HostingModel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: HostingModel
  nameWithType: WmiConfigurationAttribute.HostingModel
  fullName: WmiConfigurationAttribute.HostingModel
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Gets or sets the hosting model for the WMI provider.
  remarks: "WMI providers can be hosted by an application or by the WMI service. WMI providers hosted by an application are called decoupled providers. Those hosted by the WMI service are called in-process providers. The hosting model value determines both the hosting model and, in the case of in-process providers, the account (security context) under which the provider runs. For more detail about the possible values of HostingModel, see <xref:System.Management.Instrumentation.ManagementHostingModel>.  \n  \n To learn more about hosting models, see the [Provider Hosting and Security](http://go.microsoft.com/fwlink/?LinkId=100075) topic in the WMI SDK on MSDN."
  example:
  - "In the following example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements a provider that is exposed through the root\\NVPair namespace. Because the hosting model is not <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, it is an in-process provider. The value <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> indicates that the in-process provider runs under the NetworkService security context.  \n  \n```  \n[assembly: WmiConfiguration(\"root\\\\NVPair\", HostingModel = ManagementHostingModel.NetworkService)]  \n```  \n  \n In the next example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements a provider that is exposed through the root\\NVPair namespace. The value <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> indicates that it is a decoupled provider.  \n  \n```  \n[assembly: WmiConfiguration(\"root\\\\NVPair\", HostingModel = ManagementHostingModel.Decoupled)]  \n```"
  syntax:
    content: public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }
    return:
      type: System.Management.Instrumentation.ManagementHostingModel
      description: A <xref href="System.Management.Instrumentation.ManagementHostingModel"></xref> value that indicates the hosting model of the WMI provider.
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  commentId: P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  id: IdentifyLevel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: IdentifyLevel
  nameWithType: WmiConfigurationAttribute.IdentifyLevel
  fullName: WmiConfigurationAttribute.IdentifyLevel
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Gets or sets a value that specifies whether the WMI provider can impersonate its callers. If the value is false, the provider cannot impersonate, and if the value is true, the provider can impersonate.
  remarks: For more information, see the "Provider Hosting and Security" topic in the MSDN library online at [http://www.msdn.com](http://www.msdn.com/).
  example:
  - "The following example demonstrates how to use the IdentifyLevel parameter to indicate that the provider can impersonate its callers.  \n  \n```  \n[assembly: WmiConfiguration(\"root/MyProv\", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  \n```"
  syntax:
    content: public bool IdentifyLevel { get; set; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether a provider can or cannot impersonate its callers. If the value is false, the provider cannot impersonate, and if the value is true, the provider can impersonate.
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  commentId: P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  id: NamespaceSecurity
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: NamespaceSecurity
  nameWithType: WmiConfigurationAttribute.NamespaceSecurity
  fullName: WmiConfigurationAttribute.NamespaceSecurity
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Gets or sets a Security Descriptor Definition Language (SDDL) string that specifies the security descriptor on the namespace in which the provider exposes management objects.
  remarks: For more information about how to represent security descriptors in SDDL format, see the [Security Descriptor String Format](http://go.microsoft.com/fwlink/?LinkId=100763) topic in the MSDN library online.
  example:
  - "The following example demonstrates how to use the NamespaceSecurity parameter to set the security descriptor on the root/SDTest namespace in which the provider implemented in this assembly exposes WMI classes.  \n  \n```  \n[assembly: WmiConfiguration(\"root/SDTest\", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = \"O:BAG:BAD:(A;CI;0x60003;;;WD)\")]  \n```"
  syntax:
    content: public string NamespaceSecurity { get; set; }
    return:
      type: System.String
      description: An SDDL string that represents the security descriptor on the namespace in which the provider exposes management objects.
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  commentId: P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  id: Scope
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: Scope
  nameWithType: WmiConfigurationAttribute.Scope
  fullName: WmiConfigurationAttribute.Scope
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Gets or sets the WMI namespace in which the WMI provider exposes classes.
  remarks: A WMI namespace is a category within the WMI repository. The commonly-used root/cimv2 namespace houses classes that describe the Common Information Model, Version 2, defined by the Desktop Management Task Force (DMTF) consortium. You should only expose your providers in that namespace if you expanding upon the standand CIM model. Otherwise, you should create an appropriate namespace that makes clear to users the type of WMI classes they can expect to find in the namespace.
  syntax:
    content: public string Scope { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> value that indicates the namespace in which the WMI provider exposes classes.
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.Scope*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  commentId: P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  id: SecurityRestriction
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: SecurityRestriction
  nameWithType: WmiConfigurationAttribute.SecurityRestriction
  fullName: WmiConfigurationAttribute.SecurityRestriction
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: Gets or sets a security descriptor for the WMI provider. For more information, see the SecurityDescriptor property information in the "__Win32Provider" topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).
  syntax:
    content: public string SecurityRestriction { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> value that contains the security descriptor for the WMI provider.
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
references:
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: WmiConfigurationAttribute(String)
  nameWithType: WmiConfigurationAttribute.WmiConfigurationAttribute(String)
  fullName: WmiConfigurationAttribute.WmiConfigurationAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingGroup
  nameWithType: WmiConfigurationAttribute.HostingGroup
  fullName: WmiConfigurationAttribute.HostingGroup
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingModel
  nameWithType: WmiConfigurationAttribute.HostingModel
  fullName: WmiConfigurationAttribute.HostingModel
- uid: System.Management.Instrumentation.ManagementHostingModel
  parent: System.Management.Instrumentation
  isExternal: false
  name: ManagementHostingModel
  nameWithType: ManagementHostingModel
  fullName: System.Management.Instrumentation.ManagementHostingModel
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: IdentifyLevel
  nameWithType: WmiConfigurationAttribute.IdentifyLevel
  fullName: WmiConfigurationAttribute.IdentifyLevel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: NamespaceSecurity
  nameWithType: WmiConfigurationAttribute.NamespaceSecurity
  fullName: WmiConfigurationAttribute.NamespaceSecurity
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: Scope
  nameWithType: WmiConfigurationAttribute.Scope
  fullName: WmiConfigurationAttribute.Scope
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: SecurityRestriction
  nameWithType: WmiConfigurationAttribute.SecurityRestriction
  fullName: WmiConfigurationAttribute.SecurityRestriction
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: WmiConfigurationAttribute
  nameWithType: WmiConfigurationAttribute.WmiConfigurationAttribute
  fullName: WmiConfigurationAttribute.WmiConfigurationAttribute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingGroup
  nameWithType: WmiConfigurationAttribute.HostingGroup
  fullName: WmiConfigurationAttribute.HostingGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingModel
  nameWithType: WmiConfigurationAttribute.HostingModel
  fullName: WmiConfigurationAttribute.HostingModel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: IdentifyLevel
  nameWithType: WmiConfigurationAttribute.IdentifyLevel
  fullName: WmiConfigurationAttribute.IdentifyLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: NamespaceSecurity
  nameWithType: WmiConfigurationAttribute.NamespaceSecurity
  fullName: WmiConfigurationAttribute.NamespaceSecurity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.Scope*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: Scope
  nameWithType: WmiConfigurationAttribute.Scope
  fullName: WmiConfigurationAttribute.Scope
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: SecurityRestriction
  nameWithType: WmiConfigurationAttribute.SecurityRestriction
  fullName: WmiConfigurationAttribute.SecurityRestriction
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/WmiConfigurationAttribute.xml
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
