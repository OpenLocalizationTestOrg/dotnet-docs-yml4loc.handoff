{"nodes":[{"content":"Represents a named argument of a custom attribute in the reflection-only context.","nodes":[{"pos":[0,81],"content":"Represents a named argument of a custom attribute in the reflection-only context.","nodes":[{"content":"Represents a named argument of a custom attribute in the reflection-only context.","pos":[0,81]}]}],"pos":[1495,1577],"yaml":true},{"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.  \n  \n The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type. The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.  \n  \n> [!IMPORTANT]\n>  Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.  \n  \n To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.","nodes":[{"pos":[0,500],"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.","nodes":[{"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.","pos":[0,500],"nodes":[{"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph>, and so on.","pos":[0,391],"source":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on."},{"content":"If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.","pos":[392,500]}]}]},{"pos":[507,1019],"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type. The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.","nodes":[{"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type. The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.","pos":[0,512],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.","pos":[0,301],"source":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> property returns a <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure that contains the type and value of the named argument.","pos":[302,512],"source":" The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument."}]}]},{"pos":[1027,1199],"content":"[!IMPORTANT]\n Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.","leadings":["","> "],"nodes":[{"content":"Whether an argument is named or positional, you must access its type and value by using the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure.","pos":[14,170],"source":" Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure."}]},{"pos":[1206,1384],"content":"To create instances of the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id=\"ph2\">`static`</ph><ph id=\"ph3\">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.","source":"To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method."}],"pos":[1588,2982],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.","nodes":[{"pos":[0,232],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.","source":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property."}],"pos":[6327,6560],"yaml":true},{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.","nodes":[{"pos":[0,157],"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.","nodes":[{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.","pos":[0,157],"nodes":[{"content":"This constructor is for use by inheritors of the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> class.","pos":[0,109],"source":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class."},{"content":"It is not intended for use in application code.","pos":[110,157]}]}]}],"pos":[6571,6729],"yaml":true,"extradata":"MT"},{"content":"A field or property of the custom attribute. The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value.","nodes":[{"pos":[0,165],"content":"A field or property of the custom attribute. The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value.","nodes":[{"content":"A field or property of the custom attribute.","pos":[0,44]},{"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> object represents this member and its value.","pos":[45,165],"source":" The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value."}]}],"pos":[6942,7108],"yaml":true},{"content":"The value of the field or property of the custom attribute.","nodes":[{"pos":[0,59],"content":"The value of the field or property of the custom attribute.","nodes":[{"content":"The value of the field or property of the custom attribute.","pos":[0,59]}]}],"pos":[7169,7229],"yaml":true},{"content":"<code>memberInfo</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;memberInfo&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>memberInfo</code> is `null`."}],"pos":[7411,7446],"yaml":true},{"content":"<code>memberInfo</code> is not a field or property of the custom attribute.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">&lt;code&gt;memberInfo&lt;/code&gt;</ph> is not a field or property of the custom attribute.","source":"<code>memberInfo</code> is not a field or property of the custom attribute."}],"pos":[7540,7616],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> class, which represents the specified field or property of the custom attribute, and specifies a <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> object that describes the type and value of the field or property.","nodes":[{"pos":[0,333],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> class, which represents the specified field or property of the custom attribute, and specifies a <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> object that describes the type and value of the field or property.","source":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> class, which represents the specified field or property of the custom attribute, and specifies a <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> object that describes the type and value of the field or property."}],"pos":[9240,9574],"yaml":true},{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.","nodes":[{"pos":[0,157],"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.","nodes":[{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.","pos":[0,157],"nodes":[{"content":"This constructor is for use by inheritors of the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> class.","pos":[0,109],"source":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class."},{"content":"It is not intended for use in application code.","pos":[110,157]}]}]}],"pos":[9585,9743],"yaml":true,"extradata":"MT"},{"content":"A field or property of the custom attribute. The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value.","nodes":[{"pos":[0,165],"content":"A field or property of the custom attribute. The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value.","nodes":[{"content":"A field or property of the custom attribute.","pos":[0,44]},{"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> object represents this member and its value.","pos":[45,165],"source":" The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value."}]}],"pos":[10004,10170],"yaml":true},{"content":"An object that describes the type and value of the field or property.","nodes":[{"pos":[0,69],"content":"An object that describes the type and value of the field or property.","nodes":[{"content":"An object that describes the type and value of the field or property.","pos":[0,69]}]}],"pos":[10272,10342],"yaml":true},{"content":"<code>memberInfo</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;memberInfo&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>memberInfo</code> is `null`."}],"pos":[10524,10559],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"pos":[0,84],"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]}],"pos":[11847,11932],"yaml":true},{"content":"An object to compare with this instance, or `null`.","nodes":[{"pos":[0,51],"content":"An object to compare with this instance, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance, or `null`."}],"pos":[12072,12124],"yaml":true},{"content":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals the type and value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`."}],"pos":[12182,12275],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[13758,13799],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[13933,13968],"yaml":true},{"content":"Gets a value that indicates whether the named argument is a field.","nodes":[{"pos":[0,66],"content":"Gets a value that indicates whether the named argument is a field.","nodes":[{"content":"Gets a value that indicates whether the named argument is a field.","pos":[0,66]}]}],"pos":[15428,15495],"yaml":true},{"content":"`true` if the named argument is a field; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the named argument is a field; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the named argument is a field; otherwise, `false`."}],"pos":[15605,15668],"yaml":true},{"content":"Gets the attribute member that would be used to set the named argument.","nodes":[{"pos":[0,71],"content":"Gets the attribute member that would be used to set the named argument.","nodes":[{"content":"Gets the attribute member that would be used to set the named argument.","pos":[0,71]}]}],"pos":[17320,17392],"yaml":true},{"content":"In most cases, the member is a property.","nodes":[{"pos":[0,40],"content":"In most cases, the member is a property.","nodes":[{"content":"In most cases, the member is a property.","pos":[0,40]}]}],"pos":[17403,17444],"yaml":true,"extradata":"MT"},{"content":"The attribute member that would be used to set the named argument.","nodes":[{"pos":[0,66],"content":"The attribute member that would be used to set the named argument.","nodes":[{"content":"The attribute member that would be used to set the named argument.","pos":[0,66]}]}],"pos":[17595,17662],"yaml":true},{"content":"Gets the name of the attribute member that would be used to set the named argument.","nodes":[{"pos":[0,83],"content":"Gets the name of the attribute member that would be used to set the named argument.","nodes":[{"content":"Gets the name of the attribute member that would be used to set the named argument.","pos":[0,83]}]}],"pos":[18995,19079],"yaml":true},{"content":"The name of the attribute member that would be used to set the named argument.","nodes":[{"pos":[0,78],"content":"The name of the attribute member that would be used to set the named argument.","nodes":[{"content":"The name of the attribute member that would be used to set the named argument.","pos":[0,78]}]}],"pos":[19193,19272],"yaml":true},{"content":"Tests whether two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are equivalent.","nodes":[{"pos":[0,112],"content":"Tests whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> structures are equivalent.","source":"Tests whether two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are equivalent."}],"pos":[21420,21533],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>","nodes":[{"pos":[0,229],"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName&gt;</ph>","pos":[0,229],"source":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>"}]}],"pos":[21544,21774],"yaml":true,"extradata":"MT"},{"content":"The structure to the left of the equality operator.","nodes":[{"pos":[0,51],"content":"The structure to the left of the equality operator.","nodes":[{"content":"The structure to the left of the equality operator.","pos":[0,51]}]}],"pos":[22046,22098],"yaml":true},{"content":"The structure to the right of the equality operator.","nodes":[{"pos":[0,52],"content":"The structure to the right of the equality operator.","nodes":[{"content":"The structure to the right of the equality operator.","pos":[0,52]}]}],"pos":[22192,22245],"yaml":true},{"content":"`true` if the two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are equal; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> structures are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are equal; otherwise, `false`."}],"pos":[22303,22433],"yaml":true},{"content":"Tests whether two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are different.","nodes":[{"pos":[0,111],"content":"Tests whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> structures are different.","source":"Tests whether two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are different."}],"pos":[24394,24506],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Compare%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>","nodes":[{"pos":[0,230],"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Compare%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Compare%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName&gt;</ph>","pos":[0,230],"source":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Compare%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>"}]}],"pos":[24517,24748],"yaml":true,"extradata":"MT"},{"content":"The structure to the left of the inequality operator.","nodes":[{"pos":[0,53],"content":"The structure to the left of the inequality operator.","nodes":[{"content":"The structure to the left of the inequality operator.","pos":[0,53]}]}],"pos":[25022,25076],"yaml":true},{"content":"The structure to the right of the inequality operator.","nodes":[{"pos":[0,54],"content":"The structure to the right of the inequality operator.","nodes":[{"content":"The structure to the right of the inequality operator.","pos":[0,54]}]}],"pos":[25170,25225],"yaml":true},{"content":"`true` if the two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are different; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeNamedArgument\"&gt;&lt;/xref&gt;</ph> structures are different; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are different; otherwise, `false`."}],"pos":[25283,25417],"yaml":true},{"content":"Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"pos":[0,119],"content":"Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"content":"Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.","pos":[0,119]}]}],"pos":[26889,27009],"yaml":true},{"content":"A string that consists of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"pos":[0,111],"content":"A string that consists of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"content":"A string that consists of the argument name, the equal sign, and a string representation of the argument value.","pos":[0,111]}]}],"pos":[27144,27256],"yaml":true},{"content":"Gets a <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure that can be used to obtain the type and value of the current named argument.","nodes":[{"pos":[0,161],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structure that can be used to obtain the type and value of the current named argument.","source":"Gets a <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure that can be used to obtain the type and value of the current named argument."}],"pos":[28731,28893],"yaml":true},{"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set. Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.","nodes":[{"pos":[0,259],"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set. Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.","nodes":[{"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set. Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.","pos":[0,259],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure only contains information about how the argument value was set.","pos":[0,131],"source":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set."},{"content":"Use this property to obtain a <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure that contains the type and value.","pos":[132,259],"source":" Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value."}]}]}],"pos":[28904,29164],"yaml":true,"extradata":"MT"},{"content":"A structure that can be used to obtain the type and value of the current named argument.","nodes":[{"pos":[0,88],"content":"A structure that can be used to obtain the type and value of the current named argument.","nodes":[{"content":"A structure that can be used to obtain the type and value of the current named argument.","pos":[0,88]}]}],"pos":[30758,30847],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.CustomAttributeNamedArgument\n  commentId: T:System.Reflection.CustomAttributeNamedArgument\n  id: CustomAttributeNamedArgument\n  children:\n  - System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)\n  - System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)\n  - System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)\n  - System.Reflection.CustomAttributeNamedArgument.GetHashCode\n  - System.Reflection.CustomAttributeNamedArgument.IsField\n  - System.Reflection.CustomAttributeNamedArgument.MemberInfo\n  - System.Reflection.CustomAttributeNamedArgument.MemberName\n  - System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  - System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  - System.Reflection.CustomAttributeNamedArgument.ToString\n  - System.Reflection.CustomAttributeNamedArgument.TypedValue\n  langs:\n  - csharp\n  name: CustomAttributeNamedArgument\n  nameWithType: CustomAttributeNamedArgument\n  fullName: System.Reflection.CustomAttributeNamedArgument\n  type: Struct\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Represents a named argument of a custom attribute in the reflection-only context.\n  remarks: \"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.  \\n  \\n The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type. The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.  \\n  \\n> [!IMPORTANT]\\n>  Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.  \\n  \\n To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.\"\n  example:\n  - \"The following example defines a custom attribute with four constructors and four properties. Two of the properties are read-only, and are set by using the positional parameters of the constructors. The other two properties are read/write, and can be set only by using named arguments. One positional property is an array of strings, and one named property is an array of integers.  \\n  \\n The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method. Different constructors are used for these cases. When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.  \\n  \\n The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.  \\n  \\n [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]\\n [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]\\n [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct CustomAttributeNamedArgument\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)\n  id: '#ctor(System.Reflection.MemberInfo,System.Object)'\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: CustomAttributeNamedArgument(MemberInfo, Object)\n  nameWithType: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, Object)\n  fullName: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, Object)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.\n  remarks: This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.\n  syntax:\n    content: public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);\n    parameters:\n    - id: memberInfo\n      type: System.Reflection.MemberInfo\n      description: A field or property of the custom attribute. The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value.\n    - id: value\n      type: System.Object\n      description: The value of the field or property of the custom attribute.\n  overload: System.Reflection.CustomAttributeNamedArgument.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>memberInfo</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>memberInfo</code> is not a field or property of the custom attribute.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)\n  id: '#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)'\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: CustomAttributeNamedArgument(MemberInfo, CustomAttributeTypedArgument)\n  nameWithType: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, CustomAttributeTypedArgument)\n  fullName: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, CustomAttributeTypedArgument)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> class, which represents the specified field or property of the custom attribute, and specifies a <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> object that describes the type and value of the field or property.\n  remarks: This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class. It is not intended for use in application code.\n  syntax:\n    content: public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);\n    parameters:\n    - id: memberInfo\n      type: System.Reflection.MemberInfo\n      description: A field or property of the custom attribute. The new <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> object represents this member and its value.\n    - id: typedArgument\n      type: System.Reflection.CustomAttributeTypedArgument\n      description: An object that describes the type and value of the field or property.\n  overload: System.Reflection.CustomAttributeNamedArgument.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>memberInfo</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CustomAttributeNamedArgument.Equals(Object)\n  fullName: CustomAttributeNamedArgument.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeNamedArgument.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.GetHashCode\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CustomAttributeNamedArgument.GetHashCode()\n  fullName: CustomAttributeNamedArgument.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Reflection.CustomAttributeNamedArgument.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.IsField\n  commentId: P:System.Reflection.CustomAttributeNamedArgument.IsField\n  id: IsField\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: IsField\n  nameWithType: CustomAttributeNamedArgument.IsField\n  fullName: CustomAttributeNamedArgument.IsField\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value that indicates whether the named argument is a field.\n  syntax:\n    content: public bool IsField { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the named argument is a field; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeNamedArgument.IsField*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.MemberInfo\n  commentId: P:System.Reflection.CustomAttributeNamedArgument.MemberInfo\n  id: MemberInfo\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: MemberInfo\n  nameWithType: CustomAttributeNamedArgument.MemberInfo\n  fullName: CustomAttributeNamedArgument.MemberInfo\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the attribute member that would be used to set the named argument.\n  remarks: In most cases, the member is a property.\n  syntax:\n    content: public System.Reflection.MemberInfo MemberInfo { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: The attribute member that would be used to set the named argument.\n  overload: System.Reflection.CustomAttributeNamedArgument.MemberInfo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.MemberName\n  commentId: P:System.Reflection.CustomAttributeNamedArgument.MemberName\n  id: MemberName\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: MemberName\n  nameWithType: CustomAttributeNamedArgument.MemberName\n  fullName: CustomAttributeNamedArgument.MemberName\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the name of the attribute member that would be used to set the named argument.\n  syntax:\n    content: public string MemberName { get; }\n    return:\n      type: System.String\n      description: The name of the attribute member that would be used to set the named argument.\n  overload: System.Reflection.CustomAttributeNamedArgument.MemberName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  id: op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: op_Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  nameWithType: CustomAttributeNamedArgument.op_Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  fullName: CustomAttributeNamedArgument.op_Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  type: Operator\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Tests whether two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are equivalent.\n  remarks: The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);\n    parameters:\n    - id: left\n      type: System.Reflection.CustomAttributeNamedArgument\n      description: The structure to the left of the equality operator.\n    - id: right\n      type: System.Reflection.CustomAttributeNamedArgument\n      description: The structure to the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are equal; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeNamedArgument.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  id: op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: op_Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  nameWithType: CustomAttributeNamedArgument.op_Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  fullName: CustomAttributeNamedArgument.op_Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  type: Operator\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Tests whether two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are different.\n  remarks: The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Compare%28System.Reflection.CustomAttributeNamedArgument%2CSystem.Reflection.CustomAttributeNamedArgument%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);\n    parameters:\n    - id: left\n      type: System.Reflection.CustomAttributeNamedArgument\n      description: The structure to the left of the inequality operator.\n    - id: right\n      type: System.Reflection.CustomAttributeNamedArgument\n      description: The structure to the right of the inequality operator.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Reflection.CustomAttributeNamedArgument\"></xref> structures are different; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeNamedArgument.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.ToString\n  commentId: M:System.Reflection.CustomAttributeNamedArgument.ToString\n  id: ToString\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CustomAttributeNamedArgument.ToString()\n  fullName: CustomAttributeNamedArgument.ToString()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that consists of the argument name, the equal sign, and a string representation of the argument value.\n  overload: System.Reflection.CustomAttributeNamedArgument.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeNamedArgument.TypedValue\n  commentId: P:System.Reflection.CustomAttributeNamedArgument.TypedValue\n  id: TypedValue\n  parent: System.Reflection.CustomAttributeNamedArgument\n  langs:\n  - csharp\n  name: TypedValue\n  nameWithType: CustomAttributeNamedArgument.TypedValue\n  fullName: CustomAttributeNamedArgument.TypedValue\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure that can be used to obtain the type and value of the current named argument.\n  remarks: The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set. Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.\n  example:\n  - \"The following code example defines a custom attribute with four constructors and four properties. Two of the properties are read-only, and are set by using the positional parameters of the constructors. The other two properties are read/write, and can be set only by using named arguments. One positional property is an array of strings, and one named property is an array of integers.  \\n  \\n The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method. Different constructors are used for these cases. When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.  \\n  \\n The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.  \\n  \\n The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.  \\n  \\n [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]\\n [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]\\n [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }\n    return:\n      type: System.Reflection.CustomAttributeTypedArgument\n      description: A structure that can be used to obtain the type and value of the current named argument.\n  overload: System.Reflection.CustomAttributeNamedArgument.TypedValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: CustomAttributeNamedArgument(MemberInfo, Object)\n  nameWithType: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, Object)\n  fullName: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, Object)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: CustomAttributeNamedArgument(MemberInfo, CustomAttributeTypedArgument)\n  nameWithType: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, CustomAttributeTypedArgument)\n  fullName: CustomAttributeNamedArgument.CustomAttributeNamedArgument(MemberInfo, CustomAttributeTypedArgument)\n- uid: System.Reflection.CustomAttributeTypedArgument\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeTypedArgument\n  nameWithType: CustomAttributeTypedArgument\n  fullName: System.Reflection.CustomAttributeTypedArgument\n- uid: System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CustomAttributeNamedArgument.Equals(Object)\n  fullName: CustomAttributeNamedArgument.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.CustomAttributeNamedArgument.GetHashCode\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CustomAttributeNamedArgument.GetHashCode()\n  fullName: CustomAttributeNamedArgument.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.CustomAttributeNamedArgument.IsField\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: IsField\n  nameWithType: CustomAttributeNamedArgument.IsField\n  fullName: CustomAttributeNamedArgument.IsField\n- uid: System.Reflection.CustomAttributeNamedArgument.MemberInfo\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: MemberInfo\n  nameWithType: CustomAttributeNamedArgument.MemberInfo\n  fullName: CustomAttributeNamedArgument.MemberInfo\n- uid: System.Reflection.CustomAttributeNamedArgument.MemberName\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: MemberName\n  nameWithType: CustomAttributeNamedArgument.MemberName\n  fullName: CustomAttributeNamedArgument.MemberName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: op_Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  nameWithType: CustomAttributeNamedArgument.op_Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  fullName: CustomAttributeNamedArgument.op_Equality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n- uid: System.Reflection.CustomAttributeNamedArgument\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeNamedArgument\n  nameWithType: CustomAttributeNamedArgument\n  fullName: System.Reflection.CustomAttributeNamedArgument\n- uid: System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: op_Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  nameWithType: CustomAttributeNamedArgument.op_Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n  fullName: CustomAttributeNamedArgument.op_Inequality(CustomAttributeNamedArgument, CustomAttributeNamedArgument)\n- uid: System.Reflection.CustomAttributeNamedArgument.ToString\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: ToString()\n  nameWithType: CustomAttributeNamedArgument.ToString()\n  fullName: CustomAttributeNamedArgument.ToString()\n- uid: System.Reflection.CustomAttributeNamedArgument.TypedValue\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: TypedValue\n  nameWithType: CustomAttributeNamedArgument.TypedValue\n  fullName: CustomAttributeNamedArgument.TypedValue\n- uid: System.Reflection.CustomAttributeNamedArgument.#ctor*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: CustomAttributeNamedArgument\n  nameWithType: CustomAttributeNamedArgument.CustomAttributeNamedArgument\n  fullName: CustomAttributeNamedArgument.CustomAttributeNamedArgument\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.Equals*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: Equals\n  nameWithType: CustomAttributeNamedArgument.Equals\n  fullName: CustomAttributeNamedArgument.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.GetHashCode*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CustomAttributeNamedArgument.GetHashCode\n  fullName: CustomAttributeNamedArgument.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.IsField*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: IsField\n  nameWithType: CustomAttributeNamedArgument.IsField\n  fullName: CustomAttributeNamedArgument.IsField\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.MemberInfo*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: MemberInfo\n  nameWithType: CustomAttributeNamedArgument.MemberInfo\n  fullName: CustomAttributeNamedArgument.MemberInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.MemberName*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: MemberName\n  nameWithType: CustomAttributeNamedArgument.MemberName\n  fullName: CustomAttributeNamedArgument.MemberName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.op_Equality*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: op_Equality\n  nameWithType: CustomAttributeNamedArgument.op_Equality\n  fullName: CustomAttributeNamedArgument.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.op_Inequality*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CustomAttributeNamedArgument.op_Inequality\n  fullName: CustomAttributeNamedArgument.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.ToString*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: ToString\n  nameWithType: CustomAttributeNamedArgument.ToString\n  fullName: CustomAttributeNamedArgument.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n- uid: System.Reflection.CustomAttributeNamedArgument.TypedValue*\n  parent: System.Reflection.CustomAttributeNamedArgument\n  isExternal: false\n  name: TypedValue\n  nameWithType: CustomAttributeNamedArgument.TypedValue\n  fullName: CustomAttributeNamedArgument.TypedValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeNamedArgument.xml\n"}