{"nodes":[{"content":"Represents a single row delete operation expressed as a command tree. This class cannot be inherited.","nodes":[{"pos":[0,101],"content":"Represents a single row delete operation expressed as a command tree. This class cannot be inherited.","nodes":[{"content":"Represents a single row delete operation expressed as a command tree. This class cannot be inherited.","pos":[0,101],"nodes":[{"content":"Represents a single row delete operation expressed as a command tree.","pos":[0,69]},{"content":"This class cannot be inherited.","pos":[70,101]}]}]}],"pos":[521,623],"yaml":true},{"content":"Gets an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the predicate used to determine which members of the target collection should be deleted.","nodes":[{"pos":[0,178],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the predicate used to determine which members of the target collection should be deleted.","source":"Gets an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the predicate used to determine which members of the target collection should be deleted."}],"pos":[2347,2526],"yaml":true},{"content":"The predicate can include only the following elements: <xref:System.Data.Common.CommandTrees.DbComparisonExpression> (represents equality), <xref:System.Data.Common.CommandTrees.DbConstantExpression>, <xref:System.Data.Common.CommandTrees.DbIsNullExpression>, <xref:System.Data.Common.CommandTrees.DbPropertyExpression>, <xref:System.Data.Common.CommandTrees.DbVariableReferenceExpression> (references the target), <xref:System.Data.Common.CommandTrees.DbAndExpression>, <xref:System.Data.Common.CommandTrees.DbOrExpression>, and <xref:System.Data.Common.CommandTrees.DbNotExpression>.","nodes":[{"pos":[0,585],"content":"The predicate can include only the following elements: <xref:System.Data.Common.CommandTrees.DbComparisonExpression> (represents equality), <xref:System.Data.Common.CommandTrees.DbConstantExpression>, <xref:System.Data.Common.CommandTrees.DbIsNullExpression>, <xref:System.Data.Common.CommandTrees.DbPropertyExpression>, <xref:System.Data.Common.CommandTrees.DbVariableReferenceExpression> (references the target), <xref:System.Data.Common.CommandTrees.DbAndExpression>, <xref:System.Data.Common.CommandTrees.DbOrExpression>, and <xref:System.Data.Common.CommandTrees.DbNotExpression>.","nodes":[{"content":"The predicate can include only the following elements: <ph id=\"ph1\">&lt;xref:System.Data.Common.CommandTrees.DbComparisonExpression&gt;</ph> (represents equality), <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbConstantExpression&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Data.Common.CommandTrees.DbIsNullExpression&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;</ph> (references the target), <ph id=\"ph6\">&lt;xref:System.Data.Common.CommandTrees.DbAndExpression&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Data.Common.CommandTrees.DbOrExpression&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Data.Common.CommandTrees.DbNotExpression&gt;</ph>.","pos":[0,585],"source":"The predicate can include only the following elements: <xref:System.Data.Common.CommandTrees.DbComparisonExpression> (represents equality), <xref:System.Data.Common.CommandTrees.DbConstantExpression>, <xref:System.Data.Common.CommandTrees.DbIsNullExpression>, <xref:System.Data.Common.CommandTrees.DbPropertyExpression>, <xref:System.Data.Common.CommandTrees.DbVariableReferenceExpression> (references the target), <xref:System.Data.Common.CommandTrees.DbAndExpression>, <xref:System.Data.Common.CommandTrees.DbOrExpression>, and <xref:System.Data.Common.CommandTrees.DbNotExpression>."}]}],"pos":[2537,3125],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the predicate used to determine which members of the target collection should be deleted.","nodes":[{"pos":[0,173],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the predicate used to determine which members of the target collection should be deleted.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the predicate used to determine which members of the target collection should be deleted."}],"pos":[3307,3481],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbDeleteCommandTree\n  commentId: T:System.Data.Common.CommandTrees.DbDeleteCommandTree\n  id: DbDeleteCommandTree\n  children:\n  - System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate\n  langs:\n  - csharp\n  name: DbDeleteCommandTree\n  nameWithType: DbDeleteCommandTree\n  fullName: System.Data.Common.CommandTrees.DbDeleteCommandTree\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Represents a single row delete operation expressed as a command tree. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class DbDeleteCommandTree : System.Data.Common.CommandTrees.DbModificationCommandTree'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbCommandTree\n  - System.Data.Common.CommandTrees.DbModificationCommandTree\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  - System.Data.Common.CommandTrees.DbModificationCommandTree.Target\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbDeleteCommandTree.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate\n  commentId: P:System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate\n  id: Predicate\n  parent: System.Data.Common.CommandTrees.DbDeleteCommandTree\n  langs:\n  - csharp\n  name: Predicate\n  nameWithType: DbDeleteCommandTree.Predicate\n  fullName: DbDeleteCommandTree.Predicate\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the predicate used to determine which members of the target collection should be deleted.\n  remarks: 'The predicate can include only the following elements: <xref:System.Data.Common.CommandTrees.DbComparisonExpression> (represents equality), <xref:System.Data.Common.CommandTrees.DbConstantExpression>, <xref:System.Data.Common.CommandTrees.DbIsNullExpression>, <xref:System.Data.Common.CommandTrees.DbPropertyExpression>, <xref:System.Data.Common.CommandTrees.DbVariableReferenceExpression> (references the target), <xref:System.Data.Common.CommandTrees.DbAndExpression>, <xref:System.Data.Common.CommandTrees.DbOrExpression>, and <xref:System.Data.Common.CommandTrees.DbNotExpression>.'\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Predicate { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the predicate used to determine which members of the target collection should be deleted.\n  overload: System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbDeleteCommandTree.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.CommandTrees.DbModificationCommandTree\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbModificationCommandTree\n  nameWithType: DbModificationCommandTree\n  fullName: System.Data.Common.CommandTrees.DbModificationCommandTree\n- uid: System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate\n  parent: System.Data.Common.CommandTrees.DbDeleteCommandTree\n  isExternal: false\n  name: Predicate\n  nameWithType: DbDeleteCommandTree.Predicate\n  fullName: DbDeleteCommandTree.Predicate\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate*\n  parent: System.Data.Common.CommandTrees.DbDeleteCommandTree\n  isExternal: false\n  name: Predicate\n  nameWithType: DbDeleteCommandTree.Predicate\n  fullName: DbDeleteCommandTree.Predicate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbDeleteCommandTree.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n  fullName: DbCommandTree.Parameters\n- uid: System.Data.Common.CommandTrees.DbModificationCommandTree.Target\n  parent: System.Data.Common.CommandTrees.DbModificationCommandTree\n  isExternal: false\n  name: Target\n  nameWithType: DbModificationCommandTree.Target\n  fullName: DbModificationCommandTree.Target\n"}