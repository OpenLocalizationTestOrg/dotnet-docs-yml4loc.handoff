<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">770df987a04e63d4a402830a1168195f24dfd1bb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.OracleClient.OracleConnection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fbb2c72e85c6b5b0d8def4cd8c824f6e8307c4e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63043493df84a2d40419238fe448378527f1d559</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an open connection to a database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object represents a unique connection to an Oracle database.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a client/server database system, it is equivalent to a network connection to the server.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that creates an instance of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object can set declarative or imperative security demands that require all direct and indirect callers to have adequate permission to the code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> creates security demands by using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OraclePermission&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can verify that their code has adequate permissions by using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OraclePermissionAttribute&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the machine, user, and enterprise levels.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Security<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept> object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a connection time-out either as a property or in the connection string has no effect, and the value returned is always zero.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> also does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.Database%2A&gt;</ph> property or a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object goes out of scope, it remains open.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should always close <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> objects by calling <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept>, or by using the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object within a <ph id="ph4">`Using`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the garbage collection might not free them immediately.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such delays can cause errors if the maximum number of connections is reached while a number of connections are waiting to be deleted by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, closing the connections by calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> uses native resources more efficiently, enhancing scalability and improving overall application performance.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that connections are always closed, open the connection inside of a <ph id="ph1">`Using`</ph> block.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deploy high-performance applications, you often need to use connection pooling.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when you use the .NET Framework Data Provider for Oracle, you do not need to enable connection pooling because the provider manages this automatically.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph> class with the specified connection string.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The connection used to open the database.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Begins a transaction at the database.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit or roll back the transaction, you must explicitly use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleTransaction.Rollback%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that the .NET Framework Data Provider for Oracle transaction management model performs correctly, avoid using other transaction management models, such as those provided by the database.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify an isolation level, the default isolation level is used.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify an isolation level with the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A&gt;</ph> method, use the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Begins a transaction at the database with the specified <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit or roll back the transaction, you must explicitly use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleTransaction.Rollback%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that the .NET Framework Data Provider for Oracle transaction management model performs correctly, avoid using other transaction management models, such as those provided by the database.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The transaction isolation level for this connection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Changes the current database for an open <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter must contain a valid database name, and cannot contain a null value, an empty string (""), or a string with only blank characters.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <bpt id="p1">**</bpt>Connection<ept id="p1">**</ept> object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a connection time-out either as a property or in the connection string has no effect, and the value returned is always zero.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> also does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.Database%2A&gt;</ph> property or a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the database to use instead of the current database.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The database name is not valid.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The connection is not open.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Cannot change the database.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Empties the connection pool.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A&gt;</ph> resets (or empties) the connection pool.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If connections are in use at the time of the call, they are marked appropriately and are discarded when <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> is called on them.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Empties the connection pool associated with the specified connection.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ClearPool%2A&gt;</ph> method clears the connection pool that is associated with <ph id="ph2">`connection`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If additional connections associated with <ph id="ph1">`connection`</ph> are in use at the time of the call, they are marked appropriately and are discarded when <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> is called on them.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph> to be cleared from the pool.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Closes the connection to the database.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> more than once without generating an exception.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the .NET Framework Data Provider for Oracle, you do not need to enable connection pooling because the provider manages this automatically.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, or any other managed object in the <ph id="ph4">`Finalize`</ph> method of your class.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets the string used to open an Oracle database.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> can be set only when the connection is closed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> property to connect to a database.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates a typical connection string.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the settings specified in the string have corresponding read-only properties (for example, <ph id="ph1">`Data Source=MyServer`</ph>, which corresponds to the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.DataSource%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the connection string is set, all of these properties are updated, unless an error is detected, in which case none of the properties are updated.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> properties return only default settings or those settings specified in the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> on a closed connection resets all connection string values (and related properties), including the password.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string is parsed immediately after being set.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If parsing reveals errors in syntax, a run-time exception, such as <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>, is generated.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other errors can be found only when an attempt is made to open the connection.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The basic format of a connection string is a series of keyword/value pairs separated by semicolons.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equal sign (=) connects each keyword and its value.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotes.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotes.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The single quote is also useful if the value begins with a double-quote character.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, the double quote can be used if the value begins with a single quote.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value contains both single-quote and double-quote characters, the quote character used to enclose the value must be doubled each time it occurs within the value.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotes or double quotes.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotes.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, spaces within a string literal keyword or value are preserved.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single or double quotes may be used within a connection string without using delimiters unless a quote character is the first or last character in the value, for example, <ph id="ph1">`Data Source= my'Server`</ph> or <ph id="ph2">`Data Source= my"Server`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the hypothetical connection string</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>the keyword is "key=word" and the value is "value".</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a specific keyword in a keyword/value pair occurs more than once in a connection string, the last occurrence is used in the value set.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keywords are case insensitive.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the valid names for values within the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name or network address of the instance of Oracle to which to connect.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Integrated Security</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>'false'</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether the connection is to be a secure connection or not.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recognized values are <ph id="ph1">`true`</ph> (strongly recommended), <ph id="ph2">`false`</ph>, <ph id="ph3">`yes`</ph>, and <ph id="ph4">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Password</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The password for the Oracle account logging on.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain a high level of security, we strongly recommend that you use the Integrated Security keyword instead.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persist Security Info</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>'false'</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When set to <ph id="ph1">`false`</ph> or <ph id="ph2">`no`</ph> (strongly recommended), security-sensitive information such as the password is not returned as part of the connection if the connection is open or has ever been in an open <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.State%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting the connection string resets all connection string values, including the password.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recognized values are <ph id="ph1">`true`</ph>, <ph id="ph2">`false`</ph>, <ph id="ph3">`yes`</ph>, and <ph id="ph4">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>'false'</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies whether the .NET Framework Data Provider for Oracle uses UTF16 mode API calls.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This keyword is ignored except when using Oracle9i client software.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>User ID</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Oracle login account.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain a high level of security, we strongly recommend that you use the Integrated Security keyword instead.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the valid names for connection pooling values within the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Connection Lifetime</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a connection is returned to the pool, its creation time is compared with the current time, and the connection is destroyed if that time span (in seconds) exceeds the value specified by <ph id="ph1">`Connection Lifetime`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful in clustered configurations to force load balancing between a running server and a server just brought online.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of zero causes pooled connections to have the maximum connection time-out.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enlist</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>'true'</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`true`</ph> or <ph id="ph2">`yes`</ph>, the pooler automatically enlists the connection in the creation thread's current transaction context.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recognized values are <ph id="ph1">`true`</ph>, <ph id="ph2">`false`</ph>, <ph id="ph3">`yes`</ph>, and <ph id="ph4">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Max Pool Size</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>100</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum number of connections allowed in the pool.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">`Max Pool Size`</ph> value of the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> can affect performance.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you plan to create and actively use more than 100 connections, you should increase <ph id="ph1">`Max Pool Size`</ph> to a value that approximates the steady-state connection usage for the application.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Min Pool Size</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The minimum number of connections allowed in the pool.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pooling</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>'true'</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`true`</ph> or <ph id="ph2">`yes`</ph>, the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object is drawn from the appropriate pool, or if necessary, is created and added to the appropriate pool.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recognized values are <ph id="ph1">`true`</ph>, <ph id="ph2">`false`</ph>, <ph id="ph3">`yes`</ph>, and <ph id="ph4">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting keyword or connection pooling values that require a Boolean value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Integer values are represented as strings.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The Oracle connection string that includes settings, such as the server name, needed to establish the initial connection.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets the time to wait to establish a connection before terminating the attempt and generating an error.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the amount of time a connection waits to time out by using the <ph id="ph1">`Connect Timeout`</ph> or <ph id="ph2">`Connection Timeout`</ph> keywords in the connection string.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates no limit, and should be avoided in a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> because an attempt to connect waits indefinitely.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">`Connection`</ph> object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> does not support a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a connection time-out either with a property or in the connection string has no effect, and the value returned is always zero.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> also does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.Database%2A&gt;</ph> property or a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The time (in seconds) to wait for a connection to open.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The default value is 15 seconds.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The value specified is less than 0.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Creates and returns an <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;&lt;/xref&gt;</ph> object associated with the <ph id="ph2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets the name of the current database or the database to be used after a connection is opened.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Database%2A&gt;</ph> property updates dynamically.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the current database using a SQL statement or the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A&gt;</ph> method, an informational message is sent and the property is updated automatically.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">`Connection`</ph> object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> does not support a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a connection time-out either with a property or in the connection string has no effect, and the value returned is always zero.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> also does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.Database%2A&gt;</ph> property or a <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The name of the current database or the name of the database to be used after a connection is opened.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets the name of the Oracle server to which to connect.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The name of the Oracle server to which to connect.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept> for this purpose.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can continue to enlist in an existing distributed transaction using the</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A&gt;</ph> method if auto-enlistment is disabled.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enlisting in an existing distributed transaction ensures that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A&gt;</ph> returns an exception if the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> has already started a transaction using <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object), <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A&gt;</ph> rolls back the local transaction and enlists in the existing distributed transaction as requested.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.EnterpriseServices.ITransaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept>, which uses a <bpt id="p3">**</bpt>System.EnterpriseServices.ITransaction<ept id="p3">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queries using <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.GetSchema%2A&gt;</ph> are case sensitive.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of Oracle's treatment of cases when a schema is first created, this can lead to unexpected results.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema was created without quotes<ph id="ph1">`,`</ph> Oracle stores the object name in upper case.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema was created with quotes, Oracle stores the object name in the casing provided.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you create a table called MyTable, using one of the following two statements:</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve information about this table via the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method in the first case, you would have to pass "MYTABLE" in as an argument.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the second case, you would have to pass "MyTable" in as an argument.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;collectionName&lt;/code&gt;</ph> is specified as null.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply n depth of values which are specified by the restrictions collection for a specific collection.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this is the "Tables" collection.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the "Tables" collection has 3 restrictions: database, owner, and table name; and you want to get back only the tables associated with the owner "Carl", then you would need to pass in the following values (at a minimum): null, "Carl".</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the same mapping as passing in null, which is different than passing in an empty string for the parameter value.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queries using <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.GetSchema%2A&gt;</ph> are case sensitive.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of Oracle's treatment of cases when a schema is first created, this can lead to unexpected results.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema was created without quotes<ph id="ph1">`,`</ph> Oracle stores the object name in upper case.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema was created with quotes, Oracle stores the object name in the casing provided.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you create a table called MyTable, using one of the following two statements:</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve information about this table via the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method in the first case, you would have to pass "MYTABLE" in as an argument.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the second case, you would have to pass "MyTable" in as an argument.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A set of restriction values for the requested schema.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;collectionName&lt;/code&gt;</ph> is specified as null.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Occurs when Oracle sends a warning or an informational message.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the .NET Framework Data Provider for Oracle uses the Oracle Call Interface (OCI), whenever the data provider receives a Success With Info message, an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.InfoMessage&gt;</ph> event is generated.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example would be creating a stored procedure that contains a syntax error.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The call to the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> method would succeed.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>However an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.InfoMessage&gt;</ph> event would be generated informing you of the syntax error.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients who want to process warnings or informational messages sent by the server should create an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleInfoMessageEventHandler&gt;</ph> delegate to listen to this event.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Opens a connection to a database with the property settings specified by the <ph id="ph1">&lt;xref href="System.Data.OracleClient.OracleConnection.ConnectionString"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> draws an open connection from the connection pool if one is available.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it establishes a new connection to the database.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> goes out of scope, the connection it represents does not close automatically.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The connection is not open.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Cannot change the database.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets a string containing the version of the server to which the client is connected.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A&gt;</ph> property is in Oracle version format.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the format for an Oracle8 release is a string in the form "8.1.7.0.0 Oracle8 Release 8.1.7.0.0 - Production."</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The version of the connected server.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Gets the current state of the connection.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The allowed state changes are:</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>From <ph id="ph1">`Closed`</ph> to <ph id="ph2">`Open`</ph>, using the <ph id="ph3">`Open`</ph> method of the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>From <ph id="ph1">`Open`</ph> to <ph id="ph2">`Closed`</ph>, using the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.Close%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Data.ConnectionState"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Closed`</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Creates a new object that is a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of this instance..</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>