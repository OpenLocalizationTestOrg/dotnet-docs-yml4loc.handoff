### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.EnumBuilder
  commentId: T:System.Reflection.Emit.EnumBuilder
  id: EnumBuilder
  children:
  - System.Reflection.Emit.EnumBuilder.#ctor
  - System.Reflection.Emit.EnumBuilder.Assembly
  - System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.EnumBuilder.Attributes
  - System.Reflection.Emit.EnumBuilder.BaseType
  - System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  - System.Reflection.Emit.EnumBuilder.CreateType
  - System.Reflection.Emit.EnumBuilder.CreateTypeInfo
  - System.Reflection.Emit.EnumBuilder.DeclaringMethod
  - System.Reflection.Emit.EnumBuilder.DeclaringType
  - System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)
  - System.Reflection.Emit.EnumBuilder.FullName
  - System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  - System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  - System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  - System.Reflection.Emit.EnumBuilder.GetArrayRank
  - System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl
  - System.Reflection.Emit.EnumBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.EnumBuilder.GetConstructors(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.EnumBuilder.GetElementType
  - System.Reflection.Emit.EnumBuilder.GetEnumUnderlyingType
  - System.Reflection.Emit.EnumBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetEvents
  - System.Reflection.Emit.EnumBuilder.GetEvents(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints
  - System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.EnumBuilder.GetInterface(System.String,System.Boolean)
  - System.Reflection.Emit.EnumBuilder.GetInterfaceMap(System.Type)
  - System.Reflection.Emit.EnumBuilder.GetInterfaces
  - System.Reflection.Emit.EnumBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetMembers(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.EnumBuilder.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetProperties(System.Reflection.BindingFlags)
  - System.Reflection.Emit.EnumBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.EnumBuilder.GUID
  - System.Reflection.Emit.EnumBuilder.HasElementTypeImpl
  - System.Reflection.Emit.EnumBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Reflection.Emit.EnumBuilder.IsArrayImpl
  - System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.EnumBuilder.IsByRefImpl
  - System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl
  - System.Reflection.Emit.EnumBuilder.IsConstructedGenericType
  - System.Reflection.Emit.EnumBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.EnumBuilder.IsEnum
  - System.Reflection.Emit.EnumBuilder.IsGenericParameter
  - System.Reflection.Emit.EnumBuilder.IsGenericType
  - System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.EnumBuilder.IsPointerImpl
  - System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl
  - System.Reflection.Emit.EnumBuilder.IsSerializable
  - System.Reflection.Emit.EnumBuilder.IsSZArray
  - System.Reflection.Emit.EnumBuilder.IsTypeDefinition
  - System.Reflection.Emit.EnumBuilder.IsValueTypeImpl
  - System.Reflection.Emit.EnumBuilder.IsVariableBoundArray
  - System.Reflection.Emit.EnumBuilder.MakeArrayType
  - System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.EnumBuilder.MakeByRefType
  - System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.EnumBuilder.MakePointerType
  - System.Reflection.Emit.EnumBuilder.Module
  - System.Reflection.Emit.EnumBuilder.Name
  - System.Reflection.Emit.EnumBuilder.Namespace
  - System.Reflection.Emit.EnumBuilder.ReflectedType
  - System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.EnumBuilder.TypeHandle
  - System.Reflection.Emit.EnumBuilder.TypeToken
  - System.Reflection.Emit.EnumBuilder.UnderlyingField
  - System.Reflection.Emit.EnumBuilder.UnderlyingSystemType
  - System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: EnumBuilder
  nameWithType: EnumBuilder
  fullName: System.Reflection.Emit.EnumBuilder
  type: Class
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Describes and represents an enumeration type.
  remarks: >-
    > [!NOTE]

    >  In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type. In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.
  example:
  - "The following code example demonstrates the construction of an enumeration within a dynamic assembly, using `EnumBuilder`. The example defines an enumeration named `Elevation`, with an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1. After the type has been created, the assembly is saved with the name `TempAssembly.dll`. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.  \n  \n> [!NOTE]\n>  Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.  \n  \n [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]\n [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]\n [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class EnumBuilder : System.Reflection.TypeInfo, System.Runtime.InteropServices._EnumBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.TypeInfo
  implements:
  - System.Runtime.InteropServices._EnumBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.Equals(System.Object)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.GetHashCode
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.TypeInfo.AsType
  - System.Reflection.TypeInfo.DeclaredConstructors
  - System.Reflection.TypeInfo.DeclaredEvents
  - System.Reflection.TypeInfo.DeclaredFields
  - System.Reflection.TypeInfo.DeclaredMembers
  - System.Reflection.TypeInfo.DeclaredMethods
  - System.Reflection.TypeInfo.DeclaredNestedTypes
  - System.Reflection.TypeInfo.DeclaredProperties
  - System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Reflection.TypeInfo.GenericTypeParameters
  - System.Reflection.TypeInfo.GetConstructor(System.Type[])
  - System.Reflection.TypeInfo.GetConstructors
  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  - System.Reflection.TypeInfo.GetDeclaredField(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  - System.Reflection.TypeInfo.GetDefaultMembers
  - System.Reflection.TypeInfo.GetEnumName(System.Object)
  - System.Reflection.TypeInfo.GetEnumNames
  - System.Reflection.TypeInfo.GetEnumValues
  - System.Reflection.TypeInfo.GetEvent(System.String)
  - System.Reflection.TypeInfo.GetField(System.String)
  - System.Reflection.TypeInfo.GetFields
  - System.Reflection.TypeInfo.GetGenericArguments
  - System.Reflection.TypeInfo.GetInterface(System.String)
  - System.Reflection.TypeInfo.GetMember(System.String)
  - System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeInfo.GetMembers
  - System.Reflection.TypeInfo.GetMethod(System.String)
  - System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])
  - System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.TypeInfo.GetMethods
  - System.Reflection.TypeInfo.GetNestedType(System.String)
  - System.Reflection.TypeInfo.GetNestedTypes
  - System.Reflection.TypeInfo.GetProperties
  - System.Reflection.TypeInfo.GetProperty(System.String)
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type)
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])
  - System.Reflection.TypeInfo.HasElementType
  - System.Reflection.TypeInfo.ImplementedInterfaces
  - System.Reflection.TypeInfo.IsAbstract
  - System.Reflection.TypeInfo.IsAnsiClass
  - System.Reflection.TypeInfo.IsArray
  - System.Reflection.TypeInfo.IsAssignableFrom(System.Type)
  - System.Reflection.TypeInfo.IsAutoClass
  - System.Reflection.TypeInfo.IsAutoLayout
  - System.Reflection.TypeInfo.IsByRef
  - System.Reflection.TypeInfo.IsClass
  - System.Reflection.TypeInfo.IsCOMObject
  - System.Reflection.TypeInfo.IsEnumDefined(System.Object)
  - System.Reflection.TypeInfo.IsEquivalentTo(System.Type)
  - System.Reflection.TypeInfo.IsExplicitLayout
  - System.Reflection.TypeInfo.IsImport
  - System.Reflection.TypeInfo.IsInstanceOfType(System.Object)
  - System.Reflection.TypeInfo.IsInterface
  - System.Reflection.TypeInfo.IsLayoutSequential
  - System.Reflection.TypeInfo.IsMarshalByRef
  - System.Reflection.TypeInfo.IsNested
  - System.Reflection.TypeInfo.IsNestedAssembly
  - System.Reflection.TypeInfo.IsNestedFamANDAssem
  - System.Reflection.TypeInfo.IsNestedFamily
  - System.Reflection.TypeInfo.IsNestedFamORAssem
  - System.Reflection.TypeInfo.IsNestedPrivate
  - System.Reflection.TypeInfo.IsNestedPublic
  - System.Reflection.TypeInfo.IsNotPublic
  - System.Reflection.TypeInfo.IsPointer
  - System.Reflection.TypeInfo.IsPrimitive
  - System.Reflection.TypeInfo.IsPublic
  - System.Reflection.TypeInfo.IsSealed
  - System.Reflection.TypeInfo.IsSpecialName
  - System.Reflection.TypeInfo.IsSubclassOf(System.Type)
  - System.Reflection.TypeInfo.IsUnicodeClass
  - System.Reflection.TypeInfo.IsValueType
  - System.Reflection.TypeInfo.IsVisible
  - System.Reflection.TypeInfo.MemberType
  - System.Reflection.TypeInfo.StructLayoutAttribute
  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  - System.Reflection.TypeInfo.TypeInitializer
  extensionMethods:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.#ctor
  commentId: M:System.Reflection.Emit.EnumBuilder.#ctor
  id: '#ctor'
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: EnumBuilder()
  nameWithType: EnumBuilder.EnumBuilder()
  fullName: EnumBuilder.EnumBuilder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected EnumBuilder ();
    parameters: []
  overload: System.Reflection.Emit.EnumBuilder.#ctor*
  exceptions: []
  version:
  - xamarinios-10.8
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.Assembly
  commentId: P:System.Reflection.Emit.EnumBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: Assembly
  nameWithType: EnumBuilder.Assembly
  fullName: EnumBuilder.Assembly
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the dynamic assembly that contains this enum definition.
  remarks: ''
  example:
  - "The following code sample demonstrates the use of the `Assembly` property to reference the parent assembly of the current `EnumBuilder`.  \n  \n [!code-cpp[EnumBuilder_Properties_5#1](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_Properties_5/CPP/enumbuilder_properties_5.cpp#1)]\n [!code-csharp[EnumBuilder_Properties_5#1](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_Properties_5/CS/enumbuilder_properties_5.cs#1)]\n [!code-vb[EnumBuilder_Properties_5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_Properties_5/VB/enumbuilder_properties_5.vb#1)]"
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: Read-only. The dynamic assembly that contains this enum definition.
  overload: System.Reflection.Emit.EnumBuilder.Assembly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  commentId: P:System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: EnumBuilder.AssemblyQualifiedName
  fullName: EnumBuilder.AssemblyQualifiedName
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the full path of this enum qualified by the display name of the parent assembly.
  remarks: "The format of the returned string is:  \n  \n \\<FullTypeName>, \\<AssemblyDisplayName>  \n  \n See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.  \n  \n## Version Information  \n In the .NET Framework version 1.1 and earlier, the return value of this property did not include the culture or public key."
  example:
  - "The following code sample demonstrates the use of the `AssemblyQualifiedName` property to reference the qualified parent assembly name of the current `EnumBuilder`.  \n  \n [!code-cpp[EnumBuilder_Properties_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_Properties_5/CPP/enumbuilder_properties_5.cpp#2)]\n [!code-csharp[EnumBuilder_Properties_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_Properties_5/CS/enumbuilder_properties_5.cs#2)]\n [!code-vb[EnumBuilder_Properties_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_Properties_5/VB/enumbuilder_properties_5.vb#2)]"
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: Read-only. The full path of this enum qualified by the display name of the parent assembly.
  overload: System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.Attributes
  commentId: P:System.Reflection.Emit.EnumBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: Attributes
  nameWithType: EnumBuilder.Attributes
  fullName: EnumBuilder.Attributes
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.Attributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.BaseType
  commentId: P:System.Reflection.Emit.EnumBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: BaseType
  nameWithType: EnumBuilder.BaseType
  fullName: EnumBuilder.BaseType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the parent <xref href="System.Type"></xref> of this type which is always <xref href="System.Enum"></xref>.
  syntax:
    content: public override Type BaseType { get; }
    return:
      type: System.Type
      description: Read-only. The parent <xref href="System.Type"></xref> of this type.
  overload: System.Reflection.Emit.EnumBuilder.BaseType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  commentId: P:System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: ContainsGenericParameters
  nameWithType: EnumBuilder.ContainsGenericParameters
  fullName: EnumBuilder.ContainsGenericParameters
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool ContainsGenericParameters { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.ContainsGenericParameters*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.CreateType
  commentId: M:System.Reflection.Emit.EnumBuilder.CreateType
  id: CreateType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: CreateType()
  nameWithType: EnumBuilder.CreateType()
  fullName: EnumBuilder.CreateType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Creates a <xref href="System.Type"></xref> object for this enum.
  syntax:
    content: public Type CreateType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object for this enum.
  overload: System.Reflection.Emit.EnumBuilder.CreateType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This type has been previously created.  \n  \n -or-  \n  \n The enclosing type has not been created."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.CreateTypeInfo
  commentId: M:System.Reflection.Emit.EnumBuilder.CreateTypeInfo
  id: CreateTypeInfo
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: CreateTypeInfo()
  nameWithType: EnumBuilder.CreateTypeInfo()
  fullName: EnumBuilder.CreateTypeInfo()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a <xref href="System.Reflection.TypeInfo"></xref> object that represents this enumeration.
  syntax:
    content: public System.Reflection.TypeInfo CreateTypeInfo ();
    parameters: []
    return:
      type: System.Reflection.TypeInfo
      description: An object that represents this enumeration.
  overload: System.Reflection.Emit.EnumBuilder.CreateTypeInfo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.DeclaringMethod
  commentId: P:System.Reflection.Emit.EnumBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: DeclaringMethod
  nameWithType: EnumBuilder.DeclaringMethod
  fullName: EnumBuilder.DeclaringMethod
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override System.Reflection.MethodBase DeclaringMethod { get; }
    return:
      type: System.Reflection.MethodBase
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.DeclaringMethod*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.EnumBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: DeclaringType
  nameWithType: EnumBuilder.DeclaringType
  fullName: EnumBuilder.DeclaringType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the type that declared this <xref href="System.Reflection.Emit.EnumBuilder"></xref>.
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: Read-only. The type that declared this <xref href="System.Reflection.Emit.EnumBuilder"></xref>.
  overload: System.Reflection.Emit.EnumBuilder.DeclaringType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)
  commentId: M:System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)
  id: DefineLiteral(System.String,System.Object)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: DefineLiteral(String, Object)
  nameWithType: EnumBuilder.DefineLiteral(String, Object)
  fullName: EnumBuilder.DefineLiteral(String, Object)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines the named static field in an enumeration type with the specified constant value.
  remarks: "The defined field will have the field attributes <xref:System.Reflection.FieldAttributes.Public>, <xref:System.Reflection.FieldAttributes.Static>, and <xref:System.Reflection.FieldAttributes.Literal> set.  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type. In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type."
  example:
  - "The following code example demonstrates the construction of an enumeration within a dynamic assembly, using `EnumBuilder`. The example defines an enumeration named `Elevation`, with an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1. After the type has been created, the assembly is saved with the name `TempAssembly.dll`. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.  \n  \n> [!NOTE]\n>  Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.  \n  \n [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]\n [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]\n [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]"
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineLiteral (string literalName, object literalValue);
    parameters:
    - id: literalName
      type: System.String
      description: The name of the static field.
    - id: literalValue
      type: System.Object
      description: The constant value of the literal.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: The defined field.
  overload: System.Reflection.Emit.EnumBuilder.DefineLiteral*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.FullName
  commentId: P:System.Reflection.Emit.EnumBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: FullName
  nameWithType: EnumBuilder.FullName
  fullName: EnumBuilder.FullName
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the full path of this enum.
  remarks: The returned format is "enclosingTypeFullName+nestedTypeName" for nested types and "typeName" for non-nested types.
  syntax:
    content: public override string FullName { get; }
    return:
      type: System.String
      description: Read-only. The full path of this enum.
  overload: System.Reflection.Emit.EnumBuilder.FullName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  commentId: P:System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GenericParameterAttributes
  nameWithType: EnumBuilder.GenericParameterAttributes
  fullName: EnumBuilder.GenericParameterAttributes
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }
    return:
      type: System.Reflection.GenericParameterAttributes
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GenericParameterAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  commentId: P:System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GenericParameterPosition
  nameWithType: EnumBuilder.GenericParameterPosition
  fullName: EnumBuilder.GenericParameterPosition
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GenericParameterPosition { get; }
    return:
      type: System.Int32
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GenericParameterPosition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  commentId: P:System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GenericTypeArguments
  nameWithType: EnumBuilder.GenericTypeArguments
  fullName: EnumBuilder.GenericTypeArguments
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GenericTypeArguments { get; }
    return:
      type: System.Type[]
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GenericTypeArguments*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetArrayRank
  commentId: M:System.Reflection.Emit.EnumBuilder.GetArrayRank
  id: GetArrayRank
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: EnumBuilder.GetArrayRank()
  fullName: EnumBuilder.GetArrayRank()
  type: Method
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetArrayRank*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl
  id: GetAttributeFlagsImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetAttributeFlagsImpl()
  nameWithType: EnumBuilder.GetAttributeFlagsImpl()
  fullName: EnumBuilder.GetAttributeFlagsImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  commentId: M:System.Reflection.Emit.EnumBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: EnumBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: EnumBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: ''
    - id: binder
      type: System.Reflection.Binder
      description: ''
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: ''
    - id: types
      type: System.Type[]
      description: ''
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: ''
    return:
      type: System.Reflection.ConstructorInfo
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetConstructorImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetConstructors(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: EnumBuilder.GetConstructors(BindingFlags)
  fullName: EnumBuilder.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns an array of <xref href="System.Reflection.ConstructorInfo"></xref> objects representing the public and non-public constructors defined for this class, as specified.
  remarks: As a workaround, to retrieve the constructor of a finished type, you can retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref> : `InvokeMethod`, `NonPublic`, and so on.'
    return:
      type: System.Reflection.ConstructorInfo[]
      description: Returns an array of <xref href="System.Reflection.ConstructorInfo"></xref> objects representing the specified constructors defined for this class. If no constructors are defined, an empty array is returned.
  overload: System.Reflection.Emit.EnumBuilder.GetConstructors*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: EnumBuilder.GetCustomAttributes(Type, Boolean)
  fullName: EnumBuilder.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the custom attributes identified by the given type.
  remarks: "As a workaround, to retrieve the custom attributes of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> and call <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName> on the returned <xref:System.Type>.  \n  \n The following code sample illustrates the use of `GetCustomAttribute` in the context of <xref:System.Reflection.Emit.EnumBuilder>.  \n  \n [!code-cpp[EnumBuilder_SetCustomAttribute1#2](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute1/CPP/enumbuilder_setcustomattribute1.cpp#2)]\n [!code-csharp[EnumBuilder_SetCustomAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute1/CS/enumbuilder_setcustomattribute1.cs#2)]\n [!code-vb[EnumBuilder_SetCustomAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute1/VB/enumbuilder_setcustomattribute1.vb#2)]"
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The `Type` object to which the custom attributes are applied.
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Object[]
      description: Returns an array of objects representing the attributes of this constructor that are of <xref href="System.Type"></xref><code>attributeType</code>.
  overload: System.Reflection.Emit.EnumBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: EnumBuilder.GetCustomAttributes(Boolean)
  fullName: EnumBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns all the custom attributes defined for this constructor.
  remarks: "As a workaround, to retrieve the custom attributes of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> and call <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> on the returned <xref:System.Type>.  \n  \n The following code sample illustrates the use of `GetCustomAttribute` in the context of <xref:System.Reflection.Emit.EnumBuilder>.  \n  \n [!code-cpp[EnumBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/CPP/enumbuilder_setcustomattribute2.cpp#1)]\n [!code-csharp[EnumBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/CS/enumbuilder_setcustomattribute2.cs#1)]\n [!code-vb[EnumBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/VB/enumbuilder_setcustomattribute2.vb#1)]"
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Object[]
      description: Returns an array of objects representing all the custom attributes of the constructor represented by this <xref href="System.Reflection.Emit.ConstructorBuilder"></xref> instance.
  overload: System.Reflection.Emit.EnumBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetElementType
  commentId: M:System.Reflection.Emit.EnumBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetElementType()
  nameWithType: EnumBuilder.GetElementType()
  fullName: EnumBuilder.GetElementType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Calling this method always throws <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: This method is not supported. No value is returned.
  overload: System.Reflection.Emit.EnumBuilder.GetElementType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetEnumUnderlyingType
  commentId: M:System.Reflection.Emit.EnumBuilder.GetEnumUnderlyingType
  id: GetEnumUnderlyingType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetEnumUnderlyingType()
  nameWithType: EnumBuilder.GetEnumUnderlyingType()
  fullName: EnumBuilder.GetEnumUnderlyingType()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the underlying integer type of the current enumeration, which is set when the enumeration builder is defined.
  syntax:
    content: public override Type GetEnumUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: The underlying type.
  overload: System.Reflection.Emit.EnumBuilder.GetEnumUnderlyingType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetEvent(String, BindingFlags)
  nameWithType: EnumBuilder.GetEvent(String, BindingFlags)
  fullName: EnumBuilder.GetEvent(String, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the event with the specified name.
  remarks: As a workaround, to retrieve the event of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: The name of the event to get.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This invocation attribute. This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref> : `InvokeMethod`, `NonPublic`, and so on.'
    return:
      type: System.Reflection.EventInfo
      description: Returns an <xref href="System.Reflection.EventInfo"></xref> object representing the event declared or inherited by this type with the specified name. If there are no matches, `null` is returned.
  overload: System.Reflection.Emit.EnumBuilder.GetEvent*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetEvents
  commentId: M:System.Reflection.Emit.EnumBuilder.GetEvents
  id: GetEvents
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetEvents()
  nameWithType: EnumBuilder.GetEvents()
  fullName: EnumBuilder.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the events for the public events declared or inherited by this type.
  remarks: As a workaround, to retrieve the events of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: Returns an array of <xref href="System.Reflection.EventInfo"></xref> objects representing the public events declared or inherited by this type. An empty array is returned if there are no public events.
  overload: System.Reflection.Emit.EnumBuilder.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetEvents(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: EnumBuilder.GetEvents(BindingFlags)
  fullName: EnumBuilder.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public events that are declared by this type.
  remarks: As a workaround, to retrieve the events of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type to retrieve the events.
  syntax:
    content: public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref>, such as `InvokeMethod`, `NonPublic`, and so on.
    return:
      type: System.Reflection.EventInfo[]
      description: Returns an array of <xref href="System.Reflection.EventInfo"></xref> objects representing the public and non-public events declared or inherited by this type. An empty array is returned if there are no events, as specified.
  overload: System.Reflection.Emit.EnumBuilder.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetField(System.String,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetField(String, BindingFlags)
  nameWithType: EnumBuilder.GetField(String, BindingFlags)
  fullName: EnumBuilder.GetField(String, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the field specified by the given name.
  remarks: As a workaround, to retrieve the field of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: The name of the field to get.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref> : `InvokeMethod`, `NonPublic`, and so on.'
    return:
      type: System.Reflection.FieldInfo
      description: Returns the <xref href="System.Reflection.FieldInfo"></xref> object representing the field declared or inherited by this type with the specified name and public or non-public modifier. If there are no matches, then null is returned.
  overload: System.Reflection.Emit.EnumBuilder.GetField*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetFields(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: EnumBuilder.GetFields(BindingFlags)
  fullName: EnumBuilder.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public fields that are declared by this type.
  remarks: "As a workaround, to retrieve the field of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.  \n  \n The <xref:System.Reflection.Emit.EnumBuilder.GetFields%2A> method does not return fields in a particular order, such as alphabetical or declaration order. Your code must not depend on the order in which fields are returned, because that order can vary."
  syntax:
    content: public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref>, such as InvokeMethod, NonPublic, and so on.
    return:
      type: System.Reflection.FieldInfo[]
      description: Returns an array of <xref href="System.Reflection.FieldInfo"></xref> objects representing the public and non-public fields declared or inherited by this type. An empty array is returned if there are no fields, as specified.
  overload: System.Reflection.Emit.EnumBuilder.GetFields*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints
  commentId: M:System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints
  id: GetGenericParameterConstraints
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetGenericParameterConstraints()
  nameWithType: EnumBuilder.GetGenericParameterConstraints()
  fullName: EnumBuilder.GetGenericParameterConstraints()
  type: Method
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GetGenericParameterConstraints ();
    parameters: []
    return:
      type: System.Type[]
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition
  commentId: M:System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetGenericTypeDefinition()
  nameWithType: EnumBuilder.GetGenericTypeDefinition()
  fullName: EnumBuilder.GetGenericTypeDefinition()
  type: Method
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type GetGenericTypeDefinition ();
    parameters: []
    return:
      type: System.Type
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetInterface(System.String,System.Boolean)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetInterface(String, Boolean)
  nameWithType: EnumBuilder.GetInterface(String, Boolean)
  fullName: EnumBuilder.GetInterface(String, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the interface implemented (directly or indirectly) by this type, with the specified fully-qualified name.
  remarks: As a workaround, to retrieve the interface of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: The name of the interface.
    - id: ignoreCase
      type: System.Boolean
      description: If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.
    return:
      type: System.Type
      description: Returns a <xref href="System.Type"></xref> object representing the implemented interface. Returns null if no interface matching name is found.
  overload: System.Reflection.Emit.EnumBuilder.GetInterface*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetInterfaceMap(System.Type)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: EnumBuilder.GetInterfaceMap(Type)
  fullName: EnumBuilder.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns an interface mapping for the interface requested.
  remarks: As a workaround, to retrieve the interface mapping types of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: The type of the interface for which the interface mapping is to be retrieved.
    return:
      type: System.Reflection.InterfaceMapping
      description: The requested interface mapping.
  overload: System.Reflection.Emit.EnumBuilder.GetInterfaceMap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The type does not implement the interface.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetInterfaces
  commentId: M:System.Reflection.Emit.EnumBuilder.GetInterfaces
  id: GetInterfaces
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: EnumBuilder.GetInterfaces()
  fullName: EnumBuilder.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns an array of all the interfaces implemented on this a class and its base classes.
  remarks: As a workaround, to retrieve the interface of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: Returns an array of <xref href="System.Type"></xref> objects representing the implemented interfaces. If none are defined, an empty array is returned.
  overload: System.Reflection.Emit.EnumBuilder.GetInterfaces*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetMember(String, MemberTypes, BindingFlags)
  nameWithType: EnumBuilder.GetMember(String, MemberTypes, BindingFlags)
  fullName: EnumBuilder.GetMember(String, MemberTypes, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns all members with the specified name, type, and binding that are declared or inherited by this type.
  remarks: As a workaround, to retrieve the member of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: The name of the member.
    - id: type
      type: System.Reflection.MemberTypes
      description: The type of member that is to be returned.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref> : `InvokeMethod`, `NonPublic`, and so on.'
    return:
      type: System.Reflection.MemberInfo[]
      description: Returns an array of <xref href="System.Reflection.MemberInfo"></xref> objects representing the public and non-public members defined on this type if <code>nonPublic</code> is used; otherwise, only the public members are returned.
  overload: System.Reflection.Emit.EnumBuilder.GetMember*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetMembers(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: EnumBuilder.GetMembers(BindingFlags)
  fullName: EnumBuilder.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the specified members declared or inherited by this type,.
  remarks: As a workaround, to retrieve the members of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref> : `InvokeMethod`, `NonPublic`, and so on.'
    return:
      type: System.Reflection.MemberInfo[]
      description: Returns an array of <xref href="System.Reflection.MemberInfo"></xref> objects representing the public and non-public members declared or inherited by this type. An empty array is returned if there are no matching members.
  overload: System.Reflection.Emit.EnumBuilder.GetMembers*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  commentId: M:System.Reflection.Emit.EnumBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: EnumBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: EnumBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: ''
    - id: binder
      type: System.Reflection.Binder
      description: ''
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: ''
    - id: types
      type: System.Type[]
      description: ''
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: ''
    return:
      type: System.Reflection.MethodInfo
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetMethodImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetMethods(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: EnumBuilder.GetMethods(BindingFlags)
  fullName: EnumBuilder.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns all the public and non-public methods declared or inherited by this type, as specified.
  remarks: As a workaround, to retrieve the methods of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref>, such as `InvokeMethod`, `NonPublic`, and so on.
    return:
      type: System.Reflection.MethodInfo[]
      description: Returns an array of <xref href="System.Reflection.MethodInfo"></xref> objects representing the public and non-public methods defined on this type if <code>nonPublic</code> is used; otherwise, only the public methods are returned.
  overload: System.Reflection.Emit.EnumBuilder.GetMethods*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetNestedType(String, BindingFlags)
  nameWithType: EnumBuilder.GetNestedType(String, BindingFlags)
  fullName: EnumBuilder.GetNestedType(String, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the specified nested type that is declared by this type.
  remarks: As a workaround, to retrieve the nested type of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> containing the name of the nested type to get.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to conduct a case-sensitive search for public methods."
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object representing the nested type that matches the specified requirements, if found; otherwise, `null`.
  overload: System.Reflection.Emit.EnumBuilder.GetNestedType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: EnumBuilder.GetNestedTypes(BindingFlags)
  fullName: EnumBuilder.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public nested types that are declared or inherited by this type.
  remarks: As a workaround, to retrieve the nested types of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref>, such as `InvokeMethod`, `NonPublic`, and so on.
    return:
      type: System.Type[]
      description: "An array of <xref href=\"System.Type\"></xref> objects representing all the types nested within the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n An empty array of type <xref href=\"System.Type\"></xref>, if no types are nested within the current <xref href=\"System.Type\"></xref>, or if none of the nested types match the binding constraints."
  overload: System.Reflection.Emit.EnumBuilder.GetNestedTypes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetProperties(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.EnumBuilder.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: EnumBuilder.GetProperties(BindingFlags)
  fullName: EnumBuilder.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns all the public and non-public properties declared or inherited by this type, as specified.
  remarks: As a workaround, to retrieve the properties of a finished type, retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: 'This invocation attribute. This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref> : `InvokeMethod`, `NonPublic`, and so on.'
    return:
      type: System.Reflection.PropertyInfo[]
      description: Returns an array of <xref href="System.Reflection.PropertyInfo"></xref> objects representing the public and non-public properties defined on this type if <code>nonPublic</code> is used; otherwise, only the public properties are returned.
  overload: System.Reflection.Emit.EnumBuilder.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  commentId: M:System.Reflection.Emit.EnumBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  nameWithType: EnumBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  fullName: EnumBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: ''
    - id: binder
      type: System.Reflection.Binder
      description: ''
    - id: returnType
      type: System.Type
      description: ''
    - id: types
      type: System.Type[]
      description: ''
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: ''
    return:
      type: System.Reflection.PropertyInfo
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.GetPropertyImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GUID
  commentId: P:System.Reflection.Emit.EnumBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: GUID
  nameWithType: EnumBuilder.GUID
  fullName: EnumBuilder.GUID
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the GUID of this enum.
  remarks: ''
  example:
  - "The following code sample demonstrates the use of the `GUID` property to reference the associated <xref:System.Guid> of the current `EnumBuilder`.  \n  \n [!code-cpp[EnumBuilder_Properties_4.cs#4](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_Properties_4.cs/CPP/enumbuilder_properties_4.cpp#4)]\n [!code-csharp[EnumBuilder_Properties_4.cs#4](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_Properties_4.cs/CS/enumbuilder_properties_4.cs#4)]\n [!code-vb[EnumBuilder_Properties_4.cs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_Properties_4.cs/VB/enumbuilder_properties_4.vb#4)]"
  syntax:
    content: public override Guid GUID { get; }
    return:
      type: System.Guid
      description: Read-only. The GUID of this enum.
  overload: System.Reflection.Emit.EnumBuilder.GUID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.HasElementTypeImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.HasElementTypeImpl
  id: HasElementTypeImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: HasElementTypeImpl()
  nameWithType: EnumBuilder.HasElementTypeImpl()
  fullName: EnumBuilder.HasElementTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool HasElementTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.HasElementTypeImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  commentId: M:System.Reflection.Emit.EnumBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  nameWithType: EnumBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  fullName: EnumBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Invokes the specified member. The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the contraints of the specified binder and invocation attributes.
  remarks: You can retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.
  syntax:
    content: public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: The name of the member to invoke. This can be a constructor, method, property, or field. A suitable invocation attribute must be specified. Note that it is possible to invoke the default member of a class by passing an empty string as the name of the member.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: The invocation attribute. This must be a bit flag from `BindingFlags`.
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If binder is `null`, the default binder is used. See <xref href="System.Reflection.Binder"></xref>.
    - id: target
      type: System.Object
      description: The object on which to invoke the specified member. If the member is static, this parameter is ignored.
    - id: args
      type: System.Object[]
      description: An argument list. This is an array of objects that contains the number, order, and type of the parameters of the member to be invoked. If there are no parameters this should be null.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: An array of the same length as <code>args</code> with elements that represent the attributes associated with the arguments of the member to be invoked. A parameter has attributes associated with it in the metadata. They are used by various interoperability services. See the metadata specs for details such as this.
    - id: culture
      type: System.Globalization.CultureInfo
      description: An instance of `CultureInfo` used to govern the coercion of types. If this is null, the `CultureInfo` for the current thread is used. (Note that this is necessary to, for example, convert a string that represents 1000 to a double value, since 1000 is represented differently by different cultures.)
    - id: namedParameters
      type: System.String[]
      description: Each parameter in the <code>namedParameters</code> array gets the value in the corresponding element in the <code>args</code> array. If the length of <code>args</code> is greater than the length of <code>namedParameters</code>, the remaining argument values are passed in order.
    return:
      type: System.Object
      description: Returns the return value of the invoked member.
  overload: System.Reflection.Emit.EnumBuilder.InvokeMember*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.IsArrayImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.IsArrayImpl
  id: IsArrayImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsArrayImpl()
  nameWithType: EnumBuilder.IsArrayImpl()
  fullName: EnumBuilder.IsArrayImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsArrayImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsArrayImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  commentId: M:System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsAssignableFrom(TypeInfo)
  nameWithType: EnumBuilder.IsAssignableFrom(TypeInfo)
  fullName: EnumBuilder.IsAssignableFrom(TypeInfo)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether a specified <xref href="System.Reflection.TypeInfo"></xref> object can be assigned to this object.
  syntax:
    content: public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The object to test.
    return:
      type: System.Boolean
      description: '`true` if <code>typeInfo</code> can be assigned to this object; otherwise, `false`.'
  overload: System.Reflection.Emit.EnumBuilder.IsAssignableFrom*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.IsByRefImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.IsByRefImpl
  id: IsByRefImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsByRefImpl()
  nameWithType: EnumBuilder.IsByRefImpl()
  fullName: EnumBuilder.IsByRefImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsByRefImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsByRefImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl
  id: IsCOMObjectImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsCOMObjectImpl()
  nameWithType: EnumBuilder.IsCOMObjectImpl()
  fullName: EnumBuilder.IsCOMObjectImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsCOMObjectImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsConstructedGenericType
  commentId: P:System.Reflection.Emit.EnumBuilder.IsConstructedGenericType
  id: IsConstructedGenericType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsConstructedGenericType
  nameWithType: EnumBuilder.IsConstructedGenericType
  fullName: EnumBuilder.IsConstructedGenericType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether this object represents a constructed generic type.
  syntax:
    content: public override bool IsConstructedGenericType { get; }
    return:
      type: System.Boolean
      description: '`true` if this object represents a constructed generic type; otherwise, `false`.'
  overload: System.Reflection.Emit.EnumBuilder.IsConstructedGenericType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.EnumBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsDefined(Type, Boolean)
  nameWithType: EnumBuilder.IsDefined(Type, Boolean)
  fullName: EnumBuilder.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Checks if the specified custom attribute type is defined.
  remarks: As a workaround, to check if a custom attribute is defined for a finished type, retrieve the type using <xref:System.Type.GetType%2A> and call <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> on the returned <xref:System.Type>.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The `Type` object to which the custom attributes are applied.
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Boolean
      description: '`true` if one or more instance of <code>attributeType</code> is defined on this member; otherwise, `false`.'
  overload: System.Reflection.Emit.EnumBuilder.IsDefined*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported in types that are not complete.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.IsEnum
  commentId: P:System.Reflection.Emit.EnumBuilder.IsEnum
  id: IsEnum
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsEnum
  nameWithType: EnumBuilder.IsEnum
  fullName: EnumBuilder.IsEnum
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsEnum { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsEnum*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsGenericParameter
  commentId: P:System.Reflection.Emit.EnumBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsGenericParameter
  nameWithType: EnumBuilder.IsGenericParameter
  fullName: EnumBuilder.IsGenericParameter
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericParameter { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsGenericParameter*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsGenericType
  commentId: P:System.Reflection.Emit.EnumBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsGenericType
  nameWithType: EnumBuilder.IsGenericType
  fullName: EnumBuilder.IsGenericType
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericType { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsGenericType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  commentId: P:System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsGenericTypeDefinition
  nameWithType: EnumBuilder.IsGenericTypeDefinition
  fullName: EnumBuilder.IsGenericTypeDefinition
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsPointerImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.IsPointerImpl
  id: IsPointerImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsPointerImpl()
  nameWithType: EnumBuilder.IsPointerImpl()
  fullName: EnumBuilder.IsPointerImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsPointerImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsPointerImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl
  id: IsPrimitiveImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsPrimitiveImpl()
  nameWithType: EnumBuilder.IsPrimitiveImpl()
  fullName: EnumBuilder.IsPrimitiveImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsPrimitiveImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsSerializable
  commentId: P:System.Reflection.Emit.EnumBuilder.IsSerializable
  id: IsSerializable
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsSerializable
  nameWithType: EnumBuilder.IsSerializable
  fullName: EnumBuilder.IsSerializable
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsSerializable*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsSZArray
  commentId: P:System.Reflection.Emit.EnumBuilder.IsSZArray
  id: IsSZArray
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsSZArray
  nameWithType: EnumBuilder.IsSZArray
  fullName: EnumBuilder.IsSZArray
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSZArray { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsSZArray*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsTypeDefinition
  commentId: P:System.Reflection.Emit.EnumBuilder.IsTypeDefinition
  id: IsTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsTypeDefinition
  nameWithType: EnumBuilder.IsTypeDefinition
  fullName: EnumBuilder.IsTypeDefinition
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsTypeDefinition { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsTypeDefinition*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsValueTypeImpl
  commentId: M:System.Reflection.Emit.EnumBuilder.IsValueTypeImpl
  id: IsValueTypeImpl
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsValueTypeImpl()
  nameWithType: EnumBuilder.IsValueTypeImpl()
  fullName: EnumBuilder.IsValueTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsValueTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsValueTypeImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsVariableBoundArray
  commentId: P:System.Reflection.Emit.EnumBuilder.IsVariableBoundArray
  id: IsVariableBoundArray
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: IsVariableBoundArray
  nameWithType: EnumBuilder.IsVariableBoundArray
  fullName: EnumBuilder.IsVariableBoundArray
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsVariableBoundArray { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.IsVariableBoundArray*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType
  commentId: M:System.Reflection.Emit.EnumBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: MakeArrayType()
  nameWithType: EnumBuilder.MakeArrayType()
  fullName: EnumBuilder.MakeArrayType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a <xref href="System.Type"></xref> object representing a one-dimensional array of the current type, with a lower bound of zero.
  syntax:
    content: public override Type MakeArrayType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object representing a one-dimensional array of the current type, with a lower bound of zero.
  overload: System.Reflection.Emit.EnumBuilder.MakeArrayType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  commentId: M:System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: MakeArrayType(Int32)
  nameWithType: EnumBuilder.MakeArrayType(Int32)
  fullName: EnumBuilder.MakeArrayType(Int32)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a <xref href="System.Type"></xref> object representing an array of the current type, with the specified number of dimensions.
  syntax:
    content: public override Type MakeArrayType (int rank);
    parameters:
    - id: rank
      type: System.Int32
      description: The number of dimensions for the array. This number must be less than or equal to 32.
    return:
      type: System.Type
      description: An object representing an array of the current type, with the specified number of dimensions.
  overload: System.Reflection.Emit.EnumBuilder.MakeArrayType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: <code>rank</code> is less than 1.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.MakeByRefType
  commentId: M:System.Reflection.Emit.EnumBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: MakeByRefType()
  nameWithType: EnumBuilder.MakeByRefType()
  fullName: EnumBuilder.MakeByRefType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a <xref href="System.Type"></xref> object that represents the current type when passed as a **ref** parameter (**ByRef** parameter in Visual Basic).
  syntax:
    content: public override Type MakeByRefType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents the current type when passed as a **ref** parameter (**ByRef** parameter in Visual Basic).
  overload: System.Reflection.Emit.EnumBuilder.MakeByRefType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  commentId: M:System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: MakeGenericType(Type[])
  nameWithType: EnumBuilder.MakeGenericType(Type[])
  fullName: EnumBuilder.MakeGenericType(Type[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type MakeGenericType (Type[] typeArguments);
    parameters:
    - id: typeArguments
      type: System.Type[]
      description: ''
    return:
      type: System.Type
      description: ''
  overload: System.Reflection.Emit.EnumBuilder.MakeGenericType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.MakePointerType
  commentId: M:System.Reflection.Emit.EnumBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: MakePointerType()
  nameWithType: EnumBuilder.MakePointerType()
  fullName: EnumBuilder.MakePointerType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a <xref href="System.Type"></xref> object that represents a pointer to the current type.
  syntax:
    content: public override Type MakePointerType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents a pointer to the current type.
  overload: System.Reflection.Emit.EnumBuilder.MakePointerType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.Module
  commentId: P:System.Reflection.Emit.EnumBuilder.Module
  id: Module
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: Module
  nameWithType: EnumBuilder.Module
  fullName: EnumBuilder.Module
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the dynamic module that contains this <xref href="System.Reflection.Emit.EnumBuilder"></xref> definition.
  remarks: ''
  example:
  - "The following code sample demonstrates the use of the `Module` property to reference the parent module of the current `EnumBuilder`.  \n  \n [!code-cpp[EnumBuilder_Properties_5#3](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_Properties_5/CPP/enumbuilder_properties_5.cpp#3)]\n [!code-csharp[EnumBuilder_Properties_5#3](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_Properties_5/CS/enumbuilder_properties_5.cs#3)]\n [!code-vb[EnumBuilder_Properties_5#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_Properties_5/VB/enumbuilder_properties_5.vb#3)]"
  syntax:
    content: public override System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: Read-only. The dynamic module that contains this <xref href="System.Reflection.Emit.EnumBuilder"></xref> definition.
  overload: System.Reflection.Emit.EnumBuilder.Module*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.Name
  commentId: P:System.Reflection.Emit.EnumBuilder.Name
  id: Name
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: Name
  nameWithType: EnumBuilder.Name
  fullName: EnumBuilder.Name
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the name of this enum.
  remarks: ''
  example:
  - "The following code sample demonstrates the use of the `Name` property to reference the name of the current `EnumBuilder`.  \n  \n [!code-cpp[EnumBuilder_Properties_5#4](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_Properties_5/CPP/enumbuilder_properties_5.cpp#4)]\n [!code-csharp[EnumBuilder_Properties_5#4](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_Properties_5/CS/enumbuilder_properties_5.cs#4)]\n [!code-vb[EnumBuilder_Properties_5#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_Properties_5/VB/enumbuilder_properties_5.vb#4)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: Read-only. The name of this enum.
  overload: System.Reflection.Emit.EnumBuilder.Name*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.Namespace
  commentId: P:System.Reflection.Emit.EnumBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: Namespace
  nameWithType: EnumBuilder.Namespace
  fullName: EnumBuilder.Namespace
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the namespace of this enum.
  remarks: ''
  example:
  - "The following code sample demonstrates the use of the `Namespace` property to reference the associated namespace of the current `EnumBuilder`.  \n  \n [!code-cpp[EnumBuilder_Properties_5#5](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_Properties_5/CPP/enumbuilder_properties_5.cpp#5)]\n [!code-csharp[EnumBuilder_Properties_5#5](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_Properties_5/CS/enumbuilder_properties_5.cs#5)]\n [!code-vb[EnumBuilder_Properties_5#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_Properties_5/VB/enumbuilder_properties_5.vb#5)]"
  syntax:
    content: public override string Namespace { get; }
    return:
      type: System.String
      description: Read-only. The namespace of this enum.
  overload: System.Reflection.Emit.EnumBuilder.Namespace*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.EnumBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: ReflectedType
  nameWithType: EnumBuilder.ReflectedType
  fullName: EnumBuilder.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the type that was used to obtain this <xref href="System.Reflection.Emit.EnumBuilder"></xref>.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: Read-only. The type that was used to obtain this <xref href="System.Reflection.Emit.EnumBuilder"></xref>.
  overload: System.Reflection.Emit.EnumBuilder.ReflectedType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: EnumBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: EnumBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a custom attribute builder.
  remarks: ''
  example:
  - "The following code sample illustrates the use of `SetCustomAttribute` in the context of <xref:System.Reflection.Emit.EnumBuilder>, passing a <xref:System.Reflection.Emit.CustomAttributeBuilder>.  \n  \n [!code-cpp[EnumBuilder_SetCustomAttribute2#2](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/CPP/enumbuilder_setcustomattribute2.cpp#2)]\n [!code-csharp[EnumBuilder_SetCustomAttribute2#2](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/CS/enumbuilder_setcustomattribute2.cs#2)]\n [!code-vb[EnumBuilder_SetCustomAttribute2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/VB/enumbuilder_setcustomattribute2.vb#2)]"
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  overload: System.Reflection.Emit.EnumBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: EnumBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: EnumBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a specified custom attribute blob.
  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  example:
  - "The following code sample illustrates the use of `SetCustomAttribute` in the context of <xref:System.Reflection.Emit.EnumBuilder>, passing a byte blob.  \n  \n [!code-cpp[EnumBuilder_SetCustomAttribute2#2](~/samples/snippets/cpp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/CPP/enumbuilder_setcustomattribute2.cpp#2)]\n [!code-csharp[EnumBuilder_SetCustomAttribute2#2](~/samples/snippets/csharp/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/CS/enumbuilder_setcustomattribute2.cs#2)]\n [!code-vb[EnumBuilder_SetCustomAttribute2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EnumBuilder_SetCustomAttribute2/VB/enumbuilder_setcustomattribute2.vb#2)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  overload: System.Reflection.Emit.EnumBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> or <code>binaryAttribute</code> is `null`.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.TypeHandle
  commentId: P:System.Reflection.Emit.EnumBuilder.TypeHandle
  id: TypeHandle
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: TypeHandle
  nameWithType: EnumBuilder.TypeHandle
  fullName: EnumBuilder.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves the internal handle for this enum.
  remarks: "You can retrieve the type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> and use reflection on the retrieved type.  \n  \n Use this handle to access the underlying metadata handle."
  syntax:
    content: public override RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: Read-only. The internal handle for this enum.
  overload: System.Reflection.Emit.EnumBuilder.TypeHandle*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not currently supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.TypeToken
  commentId: P:System.Reflection.Emit.EnumBuilder.TypeToken
  id: TypeToken
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: TypeToken
  nameWithType: EnumBuilder.TypeToken
  fullName: EnumBuilder.TypeToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the internal metadata type token of this enum.
  syntax:
    content: public System.Reflection.Emit.TypeToken TypeToken { get; }
    return:
      type: System.Reflection.Emit.TypeToken
      description: Read-only. The type token of this enum.
  overload: System.Reflection.Emit.EnumBuilder.TypeToken*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingField
  commentId: P:System.Reflection.Emit.EnumBuilder.UnderlyingField
  id: UnderlyingField
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: UnderlyingField
  nameWithType: EnumBuilder.UnderlyingField
  fullName: EnumBuilder.UnderlyingField
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the underlying field for this enum.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder UnderlyingField { get; }
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: Read-only. The underlying field for this enum.
  overload: System.Reflection.Emit.EnumBuilder.UnderlyingField*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingSystemType
  commentId: P:System.Reflection.Emit.EnumBuilder.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: EnumBuilder.UnderlyingSystemType
  fullName: EnumBuilder.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the underlying system type for this enum.
  syntax:
    content: public override Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: Read-only. Returns the underlying system type.
  overload: System.Reflection.Emit.EnumBuilder.UnderlyingSystemType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: _EnumBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: EnumBuilder._EnumBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: EnumBuilder._EnumBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _EnumBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: _EnumBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: EnumBuilder._EnumBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: EnumBuilder._EnumBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _EnumBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: _EnumBuilder.GetTypeInfoCount(UInt32)
  nameWithType: EnumBuilder._EnumBuilder.GetTypeInfoCount(UInt32)
  fullName: EnumBuilder._EnumBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _EnumBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_EnumBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.EnumBuilder
  langs:
  - csharp
  name: _EnumBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: EnumBuilder._EnumBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: EnumBuilder._EnumBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _EnumBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.Emit.EnumBuilder.#ctor
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: EnumBuilder()
  nameWithType: EnumBuilder.EnumBuilder()
  fullName: EnumBuilder.EnumBuilder()
- uid: System.Reflection.Emit.EnumBuilder.Assembly
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Assembly
  nameWithType: EnumBuilder.Assembly
  fullName: EnumBuilder.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: EnumBuilder.AssemblyQualifiedName
  fullName: EnumBuilder.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.EnumBuilder.Attributes
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Attributes
  nameWithType: EnumBuilder.Attributes
  fullName: EnumBuilder.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Reflection.Emit.EnumBuilder.BaseType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: BaseType
  nameWithType: EnumBuilder.BaseType
  fullName: EnumBuilder.BaseType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.EnumBuilder.ContainsGenericParameters
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: EnumBuilder.ContainsGenericParameters
  fullName: EnumBuilder.ContainsGenericParameters
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.EnumBuilder.CreateType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: CreateType()
  nameWithType: EnumBuilder.CreateType()
  fullName: EnumBuilder.CreateType()
- uid: System.Reflection.Emit.EnumBuilder.CreateTypeInfo
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: CreateTypeInfo()
  nameWithType: EnumBuilder.CreateTypeInfo()
  fullName: EnumBuilder.CreateTypeInfo()
- uid: System.Reflection.Emit.EnumBuilder.DeclaringMethod
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: DeclaringMethod
  nameWithType: EnumBuilder.DeclaringMethod
  fullName: EnumBuilder.DeclaringMethod
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection.Emit.EnumBuilder.DeclaringType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: EnumBuilder.DeclaringType
  fullName: EnumBuilder.DeclaringType
- uid: System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: DefineLiteral(String, Object)
  nameWithType: EnumBuilder.DefineLiteral(String, Object)
  fullName: EnumBuilder.DefineLiteral(String, Object)
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.EnumBuilder.FullName
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: FullName
  nameWithType: EnumBuilder.FullName
  fullName: EnumBuilder.FullName
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterAttributes
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: EnumBuilder.GenericParameterAttributes
  fullName: EnumBuilder.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterPosition
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GenericParameterPosition
  nameWithType: EnumBuilder.GenericParameterPosition
  fullName: EnumBuilder.GenericParameterPosition
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.EnumBuilder.GenericTypeArguments
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GenericTypeArguments
  nameWithType: EnumBuilder.GenericTypeArguments
  fullName: EnumBuilder.GenericTypeArguments
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetArrayRank
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetArrayRank()
  nameWithType: EnumBuilder.GetArrayRank()
  fullName: EnumBuilder.GetArrayRank()
- uid: System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetAttributeFlagsImpl()
  nameWithType: EnumBuilder.GetAttributeFlagsImpl()
  fullName: EnumBuilder.GetAttributeFlagsImpl()
- uid: System.Reflection.Emit.EnumBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: EnumBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: EnumBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Reflection.ParameterModifier
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier[]
  nameWithType: ParameterModifier[]
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: System.Reflection.ParameterModifier
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: EnumBuilder.GetConstructors(BindingFlags)
  fullName: EnumBuilder.GetConstructors(BindingFlags)
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo[]
  nameWithType: ConstructorInfo[]
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: EnumBuilder.GetCustomAttributes(Type, Boolean)
  fullName: EnumBuilder.GetCustomAttributes(Type, Boolean)
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: EnumBuilder.GetCustomAttributes(Boolean)
  fullName: EnumBuilder.GetCustomAttributes(Boolean)
- uid: System.Reflection.Emit.EnumBuilder.GetElementType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetElementType()
  nameWithType: EnumBuilder.GetElementType()
  fullName: EnumBuilder.GetElementType()
- uid: System.Reflection.Emit.EnumBuilder.GetEnumUnderlyingType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEnumUnderlyingType()
  nameWithType: EnumBuilder.GetEnumUnderlyingType()
  fullName: EnumBuilder.GetEnumUnderlyingType()
- uid: System.Reflection.Emit.EnumBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEvent(String, BindingFlags)
  nameWithType: EnumBuilder.GetEvent(String, BindingFlags)
  fullName: EnumBuilder.GetEvent(String, BindingFlags)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Reflection.Emit.EnumBuilder.GetEvents
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEvents()
  nameWithType: EnumBuilder.GetEvents()
  fullName: EnumBuilder.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: false
  name: EventInfo[]
  nameWithType: EventInfo[]
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: System.Reflection.EventInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: EnumBuilder.GetEvents(BindingFlags)
  fullName: EnumBuilder.GetEvents(BindingFlags)
- uid: System.Reflection.Emit.EnumBuilder.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetField(String, BindingFlags)
  nameWithType: EnumBuilder.GetField(String, BindingFlags)
  fullName: EnumBuilder.GetField(String, BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.Emit.EnumBuilder.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: EnumBuilder.GetFields(BindingFlags)
  fullName: EnumBuilder.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: false
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetGenericParameterConstraints()
  nameWithType: EnumBuilder.GetGenericParameterConstraints()
  fullName: EnumBuilder.GetGenericParameterConstraints()
- uid: System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetGenericTypeDefinition()
  nameWithType: EnumBuilder.GetGenericTypeDefinition()
  fullName: EnumBuilder.GetGenericTypeDefinition()
- uid: System.Reflection.Emit.EnumBuilder.GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetInterface(String, Boolean)
  nameWithType: EnumBuilder.GetInterface(String, Boolean)
  fullName: EnumBuilder.GetInterface(String, Boolean)
- uid: System.Reflection.Emit.EnumBuilder.GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: EnumBuilder.GetInterfaceMap(Type)
  fullName: EnumBuilder.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: false
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Reflection.Emit.EnumBuilder.GetInterfaces
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetInterfaces()
  nameWithType: EnumBuilder.GetInterfaces()
  fullName: EnumBuilder.GetInterfaces()
- uid: System.Reflection.Emit.EnumBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMember(String, MemberTypes, BindingFlags)
  nameWithType: EnumBuilder.GetMember(String, MemberTypes, BindingFlags)
  fullName: EnumBuilder.GetMember(String, MemberTypes, BindingFlags)
- uid: System.Reflection.MemberInfo
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: false
  name: MemberInfo[]
  nameWithType: MemberInfo[]
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.Emit.EnumBuilder.GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: EnumBuilder.GetMembers(BindingFlags)
  fullName: EnumBuilder.GetMembers(BindingFlags)
- uid: System.Reflection.Emit.EnumBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: EnumBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: EnumBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Emit.EnumBuilder.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: EnumBuilder.GetMethods(BindingFlags)
  fullName: EnumBuilder.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo[]
  nameWithType: MethodInfo[]
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetNestedType(String, BindingFlags)
  nameWithType: EnumBuilder.GetNestedType(String, BindingFlags)
  fullName: EnumBuilder.GetNestedType(String, BindingFlags)
- uid: System.Reflection.Emit.EnumBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: EnumBuilder.GetNestedTypes(BindingFlags)
  fullName: EnumBuilder.GetNestedTypes(BindingFlags)
- uid: System.Reflection.Emit.EnumBuilder.GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: EnumBuilder.GetProperties(BindingFlags)
  fullName: EnumBuilder.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo[]
  nameWithType: PropertyInfo[]
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  nameWithType: EnumBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  fullName: EnumBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
- uid: System.Reflection.Emit.EnumBuilder.GUID
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GUID
  nameWithType: EnumBuilder.GUID
  fullName: EnumBuilder.GUID
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Emit.EnumBuilder.HasElementTypeImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: HasElementTypeImpl()
  nameWithType: EnumBuilder.HasElementTypeImpl()
  fullName: EnumBuilder.HasElementTypeImpl()
- uid: System.Reflection.Emit.EnumBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  nameWithType: EnumBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  fullName: EnumBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.IsArrayImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsArrayImpl()
  nameWithType: EnumBuilder.IsArrayImpl()
  fullName: EnumBuilder.IsArrayImpl()
- uid: System.Reflection.Emit.EnumBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsAssignableFrom(TypeInfo)
  nameWithType: EnumBuilder.IsAssignableFrom(TypeInfo)
  fullName: EnumBuilder.IsAssignableFrom(TypeInfo)
- uid: System.Reflection.Emit.EnumBuilder.IsByRefImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsByRefImpl()
  nameWithType: EnumBuilder.IsByRefImpl()
  fullName: EnumBuilder.IsByRefImpl()
- uid: System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsCOMObjectImpl()
  nameWithType: EnumBuilder.IsCOMObjectImpl()
  fullName: EnumBuilder.IsCOMObjectImpl()
- uid: System.Reflection.Emit.EnumBuilder.IsConstructedGenericType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: EnumBuilder.IsConstructedGenericType
  fullName: EnumBuilder.IsConstructedGenericType
- uid: System.Reflection.Emit.EnumBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: EnumBuilder.IsDefined(Type, Boolean)
  fullName: EnumBuilder.IsDefined(Type, Boolean)
- uid: System.Reflection.Emit.EnumBuilder.IsEnum
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsEnum
  nameWithType: EnumBuilder.IsEnum
  fullName: EnumBuilder.IsEnum
- uid: System.Reflection.Emit.EnumBuilder.IsGenericParameter
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsGenericParameter
  nameWithType: EnumBuilder.IsGenericParameter
  fullName: EnumBuilder.IsGenericParameter
- uid: System.Reflection.Emit.EnumBuilder.IsGenericType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsGenericType
  nameWithType: EnumBuilder.IsGenericType
  fullName: EnumBuilder.IsGenericType
- uid: System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: EnumBuilder.IsGenericTypeDefinition
  fullName: EnumBuilder.IsGenericTypeDefinition
- uid: System.Reflection.Emit.EnumBuilder.IsPointerImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsPointerImpl()
  nameWithType: EnumBuilder.IsPointerImpl()
  fullName: EnumBuilder.IsPointerImpl()
- uid: System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsPrimitiveImpl()
  nameWithType: EnumBuilder.IsPrimitiveImpl()
  fullName: EnumBuilder.IsPrimitiveImpl()
- uid: System.Reflection.Emit.EnumBuilder.IsSerializable
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsSerializable
  nameWithType: EnumBuilder.IsSerializable
  fullName: EnumBuilder.IsSerializable
- uid: System.Reflection.Emit.EnumBuilder.IsSZArray
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsSZArray
  nameWithType: EnumBuilder.IsSZArray
  fullName: EnumBuilder.IsSZArray
- uid: System.Reflection.Emit.EnumBuilder.IsTypeDefinition
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsTypeDefinition
  nameWithType: EnumBuilder.IsTypeDefinition
  fullName: EnumBuilder.IsTypeDefinition
- uid: System.Reflection.Emit.EnumBuilder.IsValueTypeImpl
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsValueTypeImpl()
  nameWithType: EnumBuilder.IsValueTypeImpl()
  fullName: EnumBuilder.IsValueTypeImpl()
- uid: System.Reflection.Emit.EnumBuilder.IsVariableBoundArray
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsVariableBoundArray
  nameWithType: EnumBuilder.IsVariableBoundArray
  fullName: EnumBuilder.IsVariableBoundArray
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeArrayType()
  nameWithType: EnumBuilder.MakeArrayType()
  fullName: EnumBuilder.MakeArrayType()
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeArrayType(Int32)
  nameWithType: EnumBuilder.MakeArrayType(Int32)
  fullName: EnumBuilder.MakeArrayType(Int32)
- uid: System.Reflection.Emit.EnumBuilder.MakeByRefType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeByRefType()
  nameWithType: EnumBuilder.MakeByRefType()
  fullName: EnumBuilder.MakeByRefType()
- uid: System.Reflection.Emit.EnumBuilder.MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeGenericType(Type[])
  nameWithType: EnumBuilder.MakeGenericType(Type[])
  fullName: EnumBuilder.MakeGenericType(Type[])
- uid: System.Reflection.Emit.EnumBuilder.MakePointerType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakePointerType()
  nameWithType: EnumBuilder.MakePointerType()
  fullName: EnumBuilder.MakePointerType()
- uid: System.Reflection.Emit.EnumBuilder.Module
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Module
  nameWithType: EnumBuilder.Module
  fullName: EnumBuilder.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.EnumBuilder.Name
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Name
  nameWithType: EnumBuilder.Name
  fullName: EnumBuilder.Name
- uid: System.Reflection.Emit.EnumBuilder.Namespace
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Namespace
  nameWithType: EnumBuilder.Namespace
  fullName: EnumBuilder.Namespace
- uid: System.Reflection.Emit.EnumBuilder.ReflectedType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: EnumBuilder.ReflectedType
  fullName: EnumBuilder.ReflectedType
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: EnumBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: EnumBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: EnumBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: EnumBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.EnumBuilder.TypeHandle
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: TypeHandle
  nameWithType: EnumBuilder.TypeHandle
  fullName: EnumBuilder.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Reflection.Emit.EnumBuilder.TypeToken
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: TypeToken
  nameWithType: EnumBuilder.TypeToken
  fullName: EnumBuilder.TypeToken
- uid: System.Reflection.Emit.TypeToken
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeToken
  nameWithType: TypeToken
  fullName: System.Reflection.Emit.TypeToken
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingField
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: UnderlyingField
  nameWithType: EnumBuilder.UnderlyingField
  fullName: EnumBuilder.UnderlyingField
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingSystemType
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: EnumBuilder.UnderlyingSystemType
  fullName: EnumBuilder.UnderlyingSystemType
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: _EnumBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: EnumBuilder._EnumBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: EnumBuilder._EnumBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: _EnumBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: EnumBuilder._EnumBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: EnumBuilder._EnumBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: _EnumBuilder.GetTypeInfoCount(UInt32)
  nameWithType: EnumBuilder._EnumBuilder.GetTypeInfoCount(UInt32)
  fullName: EnumBuilder._EnumBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: _EnumBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: EnumBuilder._EnumBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: EnumBuilder._EnumBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.EnumBuilder.#ctor*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: EnumBuilder
  nameWithType: EnumBuilder.EnumBuilder
  fullName: EnumBuilder.EnumBuilder
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.Assembly*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Assembly
  nameWithType: EnumBuilder.Assembly
  fullName: EnumBuilder.Assembly
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: EnumBuilder.AssemblyQualifiedName
  fullName: EnumBuilder.AssemblyQualifiedName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.Attributes*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Attributes
  nameWithType: EnumBuilder.Attributes
  fullName: EnumBuilder.Attributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.BaseType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: BaseType
  nameWithType: EnumBuilder.BaseType
  fullName: EnumBuilder.BaseType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.ContainsGenericParameters*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: EnumBuilder.ContainsGenericParameters
  fullName: EnumBuilder.ContainsGenericParameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.CreateType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: CreateType
  nameWithType: EnumBuilder.CreateType
  fullName: EnumBuilder.CreateType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.CreateTypeInfo*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: CreateTypeInfo
  nameWithType: EnumBuilder.CreateTypeInfo
  fullName: EnumBuilder.CreateTypeInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.DeclaringMethod*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: DeclaringMethod
  nameWithType: EnumBuilder.DeclaringMethod
  fullName: EnumBuilder.DeclaringMethod
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.DeclaringType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: EnumBuilder.DeclaringType
  fullName: EnumBuilder.DeclaringType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.DefineLiteral*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: DefineLiteral
  nameWithType: EnumBuilder.DefineLiteral
  fullName: EnumBuilder.DefineLiteral
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.FullName*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: FullName
  nameWithType: EnumBuilder.FullName
  fullName: EnumBuilder.FullName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterAttributes*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: EnumBuilder.GenericParameterAttributes
  fullName: EnumBuilder.GenericParameterAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GenericParameterPosition*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GenericParameterPosition
  nameWithType: EnumBuilder.GenericParameterPosition
  fullName: EnumBuilder.GenericParameterPosition
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GenericTypeArguments*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GenericTypeArguments
  nameWithType: EnumBuilder.GenericTypeArguments
  fullName: EnumBuilder.GenericTypeArguments
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetArrayRank*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetArrayRank
  nameWithType: EnumBuilder.GetArrayRank
  fullName: EnumBuilder.GetArrayRank
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetAttributeFlagsImpl
  nameWithType: EnumBuilder.GetAttributeFlagsImpl
  fullName: EnumBuilder.GetAttributeFlagsImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetConstructorImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetConstructorImpl
  nameWithType: EnumBuilder.GetConstructorImpl
  fullName: EnumBuilder.GetConstructorImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetConstructors*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetConstructors
  nameWithType: EnumBuilder.GetConstructors
  fullName: EnumBuilder.GetConstructors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: EnumBuilder.GetCustomAttributes
  fullName: EnumBuilder.GetCustomAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetElementType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetElementType
  nameWithType: EnumBuilder.GetElementType
  fullName: EnumBuilder.GetElementType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetEnumUnderlyingType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEnumUnderlyingType
  nameWithType: EnumBuilder.GetEnumUnderlyingType
  fullName: EnumBuilder.GetEnumUnderlyingType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetEvent*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEvent
  nameWithType: EnumBuilder.GetEvent
  fullName: EnumBuilder.GetEvent
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetEvents*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetEvents
  nameWithType: EnumBuilder.GetEvents
  fullName: EnumBuilder.GetEvents
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetField*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetField
  nameWithType: EnumBuilder.GetField
  fullName: EnumBuilder.GetField
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetFields*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetFields
  nameWithType: EnumBuilder.GetFields
  fullName: EnumBuilder.GetFields
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetGenericParameterConstraints*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetGenericParameterConstraints
  nameWithType: EnumBuilder.GetGenericParameterConstraints
  fullName: EnumBuilder.GetGenericParameterConstraints
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetGenericTypeDefinition*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetGenericTypeDefinition
  nameWithType: EnumBuilder.GetGenericTypeDefinition
  fullName: EnumBuilder.GetGenericTypeDefinition
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetInterface*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetInterface
  nameWithType: EnumBuilder.GetInterface
  fullName: EnumBuilder.GetInterface
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetInterfaceMap*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetInterfaceMap
  nameWithType: EnumBuilder.GetInterfaceMap
  fullName: EnumBuilder.GetInterfaceMap
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetInterfaces*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetInterfaces
  nameWithType: EnumBuilder.GetInterfaces
  fullName: EnumBuilder.GetInterfaces
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetMember*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMember
  nameWithType: EnumBuilder.GetMember
  fullName: EnumBuilder.GetMember
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetMembers*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMembers
  nameWithType: EnumBuilder.GetMembers
  fullName: EnumBuilder.GetMembers
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetMethodImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMethodImpl
  nameWithType: EnumBuilder.GetMethodImpl
  fullName: EnumBuilder.GetMethodImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetMethods*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetMethods
  nameWithType: EnumBuilder.GetMethods
  fullName: EnumBuilder.GetMethods
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetNestedType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetNestedType
  nameWithType: EnumBuilder.GetNestedType
  fullName: EnumBuilder.GetNestedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetNestedTypes*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetNestedTypes
  nameWithType: EnumBuilder.GetNestedTypes
  fullName: EnumBuilder.GetNestedTypes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetProperties*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetProperties
  nameWithType: EnumBuilder.GetProperties
  fullName: EnumBuilder.GetProperties
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GetPropertyImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GetPropertyImpl
  nameWithType: EnumBuilder.GetPropertyImpl
  fullName: EnumBuilder.GetPropertyImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.GUID*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: GUID
  nameWithType: EnumBuilder.GUID
  fullName: EnumBuilder.GUID
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.HasElementTypeImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: HasElementTypeImpl
  nameWithType: EnumBuilder.HasElementTypeImpl
  fullName: EnumBuilder.HasElementTypeImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.InvokeMember*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: InvokeMember
  nameWithType: EnumBuilder.InvokeMember
  fullName: EnumBuilder.InvokeMember
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsArrayImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsArrayImpl
  nameWithType: EnumBuilder.IsArrayImpl
  fullName: EnumBuilder.IsArrayImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsAssignableFrom*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsAssignableFrom
  nameWithType: EnumBuilder.IsAssignableFrom
  fullName: EnumBuilder.IsAssignableFrom
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsByRefImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsByRefImpl
  nameWithType: EnumBuilder.IsByRefImpl
  fullName: EnumBuilder.IsByRefImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsCOMObjectImpl
  nameWithType: EnumBuilder.IsCOMObjectImpl
  fullName: EnumBuilder.IsCOMObjectImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsConstructedGenericType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: EnumBuilder.IsConstructedGenericType
  fullName: EnumBuilder.IsConstructedGenericType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsDefined*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsDefined
  nameWithType: EnumBuilder.IsDefined
  fullName: EnumBuilder.IsDefined
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsEnum*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsEnum
  nameWithType: EnumBuilder.IsEnum
  fullName: EnumBuilder.IsEnum
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsGenericParameter*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsGenericParameter
  nameWithType: EnumBuilder.IsGenericParameter
  fullName: EnumBuilder.IsGenericParameter
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsGenericType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsGenericType
  nameWithType: EnumBuilder.IsGenericType
  fullName: EnumBuilder.IsGenericType
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsGenericTypeDefinition*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: EnumBuilder.IsGenericTypeDefinition
  fullName: EnumBuilder.IsGenericTypeDefinition
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsPointerImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsPointerImpl
  nameWithType: EnumBuilder.IsPointerImpl
  fullName: EnumBuilder.IsPointerImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsPrimitiveImpl
  nameWithType: EnumBuilder.IsPrimitiveImpl
  fullName: EnumBuilder.IsPrimitiveImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsSerializable*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsSerializable
  nameWithType: EnumBuilder.IsSerializable
  fullName: EnumBuilder.IsSerializable
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsSZArray*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsSZArray
  nameWithType: EnumBuilder.IsSZArray
  fullName: EnumBuilder.IsSZArray
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsTypeDefinition*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsTypeDefinition
  nameWithType: EnumBuilder.IsTypeDefinition
  fullName: EnumBuilder.IsTypeDefinition
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsValueTypeImpl*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsValueTypeImpl
  nameWithType: EnumBuilder.IsValueTypeImpl
  fullName: EnumBuilder.IsValueTypeImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.IsVariableBoundArray*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: IsVariableBoundArray
  nameWithType: EnumBuilder.IsVariableBoundArray
  fullName: EnumBuilder.IsVariableBoundArray
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.MakeArrayType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeArrayType
  nameWithType: EnumBuilder.MakeArrayType
  fullName: EnumBuilder.MakeArrayType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.MakeByRefType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeByRefType
  nameWithType: EnumBuilder.MakeByRefType
  fullName: EnumBuilder.MakeByRefType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.MakeGenericType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakeGenericType
  nameWithType: EnumBuilder.MakeGenericType
  fullName: EnumBuilder.MakeGenericType
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.MakePointerType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: MakePointerType
  nameWithType: EnumBuilder.MakePointerType
  fullName: EnumBuilder.MakePointerType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.Module*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Module
  nameWithType: EnumBuilder.Module
  fullName: EnumBuilder.Module
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.Name*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Name
  nameWithType: EnumBuilder.Name
  fullName: EnumBuilder.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.Namespace*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: Namespace
  nameWithType: EnumBuilder.Namespace
  fullName: EnumBuilder.Namespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.ReflectedType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: EnumBuilder.ReflectedType
  fullName: EnumBuilder.ReflectedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: EnumBuilder.SetCustomAttribute
  fullName: EnumBuilder.SetCustomAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.TypeHandle*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: TypeHandle
  nameWithType: EnumBuilder.TypeHandle
  fullName: EnumBuilder.TypeHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.TypeToken*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: TypeToken
  nameWithType: EnumBuilder.TypeToken
  fullName: EnumBuilder.TypeToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingField*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: UnderlyingField
  nameWithType: EnumBuilder.UnderlyingField
  fullName: EnumBuilder.UnderlyingField
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.UnderlyingSystemType*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: EnumBuilder.UnderlyingSystemType
  fullName: EnumBuilder.UnderlyingSystemType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EnumBuilder.GetIDsOfNames
  nameWithType: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.GetIDsOfNames
  fullName: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EnumBuilder.GetTypeInfo
  nameWithType: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.GetTypeInfo
  fullName: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EnumBuilder.GetTypeInfoCount
  nameWithType: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.GetTypeInfoCount
  fullName: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.Emit.EnumBuilder.System#Runtime#InteropServices#_EnumBuilder#Invoke*
  parent: System.Reflection.Emit.EnumBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EnumBuilder.Invoke
  nameWithType: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.Invoke
  fullName: EnumBuilder.System.Runtime.InteropServices._EnumBuilder.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EnumBuilder.xml
- uid: System.Reflection.MemberInfo.Equals(System.Object)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: MemberInfo.Equals(Object)
  fullName: MemberInfo.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Reflection.MemberInfo.GetHashCode
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberInfo.GetHashCode()
  fullName: MemberInfo.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: MemberInfo.GetCustomAttributesData()
  fullName: MemberInfo.GetCustomAttributesData()
- uid: System.Reflection.TypeInfo.MemberType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: MemberType
  nameWithType: TypeInfo.MemberType
  fullName: TypeInfo.MemberType
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  nameWithType: MemberInfo.MetadataToken
  fullName: MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Equality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Inequality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetType()
  nameWithType: MemberInfo._MemberInfo.GetType()
  fullName: MemberInfo._MemberInfo.GetType()
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.TypeInfo.AsType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: AsType()
  nameWithType: TypeInfo.AsType()
  fullName: TypeInfo.AsType()
- uid: System.Reflection.TypeInfo.DeclaredConstructors
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredConstructors
  nameWithType: TypeInfo.DeclaredConstructors
  fullName: TypeInfo.DeclaredConstructors
- uid: System.Reflection.TypeInfo.DeclaredEvents
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredEvents
  nameWithType: TypeInfo.DeclaredEvents
  fullName: TypeInfo.DeclaredEvents
- uid: System.Reflection.TypeInfo.DeclaredFields
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredFields
  nameWithType: TypeInfo.DeclaredFields
  fullName: TypeInfo.DeclaredFields
- uid: System.Reflection.TypeInfo.DeclaredMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredMembers
  nameWithType: TypeInfo.DeclaredMembers
  fullName: TypeInfo.DeclaredMembers
- uid: System.Reflection.TypeInfo.DeclaredMethods
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredMethods
  nameWithType: TypeInfo.DeclaredMethods
  fullName: TypeInfo.DeclaredMethods
- uid: System.Reflection.TypeInfo.DeclaredNestedTypes
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredNestedTypes
  nameWithType: TypeInfo.DeclaredNestedTypes
  fullName: TypeInfo.DeclaredNestedTypes
- uid: System.Reflection.TypeInfo.DeclaredProperties
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredProperties
  nameWithType: TypeInfo.DeclaredProperties
  fullName: TypeInfo.DeclaredProperties
- uid: System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: FindInterfaces(TypeFilter, Object)
  nameWithType: TypeInfo.FindInterfaces(TypeFilter, Object)
  fullName: TypeInfo.FindInterfaces(TypeFilter, Object)
- uid: System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  nameWithType: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  fullName: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
- uid: System.Reflection.TypeInfo.GenericTypeParameters
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GenericTypeParameters
  nameWithType: TypeInfo.GenericTypeParameters
  fullName: TypeInfo.GenericTypeParameters
- uid: System.Reflection.TypeInfo.GetConstructor(System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: TypeInfo.GetConstructor(Type[])
  fullName: TypeInfo.GetConstructor(Type[])
- uid: System.Reflection.TypeInfo.GetConstructors
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetConstructors()
  nameWithType: TypeInfo.GetConstructors()
  fullName: TypeInfo.GetConstructors()
- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredEvent(String)
  nameWithType: TypeInfo.GetDeclaredEvent(String)
  fullName: TypeInfo.GetDeclaredEvent(String)
- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredField(String)
  nameWithType: TypeInfo.GetDeclaredField(String)
  fullName: TypeInfo.GetDeclaredField(String)
- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredMethod(String)
  nameWithType: TypeInfo.GetDeclaredMethod(String)
  fullName: TypeInfo.GetDeclaredMethod(String)
- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredMethods(String)
  nameWithType: TypeInfo.GetDeclaredMethods(String)
  fullName: TypeInfo.GetDeclaredMethods(String)
- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredNestedType(String)
  nameWithType: TypeInfo.GetDeclaredNestedType(String)
  fullName: TypeInfo.GetDeclaredNestedType(String)
- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredProperty(String)
  nameWithType: TypeInfo.GetDeclaredProperty(String)
  fullName: TypeInfo.GetDeclaredProperty(String)
- uid: System.Reflection.TypeInfo.GetDefaultMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: TypeInfo.GetDefaultMembers()
  fullName: TypeInfo.GetDefaultMembers()
- uid: System.Reflection.TypeInfo.GetEnumName(System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumName(Object)
  nameWithType: TypeInfo.GetEnumName(Object)
  fullName: TypeInfo.GetEnumName(Object)
- uid: System.Reflection.TypeInfo.GetEnumNames
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumNames()
  nameWithType: TypeInfo.GetEnumNames()
  fullName: TypeInfo.GetEnumNames()
- uid: System.Reflection.TypeInfo.GetEnumValues
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumValues()
  nameWithType: TypeInfo.GetEnumValues()
  fullName: TypeInfo.GetEnumValues()
- uid: System.Reflection.TypeInfo.GetEvent(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEvent(String)
  nameWithType: TypeInfo.GetEvent(String)
  fullName: TypeInfo.GetEvent(String)
- uid: System.Reflection.TypeInfo.GetField(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetField(String)
  nameWithType: TypeInfo.GetField(String)
  fullName: TypeInfo.GetField(String)
- uid: System.Reflection.TypeInfo.GetFields
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetFields()
  nameWithType: TypeInfo.GetFields()
  fullName: TypeInfo.GetFields()
- uid: System.Reflection.TypeInfo.GetGenericArguments
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetGenericArguments()
  nameWithType: TypeInfo.GetGenericArguments()
  fullName: TypeInfo.GetGenericArguments()
- uid: System.Reflection.TypeInfo.GetInterface(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetInterface(String)
  nameWithType: TypeInfo.GetInterface(String)
  fullName: TypeInfo.GetInterface(String)
- uid: System.Reflection.TypeInfo.GetMember(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMember(String)
  nameWithType: TypeInfo.GetMember(String)
  fullName: TypeInfo.GetMember(String)
- uid: System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMember(String, BindingFlags)
  nameWithType: TypeInfo.GetMember(String, BindingFlags)
  fullName: TypeInfo.GetMember(String, BindingFlags)
- uid: System.Reflection.TypeInfo.GetMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMembers()
  nameWithType: TypeInfo.GetMembers()
  fullName: TypeInfo.GetMembers()
- uid: System.Reflection.TypeInfo.GetMethod(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String)
  nameWithType: TypeInfo.GetMethod(String)
  fullName: TypeInfo.GetMethod(String)
- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String, BindingFlags)
  nameWithType: TypeInfo.GetMethod(String, BindingFlags)
  fullName: TypeInfo.GetMethod(String, BindingFlags)
- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String, Type[])
  nameWithType: TypeInfo.GetMethod(String, Type[])
  fullName: TypeInfo.GetMethod(String, Type[])
- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String, Type[], ParameterModifier[])
  nameWithType: TypeInfo.GetMethod(String, Type[], ParameterModifier[])
  fullName: TypeInfo.GetMethod(String, Type[], ParameterModifier[])
- uid: System.Reflection.TypeInfo.GetMethods
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethods()
  nameWithType: TypeInfo.GetMethods()
  fullName: TypeInfo.GetMethods()
- uid: System.Reflection.TypeInfo.GetNestedType(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetNestedType(String)
  nameWithType: TypeInfo.GetNestedType(String)
  fullName: TypeInfo.GetNestedType(String)
- uid: System.Reflection.TypeInfo.GetNestedTypes
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetNestedTypes()
  nameWithType: TypeInfo.GetNestedTypes()
  fullName: TypeInfo.GetNestedTypes()
- uid: System.Reflection.TypeInfo.GetProperties
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperties()
  nameWithType: TypeInfo.GetProperties()
  fullName: TypeInfo.GetProperties()
- uid: System.Reflection.TypeInfo.GetProperty(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String)
  nameWithType: TypeInfo.GetProperty(String)
  fullName: TypeInfo.GetProperty(String)
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, BindingFlags)
  nameWithType: TypeInfo.GetProperty(String, BindingFlags)
  fullName: TypeInfo.GetProperty(String, BindingFlags)
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type)
  nameWithType: TypeInfo.GetProperty(String, Type)
  fullName: TypeInfo.GetProperty(String, Type)
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type[])
  nameWithType: TypeInfo.GetProperty(String, Type[])
  fullName: TypeInfo.GetProperty(String, Type[])
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type, Type[])
  nameWithType: TypeInfo.GetProperty(String, Type, Type[])
  fullName: TypeInfo.GetProperty(String, Type, Type[])
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type, Type[], ParameterModifier[])
  nameWithType: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])
  fullName: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])
- uid: System.Reflection.TypeInfo.HasElementType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: HasElementType
  nameWithType: TypeInfo.HasElementType
  fullName: TypeInfo.HasElementType
- uid: System.Reflection.TypeInfo.ImplementedInterfaces
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: ImplementedInterfaces
  nameWithType: TypeInfo.ImplementedInterfaces
  fullName: TypeInfo.ImplementedInterfaces
- uid: System.Reflection.TypeInfo.IsAbstract
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAbstract
  nameWithType: TypeInfo.IsAbstract
  fullName: TypeInfo.IsAbstract
- uid: System.Reflection.TypeInfo.IsAnsiClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAnsiClass
  nameWithType: TypeInfo.IsAnsiClass
  fullName: TypeInfo.IsAnsiClass
- uid: System.Reflection.TypeInfo.IsArray
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsArray
  nameWithType: TypeInfo.IsArray
  fullName: TypeInfo.IsArray
- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Type)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: TypeInfo.IsAssignableFrom(Type)
  fullName: TypeInfo.IsAssignableFrom(Type)
- uid: System.Reflection.TypeInfo.IsAutoClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAutoClass
  nameWithType: TypeInfo.IsAutoClass
  fullName: TypeInfo.IsAutoClass
- uid: System.Reflection.TypeInfo.IsAutoLayout
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAutoLayout
  nameWithType: TypeInfo.IsAutoLayout
  fullName: TypeInfo.IsAutoLayout
- uid: System.Reflection.TypeInfo.IsByRef
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsByRef
  nameWithType: TypeInfo.IsByRef
  fullName: TypeInfo.IsByRef
- uid: System.Reflection.TypeInfo.IsClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsClass
  nameWithType: TypeInfo.IsClass
  fullName: TypeInfo.IsClass
- uid: System.Reflection.TypeInfo.IsCOMObject
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsCOMObject
  nameWithType: TypeInfo.IsCOMObject
  fullName: TypeInfo.IsCOMObject
- uid: System.Reflection.TypeInfo.IsEnumDefined(System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsEnumDefined(Object)
  nameWithType: TypeInfo.IsEnumDefined(Object)
  fullName: TypeInfo.IsEnumDefined(Object)
- uid: System.Reflection.TypeInfo.IsEquivalentTo(System.Type)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsEquivalentTo(Type)
  nameWithType: TypeInfo.IsEquivalentTo(Type)
  fullName: TypeInfo.IsEquivalentTo(Type)
- uid: System.Reflection.TypeInfo.IsExplicitLayout
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsExplicitLayout
  nameWithType: TypeInfo.IsExplicitLayout
  fullName: TypeInfo.IsExplicitLayout
- uid: System.Reflection.TypeInfo.IsImport
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsImport
  nameWithType: TypeInfo.IsImport
  fullName: TypeInfo.IsImport
- uid: System.Reflection.TypeInfo.IsInstanceOfType(System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: TypeInfo.IsInstanceOfType(Object)
  fullName: TypeInfo.IsInstanceOfType(Object)
- uid: System.Reflection.TypeInfo.IsInterface
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsInterface
  nameWithType: TypeInfo.IsInterface
  fullName: TypeInfo.IsInterface
- uid: System.Reflection.TypeInfo.IsLayoutSequential
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsLayoutSequential
  nameWithType: TypeInfo.IsLayoutSequential
  fullName: TypeInfo.IsLayoutSequential
- uid: System.Reflection.TypeInfo.IsMarshalByRef
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsMarshalByRef
  nameWithType: TypeInfo.IsMarshalByRef
  fullName: TypeInfo.IsMarshalByRef
- uid: System.Reflection.TypeInfo.IsNested
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNested
  nameWithType: TypeInfo.IsNested
  fullName: TypeInfo.IsNested
- uid: System.Reflection.TypeInfo.IsNestedAssembly
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedAssembly
  nameWithType: TypeInfo.IsNestedAssembly
  fullName: TypeInfo.IsNestedAssembly
- uid: System.Reflection.TypeInfo.IsNestedFamANDAssem
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: TypeInfo.IsNestedFamANDAssem
  fullName: TypeInfo.IsNestedFamANDAssem
- uid: System.Reflection.TypeInfo.IsNestedFamily
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedFamily
  nameWithType: TypeInfo.IsNestedFamily
  fullName: TypeInfo.IsNestedFamily
- uid: System.Reflection.TypeInfo.IsNestedFamORAssem
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: TypeInfo.IsNestedFamORAssem
  fullName: TypeInfo.IsNestedFamORAssem
- uid: System.Reflection.TypeInfo.IsNestedPrivate
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedPrivate
  nameWithType: TypeInfo.IsNestedPrivate
  fullName: TypeInfo.IsNestedPrivate
- uid: System.Reflection.TypeInfo.IsNestedPublic
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedPublic
  nameWithType: TypeInfo.IsNestedPublic
  fullName: TypeInfo.IsNestedPublic
- uid: System.Reflection.TypeInfo.IsNotPublic
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNotPublic
  nameWithType: TypeInfo.IsNotPublic
  fullName: TypeInfo.IsNotPublic
- uid: System.Reflection.TypeInfo.IsPointer
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsPointer
  nameWithType: TypeInfo.IsPointer
  fullName: TypeInfo.IsPointer
- uid: System.Reflection.TypeInfo.IsPrimitive
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsPrimitive
  nameWithType: TypeInfo.IsPrimitive
  fullName: TypeInfo.IsPrimitive
- uid: System.Reflection.TypeInfo.IsPublic
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsPublic
  nameWithType: TypeInfo.IsPublic
  fullName: TypeInfo.IsPublic
- uid: System.Reflection.TypeInfo.IsSealed
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsSealed
  nameWithType: TypeInfo.IsSealed
  fullName: TypeInfo.IsSealed
- uid: System.Reflection.TypeInfo.IsSpecialName
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: TypeInfo.IsSpecialName
  fullName: TypeInfo.IsSpecialName
- uid: System.Reflection.TypeInfo.IsSubclassOf(System.Type)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: TypeInfo.IsSubclassOf(Type)
  fullName: TypeInfo.IsSubclassOf(Type)
- uid: System.Reflection.TypeInfo.IsUnicodeClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsUnicodeClass
  nameWithType: TypeInfo.IsUnicodeClass
  fullName: TypeInfo.IsUnicodeClass
- uid: System.Reflection.TypeInfo.IsValueType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsValueType
  nameWithType: TypeInfo.IsValueType
  fullName: TypeInfo.IsValueType
- uid: System.Reflection.TypeInfo.IsVisible
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsVisible
  nameWithType: TypeInfo.IsVisible
  fullName: TypeInfo.IsVisible
- uid: System.Reflection.TypeInfo.StructLayoutAttribute
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: StructLayoutAttribute
  nameWithType: TypeInfo.StructLayoutAttribute
  fullName: TypeInfo.StructLayoutAttribute
- uid: System.Reflection.TypeInfo.TypeInitializer
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: TypeInitializer
  nameWithType: TypeInfo.TypeInitializer
  fullName: TypeInfo.TypeInitializer
- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IReflectableType.GetTypeInfo()
  nameWithType: TypeInfo.IReflectableType.GetTypeInfo()
  fullName: TypeInfo.IReflectableType.GetTypeInfo()
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: GetMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: HasMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
  parent: System.Reflection.RuntimeReflectionExtensions
  isExternal: false
  name: GetRuntimeInterfaceMap(TypeInfo, Type)
  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)
  fullName: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)
- uid: System.Runtime.InteropServices._EnumBuilder
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _EnumBuilder
  nameWithType: _EnumBuilder
  fullName: System.Runtime.InteropServices._EnumBuilder
