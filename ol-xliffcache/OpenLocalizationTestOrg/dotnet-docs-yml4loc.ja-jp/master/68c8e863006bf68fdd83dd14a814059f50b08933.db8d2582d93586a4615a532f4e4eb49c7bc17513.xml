{"nodes":[{"content":"Enables access to objects across application domain boundaries in applications that support remoting.","nodes":[{"pos":[0,101],"content":"Enables access to objects across application domain boundaries in applications that support remoting.","nodes":[{"content":"Enables access to objects across application domain boundaries in applications that support remoting.","pos":[0,101]}]}],"pos":[633,735],"yaml":true},{"content":"An application domain is a partition in an operating system process where one or more applications reside. Objects in the same application domain communicate directly. Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.  \n  \n <xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy. Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value. When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.  \n  \n <xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain. The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application. Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.  \n  \n Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.  \n  \n When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly. The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.","nodes":[{"pos":[0,341],"content":"An application domain is a partition in an operating system process where one or more applications reside. Objects in the same application domain communicate directly. Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.","nodes":[{"content":"An application domain is a partition in an operating system process where one or more applications reside. Objects in the same application domain communicate directly. Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.","pos":[0,341],"nodes":[{"content":"An application domain is a partition in an operating system process where one or more applications reside.","pos":[0,106]},{"content":"Objects in the same application domain communicate directly.","pos":[107,167]},{"content":"Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.","pos":[168,341]}]}]},{"pos":[348,734],"content":"<xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy. Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value. When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.","nodes":[{"content":"<xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy. Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value. When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.","pos":[0,386],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy.","pos":[0,154],"source":"<xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy."},{"content":"Objects that do not inherit from <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> are implicitly marshal by value.","pos":[155,253],"source":" Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value."},{"content":"When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.","pos":[254,386]}]}]},{"pos":[741,1114],"content":"<xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain. The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application. Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.","nodes":[{"content":"<xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain. The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application. Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.","pos":[0,373],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> objects are accessed directly within the boundaries of the local application domain.","pos":[0,117],"source":"<xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain."},{"content":"The first time an application in a remote application domain accesses a <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph>, a proxy is passed to the remote application.","pos":[118,268],"source":" The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application."},{"content":"Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.","pos":[269,373]}]}]},{"pos":[1121,1389],"content":"Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.","nodes":[{"content":"Types must inherit from <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.","pos":[0,268],"source":"Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created."}]},{"pos":[1396,1724],"content":"When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly. The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.","nodes":[{"content":"When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly. The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.","pos":[0,328],"nodes":[{"content":"When you derive an object from <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly.","pos":[0,195],"source":"When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly."},{"content":"The runtime recognizes that classes derived from  <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> should be marshaled across app domain boundaries.","pos":[196,328],"source":" The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries."}]}]}],"pos":[746,2481],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.MarshalByRefObject\"></xref> class.","nodes":[{"pos":[0,87],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.MarshalByRefObject\"></xref> class."}],"pos":[8336,8424],"yaml":true},{"content":"Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.","nodes":[{"pos":[0,131],"content":"Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.","nodes":[{"content":"Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.","pos":[0,131]}]}],"pos":[9701,9833],"yaml":true},{"content":"The<xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>. In most cases, there is no need to override this method.","nodes":[{"pos":[0,315],"content":"The<xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>. In most cases, there is no need to override this method.","nodes":[{"content":"The<xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>. In most cases, there is no need to override this method.","pos":[0,315],"nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.CreateObjRef%2A&gt;</ph> method is called by remote object creation methods such as <ph id=\"ph2\">&lt;xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName&gt;</ph>.","pos":[0,258],"source":"The<xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>."},{"content":"In most cases, there is no need to override this method.","pos":[259,315]}]}]}],"pos":[9844,10160],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the object that the new <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> will reference.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the object that the new <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;&lt;/xref&gt;</ph> will reference.","source":"The <xref href=\"System.Type\"></xref> of the object that the new <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> will reference."}],"pos":[10347,10479],"yaml":true},{"content":"Information required to generate a proxy.","nodes":[{"pos":[0,41],"content":"Information required to generate a proxy.","nodes":[{"content":"Information required to generate a proxy.","pos":[0,41]}]}],"pos":[10553,10595],"yaml":true},{"content":"This instance is not a valid remoting object.","nodes":[{"pos":[0,45],"content":"This instance is not a valid remoting object.","nodes":[{"content":"This instance is not a valid remoting object.","pos":[0,45]}]}],"pos":[10789,10835],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[10947,11009],"yaml":true},{"content":"Retrieves the current lifetime service object that controls the lifetime policy for this instance.","nodes":[{"pos":[0,98],"content":"Retrieves the current lifetime service object that controls the lifetime policy for this instance.","nodes":[{"content":"Retrieves the current lifetime service object that controls the lifetime policy for this instance.","pos":[0,98]}]}],"pos":[12097,12196],"yaml":true},{"content":"For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.","nodes":[{"pos":[0,117],"content":"For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.","nodes":[{"content":"For more information about lifetime services, see the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices&gt;</ph> class.","pos":[0,117],"source":"For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class."}]}],"pos":[12207,12325],"yaml":true,"extradata":"MT"},{"content":"An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance.","nodes":[{"pos":[0,133],"content":"An object of type <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Lifetime.ILease\"&gt;&lt;/xref&gt;</ph> used to control the lifetime policy for this instance.","source":"An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance."}],"pos":[12461,12595],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[12779,12841],"yaml":true},{"content":"Obtains a lifetime service object to control the lifetime policy for this instance.","nodes":[{"pos":[0,83],"content":"Obtains a lifetime service object to control the lifetime policy for this instance.","nodes":[{"content":"Obtains a lifetime service object to control the lifetime policy for this instance.","pos":[0,83]}]}],"pos":[14043,14127],"yaml":true},{"content":"For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.","nodes":[{"pos":[0,117],"content":"For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.","nodes":[{"content":"For more information about lifetime services, see the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices&gt;</ph> class.","pos":[0,117],"source":"For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class."}]}],"pos":[14138,14256],"yaml":true,"extradata":"MT"},{"content":"An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <xref href=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime\"></xref> property.","nodes":[{"pos":[0,385],"content":"An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <xref href=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime\"></xref> property.","nodes":[{"content":"An object of type <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Lifetime.ILease\"&gt;&lt;/xref&gt;</ph> used to control the lifetime policy for this instance.","pos":[0,133],"source":"An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance."},{"content":"This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime\"&gt;&lt;/xref&gt;</ph> property.","pos":[134,385],"source":" This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <xref href=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime\"></xref> property."}]}],"pos":[15109,15495],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[15686,15748],"yaml":true},{"content":"Creates a shallow copy of the current <xref href=\"System.MarshalByRefObject\"></xref> object.","nodes":[{"pos":[0,92],"content":"Creates a shallow copy of the current <ph id=\"ph1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a shallow copy of the current <xref href=\"System.MarshalByRefObject\"></xref> object."}],"pos":[16959,17052],"yaml":true},{"content":"The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object. If a field is a value type, a bit-by-bit copy of the field is performed. If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.  \n  \n For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.  \n  \n The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call. By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side. Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object. The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.","nodes":[{"pos":[0,505],"content":"The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object. If a field is a value type, a bit-by-bit copy of the field is performed. If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.","nodes":[{"content":"The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object. If a field is a value type, a bit-by-bit copy of the field is performed. If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.","pos":[0,505],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29&gt;</ph> method creates a shallow copy by creating a new <ph id=\"ph2\">&lt;xref:System.MarshalByRefObject&gt;</ph> object, and then copying the nonstatic fields of the current <ph id=\"ph3\">&lt;xref:System.MarshalByRefObject&gt;</ph> object to the new object.","pos":[0,273],"source":"The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object."},{"content":"If a field is a value type, a bit-by-bit copy of the field is performed.","pos":[274,346]},{"content":"If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.","pos":[347,505]}]}]},{"pos":[512,1040],"content":"For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.","nodes":[{"content":"For example, consider a <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <ph id=\"ph2\">&lt;xref:System.ICloneable&gt;</ph> interface to perform a deep or shallow copy of an object.","pos":[0,528],"source":"For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object."}]},{"pos":[1047,1898],"content":"The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call. By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side. Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object. The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.","nodes":[{"content":"The identity of a <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> object is defined as the remote server object that is the target of a remoting client call.","pos":[0,142],"source":"The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call."},{"content":"By default, the memberwise clone of a <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject&gt;</ph> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side.","pos":[143,410],"source":" By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side."},{"content":"Specify <ph id=\"ph1\">`false`</ph>, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or <ph id=\"ph2\">`true`</ph> to cause the clone to retain the identity of the original <ph id=\"ph3\">&lt;xref:System.MarshalByRefObject&gt;</ph> object.","pos":[411,698],"source":" Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29&gt;</ph> method is intended to be used by developers implementing remote server objects.","pos":[699,851],"source":" The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects."}]}],"pos":[17063,18968],"yaml":true,"extradata":"MT"},{"content":"`false` to delete the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary. A value of `false` is usually appropriate. `true` to copy the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.","nodes":[{"pos":[0,432],"content":"`false` to delete the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary. A value of `false` is usually appropriate. `true` to copy the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.","nodes":[{"content":"<ph id=\"ph1\">`false`</ph> to delete the current <ph id=\"ph2\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary.","pos":[0,202],"source":"`false` to delete the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary."},{"content":"A value of <ph id=\"ph1\">`false`</ph> is usually appropriate.","pos":[203,245],"source":" A value of `false` is usually appropriate."},{"content":"<ph id=\"ph1\">`true`</ph> to copy the current <ph id=\"ph2\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.","pos":[246,432],"source":"`true` to copy the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object."}]}],"pos":[19144,19583],"yaml":true},{"content":"A shallow copy of the current <xref href=\"System.MarshalByRefObject\"></xref> object.","nodes":[{"pos":[0,84],"content":"A shallow copy of the current <ph id=\"ph1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph> object.","source":"A shallow copy of the current <xref href=\"System.MarshalByRefObject\"></xref> object."}],"pos":[19652,19737],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n  id: MarshalByRefObject\n  children:\n  - System.MarshalByRefObject.#ctor\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  langs:\n  - csharp\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Enables access to objects across application domain boundaries in applications that support remoting.\n  remarks: \"An application domain is a partition in an operating system process where one or more applications reside. Objects in the same application domain communicate directly. Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.  \\n  \\n <xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy. Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value. When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.  \\n  \\n <xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain. The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application. Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.  \\n  \\n Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.  \\n  \\n When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly. The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.\"\n  example:\n  - \"This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \\n  \\n **Example 1**  \\n  \\n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits <xref:System.MarshalByRefObject>, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \\n  \\n> [!NOTE]\\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \\n  \\n [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]\\n [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]\\n [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  \\n  \\n **Example 2**  \\n  \\n The following example demonstrates a class derived from <xref:System.MarshalByRefObject> that is used later in remoting.  \\n  \\n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]\\n [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]\\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class MarshalByRefObject\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - Microsoft.Build.Utilities.AppDomainIsolatedTask\n  - Microsoft.Build.Utilities.TaskItem\n  - Microsoft.Build.Utilities.TaskLoggingHelper\n  - System.AppDomain\n  - System.AppDomainManager\n  - System.ContextBoundObject\n  - System.AddIn.Pipeline.ContractBase\n  - System.ComponentModel.Component\n  - System.Data.Common.DataColumnMapping\n  - System.Data.Common.DataColumnMappingCollection\n  - System.Data.Common.DataTableMapping\n  - System.Data.Common.DataTableMappingCollection\n  - System.DirectoryServices.SearchResultCollection\n  - System.Drawing.Brush\n  - System.Drawing.Font\n  - System.Drawing.FontFamily\n  - System.Drawing.Graphics\n  - System.Drawing.Icon\n  - System.Drawing.Image\n  - System.Drawing.Pen\n  - System.Drawing.Region\n  - System.Drawing.StringFormat\n  - System.Drawing.Drawing2D.CustomLineCap\n  - System.Drawing.Drawing2D.GraphicsContainer\n  - System.Drawing.Drawing2D.GraphicsPath\n  - System.Drawing.Drawing2D.GraphicsPathIterator\n  - System.Drawing.Drawing2D.GraphicsState\n  - System.Drawing.Drawing2D.Matrix\n  - System.IO.IsolatedStorage.IsolatedStorage\n  - System.Messaging.MessageEnumerator\n  - System.Messaging.MessageQueueEnumerator\n  - System.Reflection.AssemblyNameProxy\n  - System.Runtime.InteropServices.StandardOleMarshalObject\n  - System.Runtime.Remoting.ObjectHandle\n  - System.Runtime.Remoting.Lifetime.ClientSponsor\n  - System.Speech.Recognition.SrgsGrammar.SrgsElement\n  - System.Web.Compilation.ClientBuildManager\n  - System.Web.Compilation.ClientBuildManagerCallback\n  - System.Web.Hosting.AppDomainProtocolHandler\n  - System.Web.Hosting.ApplicationManager\n  - System.Web.Hosting.HostingEnvironment\n  - System.Web.Hosting.ISAPIRuntime\n  - System.Web.Hosting.ProcessHost\n  - System.Web.Hosting.ProcessHostFactoryHelper\n  - System.Web.Hosting.ProcessProtocolHandler\n  - System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton\n  - System.Web.Hosting.RecycleLimitMonitor\n  - System.Web.Hosting.VirtualFileBase\n  - System.Web.Hosting.VirtualPathProvider\n  - System.Windows.Forms.BaseCollection\n  - System.Windows.Forms.NativeWindow\n  - System.Windows.Forms.NumericUpDownAccelerationCollection\n  - System.Windows.Forms.OwnerDrawPropertyBag\n  - System.Windows.Forms.TreeNode\n  - System.Windows.Interop.DocObjHost\n  - System.Workflow.Runtime.DebugEngine.DebugController\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MarshalByRefObject.#ctor\n  commentId: M:System.MarshalByRefObject.#ctor\n  id: '#ctor'\n  parent: System.MarshalByRefObject\n  langs:\n  - csharp\n  name: MarshalByRefObject()\n  nameWithType: MarshalByRefObject.MarshalByRefObject()\n  fullName: MarshalByRefObject.MarshalByRefObject()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MarshalByRefObject\"></xref> class.\n  syntax:\n    content: protected MarshalByRefObject ();\n    parameters: []\n  overload: System.MarshalByRefObject.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n  id: CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  langs:\n  - csharp\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.\n  remarks: The<xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>. In most cases, there is no need to override this method.\n  syntax:\n    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);\n    parameters:\n    - id: requestedType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the object that the new <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> will reference.\n    return:\n      type: System.Runtime.Remoting.ObjRef\n      description: Information required to generate a proxy.\n  overload: System.MarshalByRefObject.CreateObjRef*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: This instance is not a valid remoting object.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MarshalByRefObject.GetLifetimeService\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n  id: GetLifetimeService\n  parent: System.MarshalByRefObject\n  langs:\n  - csharp\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Retrieves the current lifetime service object that controls the lifetime policy for this instance.\n  remarks: For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.\n  syntax:\n    content: public object GetLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance.\n  overload: System.MarshalByRefObject.GetLifetimeService*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Obtains a lifetime service object to control the lifetime policy for this instance.\n  remarks: For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.\n  example:\n  - \"The following code example demonstrates creating a lease.  \\n  \\n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]\\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: An object of type <xref href=\"System.Runtime.Remoting.Lifetime.ILease\"></xref> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <xref href=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime\"></xref> property.\n  overload: System.MarshalByRefObject.InitializeLifetimeService*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  id: MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  langs:\n  - csharp\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Creates a shallow copy of the current <xref href=\"System.MarshalByRefObject\"></xref> object.\n  remarks: \"The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object. If a field is a value type, a bit-by-bit copy of the field is performed. If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.  \\n  \\n For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.  \\n  \\n The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call. By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side. Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object. The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.\"\n  syntax:\n    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);\n    parameters:\n    - id: cloneIdentity\n      type: System.Boolean\n      description: \"`false` to delete the current <xref href=\\\"System.MarshalByRefObject\\\"></xref> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary. A value of `false` is usually appropriate. `true` to copy the current <xref href=\\\"System.MarshalByRefObject\\\"></xref> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.\"\n    return:\n      type: System.MarshalByRefObject\n      description: A shallow copy of the current <xref href=\"System.MarshalByRefObject\"></xref> object.\n  overload: System.MarshalByRefObject.MemberwiseClone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.RemotingException\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: RemotingException\n  nameWithType: RemotingException\n  fullName: System.Runtime.Remoting.RemotingException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.MarshalByRefObject.#ctor\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MarshalByRefObject()\n  nameWithType: MarshalByRefObject.MarshalByRefObject()\n  fullName: MarshalByRefObject.MarshalByRefObject()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.Runtime.Remoting.ObjRef\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjRef\n  nameWithType: ObjRef\n  fullName: System.Runtime.Remoting.ObjRef\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.MarshalByRefObject.#ctor*\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject.MarshalByRefObject\n  fullName: MarshalByRefObject.MarshalByRefObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n- uid: System.MarshalByRefObject.CreateObjRef*\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef\n  nameWithType: MarshalByRefObject.CreateObjRef\n  fullName: MarshalByRefObject.CreateObjRef\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n- uid: System.MarshalByRefObject.GetLifetimeService*\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService\n  nameWithType: MarshalByRefObject.GetLifetimeService\n  fullName: MarshalByRefObject.GetLifetimeService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n- uid: System.MarshalByRefObject.InitializeLifetimeService*\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: MarshalByRefObject.InitializeLifetimeService\n  fullName: MarshalByRefObject.InitializeLifetimeService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n- uid: System.MarshalByRefObject.MemberwiseClone*\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone\n  nameWithType: MarshalByRefObject.MemberwiseClone\n  fullName: MarshalByRefObject.MemberwiseClone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}