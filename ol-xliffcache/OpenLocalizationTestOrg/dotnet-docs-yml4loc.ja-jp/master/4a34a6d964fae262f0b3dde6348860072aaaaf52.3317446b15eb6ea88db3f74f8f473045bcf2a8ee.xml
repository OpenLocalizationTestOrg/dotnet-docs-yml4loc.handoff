{"nodes":[{"content":"Represents the license transform algorithm used to normalize XrML licenses for signatures.","nodes":[{"pos":[0,90],"content":"Represents the license transform algorithm used to normalize XrML licenses for signatures.","nodes":[{"content":"Represents the license transform algorithm used to normalize XrML licenses for signatures.","pos":[0,90]}]}],"pos":[1152,1243],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).  \n  \n Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures.  \n  \n The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.","nodes":[{"pos":[0,173],"content":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).","pos":[0,173],"source":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL)."}]},{"pos":[180,296],"content":"Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class to transform XrML licenses for signatures.","pos":[0,116],"source":"Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures."}]},{"pos":[303,523],"content":"The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.","nodes":[{"content":"The Uniform Resource Identifier (URI) that describes the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is defined by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> field.","pos":[0,220],"source":"The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field."}]}],"pos":[1254,1784],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> class."}],"pos":[4523,4638],"yaml":true},{"content":"Gets or sets the decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,123],"content":"Gets or sets the decryptor of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[5918,6042],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element.","nodes":[{"pos":[0,219],"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> object uses an <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface to decrypt <ph id=\"ph3\">`&lt;encryptedGrant&gt;`</ph> elements from the current <ph id=\"ph4\">`&lt;license&gt;`</ph> element.","source":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element."}],"pos":[6053,6273],"yaml":true,"extradata":"MT"},{"content":"The decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,110],"content":"The decryptor of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"The decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[7163,7274],"yaml":true},{"content":"Returns an XML representation of the parameters of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object that are suitable to be included as subelements of an XMLDSIG `<Transform>` element.","nodes":[{"pos":[0,219],"content":"Returns an XML representation of the parameters of an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object that are suitable to be included as subelements of an XMLDSIG <ph id=\"ph2\">`&lt;Transform&gt;`</ph> element.","source":"Returns an XML representation of the parameters of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object that are suitable to be included as subelements of an XMLDSIG `<Transform>` element."}],"pos":[8501,8721],"yaml":true},{"content":"A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object in an XMLDSIG `<Transform>` element.","nodes":[{"pos":[0,218],"content":"A list of the XML nodes that represent the transform-specific content needed to describe the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object in an XMLDSIG <ph id=\"ph2\">`&lt;Transform&gt;`</ph> element.","source":"A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object in an XMLDSIG `<Transform>` element."}],"pos":[8887,9106],"yaml":true},{"content":"Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,106],"content":"Returns the output of an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[10323,10430],"yaml":true},{"content":"The type of the returned object must be <xref:System.Xml.XmlDocument>.","nodes":[{"pos":[0,70],"content":"The type of the returned object must be <xref:System.Xml.XmlDocument>.","nodes":[{"content":"The type of the returned object must be <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph>.","pos":[0,70],"source":"The type of the returned object must be <xref:System.Xml.XmlDocument>."}]}],"pos":[10441,10512],"yaml":true,"extradata":"MT"},{"content":"The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,99],"content":"The output of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[10648,10748],"yaml":true},{"content":"Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,106],"content":"Returns the output of an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[12014,12121],"yaml":true},{"content":"The type of the output to return. <xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter.","nodes":[{"pos":[0,120],"content":"The type of the output to return. <xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter.","nodes":[{"content":"The type of the output to return.","pos":[0,33]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> is the only valid type for this parameter.","pos":[34,120],"source":"<xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter."}]}],"pos":[12264,12385],"yaml":true},{"content":"The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,99],"content":"The output of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[12442,12542],"yaml":true},{"content":"The <code>type</code> parameter is not an <xref href=\"System.Xml.XmlDocument\"></xref> object.","nodes":[{"pos":[0,93],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> object.","source":"The <code>type</code> parameter is not an <xref href=\"System.Xml.XmlDocument\"></xref> object."}],"pos":[12726,12820],"yaml":true},{"content":"Gets an array of types that are valid inputs to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,241],"content":"Gets an array of types that are valid inputs to the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"&gt;&lt;/xref&gt;</ph> method of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets an array of types that are valid inputs to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[13944,14186],"yaml":true},{"content":"The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.","nodes":[{"pos":[0,132],"content":"The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.","nodes":[{"content":"The only valid input type to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph>.","pos":[0,132],"source":"The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>."}]}],"pos":[14197,14330],"yaml":true,"extradata":"MT"},{"content":"An array of types that are valid inputs to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; you can pass only objects of one of these types to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,481],"content":"An array of types that are valid inputs to the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"&gt;&lt;/xref&gt;</ph> method of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object; you can pass only objects of one of these types to the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"&gt;&lt;/xref&gt;</ph> method of the current <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of types that are valid inputs to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; you can pass only objects of one of these types to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[14453,14935],"yaml":true},{"content":"Parses the specified <xref href=\"System.Xml.XmlNodeList\"></xref> object as transform-specific content of a `<Transform>` element; this method is not supported because the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object has no inner XML elements.","nodes":[{"pos":[0,278],"content":"Parses the specified <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;&lt;/xref&gt;</ph> object as transform-specific content of a <ph id=\"ph2\">`&lt;Transform&gt;`</ph> element; this method is not supported because the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object has no inner XML elements.","source":"Parses the specified <xref href=\"System.Xml.XmlNodeList\"></xref> object as transform-specific content of a `<Transform>` element; this method is not supported because the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object has no inner XML elements."}],"pos":[16274,16553],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlNodeList\"></xref> object that encapsulates the transform to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,192],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;&lt;/xref&gt;</ph> object that encapsulates the transform to load into the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Xml.XmlNodeList\"></xref> object that encapsulates the transform to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[16734,16927],"yaml":true},{"content":"Loads the specified input into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,124],"content":"Loads the specified input into the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"Loads the specified input into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[18208,18333],"yaml":true},{"content":"The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object. The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>.","nodes":[{"pos":[0,198],"content":"The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object. The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>.","nodes":[{"content":"The input to load into the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,116],"source":"The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."},{"content":"The type of the input object must be <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph>.","pos":[117,198],"source":" The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>."}]}],"pos":[18476,18675],"yaml":true},{"content":"The context was not set before this transform was invoked.  \n  \n -or-  \n  \n The `<issuer>` element was not set before this transform was invoked.  \n  \n -or-  \n  \n The `<license>` element was not set before this transform was invoked.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\"></xref> property was not set before this transform was invoked.","nodes":[{"pos":[0,58],"content":"The context was not set before this transform was invoked.","nodes":[{"content":"The context was not set before this transform was invoked.","pos":[0,58]}]},{"pos":[65,69],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[76,145],"content":"The <ph id=\"ph1\">`&lt;issuer&gt;`</ph> element was not set before this transform was invoked.","source":"The `<issuer>` element was not set before this transform was invoked."},{"pos":[152,156],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[163,233],"content":"The <ph id=\"ph1\">`&lt;license&gt;`</ph> element was not set before this transform was invoked.","source":"The `<license>` element was not set before this transform was invoked."},{"pos":[240,244],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[251,394],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\"&gt;&lt;/xref&gt;</ph> property was not set before this transform was invoked.","source":"The <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\"></xref> property was not set before this transform was invoked."}],"pos":[18913,19324],"yaml":true},{"content":"Gets an array of types that are valid outputs from the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,244],"content":"Gets an array of types that are valid outputs from the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"&gt;&lt;/xref&gt;</ph> method of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets an array of types that are valid outputs from the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[20454,20699],"yaml":true},{"content":"The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.","nodes":[{"pos":[0,133],"content":"The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.","nodes":[{"content":"The only valid output type to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph>.","pos":[0,133],"source":"The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>."}]}],"pos":[20710,20844],"yaml":true,"extradata":"MT"},{"content":"An array of valid output types for the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; only objects of one of these types are returned from the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\"></xref> methods of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.","nodes":[{"pos":[0,374],"content":"An array of valid output types for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object; only objects of one of these types are returned from the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\"&gt;&lt;/xref&gt;</ph> methods of the current <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of valid output types for the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; only objects of one of these types are returned from the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\"></xref> methods of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object."}],"pos":[20968,21343],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform\n  commentId: T:System.Security.Cryptography.Xml.XmlLicenseTransform\n  id: XmlLicenseTransform\n  children:\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  - System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  langs:\n  - csharp\n  name: XmlLicenseTransform\n  nameWithType: XmlLicenseTransform\n  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform\n  type: Class\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the license transform algorithm used to normalize XrML licenses for signatures.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures.  \\n  \\n The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.\"\n  example:\n  - \"The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.  \\n  \\n [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]\\n [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]\\n [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]\"\n  syntax:\n    content: 'public class XmlLicenseTransform : System.Security.Cryptography.Xml.Transform'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.Transform\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.Xml.Transform.Algorithm\n  - System.Security.Cryptography.Xml.Transform.Context\n  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)\n  - System.Security.Cryptography.Xml.Transform.GetXml\n  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces\n  - System.Security.Cryptography.Xml.Transform.Resolver\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  commentId: M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: XmlLicenseTransform()\n  nameWithType: XmlLicenseTransform.XmlLicenseTransform()\n  fullName: XmlLicenseTransform.XmlLicenseTransform()\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> class.\n  syntax:\n    content: public XmlLicenseTransform ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  commentId: P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  id: Decryptor\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: Decryptor\n  nameWithType: XmlLicenseTransform.Decryptor\n  fullName: XmlLicenseTransform.Decryptor\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element.\n  example:\n  - \"The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.  \\n  \\n [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]\\n [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]\\n [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.IRelDecryptor Decryptor { get; set; }\n    return:\n      type: System.Security.Cryptography.Xml.IRelDecryptor\n      description: The decryptor of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  commentId: M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  id: GetInnerXml\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: GetInnerXml()\n  nameWithType: XmlLicenseTransform.GetInnerXml()\n  fullName: XmlLicenseTransform.GetInnerXml()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns an XML representation of the parameters of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object that are suitable to be included as subelements of an XMLDSIG `<Transform>` element.\n  syntax:\n    content: protected override System.Xml.XmlNodeList GetInnerXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeList\n      description: A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object in an XMLDSIG `<Transform>` element.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  commentId: M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  id: GetOutput\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: GetOutput()\n  nameWithType: XmlLicenseTransform.GetOutput()\n  fullName: XmlLicenseTransform.GetOutput()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The type of the returned object must be <xref:System.Xml.XmlDocument>.\n  syntax:\n    content: public override object GetOutput ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  commentId: M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  id: GetOutput(System.Type)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: GetOutput(Type)\n  nameWithType: XmlLicenseTransform.GetOutput(Type)\n  fullName: XmlLicenseTransform.GetOutput(Type)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the output of an <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  syntax:\n    content: public override object GetOutput (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the output to return. <xref href=\"System.Xml.XmlDocument\"></xref> is the only valid type for this parameter.\n    return:\n      type: System.Object\n      description: The output of the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>type</code> parameter is not an <xref href=\"System.Xml.XmlDocument\"></xref> object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  commentId: P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  id: InputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: InputTypes\n  nameWithType: XmlLicenseTransform.InputTypes\n  fullName: XmlLicenseTransform.InputTypes\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets an array of types that are valid inputs to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.\n  syntax:\n    content: public override Type[] InputTypes { get; }\n    return:\n      type: System.Type[]\n      description: An array of types that are valid inputs to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; you can pass only objects of one of these types to the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  commentId: M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  id: LoadInnerXml(System.Xml.XmlNodeList)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: LoadInnerXml(XmlNodeList)\n  nameWithType: XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n  fullName: XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Parses the specified <xref href=\"System.Xml.XmlNodeList\"></xref> object as transform-specific content of a `<Transform>` element; this method is not supported because the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object has no inner XML elements.\n  syntax:\n    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);\n    parameters:\n    - id: nodeList\n      type: System.Xml.XmlNodeList\n      description: An <xref href=\"System.Xml.XmlNodeList\"></xref> object that encapsulates the transform to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  commentId: M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  id: LoadInput(System.Object)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: LoadInput(Object)\n  nameWithType: XmlLicenseTransform.LoadInput(Object)\n  fullName: XmlLicenseTransform.LoadInput(Object)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Loads the specified input into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  syntax:\n    content: public override void LoadInput (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The input to load into the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object. The type of the input object must be <xref href=\"System.Xml.XmlDocument\"></xref>.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The context was not set before this transform was invoked.  \\n  \\n -or-  \\n  \\n The `<issuer>` element was not set before this transform was invoked.  \\n  \\n -or-  \\n  \\n The `<license>` element was not set before this transform was invoked.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\\\"></xref> property was not set before this transform was invoked.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  commentId: P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  id: OutputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  langs:\n  - csharp\n  name: OutputTypes\n  nameWithType: XmlLicenseTransform.OutputTypes\n  fullName: XmlLicenseTransform.OutputTypes\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets an array of types that are valid outputs from the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\"></xref> method of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  remarks: The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.\n  syntax:\n    content: public override Type[] OutputTypes { get; }\n    return:\n      type: System.Type[]\n      description: An array of valid output types for the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object; only objects of one of these types are returned from the <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\"></xref> methods of the current <xref href=\"System.Security.Cryptography.Xml.XmlLicenseTransform\"></xref> object.\n  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.Xml.Transform\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Security.Cryptography.Xml.Transform\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: XmlLicenseTransform()\n  nameWithType: XmlLicenseTransform.XmlLicenseTransform()\n  fullName: XmlLicenseTransform.XmlLicenseTransform()\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: Decryptor\n  nameWithType: XmlLicenseTransform.Decryptor\n  fullName: XmlLicenseTransform.Decryptor\n- uid: System.Security.Cryptography.Xml.IRelDecryptor\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: IRelDecryptor\n  nameWithType: IRelDecryptor\n  fullName: System.Security.Cryptography.Xml.IRelDecryptor\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetInnerXml()\n  nameWithType: XmlLicenseTransform.GetInnerXml()\n  fullName: XmlLicenseTransform.GetInnerXml()\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetOutput()\n  nameWithType: XmlLicenseTransform.GetOutput()\n  fullName: XmlLicenseTransform.GetOutput()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetOutput(Type)\n  nameWithType: XmlLicenseTransform.GetOutput(Type)\n  fullName: XmlLicenseTransform.GetOutput(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: InputTypes\n  nameWithType: XmlLicenseTransform.InputTypes\n  fullName: XmlLicenseTransform.InputTypes\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInnerXml(XmlNodeList)\n  nameWithType: XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n  fullName: XmlLicenseTransform.LoadInnerXml(XmlNodeList)\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInput(Object)\n  nameWithType: XmlLicenseTransform.LoadInput(Object)\n  fullName: XmlLicenseTransform.LoadInput(Object)\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: OutputTypes\n  nameWithType: XmlLicenseTransform.OutputTypes\n  fullName: XmlLicenseTransform.OutputTypes\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: XmlLicenseTransform\n  nameWithType: XmlLicenseTransform.XmlLicenseTransform\n  fullName: XmlLicenseTransform.XmlLicenseTransform\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: Decryptor\n  nameWithType: XmlLicenseTransform.Decryptor\n  fullName: XmlLicenseTransform.Decryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetInnerXml\n  nameWithType: XmlLicenseTransform.GetInnerXml\n  fullName: XmlLicenseTransform.GetInnerXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: GetOutput\n  nameWithType: XmlLicenseTransform.GetOutput\n  fullName: XmlLicenseTransform.GetOutput\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: InputTypes\n  nameWithType: XmlLicenseTransform.InputTypes\n  fullName: XmlLicenseTransform.InputTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInnerXml\n  nameWithType: XmlLicenseTransform.LoadInnerXml\n  fullName: XmlLicenseTransform.LoadInnerXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: LoadInput\n  nameWithType: XmlLicenseTransform.LoadInput\n  fullName: XmlLicenseTransform.LoadInput\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*\n  parent: System.Security.Cryptography.Xml.XmlLicenseTransform\n  isExternal: false\n  name: OutputTypes\n  nameWithType: XmlLicenseTransform.OutputTypes\n  fullName: XmlLicenseTransform.OutputTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/XmlLicenseTransform.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.Xml.Transform.Algorithm\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: Algorithm\n  nameWithType: Transform.Algorithm\n  fullName: Transform.Algorithm\n- uid: System.Security.Cryptography.Xml.Transform.Context\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: Context\n  nameWithType: Transform.Context\n  fullName: Transform.Context\n- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: GetDigestedOutput(HashAlgorithm)\n  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)\n  fullName: Transform.GetDigestedOutput(HashAlgorithm)\n- uid: System.Security.Cryptography.Xml.Transform.GetXml\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: GetXml()\n  nameWithType: Transform.GetXml()\n  fullName: Transform.GetXml()\n- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: PropagatedNamespaces\n  nameWithType: Transform.PropagatedNamespaces\n  fullName: Transform.PropagatedNamespaces\n- uid: System.Security.Cryptography.Xml.Transform.Resolver\n  parent: System.Security.Cryptography.Xml.Transform\n  isExternal: false\n  name: Resolver\n  nameWithType: Transform.Resolver\n  fullName: Transform.Resolver\n"}