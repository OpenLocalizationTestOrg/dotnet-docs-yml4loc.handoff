{"nodes":[{"content":"Enables users to write activation code for managed objects that extend <xref href=\"System.MarshalByRefObject\"></xref>.","nodes":[{"pos":[0,118],"content":"Enables users to write activation code for managed objects that extend <ph id=\"ph1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph>.","source":"Enables users to write activation code for managed objects that extend <xref href=\"System.MarshalByRefObject\"></xref>."}],"pos":[544,663],"yaml":true},{"content":"You can enable custom activation by providing a proxy class that implements `ICustomFactory` and attributing the <xref:System.MarshalByRefObject> class with the <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>. When the class is activated, the proxy's <xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A> method is called by the common language runtime to activate the class.","nodes":[{"pos":[0,398],"content":"You can enable custom activation by providing a proxy class that implements `ICustomFactory` and attributing the <xref:System.MarshalByRefObject> class with the <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>. When the class is activated, the proxy's <xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A> method is called by the common language runtime to activate the class.","nodes":[{"content":"You can enable custom activation by providing a proxy class that implements <ph id=\"ph1\">`ICustomFactory`</ph> and attributing the <ph id=\"ph2\">&lt;xref:System.MarshalByRefObject&gt;</ph> class with the <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Proxies.ProxyAttribute&gt;</ph>.","pos":[0,215],"source":"You can enable custom activation by providing a proxy class that implements `ICustomFactory` and attributing the <xref:System.MarshalByRefObject> class with the <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>."},{"content":"When the class is activated, the proxy's <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A&gt;</ph> method is called by the common language runtime to activate the class.","pos":[216,398],"source":" When the class is activated, the proxy's <xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A> method is called by the common language runtime to activate the class."}]}],"pos":[674,1073],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the specified type.","nodes":[{"pos":[0,45],"content":"Creates a new instance of the specified type.","nodes":[{"content":"Creates a new instance of the specified type.","pos":[0,45]}]}],"pos":[2585,2631],"yaml":true},{"content":"`CreateInstance` is called by the common language runtime when a new object of the specified type needs to be created. Override this method to provide your own custom class factory.","nodes":[{"pos":[0,181],"content":"`CreateInstance` is called by the common language runtime when a new object of the specified type needs to be created. Override this method to provide your own custom class factory.","nodes":[{"content":"<ph id=\"ph1\">`CreateInstance`</ph> is called by the common language runtime when a new object of the specified type needs to be created.","pos":[0,118],"source":"`CreateInstance` is called by the common language runtime when a new object of the specified type needs to be created."},{"content":"Override this method to provide your own custom class factory.","pos":[119,181]}]}],"pos":[2642,2826],"yaml":true,"extradata":"MT"},{"content":"The type to activate.","nodes":[{"pos":[0,21],"content":"The type to activate.","nodes":[{"content":"The type to activate.","pos":[0,21]}]}],"pos":[2989,3011],"yaml":true},{"content":"A <xref href=\"System.MarshalByRefObject\"></xref> associated with the specified type.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;&lt;/xref&gt;</ph> associated with the specified type.","source":"A <xref href=\"System.MarshalByRefObject\"></xref> associated with the specified type."}],"pos":[3080,3165],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ICustomFactory\n  commentId: T:System.Runtime.InteropServices.ICustomFactory\n  id: ICustomFactory\n  children:\n  - System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)\n  langs:\n  - csharp\n  name: ICustomFactory\n  nameWithType: ICustomFactory\n  fullName: System.Runtime.InteropServices.ICustomFactory\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Enables users to write activation code for managed objects that extend <xref href=\"System.MarshalByRefObject\"></xref>.\n  remarks: You can enable custom activation by providing a proxy class that implements `ICustomFactory` and attributing the <xref:System.MarshalByRefObject> class with the <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>. When the class is activated, the proxy's <xref:System.Runtime.InteropServices.ICustomFactory.CreateInstance%2A> method is called by the common language runtime to activate the class.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ICustomFactory\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ICustomFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)\n  commentId: M:System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)\n  id: CreateInstance(System.Type)\n  parent: System.Runtime.InteropServices.ICustomFactory\n  langs:\n  - csharp\n  name: CreateInstance(Type)\n  nameWithType: ICustomFactory.CreateInstance(Type)\n  fullName: ICustomFactory.CreateInstance(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Creates a new instance of the specified type.\n  remarks: '`CreateInstance` is called by the common language runtime when a new object of the specified type needs to be created. Override this method to provide your own custom class factory.'\n  syntax:\n    content: public MarshalByRefObject CreateInstance (Type serverType);\n    parameters:\n    - id: serverType\n      type: System.Type\n      description: The type to activate.\n    return:\n      type: System.MarshalByRefObject\n      description: A <xref href=\"System.MarshalByRefObject\"></xref> associated with the specified type.\n  overload: System.Runtime.InteropServices.ICustomFactory.CreateInstance*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ICustomFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Runtime.InteropServices.ICustomFactory.CreateInstance(System.Type)\n  parent: System.Runtime.InteropServices.ICustomFactory\n  isExternal: false\n  name: CreateInstance(Type)\n  nameWithType: ICustomFactory.CreateInstance(Type)\n  fullName: ICustomFactory.CreateInstance(Type)\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices.ICustomFactory.CreateInstance*\n  parent: System.Runtime.InteropServices.ICustomFactory\n  isExternal: false\n  name: CreateInstance\n  nameWithType: ICustomFactory.CreateInstance\n  fullName: ICustomFactory.CreateInstance\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ICustomFactory.xml\n"}