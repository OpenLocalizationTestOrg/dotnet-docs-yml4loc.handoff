{"nodes":[{"content":"Defines the method message interface.","nodes":[{"pos":[0,37],"content":"Defines the method message interface.","nodes":[{"content":"Defines the method message interface.","pos":[0,37]}]}],"pos":[1151,1189],"yaml":true},{"content":"A method message is used to send information to and from remote methods. For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.","nodes":[{"pos":[0,204],"content":"A method message is used to send information to and from remote methods. For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.","nodes":[{"content":"A method message is used to send information to and from remote methods. For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.","pos":[0,204],"nodes":[{"content":"A method message is used to send information to and from remote methods.","pos":[0,72]},{"content":"For example, messages used for remote method calls implement the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> interface.","pos":[73,204],"source":" For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface."}]}]}],"pos":[1200,1405],"yaml":true,"extradata":"MT"},{"content":"Gets the number of arguments passed to the method.","nodes":[{"pos":[0,50],"content":"Gets the number of arguments passed to the method.","nodes":[{"content":"Gets the number of arguments passed to the method.","pos":[0,50]}]}],"pos":[3573,3624],"yaml":true},{"content":"The number of arguments passed to the method.","nodes":[{"pos":[0,45],"content":"The number of arguments passed to the method.","nodes":[{"content":"The number of arguments passed to the method.","pos":[0,45]}]}],"pos":[4432,4478],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[4675,4793],"yaml":true},{"content":"Gets an array of arguments passed to the method.","nodes":[{"pos":[0,48],"content":"Gets an array of arguments passed to the method.","nodes":[{"content":"Gets an array of arguments passed to the method.","pos":[0,48]}]}],"pos":[5827,5876],"yaml":true},{"content":"Although the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> property is redundant since the same functionality can be achieved through the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.","nodes":[{"pos":[0,417],"content":"Although the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> property is redundant since the same functionality can be achieved through the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.","nodes":[{"content":"Although the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A&gt;</ph> property is redundant since the same functionality can be achieved through the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A&gt;</ph>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.","pos":[0,417],"source":"Although the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> property is redundant since the same functionality can be achieved through the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved."}]}],"pos":[5887,6305],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Object\"></xref> array containing the arguments passed to the method.","nodes":[{"pos":[0,90],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> array containing the arguments passed to the method.","source":"An <xref href=\"System.Object\"></xref> array containing the arguments passed to the method."}],"pos":[6417,6508],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[6701,6819],"yaml":true},{"content":"Gets a specific argument as an <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,66],"content":"Gets a specific argument as an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a specific argument as an <xref href=\"System.Object\"></xref>."}],"pos":[7926,7993],"yaml":true},{"content":"The number of the requested argument.","nodes":[{"pos":[0,37],"content":"The number of the requested argument.","nodes":[{"content":"The number of the requested argument.","pos":[0,37]}]}],"pos":[8128,8166],"yaml":true},{"content":"The argument passed to the method.","nodes":[{"pos":[0,34],"content":"The argument passed to the method.","nodes":[{"content":"The argument passed to the method.","pos":[0,34]}]}],"pos":[8223,8258],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[8453,8571],"yaml":true},{"content":"Gets the name of the argument passed to the method.","nodes":[{"pos":[0,51],"content":"Gets the name of the argument passed to the method.","nodes":[{"content":"Gets the name of the argument passed to the method.","pos":[0,51]}]}],"pos":[9702,9754],"yaml":true},{"content":"The number of the requested argument.","nodes":[{"pos":[0,37],"content":"The number of the requested argument.","nodes":[{"content":"The number of the requested argument.","pos":[0,37]}]}],"pos":[9891,9929],"yaml":true},{"content":"The name of the specified argument passed to the method, or `null` if the current method is not implemented.","nodes":[{"pos":[0,108],"content":"The name of the specified argument passed to the method, or <ph id=\"ph1\">`null`</ph> if the current method is not implemented.","source":"The name of the specified argument passed to the method, or `null` if the current method is not implemented."}],"pos":[9986,10095],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[10294,10412],"yaml":true},{"content":"Gets a value indicating whether the message has variable arguments.","nodes":[{"pos":[0,67],"content":"Gets a value indicating whether the message has variable arguments.","nodes":[{"content":"Gets a value indicating whether the message has variable arguments.","pos":[0,67]}]}],"pos":[11482,11550],"yaml":true},{"content":"`true` if the method can accept a variable number of arguments; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the method can accept a variable number of arguments; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the method can accept a variable number of arguments; otherwise, `false`."}],"pos":[12357,12443],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[12642,12760],"yaml":true},{"content":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.","nodes":[{"pos":[0,111],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"&gt;&lt;/xref&gt;</ph> for the current method call.","source":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call."}],"pos":[13878,13990],"yaml":true},{"content":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.","nodes":[{"pos":[0,111],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"&gt;&lt;/xref&gt;</ph> for the current method call.","source":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call."}],"pos":[14911,15023],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[15230,15348],"yaml":true},{"content":"Gets the <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.","nodes":[{"pos":[0,80],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase\"&gt;&lt;/xref&gt;</ph> of the called method.","source":"Gets the <xref href=\"System.Reflection.MethodBase\"></xref> of the called method."}],"pos":[16418,16499],"yaml":true},{"content":"This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.","nodes":[{"pos":[0,128],"content":"This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.","nodes":[{"content":"This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.","pos":[0,128]}]}],"pos":[16510,16639],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase\"&gt;&lt;/xref&gt;</ph> of the called method.","source":"The <xref href=\"System.Reflection.MethodBase\"></xref> of the called method."}],"pos":[16790,16866],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[17065,17183],"yaml":true},{"content":"Gets the name of the invoked method.","nodes":[{"pos":[0,36],"content":"Gets the name of the invoked method.","nodes":[{"content":"Gets the name of the invoked method.","pos":[0,36]}]}],"pos":[18253,18290],"yaml":true},{"content":"The name of the invoked method.","nodes":[{"pos":[0,31],"content":"The name of the invoked method.","nodes":[{"content":"The name of the invoked method.","pos":[0,31]}]}],"pos":[19039,19071],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[19270,19388],"yaml":true},{"content":"Gets an object containing the method signature.","nodes":[{"pos":[0,47],"content":"Gets an object containing the method signature.","nodes":[{"content":"Gets an object containing the method signature.","pos":[0,47]}]}],"pos":[20488,20536],"yaml":true},{"content":"All the current implementations of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> return an array of <xref:System.Type> objects containing the parameter types of the method.","nodes":[{"pos":[0,182],"content":"All the current implementations of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> return an array of <xref:System.Type> objects containing the parameter types of the method.","nodes":[{"content":"All the current implementations of <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</ph> return an array of <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> objects containing the parameter types of the method.","pos":[0,182],"source":"All the current implementations of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> return an array of <xref:System.Type> objects containing the parameter types of the method."}]}],"pos":[20547,20730],"yaml":true,"extradata":"MT"},{"content":"An object containing the method signature.","nodes":[{"pos":[0,42],"content":"An object containing the method signature.","nodes":[{"content":"An object containing the method signature.","pos":[0,42]}]}],"pos":[20849,20892],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[21096,21214],"yaml":true},{"content":"Gets the full <xref href=\"System.Type\"></xref> name of the specific object that the call is destined for.","nodes":[{"pos":[0,105],"content":"Gets the full <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> name of the specific object that the call is destined for.","source":"Gets the full <xref href=\"System.Type\"></xref> name of the specific object that the call is destined for."}],"pos":[22272,22378],"yaml":true},{"content":"The full <xref href=\"System.Type\"></xref> name of the specific object that the call is destined for.","nodes":[{"pos":[0,100],"content":"The full <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> name of the specific object that the call is destined for.","source":"The full <xref href=\"System.Type\"></xref> name of the specific object that the call is destined for."}],"pos":[22490,22591],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[22788,22906],"yaml":true},{"content":"Gets the URI of the specific object that the call is destined for.","nodes":[{"pos":[0,66],"content":"Gets the URI of the specific object that the call is destined for.","nodes":[{"content":"Gets the URI of the specific object that the call is destined for.","pos":[0,66]}]}],"pos":[23934,24001],"yaml":true},{"content":"The URI of the remote object that contains the invoked method.","nodes":[{"pos":[0,62],"content":"The URI of the remote object that contains the invoked method.","nodes":[{"content":"The URI of the remote object that contains the invoked method.","pos":[0,62]}]}],"pos":[24108,24171],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[24363,24481],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage\n  commentId: T:System.Runtime.Remoting.Messaging.IMethodMessage\n  id: IMethodMessage\n  children:\n  - System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  - System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  - System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  - System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  - System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  - System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  - System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  - System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  - System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  langs:\n  - csharp\n  name: IMethodMessage\n  nameWithType: IMethodMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Defines the method message interface.\n  remarks: A method message is used to send information to and from remote methods. For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.\n  example:\n  - \"The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console and return immediately without making a remote call.  \\n  \\n [!code-cpp[IMethodMessage_MethodName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#1)]\\n [!code-csharp[IMethodMessage_MethodName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#1)]\\n [!code-vb[IMethodMessage_MethodName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IMethodMessage : System.Runtime.Remoting.Messaging.IMessage\n  derivedClasses:\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage\n  - System.Runtime.Remoting.Messaging.IMethodReturnMessage\n  implements:\n  - System.Runtime.Remoting.Messaging.IMessage\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  id: ArgCount\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: ArgCount\n  nameWithType: IMethodMessage.ArgCount\n  fullName: IMethodMessage.ArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the number of arguments passed to the method.\n  remarks: ''\n  example:\n  - \"The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console, using the `ArgCount` property to iterate through the arguments.  \\n  \\n [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]\\n [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]\\n [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]\"\n  syntax:\n    content: public int ArgCount { get; }\n    return:\n      type: System.Int32\n      description: The number of arguments passed to the method.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  id: Args\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: Args\n  nameWithType: IMethodMessage.Args\n  fullName: IMethodMessage.Args\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an array of arguments passed to the method.\n  remarks: Although the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> property is redundant since the same functionality can be achieved through the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.\n  syntax:\n    content: public object[] Args { get; }\n    return:\n      type: System.Object[]\n      description: An <xref href=\"System.Object\"></xref> array containing the arguments passed to the method.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.Args*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  id: GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: GetArg(Int32)\n  nameWithType: IMethodMessage.GetArg(Int32)\n  fullName: IMethodMessage.GetArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a specific argument as an <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public object GetArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: The number of the requested argument.\n    return:\n      type: System.Object\n      description: The argument passed to the method.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  id: GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: GetArgName(Int32)\n  nameWithType: IMethodMessage.GetArgName(Int32)\n  fullName: IMethodMessage.GetArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of the argument passed to the method.\n  syntax:\n    content: public string GetArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The number of the requested argument.\n    return:\n      type: System.String\n      description: The name of the specified argument passed to the method, or `null` if the current method is not implemented.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  id: HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: HasVarArgs\n  nameWithType: IMethodMessage.HasVarArgs\n  fullName: IMethodMessage.HasVarArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a value indicating whether the message has variable arguments.\n  remarks: ''\n  example:\n  - \"The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console, including whether the method call has variable arguments.  \\n  \\n [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]\\n [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]\\n [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]\"\n  syntax:\n    content: public bool HasVarArgs { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the method can accept a variable number of arguments; otherwise, `false`.'\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  id: LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: LogicalCallContext\n  nameWithType: IMethodMessage.LogicalCallContext\n  fullName: IMethodMessage.LogicalCallContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.\n  remarks: ''\n  example:\n  - \"The following example code shows how to use the `LogicalCallContext` property to determine whether any values are attached to the logical thread.  \\n  \\n [!code-cpp[IMethodMessage_LogicalCallContext#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/CPP/imethodmessage_logicalcallcontext.cpp#1)]\\n [!code-csharp[IMethodMessage_LogicalCallContext#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/CS/imethodmessage_logicalcallcontext.cs#1)]\\n [!code-vb[IMethodMessage_LogicalCallContext#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/VB/imethodmessage_logicalcallcontext.vb#1)]\"\n  syntax:\n    content: public System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }\n    return:\n      type: System.Runtime.Remoting.Messaging.LogicalCallContext\n      description: Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  id: MethodBase\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: MethodBase\n  nameWithType: IMethodMessage.MethodBase\n  fullName: IMethodMessage.MethodBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.\n  remarks: This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.\n  syntax:\n    content: public System.Reflection.MethodBase MethodBase { get; }\n    return:\n      type: System.Reflection.MethodBase\n      description: The <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  id: MethodName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: IMethodMessage.MethodName\n  fullName: IMethodMessage.MethodName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of the invoked method.\n  remarks: ''\n  example:\n  - \"The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the name of the method to the console.  \\n  \\n [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]\\n [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]\\n [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]\"\n  syntax:\n    content: public string MethodName { get; }\n    return:\n      type: System.String\n      description: The name of the invoked method.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  id: MethodSignature\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: MethodSignature\n  nameWithType: IMethodMessage.MethodSignature\n  fullName: IMethodMessage.MethodSignature\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an object containing the method signature.\n  remarks: All the current implementations of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> return an array of <xref:System.Type> objects containing the parameter types of the method.\n  syntax:\n    content: public object MethodSignature { get; }\n    return:\n      type: System.Object\n      description: An object containing the method signature.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  id: TypeName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: IMethodMessage.TypeName\n  fullName: IMethodMessage.TypeName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the full <xref href=\"System.Type\"></xref> name of the specific object that the call is destined for.\n  syntax:\n    content: public string TypeName { get; }\n    return:\n      type: System.String\n      description: The full <xref href=\"System.Type\"></xref> name of the specific object that the call is destined for.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  id: Uri\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: IMethodMessage.Uri\n  fullName: IMethodMessage.Uri\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the URI of the specific object that the call is destined for.\n  syntax:\n    content: public string Uri { get; }\n    return:\n      type: System.String\n      description: The URI of the remote object that contains the invoked method.\n  overload: System.Runtime.Remoting.Messaging.IMethodMessage.Uri*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: ArgCount\n  nameWithType: IMethodMessage.ArgCount\n  fullName: IMethodMessage.ArgCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: Args\n  nameWithType: IMethodMessage.Args\n  fullName: IMethodMessage.Args\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: GetArg(Int32)\n  nameWithType: IMethodMessage.GetArg(Int32)\n  fullName: IMethodMessage.GetArg(Int32)\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: GetArgName(Int32)\n  nameWithType: IMethodMessage.GetArgName(Int32)\n  fullName: IMethodMessage.GetArgName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: IMethodMessage.HasVarArgs\n  fullName: IMethodMessage.HasVarArgs\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: IMethodMessage.LogicalCallContext\n  fullName: IMethodMessage.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodBase\n  nameWithType: IMethodMessage.MethodBase\n  fullName: IMethodMessage.MethodBase\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodName\n  nameWithType: IMethodMessage.MethodName\n  fullName: IMethodMessage.MethodName\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodSignature\n  nameWithType: IMethodMessage.MethodSignature\n  fullName: IMethodMessage.MethodSignature\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: TypeName\n  nameWithType: IMethodMessage.TypeName\n  fullName: IMethodMessage.TypeName\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: Uri\n  nameWithType: IMethodMessage.Uri\n  fullName: IMethodMessage.Uri\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: ArgCount\n  nameWithType: IMethodMessage.ArgCount\n  fullName: IMethodMessage.ArgCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Args*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: Args\n  nameWithType: IMethodMessage.Args\n  fullName: IMethodMessage.Args\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: GetArg\n  nameWithType: IMethodMessage.GetArg\n  fullName: IMethodMessage.GetArg\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: GetArgName\n  nameWithType: IMethodMessage.GetArgName\n  fullName: IMethodMessage.GetArgName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: IMethodMessage.HasVarArgs\n  fullName: IMethodMessage.HasVarArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: IMethodMessage.LogicalCallContext\n  fullName: IMethodMessage.LogicalCallContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodBase\n  nameWithType: IMethodMessage.MethodBase\n  fullName: IMethodMessage.MethodBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodName\n  nameWithType: IMethodMessage.MethodName\n  fullName: IMethodMessage.MethodName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodSignature\n  nameWithType: IMethodMessage.MethodSignature\n  fullName: IMethodMessage.MethodSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: TypeName\n  nameWithType: IMethodMessage.TypeName\n  fullName: IMethodMessage.TypeName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Uri*\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: Uri\n  nameWithType: IMethodMessage.Uri\n  fullName: IMethodMessage.Uri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n"}