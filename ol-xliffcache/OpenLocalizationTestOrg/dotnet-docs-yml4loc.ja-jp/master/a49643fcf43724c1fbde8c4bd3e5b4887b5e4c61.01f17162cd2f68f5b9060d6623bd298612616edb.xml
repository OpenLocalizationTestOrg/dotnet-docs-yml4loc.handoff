{"nodes":[{"content":"Abstract class that represents a keyboard device.","nodes":[{"pos":[0,49],"content":"Abstract class that represents a keyboard device.","nodes":[{"content":"Abstract class that represents a keyboard device.","pos":[0,49]}]}],"pos":[1253,1303],"yaml":true},{"content":"The <xref:System.Windows.Input.KeyboardDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.  \n  \n For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class. The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.  \n  \n The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate <xref:System.Windows.Input.KeyboardDevice>.  \n  \n Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyboardDevice&gt;</ph> supports the <ph id=\"ph2\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","source":"The <xref:System.Windows.Input.KeyboardDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[207,460],"content":"For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class. The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.","nodes":[{"content":"For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class. The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.","pos":[0,253],"nodes":[{"content":"For keyboard related input, use the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class.","pos":[0,79],"source":"For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.","pos":[80,253],"source":" The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard."}]}]},{"pos":[467,586],"content":"The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate <xref:System.Windows.Input.KeyboardDevice>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class delegates to the appropriate <ph id=\"ph2\">&lt;xref:System.Windows.Input.KeyboardDevice&gt;</ph>.","pos":[0,119],"source":"The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate <xref:System.Windows.Input.KeyboardDevice>."}]},{"pos":[593,788],"content":"Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.","nodes":[{"content":"Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.","pos":[0,195],"nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.Input.InputDevice&gt;</ph> object represents one particular input device.","pos":[0,91],"source":"Each <xref:System.Windows.Input.InputDevice> object represents one particular input device."},{"content":"For example, if there are two mice, there will be two <ph id=\"ph1\">&lt;xref:System.Windows.Input.InputDevice&gt;</ph> objects.","pos":[93,195],"source":"  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects."}]}]}],"pos":[1314,2111],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.KeyboardDevice\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyboardDevice\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.KeyboardDevice\"></xref> class."}],"pos":[3883,3981],"yaml":true},{"content":"The input manager associated with this <xref href=\"System.Windows.Input.KeyboardDevice\"></xref>.","nodes":[{"pos":[0,96],"content":"The input manager associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyboardDevice\"&gt;&lt;/xref&gt;</ph>.","source":"The input manager associated with this <xref href=\"System.Windows.Input.KeyboardDevice\"></xref>."}],"pos":[4279,4376],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.PresentationSource\"></xref> that is reporting input for this device.","nodes":[{"pos":[0,104],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.PresentationSource\"&gt;&lt;/xref&gt;</ph> that is reporting input for this device.","source":"Gets the <xref href=\"System.Windows.PresentationSource\"></xref> that is reporting input for this device."}],"pos":[5506,5611],"yaml":true},{"content":"The source of input for this device.","nodes":[{"pos":[0,36],"content":"The source of input for this device.","nodes":[{"content":"The source of input for this device.","pos":[0,36]}]}],"pos":[5839,5876],"yaml":true},{"content":"Clears focus.","nodes":[{"pos":[0,13],"content":"Clears focus.","nodes":[{"content":"Clears focus.","pos":[0,13]}]}],"pos":[6948,6962],"yaml":true},{"content":"The <xref:System.Windows.Input.KeyboardDevice.ClearFocus%2A> method sets the focus to `null`.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyboardDevice.ClearFocus%2A&gt;</ph> method sets the focus to <ph id=\"ph2\">`null`</ph>.","source":"The <xref:System.Windows.Input.KeyboardDevice.ClearFocus%2A> method sets the focus to `null`."}],"pos":[6973,7067],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.","nodes":[{"pos":[0,120],"content":"Gets or sets the behavior of <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> when restoring focus.","source":"Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus."}],"pos":[8194,8315],"yaml":true},{"content":"An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus. The default in <xref href=\"System.Windows.Input.RestoreFocusMode.Auto\"></xref>.","nodes":[{"pos":[0,225],"content":"An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus. The default in <xref href=\"System.Windows.Input.RestoreFocusMode.Auto\"></xref>.","nodes":[{"content":"An enumeration value that specifies the behavior of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> when restoring focus.","pos":[0,145],"source":"An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus."},{"content":"The default in <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.RestoreFocusMode.Auto\"&gt;&lt;/xref&gt;</ph>.","pos":[146,225],"source":" The default in <xref href=\"System.Windows.Input.RestoreFocusMode.Auto\"></xref>."}]}],"pos":[8502,8728],"yaml":true},{"content":"Sets keyboard focus on the specified <xref href=\"System.Windows.IInputElement\"></xref>.","nodes":[{"pos":[0,87],"content":"Sets keyboard focus on the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;&lt;/xref&gt;</ph>.","source":"Sets keyboard focus on the specified <xref href=\"System.Windows.IInputElement\"></xref>."}],"pos":[9824,9912],"yaml":true},{"content":"The element to move focus to.","nodes":[{"pos":[0,29],"content":"The element to move focus to.","nodes":[{"content":"The element to move focus to.","pos":[0,29]}]}],"pos":[10162,10192],"yaml":true},{"content":"The element that has keyboard focus.","nodes":[{"pos":[0,36],"content":"The element that has keyboard focus.","nodes":[{"content":"The element that has keyboard focus.","pos":[0,36]}]}],"pos":[10264,10301],"yaml":true},{"content":"<code>element</code> is not a <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref>.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph>.","source":"<code>element</code> is not a <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref>."}],"pos":[10480,10611],"yaml":true},{"content":"Gets the element that has keyboard focus.","nodes":[{"pos":[0,41],"content":"Gets the element that has keyboard focus.","nodes":[{"content":"Gets the element that has keyboard focus.","pos":[0,41]}]}],"pos":[11626,11668],"yaml":true},{"content":"The element with keyboard focus.","nodes":[{"pos":[0,32],"content":"The element with keyboard focus.","nodes":[{"content":"The element with keyboard focus.","pos":[0,32]}]}],"pos":[11823,11856],"yaml":true},{"content":"Gets the set of key states for the specified <xref href=\"System.Windows.Input.Key\"></xref>.","nodes":[{"pos":[0,91],"content":"Gets the set of key states for the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the set of key states for the specified <xref href=\"System.Windows.Input.Key\"></xref>."}],"pos":[12965,13057],"yaml":true},{"content":"The key to check.","nodes":[{"pos":[0,17],"content":"The key to check.","nodes":[{"content":"The key to check.","pos":[0,17]}]}],"pos":[13249,13267],"yaml":true},{"content":"The set of key states for the specified key.","nodes":[{"pos":[0,44],"content":"The set of key states for the specified key.","nodes":[{"content":"The set of key states for the specified key.","pos":[0,44]}]}],"pos":[13341,13386],"yaml":true},{"content":"<code>key</code> is not a valid key.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","source":"<code>key</code> is not a valid key."}],"pos":[13608,13645],"yaml":true},{"content":"When overridden in a derived class, obtains the <xref href=\"System.Windows.Input.KeyStates\"></xref> for the specified <xref href=\"System.Windows.Input.Key\"></xref>.","nodes":[{"pos":[0,164],"content":"When overridden in a derived class, obtains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyStates\"&gt;&lt;/xref&gt;</ph> for the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.Key\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, obtains the <xref href=\"System.Windows.Input.KeyStates\"></xref> for the specified <xref href=\"System.Windows.Input.Key\"></xref>."}],"pos":[14733,14898],"yaml":true},{"content":"The key to check.","nodes":[{"pos":[0,17],"content":"The key to check.","nodes":[{"content":"The key to check.","pos":[0,17]}]}],"pos":[15112,15130],"yaml":true},{"content":"The set of key states for the specified key.","nodes":[{"pos":[0,44],"content":"The set of key states for the specified key.","nodes":[{"content":"The set of key states for the specified key.","pos":[0,44]}]}],"pos":[15204,15249],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the down state.","nodes":[{"pos":[0,100],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;&lt;/xref&gt;</ph> is in the down state.","source":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the down state."}],"pos":[16348,16449],"yaml":true},{"content":"The key to check.","nodes":[{"pos":[0,17],"content":"The key to check.","nodes":[{"content":"The key to check.","pos":[0,17]}]}],"pos":[16612,16630],"yaml":true},{"content":"`true` if <code>key</code> is in the down state; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in the down state; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>key</code> is in the down state; otherwise, `false`."}],"pos":[16688,16759],"yaml":true},{"content":"<code>key</code> is not a valid key.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","source":"<code>key</code> is not a valid key."}],"pos":[16978,17015],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the toggled state.","nodes":[{"pos":[0,103],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;&lt;/xref&gt;</ph> is in the toggled state.","source":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the toggled state."}],"pos":[18043,18147],"yaml":true},{"content":"The key to check.","nodes":[{"pos":[0,17],"content":"The key to check.","nodes":[{"content":"The key to check.","pos":[0,17]}]}],"pos":[18313,18331],"yaml":true},{"content":"`true` if <code>key</code> is in the toggled state; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in the toggled state; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>key</code> is in the toggled state; otherwise, `false`."}],"pos":[18389,18463],"yaml":true},{"content":"<code>key</code> is not a valid key.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","source":"<code>key</code> is not a valid key."}],"pos":[18685,18722],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the up state.","nodes":[{"pos":[0,98],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;&lt;/xref&gt;</ph> is in the up state.","source":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the up state."}],"pos":[19720,19819],"yaml":true},{"content":"The key to check.","nodes":[{"pos":[0,17],"content":"The key to check.","nodes":[{"content":"The key to check.","pos":[0,17]}]}],"pos":[19980,19998],"yaml":true},{"content":"`true` if <code>key</code> is in the up state; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in the up state; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>key</code> is in the up state; otherwise, `false`."}],"pos":[20056,20125],"yaml":true},{"content":"<code>key</code> is not a valid key.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","source":"<code>key</code> is not a valid key."}],"pos":[20342,20379],"yaml":true},{"content":"Gets the set of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> which are currently pressed.","nodes":[{"pos":[0,99],"content":"Gets the set of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;&lt;/xref&gt;</ph> which are currently pressed.","source":"Gets the set of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> which are currently pressed."}],"pos":[21298,21398],"yaml":true},{"content":"The set of modifier keys.","nodes":[{"pos":[0,25],"content":"The set of modifier keys.","nodes":[{"content":"The set of modifier keys.","pos":[0,25]}]}],"pos":[21558,21584],"yaml":true},{"content":"Gets the specified <xref href=\"System.Windows.IInputElement\"></xref> that input from this device is sent to.","nodes":[{"pos":[0,108],"content":"Gets the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;&lt;/xref&gt;</ph> that input from this device is sent to.","source":"Gets the specified <xref href=\"System.Windows.IInputElement\"></xref> that input from this device is sent to."}],"pos":[22561,22670],"yaml":true},{"content":"The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus.","nodes":[{"pos":[0,98],"content":"The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus.","nodes":[{"content":"The target for a <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyboardDevice&gt;</ph> is the object that has keyboard focus.","pos":[0,98],"source":"The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus."}]}],"pos":[22681,22780],"yaml":true,"extradata":"MT"},{"content":"The element that receives input.","nodes":[{"pos":[0,32],"content":"The element that receives input.","nodes":[{"content":"The element that receives input.","pos":[0,32]}]}],"pos":[22936,22969],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.KeyboardDevice\n  commentId: T:System.Windows.Input.KeyboardDevice\n  id: KeyboardDevice\n  children:\n  - System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  - System.Windows.Input.KeyboardDevice.ActiveSource\n  - System.Windows.Input.KeyboardDevice.ClearFocus\n  - System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  - System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  - System.Windows.Input.KeyboardDevice.FocusedElement\n  - System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.Modifiers\n  - System.Windows.Input.KeyboardDevice.Target\n  langs:\n  - csharp\n  name: KeyboardDevice\n  nameWithType: KeyboardDevice\n  fullName: System.Windows.Input.KeyboardDevice\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Abstract class that represents a keyboard device.\n  remarks: \"The <xref:System.Windows.Input.KeyboardDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.  \\n  \\n For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class. The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.  \\n  \\n The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate <xref:System.Windows.Input.KeyboardDevice>.  \\n  \\n Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.\"\n  syntax:\n    content: 'public abstract class KeyboardDevice : System.Windows.Input.InputDevice'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.Input.InputDevice\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  commentId: M:System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  id: '#ctor(System.Windows.Input.InputManager)'\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: KeyboardDevice(InputManager)\n  nameWithType: KeyboardDevice.KeyboardDevice(InputManager)\n  fullName: KeyboardDevice.KeyboardDevice(InputManager)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.KeyboardDevice\"></xref> class.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      [System.Security.SecurityTreatAsSafe]\n\n      protected KeyboardDevice (System.Windows.Input.InputManager inputManager);\n    parameters:\n    - id: inputManager\n      type: System.Windows.Input.InputManager\n      description: The input manager associated with this <xref href=\"System.Windows.Input.KeyboardDevice\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  - type: System.Security.SecurityTreatAsSafeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.ActiveSource\n  commentId: P:System.Windows.Input.KeyboardDevice.ActiveSource\n  id: ActiveSource\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: ActiveSource\n  nameWithType: KeyboardDevice.ActiveSource\n  fullName: KeyboardDevice.ActiveSource\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the <xref href=\"System.Windows.PresentationSource\"></xref> that is reporting input for this device.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public override System.Windows.PresentationSource ActiveSource { get; }\n    return:\n      type: System.Windows.PresentationSource\n      description: The source of input for this device.\n  overload: System.Windows.Input.KeyboardDevice.ActiveSource*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.ClearFocus\n  commentId: M:System.Windows.Input.KeyboardDevice.ClearFocus\n  id: ClearFocus\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: ClearFocus()\n  nameWithType: KeyboardDevice.ClearFocus()\n  fullName: KeyboardDevice.ClearFocus()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Clears focus.\n  remarks: The <xref:System.Windows.Input.KeyboardDevice.ClearFocus%2A> method sets the focus to `null`.\n  syntax:\n    content: public void ClearFocus ();\n    parameters: []\n  overload: System.Windows.Input.KeyboardDevice.ClearFocus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  commentId: P:System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  id: DefaultRestoreFocusMode\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: DefaultRestoreFocusMode\n  nameWithType: KeyboardDevice.DefaultRestoreFocusMode\n  fullName: KeyboardDevice.DefaultRestoreFocusMode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.\n  syntax:\n    content: public System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }\n    return:\n      type: System.Windows.Input.RestoreFocusMode\n      description: An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus. The default in <xref href=\"System.Windows.Input.RestoreFocusMode.Auto\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  id: Focus(System.Windows.IInputElement)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: Focus(IInputElement)\n  nameWithType: KeyboardDevice.Focus(IInputElement)\n  fullName: KeyboardDevice.Focus(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets keyboard focus on the specified <xref href=\"System.Windows.IInputElement\"></xref>.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.Windows.IInputElement Focus (System.Windows.IInputElement element);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element to move focus to.\n    return:\n      type: System.Windows.IInputElement\n      description: The element that has keyboard focus.\n  overload: System.Windows.Input.KeyboardDevice.Focus*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>element</code> is not a <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref>.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.FocusedElement\n  commentId: P:System.Windows.Input.KeyboardDevice.FocusedElement\n  id: FocusedElement\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: FocusedElement\n  nameWithType: KeyboardDevice.FocusedElement\n  fullName: KeyboardDevice.FocusedElement\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the element that has keyboard focus.\n  syntax:\n    content: public System.Windows.IInputElement FocusedElement { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The element with keyboard focus.\n  overload: System.Windows.Input.KeyboardDevice.FocusedElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  commentId: M:System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  id: GetKeyStates(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: GetKeyStates(Key)\n  nameWithType: KeyboardDevice.GetKeyStates(Key)\n  fullName: KeyboardDevice.GetKeyStates(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the set of key states for the specified <xref href=\"System.Windows.Input.Key\"></xref>.\n  syntax:\n    content: public System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Windows.Input.KeyStates\n      description: The set of key states for the specified key.\n  overload: System.Windows.Input.KeyboardDevice.GetKeyStates*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  commentId: M:System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  id: GetKeyStatesFromSystem(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: GetKeyStatesFromSystem(Key)\n  nameWithType: KeyboardDevice.GetKeyStatesFromSystem(Key)\n  fullName: KeyboardDevice.GetKeyStatesFromSystem(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: When overridden in a derived class, obtains the <xref href=\"System.Windows.Input.KeyStates\"></xref> for the specified <xref href=\"System.Windows.Input.Key\"></xref>.\n  syntax:\n    content: protected abstract System.Windows.Input.KeyStates GetKeyStatesFromSystem (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Windows.Input.KeyStates\n      description: The set of key states for the specified key.\n  overload: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  commentId: M:System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  id: IsKeyDown(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: IsKeyDown(Key)\n  nameWithType: KeyboardDevice.IsKeyDown(Key)\n  fullName: KeyboardDevice.IsKeyDown(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the down state.\n  syntax:\n    content: public bool IsKeyDown (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>key</code> is in the down state; otherwise, `false`.'\n  overload: System.Windows.Input.KeyboardDevice.IsKeyDown*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  commentId: M:System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  id: IsKeyToggled(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: IsKeyToggled(Key)\n  nameWithType: KeyboardDevice.IsKeyToggled(Key)\n  fullName: KeyboardDevice.IsKeyToggled(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the toggled state.\n  syntax:\n    content: public bool IsKeyToggled (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>key</code> is in the toggled state; otherwise, `false`.'\n  overload: System.Windows.Input.KeyboardDevice.IsKeyToggled*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  commentId: M:System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  id: IsKeyUp(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: IsKeyUp(Key)\n  nameWithType: KeyboardDevice.IsKeyUp(Key)\n  fullName: KeyboardDevice.IsKeyUp(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the up state.\n  syntax:\n    content: public bool IsKeyUp (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>key</code> is in the up state; otherwise, `false`.'\n  overload: System.Windows.Input.KeyboardDevice.IsKeyUp*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.Modifiers\n  commentId: P:System.Windows.Input.KeyboardDevice.Modifiers\n  id: Modifiers\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: Modifiers\n  nameWithType: KeyboardDevice.Modifiers\n  fullName: KeyboardDevice.Modifiers\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the set of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> which are currently pressed.\n  syntax:\n    content: public System.Windows.Input.ModifierKeys Modifiers { get; }\n    return:\n      type: System.Windows.Input.ModifierKeys\n      description: The set of modifier keys.\n  overload: System.Windows.Input.KeyboardDevice.Modifiers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyboardDevice.Target\n  commentId: P:System.Windows.Input.KeyboardDevice.Target\n  id: Target\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: Target\n  nameWithType: KeyboardDevice.Target\n  fullName: KeyboardDevice.Target\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the specified <xref href=\"System.Windows.IInputElement\"></xref> that input from this device is sent to.\n  remarks: The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus.\n  syntax:\n    content: public override System.Windows.IInputElement Target { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The element that receives input.\n  overload: System.Windows.Input.KeyboardDevice.Target*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Input.InputDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputDevice\n  nameWithType: InputDevice\n  fullName: System.Windows.Input.InputDevice\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: KeyboardDevice(InputManager)\n  nameWithType: KeyboardDevice.KeyboardDevice(InputManager)\n  fullName: KeyboardDevice.KeyboardDevice(InputManager)\n- uid: System.Windows.Input.InputManager\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputManager\n  nameWithType: InputManager\n  fullName: System.Windows.Input.InputManager\n- uid: System.Windows.Input.KeyboardDevice.ActiveSource\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ActiveSource\n  nameWithType: KeyboardDevice.ActiveSource\n  fullName: KeyboardDevice.ActiveSource\n- uid: System.Windows.PresentationSource\n  parent: System.Windows\n  isExternal: false\n  name: PresentationSource\n  nameWithType: PresentationSource\n  fullName: System.Windows.PresentationSource\n- uid: System.Windows.Input.KeyboardDevice.ClearFocus\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ClearFocus()\n  nameWithType: KeyboardDevice.ClearFocus()\n  fullName: KeyboardDevice.ClearFocus()\n- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: DefaultRestoreFocusMode\n  nameWithType: KeyboardDevice.DefaultRestoreFocusMode\n  fullName: KeyboardDevice.DefaultRestoreFocusMode\n- uid: System.Windows.Input.RestoreFocusMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: RestoreFocusMode\n  nameWithType: RestoreFocusMode\n  fullName: System.Windows.Input.RestoreFocusMode\n- uid: System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Focus(IInputElement)\n  nameWithType: KeyboardDevice.Focus(IInputElement)\n  fullName: KeyboardDevice.Focus(IInputElement)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.KeyboardDevice.FocusedElement\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: FocusedElement\n  nameWithType: KeyboardDevice.FocusedElement\n  fullName: KeyboardDevice.FocusedElement\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStates(Key)\n  nameWithType: KeyboardDevice.GetKeyStates(Key)\n  fullName: KeyboardDevice.GetKeyStates(Key)\n- uid: System.Windows.Input.KeyStates\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyStates\n  nameWithType: KeyStates\n  fullName: System.Windows.Input.KeyStates\n- uid: System.Windows.Input.Key\n  parent: System.Windows.Input\n  isExternal: false\n  name: Key\n  nameWithType: Key\n  fullName: System.Windows.Input.Key\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStatesFromSystem(Key)\n  nameWithType: KeyboardDevice.GetKeyStatesFromSystem(Key)\n  fullName: KeyboardDevice.GetKeyStatesFromSystem(Key)\n- uid: System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyDown(Key)\n  nameWithType: KeyboardDevice.IsKeyDown(Key)\n  fullName: KeyboardDevice.IsKeyDown(Key)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyToggled(Key)\n  nameWithType: KeyboardDevice.IsKeyToggled(Key)\n  fullName: KeyboardDevice.IsKeyToggled(Key)\n- uid: System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyUp(Key)\n  nameWithType: KeyboardDevice.IsKeyUp(Key)\n  fullName: KeyboardDevice.IsKeyUp(Key)\n- uid: System.Windows.Input.KeyboardDevice.Modifiers\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Modifiers\n  nameWithType: KeyboardDevice.Modifiers\n  fullName: KeyboardDevice.Modifiers\n- uid: System.Windows.Input.ModifierKeys\n  parent: System.Windows.Input\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: ModifierKeys\n  fullName: System.Windows.Input.ModifierKeys\n- uid: System.Windows.Input.KeyboardDevice.Target\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Target\n  nameWithType: KeyboardDevice.Target\n  fullName: KeyboardDevice.Target\n- uid: System.Windows.Input.KeyboardDevice.#ctor*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: KeyboardDevice\n  nameWithType: KeyboardDevice.KeyboardDevice\n  fullName: KeyboardDevice.KeyboardDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.ActiveSource*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ActiveSource\n  nameWithType: KeyboardDevice.ActiveSource\n  fullName: KeyboardDevice.ActiveSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.ClearFocus*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ClearFocus\n  nameWithType: KeyboardDevice.ClearFocus\n  fullName: KeyboardDevice.ClearFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: DefaultRestoreFocusMode\n  nameWithType: KeyboardDevice.DefaultRestoreFocusMode\n  fullName: KeyboardDevice.DefaultRestoreFocusMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.Focus*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Focus\n  nameWithType: KeyboardDevice.Focus\n  fullName: KeyboardDevice.Focus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.FocusedElement*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: FocusedElement\n  nameWithType: KeyboardDevice.FocusedElement\n  fullName: KeyboardDevice.FocusedElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStates*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStates\n  nameWithType: KeyboardDevice.GetKeyStates\n  fullName: KeyboardDevice.GetKeyStates\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStatesFromSystem\n  nameWithType: KeyboardDevice.GetKeyStatesFromSystem\n  fullName: KeyboardDevice.GetKeyStatesFromSystem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.IsKeyDown*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyDown\n  nameWithType: KeyboardDevice.IsKeyDown\n  fullName: KeyboardDevice.IsKeyDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyToggled\n  nameWithType: KeyboardDevice.IsKeyToggled\n  fullName: KeyboardDevice.IsKeyToggled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.IsKeyUp*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyUp\n  nameWithType: KeyboardDevice.IsKeyUp\n  fullName: KeyboardDevice.IsKeyUp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.Modifiers*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Modifiers\n  nameWithType: KeyboardDevice.Modifiers\n  fullName: KeyboardDevice.Modifiers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Windows.Input.KeyboardDevice.Target*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Target\n  nameWithType: KeyboardDevice.Target\n  fullName: KeyboardDevice.Target\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyboardDevice.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n"}