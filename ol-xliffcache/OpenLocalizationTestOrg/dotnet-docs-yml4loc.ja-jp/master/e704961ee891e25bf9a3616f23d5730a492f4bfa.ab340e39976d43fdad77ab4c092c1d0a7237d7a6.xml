{"nodes":[{"content":"A customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).","nodes":[{"pos":[0,95],"content":"A customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).","nodes":[{"content":"A customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).","pos":[0,95]}]}],"pos":[408,504],"yaml":true},{"content":"Create a customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).","nodes":[{"pos":[0,102],"content":"Create a customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).","nodes":[{"content":"Create a customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).","pos":[0,102]}]}],"pos":[2615,2718],"yaml":true},{"content":"Use this constructor as an argument to <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>","nodes":[{"pos":[0,149],"content":"Use this constructor as an argument to <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>","nodes":[{"content":"Use this constructor as an argument to <ph id=\"ph1\">&lt;xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName&gt;</ph>","pos":[0,149],"source":"Use this constructor as an argument to <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>"}]}],"pos":[2729,2879],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.NewsStyleUriParser\n  commentId: T:System.NewsStyleUriParser\n  id: NewsStyleUriParser\n  children:\n  - System.NewsStyleUriParser.#ctor\n  langs:\n  - csharp\n  name: NewsStyleUriParser\n  nameWithType: NewsStyleUriParser\n  fullName: System.NewsStyleUriParser\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: A customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).\n  syntax:\n    content: 'public class NewsStyleUriParser : UriParser'\n  inheritance:\n  - System.Object\n  - System.UriParser\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  - System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  - System.UriParser.IsKnownScheme(System.String)\n  - System.UriParser.IsWellFormedOriginalString(System.Uri)\n  - System.UriParser.OnNewUri\n  - System.UriParser.OnRegister(System.String,System.Int32)\n  - System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NewsStyleUriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.NewsStyleUriParser.#ctor\n  commentId: M:System.NewsStyleUriParser.#ctor\n  id: '#ctor'\n  parent: System.NewsStyleUriParser\n  langs:\n  - csharp\n  name: NewsStyleUriParser()\n  nameWithType: NewsStyleUriParser.NewsStyleUriParser()\n  fullName: NewsStyleUriParser.NewsStyleUriParser()\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Create a customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).\n  remarks: Use this constructor as an argument to <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>\n  syntax:\n    content: public NewsStyleUriParser ();\n    parameters: []\n  overload: System.NewsStyleUriParser.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NewsStyleUriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.UriParser\n  parent: System\n  isExternal: false\n  name: UriParser\n  nameWithType: UriParser\n  fullName: System.UriParser\n- uid: System.NewsStyleUriParser.#ctor\n  parent: System.NewsStyleUriParser\n  isExternal: false\n  name: NewsStyleUriParser()\n  nameWithType: NewsStyleUriParser.NewsStyleUriParser()\n  fullName: NewsStyleUriParser.NewsStyleUriParser()\n- uid: System.NewsStyleUriParser.#ctor*\n  parent: System.NewsStyleUriParser\n  isExternal: false\n  name: NewsStyleUriParser\n  nameWithType: NewsStyleUriParser.NewsStyleUriParser\n  fullName: NewsStyleUriParser.NewsStyleUriParser\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NewsStyleUriParser.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  parent: System.UriParser\n  isExternal: false\n  name: GetComponents(Uri, UriComponents, UriFormat)\n  nameWithType: UriParser.GetComponents(Uri, UriComponents, UriFormat)\n  fullName: UriParser.GetComponents(Uri, UriComponents, UriFormat)\n- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  isExternal: false\n  name: InitializeAndValidate(Uri, UriFormatException)\n  nameWithType: UriParser.InitializeAndValidate(Uri, UriFormatException)\n  fullName: UriParser.InitializeAndValidate(Uri, UriFormatException)\n- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  parent: System.UriParser\n  isExternal: false\n  name: IsBaseOf(Uri, Uri)\n  nameWithType: UriParser.IsBaseOf(Uri, Uri)\n  fullName: UriParser.IsBaseOf(Uri, Uri)\n- uid: System.UriParser.IsKnownScheme(System.String)\n  parent: System.UriParser\n  isExternal: false\n  name: IsKnownScheme(String)\n  nameWithType: UriParser.IsKnownScheme(String)\n  fullName: UriParser.IsKnownScheme(String)\n- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)\n  parent: System.UriParser\n  isExternal: false\n  name: IsWellFormedOriginalString(Uri)\n  nameWithType: UriParser.IsWellFormedOriginalString(Uri)\n  fullName: UriParser.IsWellFormedOriginalString(Uri)\n- uid: System.UriParser.OnNewUri\n  parent: System.UriParser\n  isExternal: false\n  name: OnNewUri()\n  nameWithType: UriParser.OnNewUri()\n  fullName: UriParser.OnNewUri()\n- uid: System.UriParser.OnRegister(System.String,System.Int32)\n  parent: System.UriParser\n  isExternal: false\n  name: OnRegister(String, Int32)\n  nameWithType: UriParser.OnRegister(String, Int32)\n  fullName: UriParser.OnRegister(String, Int32)\n- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  parent: System.UriParser\n  isExternal: false\n  name: Register(UriParser, String, Int32)\n  nameWithType: UriParser.Register(UriParser, String, Int32)\n  fullName: UriParser.Register(UriParser, String, Int32)\n- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  isExternal: false\n  name: Resolve(Uri, Uri, UriFormatException)\n  nameWithType: UriParser.Resolve(Uri, Uri, UriFormatException)\n  fullName: UriParser.Resolve(Uri, Uri, UriFormatException)\n"}