{"nodes":[{"content":"Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application. A <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> stores view states for model items.","nodes":[{"pos":[0,316],"content":"Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application. A <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> stores view states for model items.","nodes":[{"content":"Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application.","pos":[0,204]},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.View.ViewStateService\"&gt;&lt;/xref&gt;</ph> stores view states for model items.","pos":[205,316],"source":" A <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> stores view states for model items."}]}],"pos":[1386,1703],"yaml":true},{"content":"This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks. <xref:System.Activities.Presentation.View.ViewStateService> is an abstract class. Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.","nodes":[{"pos":[0,450],"content":"This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks. <xref:System.Activities.Presentation.View.ViewStateService> is an abstract class. Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.","nodes":[{"content":"This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks. <xref:System.Activities.Presentation.View.ViewStateService> is an abstract class. Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.","pos":[0,450],"nodes":[{"content":"This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks.","pos":[0,120]},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ViewStateService&gt;</ph> is an abstract class.","pos":[121,202],"source":" <xref:System.Activities.Presentation.View.ViewStateService> is an abstract class."},{"content":"Derived classes must store view states when <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A&gt;</ph> is called, and retrieve them when <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A&gt;</ph> is called.","pos":[203,450],"source":" Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called."}]}]}],"pos":[1714,2165],"yaml":true,"extradata":"MT"},{"content":"Initiates a new instance of the <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initiates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.View.ViewStateService\"&gt;&lt;/xref&gt;</ph> class.","source":"Initiates a new instance of the <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> class."}],"pos":[3695,3808],"yaml":true},{"content":"When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.","nodes":[{"pos":[0,138],"content":"When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.","nodes":[{"content":"When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.","pos":[0,138]}]}],"pos":[5268,5407],"yaml":true},{"content":"The workflow activity <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> associated with the current view state.","nodes":[{"pos":[0,129],"content":"The workflow activity <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;&lt;/xref&gt;</ph> associated with the current view state.","source":"The workflow activity <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> associated with the current view state."}],"pos":[5653,5783],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> that identifies the view state item that is stored.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the view state item that is stored.","source":"The <xref href=\"System.String\"></xref> that identifies the view state item that is stored."}],"pos":[5842,5933],"yaml":true},{"content":"`true` if the view state was removed; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the view state was removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the view state was removed; otherwise, `false`."}],"pos":[5991,6051],"yaml":true},{"content":"Returns an aspect of the view state that was stored for the specified <code>modelItem</code>, matching the specified <code>key</code>.","nodes":[{"pos":[0,134],"content":"Returns an aspect of the view state that was stored for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">modelItem</ph><ept id=\"p1\">&lt;/code&gt;</ept>, matching the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Returns an aspect of the view state that was stored for the specified <code>modelItem</code>, matching the specified <code>key</code>."}],"pos":[7412,7547],"yaml":true},{"content":"Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.","nodes":[{"pos":[0,153],"content":"Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A&gt;</ph> to initially store view state information so that it can be retrieved.","pos":[0,153],"source":"Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved."}]}],"pos":[7558,7712],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;&lt;/xref&gt;</ph> that the view state applies to.","source":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to."}],"pos":[7999,8103],"yaml":true},{"content":"Returns <xref href=\"System.Collections.Generic.Dictionary`2\"></xref>.","nodes":[{"pos":[0,69],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.Dictionary`2\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Collections.Generic.Dictionary`2\"></xref>."}],"pos":[8213,8283],"yaml":true},{"content":"Retrieves an aspect of the view state for the specified <code>modelItem</code>, matching the specified <code>key</code>.","nodes":[{"pos":[0,120],"content":"Retrieves an aspect of the view state for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">modelItem</ph><ept id=\"p1\">&lt;/code&gt;</ept>, matching the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Retrieves an aspect of the view state for the specified <code>modelItem</code>, matching the specified <code>key</code>."}],"pos":[9697,9818],"yaml":true},{"content":"Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.","nodes":[{"pos":[0,153],"content":"Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A&gt;</ph> to initially store view state information so that it can be retrieved.","pos":[0,153],"source":"Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved."}]}],"pos":[9829,9983],"yaml":true,"extradata":"MT"},{"content":"The workflow activity <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> associated with the current view state.","nodes":[{"pos":[0,129],"content":"The workflow activity <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;&lt;/xref&gt;</ph> associated with the current view state.","source":"The workflow activity <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> associated with the current view state."}],"pos":[10233,10363],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be retrieved.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the aspect of the view state that is to be retrieved.","source":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be retrieved."}],"pos":[10422,10531],"yaml":true},{"content":"The aspect of the view state as an <xref href=\"System.Object\"></xref>,or `null`.","nodes":[{"pos":[0,80],"content":"The aspect of the view state as an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>,or <ph id=\"ph2\">`null`</ph>.","source":"The aspect of the view state as an <xref href=\"System.Object\"></xref>,or `null`."}],"pos":[10588,10669],"yaml":true},{"content":"Stores an aspect of the view state for the specified <code>modelItem</code>, matching the specified <code>key</code>.","nodes":[{"pos":[0,117],"content":"Stores an aspect of the view state for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">modelItem</ph><ept id=\"p1\">&lt;/code&gt;</ept>, matching the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Stores an aspect of the view state for the specified <code>modelItem</code>, matching the specified <code>key</code>."}],"pos":[12128,12246],"yaml":true},{"content":"You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.","nodes":[{"pos":[0,181],"content":"You can retrieve the stored object by calling <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A&gt;</ph> and passing the same values for <ph id=\"ph2\">`modelItem`</ph> and <ph id=\"ph3\">`key`</ph>.","source":"You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`."}],"pos":[12257,12439],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;&lt;/xref&gt;</ph> that the view state applies to.","source":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to."}],"pos":[12698,12802],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored.","nodes":[{"pos":[0,105],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the aspect of the view state that is to be stored.","source":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored."}],"pos":[12861,12967],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> to be stored.","nodes":[{"pos":[0,51],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to be stored.","source":"An <xref href=\"System.Object\"></xref> to be stored."}],"pos":[13028,13080],"yaml":true},{"content":"When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation. The item represented by the specified key is then stored in the view state of the specified model item.","nodes":[{"pos":[0,260],"content":"When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation. The item represented by the specified key is then stored in the view state of the specified model item.","nodes":[{"content":"When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation. The item represented by the specified key is then stored in the view state of the specified model item.","pos":[0,260],"nodes":[{"content":"When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation.","pos":[0,156]},{"content":"The item represented by the specified key is then stored in the view state of the specified model item.","pos":[157,260]}]}]}],"pos":[14584,14845],"yaml":true},{"content":"You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.","nodes":[{"pos":[0,181],"content":"You can retrieve the stored object by calling <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A&gt;</ph> and passing the same values for <ph id=\"ph2\">`modelItem`</ph> and <ph id=\"ph3\">`key`</ph>.","source":"You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`."}],"pos":[14856,15038],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;&lt;/xref&gt;</ph> that the view state applies to.","source":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to."}],"pos":[15305,15409],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored. The <xref href=\"System.String\"></xref> that identifies the view state item that is stored.","nodes":[{"pos":[0,196],"content":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored. The <xref href=\"System.String\"></xref> that identifies the view state item that is stored.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the aspect of the view state that is to be stored.","pos":[0,105],"source":"The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the view state item that is stored.","pos":[106,196],"source":" The <xref href=\"System.String\"></xref> that identifies the view state item that is stored."}]}],"pos":[15468,15665],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> to be stored.","nodes":[{"pos":[0,51],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to be stored.","source":"An <xref href=\"System.Object\"></xref> to be stored."}],"pos":[15726,15778],"yaml":true},{"content":"When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.","nodes":[{"pos":[0,133],"content":"When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.","nodes":[{"content":"When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.","pos":[0,133]}]}],"pos":[16992,17126],"yaml":true},{"content":"When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.","nodes":[{"pos":[0,124],"content":"When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.","nodes":[{"content":"When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.","pos":[0,124]}]}],"pos":[18450,18575],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.View.ViewStateService\n  commentId: T:System.Activities.Presentation.View.ViewStateService\n  id: ViewStateService\n  children:\n  - System.Activities.Presentation.View.ViewStateService.#ctor\n  - System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  - System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  - System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  - System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  - System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged\n  - System.Activities.Presentation.View.ViewStateService.ViewStateChanged\n  langs:\n  - csharp\n  name: ViewStateService\n  nameWithType: ViewStateService\n  fullName: System.Activities.Presentation.View.ViewStateService\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application. A <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> stores view states for model items.\n  remarks: This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks. <xref:System.Activities.Presentation.View.ViewStateService> is an abstract class. Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.\n  syntax:\n    content: public abstract class ViewStateService\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Activities.Presentation.View.WorkflowViewStateService\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.#ctor\n  commentId: M:System.Activities.Presentation.View.ViewStateService.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: ViewStateService()\n  nameWithType: ViewStateService.ViewStateService()\n  fullName: ViewStateService.ViewStateService()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: Initiates a new instance of the <xref href=\"System.Activities.Presentation.View.ViewStateService\"></xref> class.\n  syntax:\n    content: protected ViewStateService ();\n    parameters: []\n  overload: System.Activities.Presentation.View.ViewStateService.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  commentId: M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  id: RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: RemoveViewState(ModelItem, String)\n  nameWithType: ViewStateService.RemoveViewState(ModelItem, String)\n  fullName: ViewStateService.RemoveViewState(ModelItem, String)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.\n  syntax:\n    content: public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The workflow activity <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> associated with the current view state.\n    - id: key\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> that identifies the view state item that is stored.\n    return:\n      type: System.Boolean\n      description: '`true` if the view state was removed; otherwise, `false`.'\n  overload: System.Activities.Presentation.View.ViewStateService.RemoveViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)\n  commentId: M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)\n  id: RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: RetrieveAllViewState(ModelItem)\n  nameWithType: ViewStateService.RetrieveAllViewState(ModelItem)\n  fullName: ViewStateService.RetrieveAllViewState(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: Returns an aspect of the view state that was stored for the specified <code>modelItem</code>, matching the specified <code>key</code>.\n  remarks: Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.\n  syntax:\n    content: public abstract System.Collections.Generic.Dictionary<string,object> RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to.\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.Object}\n      description: Returns <xref href=\"System.Collections.Generic.Dictionary`2\"></xref>.\n  overload: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  commentId: M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  id: RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: RetrieveViewState(ModelItem, String)\n  nameWithType: ViewStateService.RetrieveViewState(ModelItem, String)\n  fullName: ViewStateService.RetrieveViewState(ModelItem, String)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: Retrieves an aspect of the view state for the specified <code>modelItem</code>, matching the specified <code>key</code>.\n  remarks: Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.\n  syntax:\n    content: public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The workflow activity <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> associated with the current view state.\n    - id: key\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be retrieved.\n    return:\n      type: System.Object\n      description: The aspect of the view state as an <xref href=\"System.Object\"></xref>,or `null`.\n  overload: System.Activities.Presentation.View.ViewStateService.RetrieveViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  commentId: M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  id: StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: StoreViewState(ModelItem, String, Object)\n  nameWithType: ViewStateService.StoreViewState(ModelItem, String, Object)\n  fullName: ViewStateService.StoreViewState(ModelItem, String, Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: Stores an aspect of the view state for the specified <code>modelItem</code>, matching the specified <code>key</code>.\n  remarks: You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.\n  syntax:\n    content: public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to.\n    - id: key\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored.\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> to be stored.\n  overload: System.Activities.Presentation.View.ViewStateService.StoreViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  commentId: M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  id: StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: StoreViewStateWithUndo(ModelItem, String, Object)\n  nameWithType: ViewStateService.StoreViewStateWithUndo(ModelItem, String, Object)\n  fullName: ViewStateService.StoreViewStateWithUndo(ModelItem, String, Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation. The item represented by the specified key is then stored in the view state of the specified model item.\n  remarks: You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.\n  syntax:\n    content: public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that the view state applies to.\n    - id: key\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> that identifies the aspect of the view state that is to be stored. The <xref href=\"System.String\"></xref> that identifies the view state item that is stored.\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> to be stored.\n  overload: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged\n  commentId: E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged\n  id: UndoableViewStateChanged\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: UndoableViewStateChanged\n  nameWithType: ViewStateService.UndoableViewStateChanged\n  fullName: ViewStateService.UndoableViewStateChanged\n  type: Event\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.\n  syntax:\n    content: public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;\n    return:\n      type: System.Activities.Presentation.View.ViewStateChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.ViewStateService.ViewStateChanged\n  commentId: E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged\n  id: ViewStateChanged\n  parent: System.Activities.Presentation.View.ViewStateService\n  langs:\n  - csharp\n  name: ViewStateChanged\n  nameWithType: ViewStateService.ViewStateChanged\n  fullName: ViewStateService.ViewStateChanged\n  type: Event\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.\n  syntax:\n    content: public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;\n    return:\n      type: System.Activities.Presentation.View.ViewStateChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Presentation.View.ViewStateService.#ctor\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: ViewStateService()\n  nameWithType: ViewStateService.ViewStateService()\n  fullName: ViewStateService.ViewStateService()\n- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: RemoveViewState(ModelItem, String)\n  nameWithType: ViewStateService.RemoveViewState(ModelItem, String)\n  fullName: ViewStateService.RemoveViewState(ModelItem, String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.ModelItem\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: ModelItem\n  nameWithType: ModelItem\n  fullName: System.Activities.Presentation.Model.ModelItem\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: RetrieveAllViewState(ModelItem)\n  nameWithType: ViewStateService.RetrieveAllViewState(ModelItem)\n  fullName: ViewStateService.RetrieveAllViewState(ModelItem)\n- uid: System.Collections.Generic.Dictionary`2\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<String,Object>\n  nameWithType: Dictionary<String,Object>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: RetrieveViewState(ModelItem, String)\n  nameWithType: ViewStateService.RetrieveViewState(ModelItem, String)\n  fullName: ViewStateService.RetrieveViewState(ModelItem, String)\n- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: StoreViewState(ModelItem, String, Object)\n  nameWithType: ViewStateService.StoreViewState(ModelItem, String, Object)\n  fullName: ViewStateService.StoreViewState(ModelItem, String, Object)\n- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: StoreViewStateWithUndo(ModelItem, String, Object)\n  nameWithType: ViewStateService.StoreViewStateWithUndo(ModelItem, String, Object)\n  fullName: ViewStateService.StoreViewStateWithUndo(ModelItem, String, Object)\n- uid: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: UndoableViewStateChanged\n  nameWithType: ViewStateService.UndoableViewStateChanged\n  fullName: ViewStateService.UndoableViewStateChanged\n- uid: System.Activities.Presentation.View.ViewStateChangedEventHandler\n  parent: System.Activities.Presentation.View\n  isExternal: false\n  name: ViewStateChangedEventHandler\n  nameWithType: ViewStateChangedEventHandler\n  fullName: System.Activities.Presentation.View.ViewStateChangedEventHandler\n- uid: System.Activities.Presentation.View.ViewStateService.ViewStateChanged\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: ViewStateChanged\n  nameWithType: ViewStateService.ViewStateChanged\n  fullName: ViewStateService.ViewStateChanged\n- uid: System.Activities.Presentation.View.ViewStateService.#ctor*\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: ViewStateService\n  nameWithType: ViewStateService.ViewStateService\n  fullName: ViewStateService.ViewStateService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState*\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: RemoveViewState\n  nameWithType: ViewStateService.RemoveViewState\n  fullName: ViewStateService.RemoveViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState*\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: RetrieveAllViewState\n  nameWithType: ViewStateService.RetrieveAllViewState\n  fullName: ViewStateService.RetrieveAllViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState*\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: RetrieveViewState\n  nameWithType: ViewStateService.RetrieveViewState\n  fullName: ViewStateService.RetrieveViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState*\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: StoreViewState\n  nameWithType: ViewStateService.StoreViewState\n  fullName: ViewStateService.StoreViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo*\n  parent: System.Activities.Presentation.View.ViewStateService\n  isExternal: false\n  name: StoreViewStateWithUndo\n  nameWithType: ViewStateService.StoreViewStateWithUndo\n  fullName: ViewStateService.StoreViewStateWithUndo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/ViewStateService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}