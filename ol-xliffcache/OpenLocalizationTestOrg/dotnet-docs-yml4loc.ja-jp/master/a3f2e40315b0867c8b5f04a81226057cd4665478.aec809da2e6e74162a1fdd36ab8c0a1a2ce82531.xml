{"nodes":[{"content":"Represents a set of features that a cache implementation provides.","nodes":[{"pos":[0,66],"content":"Represents a set of features that a cache implementation provides.","nodes":[{"content":"Represents a set of features that a cache implementation provides.","pos":[0,66]}]}],"pos":[1091,1158],"yaml":true},{"content":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> class is a flag enumeration. The field values are bits and can be combined as a set of flags that describe the capabilities of the cache.  \n  \n The <xref:System.Runtime.Caching.DefaultCacheCapabilities> enumeration can be used to programmatically set the behavior of the cache implementation. This behavior is based on the combination of features that a particular cache implements.","nodes":[{"pos":[0,196],"content":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> class is a flag enumeration. The field values are bits and can be combined as a set of flags that describe the capabilities of the cache.","nodes":[{"content":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> class is a flag enumeration. The field values are bits and can be combined as a set of flags that describe the capabilities of the cache.","pos":[0,196],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.DefaultCacheCapabilities&gt;</ph> class is a flag enumeration.","pos":[0,87],"source":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> class is a flag enumeration."},{"content":"The field values are bits and can be combined as a set of flags that describe the capabilities of the cache.","pos":[88,196]}]}]},{"pos":[203,441],"content":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> enumeration can be used to programmatically set the behavior of the cache implementation. This behavior is based on the combination of features that a particular cache implements.","nodes":[{"content":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> enumeration can be used to programmatically set the behavior of the cache implementation. This behavior is based on the combination of features that a particular cache implements.","pos":[0,238],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.DefaultCacheCapabilities&gt;</ph> enumeration can be used to programmatically set the behavior of the cache implementation.","pos":[0,148],"source":"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> enumeration can be used to programmatically set the behavior of the cache implementation."},{"content":"This behavior is based on the combination of features that a particular cache implements.","pos":[149,238]}]}]}],"pos":[1169,1615],"yaml":true,"extradata":"MT"},{"content":"A cache implementation supports the ability to automatically remove cache entries at a specific date and time.","nodes":[{"pos":[0,110],"content":"A cache implementation supports the ability to automatically remove cache entries at a specific date and time.","nodes":[{"content":"A cache implementation supports the ability to automatically remove cache entries at a specific date and time.","pos":[0,110]}]}],"pos":[2858,2969],"yaml":true},{"content":"A cache implementation supports the ability to create change monitors that monitor entries.","nodes":[{"pos":[0,91],"content":"A cache implementation supports the ability to create change monitors that monitor entries.","nodes":[{"content":"A cache implementation supports the ability to create change monitors that monitor entries.","pos":[0,91]}]}],"pos":[4114,4206],"yaml":true},{"content":"A cache implementation can raise a notification that an entry has been removed from the cache.","nodes":[{"pos":[0,94],"content":"A cache implementation can raise a notification that an entry has been removed from the cache.","nodes":[{"content":"A cache implementation can raise a notification that an entry has been removed from the cache.","pos":[0,94]}]}],"pos":[5362,5457],"yaml":true},{"content":"A cache implementation can raise a notification that an entry is about to be removed from the cache. This setting also indicates that a cache implementation supports the ability to automatically replace the entry that is being removed with a new cache entry.","nodes":[{"pos":[0,258],"content":"A cache implementation can raise a notification that an entry is about to be removed from the cache. This setting also indicates that a cache implementation supports the ability to automatically replace the entry that is being removed with a new cache entry.","nodes":[{"content":"A cache implementation can raise a notification that an entry is about to be removed from the cache. This setting also indicates that a cache implementation supports the ability to automatically replace the entry that is being removed with a new cache entry.","pos":[0,258],"nodes":[{"content":"A cache implementation can raise a notification that an entry is about to be removed from the cache.","pos":[0,100]},{"content":"This setting also indicates that a cache implementation supports the ability to automatically replace the entry that is being removed with a new cache entry.","pos":[101,258]}]}]}],"pos":[6608,6867],"yaml":true},{"content":"A cache implementation supports the ability to partition its storage into cache regions, and supports the ability to insert cache entries into those regions and to retrieve cache entries from those regions.","nodes":[{"pos":[0,206],"content":"A cache implementation supports the ability to partition its storage into cache regions, and supports the ability to insert cache entries into those regions and to retrieve cache entries from those regions.","nodes":[{"content":"A cache implementation supports the ability to partition its storage into cache regions, and supports the ability to insert cache entries into those regions and to retrieve cache entries from those regions.","pos":[0,206]}]}],"pos":[7945,8152],"yaml":true},{"content":"A cache implementation runs at least partially in memory. A distributed cache would not set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would do so.","nodes":[{"pos":[0,216],"content":"A cache implementation runs at least partially in memory. A distributed cache would not set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would do so.","nodes":[{"content":"A cache implementation runs at least partially in memory.","pos":[0,57]},{"content":"A distributed cache would not set this flag, whereas an in-memory cache such as the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;&lt;/xref&gt;</ph> class would do so.","pos":[58,216],"source":" A distributed cache would not set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would do so."}]}],"pos":[9242,9459],"yaml":true},{"content":"A cache implementation does not provide any of the features that are described in the <xref href=\"System.Runtime.Caching.DefaultCacheCapabilities\"></xref> enumeration.","nodes":[{"pos":[0,167],"content":"A cache implementation does not provide any of the features that are described in the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.DefaultCacheCapabilities\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"A cache implementation does not provide any of the features that are described in the <xref href=\"System.Runtime.Caching.DefaultCacheCapabilities\"></xref> enumeration."}],"pos":[10481,10649],"yaml":true},{"content":"A cache implementation runs out-of-process. A distributed cache would set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would not.","nodes":[{"pos":[0,196],"content":"A cache implementation runs out-of-process. A distributed cache would set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would not.","nodes":[{"content":"A cache implementation runs out-of-process.","pos":[0,43]},{"content":"A distributed cache would set this flag, whereas an in-memory cache such as the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;&lt;/xref&gt;</ph> class would not.","pos":[44,196],"source":" A distributed cache would set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would not."}]}],"pos":[11755,11952],"yaml":true},{"content":"A cache implementation supports the ability to automatically remove cache entries that have not been accessed in a specified time span.","nodes":[{"pos":[0,135],"content":"A cache implementation supports the ability to automatically remove cache entries that have not been accessed in a specified time span.","nodes":[{"content":"A cache implementation supports the ability to automatically remove cache entries that have not been accessed in a specified time span.","pos":[0,135]}]}],"pos":[13062,13198],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.DefaultCacheCapabilities\n  commentId: T:System.Runtime.Caching.DefaultCacheCapabilities\n  id: DefaultCacheCapabilities\n  children:\n  - System.Runtime.Caching.DefaultCacheCapabilities.AbsoluteExpirations\n  - System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryChangeMonitors\n  - System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryRemovedCallback\n  - System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryUpdateCallback\n  - System.Runtime.Caching.DefaultCacheCapabilities.CacheRegions\n  - System.Runtime.Caching.DefaultCacheCapabilities.InMemoryProvider\n  - System.Runtime.Caching.DefaultCacheCapabilities.None\n  - System.Runtime.Caching.DefaultCacheCapabilities.OutOfProcessProvider\n  - System.Runtime.Caching.DefaultCacheCapabilities.SlidingExpirations\n  langs:\n  - csharp\n  name: DefaultCacheCapabilities\n  nameWithType: DefaultCacheCapabilities\n  fullName: System.Runtime.Caching.DefaultCacheCapabilities\n  type: Enum\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Represents a set of features that a cache implementation provides.\n  remarks: \"The <xref:System.Runtime.Caching.DefaultCacheCapabilities> class is a flag enumeration. The field values are bits and can be combined as a set of flags that describe the capabilities of the cache.  \\n  \\n The <xref:System.Runtime.Caching.DefaultCacheCapabilities> enumeration can be used to programmatically set the behavior of the cache implementation. This behavior is based on the combination of features that a particular cache implements.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum DefaultCacheCapabilities\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.AbsoluteExpirations\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.AbsoluteExpirations\n  id: AbsoluteExpirations\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: AbsoluteExpirations\n  nameWithType: DefaultCacheCapabilities.AbsoluteExpirations\n  fullName: DefaultCacheCapabilities.AbsoluteExpirations\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation supports the ability to automatically remove cache entries at a specific date and time.\n  syntax:\n    content: AbsoluteExpirations\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryChangeMonitors\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryChangeMonitors\n  id: CacheEntryChangeMonitors\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: CacheEntryChangeMonitors\n  nameWithType: DefaultCacheCapabilities.CacheEntryChangeMonitors\n  fullName: DefaultCacheCapabilities.CacheEntryChangeMonitors\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation supports the ability to create change monitors that monitor entries.\n  syntax:\n    content: CacheEntryChangeMonitors\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryRemovedCallback\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryRemovedCallback\n  id: CacheEntryRemovedCallback\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: CacheEntryRemovedCallback\n  nameWithType: DefaultCacheCapabilities.CacheEntryRemovedCallback\n  fullName: DefaultCacheCapabilities.CacheEntryRemovedCallback\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation can raise a notification that an entry has been removed from the cache.\n  syntax:\n    content: CacheEntryRemovedCallback\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryUpdateCallback\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryUpdateCallback\n  id: CacheEntryUpdateCallback\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: CacheEntryUpdateCallback\n  nameWithType: DefaultCacheCapabilities.CacheEntryUpdateCallback\n  fullName: DefaultCacheCapabilities.CacheEntryUpdateCallback\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation can raise a notification that an entry is about to be removed from the cache. This setting also indicates that a cache implementation supports the ability to automatically replace the entry that is being removed with a new cache entry.\n  syntax:\n    content: CacheEntryUpdateCallback\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheRegions\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.CacheRegions\n  id: CacheRegions\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: CacheRegions\n  nameWithType: DefaultCacheCapabilities.CacheRegions\n  fullName: DefaultCacheCapabilities.CacheRegions\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation supports the ability to partition its storage into cache regions, and supports the ability to insert cache entries into those regions and to retrieve cache entries from those regions.\n  syntax:\n    content: CacheRegions\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.InMemoryProvider\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.InMemoryProvider\n  id: InMemoryProvider\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: InMemoryProvider\n  nameWithType: DefaultCacheCapabilities.InMemoryProvider\n  fullName: DefaultCacheCapabilities.InMemoryProvider\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation runs at least partially in memory. A distributed cache would not set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would do so.\n  syntax:\n    content: InMemoryProvider\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.None\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.None\n  id: None\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: None\n  nameWithType: DefaultCacheCapabilities.None\n  fullName: DefaultCacheCapabilities.None\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation does not provide any of the features that are described in the <xref href=\"System.Runtime.Caching.DefaultCacheCapabilities\"></xref> enumeration.\n  syntax:\n    content: None\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.OutOfProcessProvider\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.OutOfProcessProvider\n  id: OutOfProcessProvider\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: OutOfProcessProvider\n  nameWithType: DefaultCacheCapabilities.OutOfProcessProvider\n  fullName: DefaultCacheCapabilities.OutOfProcessProvider\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation runs out-of-process. A distributed cache would set this flag, whereas an in-memory cache such as the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class would not.\n  syntax:\n    content: OutOfProcessProvider\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.SlidingExpirations\n  commentId: F:System.Runtime.Caching.DefaultCacheCapabilities.SlidingExpirations\n  id: SlidingExpirations\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  langs:\n  - csharp\n  name: SlidingExpirations\n  nameWithType: DefaultCacheCapabilities.SlidingExpirations\n  fullName: DefaultCacheCapabilities.SlidingExpirations\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: A cache implementation supports the ability to automatically remove cache entries that have not been accessed in a specified time span.\n  syntax:\n    content: SlidingExpirations\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/DefaultCacheCapabilities.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.AbsoluteExpirations\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: AbsoluteExpirations\n  nameWithType: DefaultCacheCapabilities.AbsoluteExpirations\n  fullName: DefaultCacheCapabilities.AbsoluteExpirations\n- uid: System.Runtime.Caching.DefaultCacheCapabilities\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: DefaultCacheCapabilities\n  nameWithType: DefaultCacheCapabilities\n  fullName: System.Runtime.Caching.DefaultCacheCapabilities\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryChangeMonitors\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: CacheEntryChangeMonitors\n  nameWithType: DefaultCacheCapabilities.CacheEntryChangeMonitors\n  fullName: DefaultCacheCapabilities.CacheEntryChangeMonitors\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryRemovedCallback\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: CacheEntryRemovedCallback\n  nameWithType: DefaultCacheCapabilities.CacheEntryRemovedCallback\n  fullName: DefaultCacheCapabilities.CacheEntryRemovedCallback\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryUpdateCallback\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: CacheEntryUpdateCallback\n  nameWithType: DefaultCacheCapabilities.CacheEntryUpdateCallback\n  fullName: DefaultCacheCapabilities.CacheEntryUpdateCallback\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.CacheRegions\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: CacheRegions\n  nameWithType: DefaultCacheCapabilities.CacheRegions\n  fullName: DefaultCacheCapabilities.CacheRegions\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.InMemoryProvider\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: InMemoryProvider\n  nameWithType: DefaultCacheCapabilities.InMemoryProvider\n  fullName: DefaultCacheCapabilities.InMemoryProvider\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.None\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: None\n  nameWithType: DefaultCacheCapabilities.None\n  fullName: DefaultCacheCapabilities.None\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.OutOfProcessProvider\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: OutOfProcessProvider\n  nameWithType: DefaultCacheCapabilities.OutOfProcessProvider\n  fullName: DefaultCacheCapabilities.OutOfProcessProvider\n- uid: System.Runtime.Caching.DefaultCacheCapabilities.SlidingExpirations\n  parent: System.Runtime.Caching.DefaultCacheCapabilities\n  isExternal: false\n  name: SlidingExpirations\n  nameWithType: DefaultCacheCapabilities.SlidingExpirations\n  fullName: DefaultCacheCapabilities.SlidingExpirations\n"}