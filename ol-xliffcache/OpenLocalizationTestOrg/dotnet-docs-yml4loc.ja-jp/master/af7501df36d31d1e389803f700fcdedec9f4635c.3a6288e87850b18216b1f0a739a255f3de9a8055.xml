{"nodes":[{"content":"Authenticates a security token.","nodes":[{"pos":[0,31],"content":"Authenticates a security token.","nodes":[{"content":"Authenticates a security token.","pos":[0,31]}]}],"pos":[1053,1085],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.  \n  \n When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.","nodes":[{"pos":[0,603],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.","pos":[0,603],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> class and the classes that derive from it authenticate security tokens.","pos":[0,140],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens."},{"content":"Typically, you would only derive a class directly from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> when you create a custom security token.","pos":[141,301],"source":" Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token."},{"content":"If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>, such as <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</ph>.","pos":[302,603],"source":" If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>."}]}]},{"pos":[610,1423],"content":"When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.","nodes":[{"content":"When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.","pos":[0,813],"nodes":[{"content":"When you derive a class from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>, override the following two methods: <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph>.","pos":[0,310],"source":"When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method determines whether this security token authenticator can authenticate a specific security token.","pos":[311,507],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method authenticates the security token and establishes a set of authorization policies for authorization.","pos":[508,704],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization."},{"content":"The authorization policies map the claims found in the security token to claims required by the application.","pos":[705,813]}]}]}],"pos":[1096,2524],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> class.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> class."}],"pos":[4510,4630],"yaml":true},{"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","nodes":[{"pos":[0,115],"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","nodes":[{"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","pos":[0,115]}]}],"pos":[6105,6221],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.","nodes":[{"pos":[0,364],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method checks whether the token parameter is <ph id=\"ph2\">`null`</ph> and then calls the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method to determine whether this security token authenticator can authenticate the security token type for <ph id=\"ph4\">`token`</ph>.","source":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`."}],"pos":[6232,6597],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[6805,6889],"yaml":true},{"content":"`true` when token can be validated; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> when token can be validated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when token can be validated; otherwise, `false`."}],"pos":[6947,7005],"yaml":true},{"content":"<code>token</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>token</code> is `null`."}],"pos":[7209,7239],"yaml":true},{"content":"When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.","nodes":[{"pos":[0,151],"content":"When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.","nodes":[{"content":"When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.","pos":[0,151]}]}],"pos":[8561,8713],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`. This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.","nodes":[{"pos":[0,479],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`. This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method to determine whether this security token authenticator can authenticate the security token type for <ph id=\"ph3\">`token`</ph>.","pos":[0,317],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`."},{"content":"This does not authenticate the security token; that is performed by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method.","pos":[318,479],"source":" This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method."}]}],"pos":[8724,9204],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[9428,9512],"yaml":true},{"content":"`true` when <code>token</code> can be validated; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">token</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be validated; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` when <code>token</code> can be validated; otherwise, `false`."}],"pos":[9570,9641],"yaml":true},{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"pos":[0,112],"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,112]}]}],"pos":[11030,11143],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"pos":[0,454],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method checks whether the <ph id=\"ph2\">`token`</ph> parameter is <ph id=\"ph3\">`null`</ph>, calls the <ph id=\"ph4\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <ph id=\"ph5\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.","source":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method."}],"pos":[11154,11609],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[11909,11993],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"pos":[12136,12369],"yaml":true},{"content":"<code>token</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>token</code> is `null`."}],"pos":[12570,12600],"yaml":true},{"content":"<code>token</code> cannot be authenticated by this security token authenticator  \n  \n -or-  \n  \n <code>token</code> is not authenticated.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> cannot be authenticated by this security token authenticator","source":"<code>token</code> cannot be authenticated by this security token authenticator"},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,137],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not authenticated.","source":"<code>token</code> is not authenticated."}],"pos":[12766,12910],"yaml":true},{"content":"When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"pos":[0,148],"content":"When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"content":"When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,148]}]}],"pos":[14214,14363],"yaml":true},{"content":"Override the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method to authenticate a specific security token type.  \n  \n When the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:  \n  \n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \n  \n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \n  \n When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \n  \n The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.","nodes":[{"pos":[0,153],"content":"Override the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method to authenticate a specific security token type.","nodes":[{"content":"Override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method to authenticate a specific security token type.","pos":[0,153],"source":"Override the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method to authenticate a specific security token type."}]},{"pos":[160,301],"content":"When the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:","pos":[0,141],"source":"When the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:"}]},{"pos":[311,478],"content":"When the security token passed into the <ph id=\"ph1\">`token`</ph> parameter cannot be validated, throw the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.","source":"When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"pos":[488,702],"content":"When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.","nodes":[{"content":"When there are no authorization policies in effect for this application, return an empty <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.","pos":[0,214],"source":"When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>."}]},{"pos":[709,886],"content":"When <ph id=\"ph1\">`null`</ph> is returned by this method, <ph id=\"ph2\">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.","source":"When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"pos":[893,1096],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method.","pos":[0,203],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method."}]}],"pos":[14374,15483],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[15799,15883],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"pos":[16026,16259],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  commentId: T:System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  id: SecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates a security token.\n  remarks: \"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.  \\n  \\n When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.\"\n  syntax:\n    content: public abstract class SecurityTokenAuthenticator\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  commentId: M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: SecurityTokenAuthenticator()\n  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n  fullName: SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> class.\n  syntax:\n    content: protected SecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value indicating whether the specified security token can be validated by this security token authenticator.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.\n  syntax:\n    content: public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: '`true` when token can be validated; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`. This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.\n  syntax:\n    content: protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: '`true` when <code>token</code> can be validated; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is `null`.\n  - type: System.IdentityModel.Tokens.SecurityTokenValidationException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException\n    description: \"<code>token</code> cannot be authenticated by this security token authenticator  \\n  \\n -or-  \\n  \\n <code>token</code> is not authenticated.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: \"Override the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method to authenticate a specific security token type.  \\n  \\n When the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:  \\n  \\n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \\n  \\n When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.\"\n  syntax:\n    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.SecurityTokenValidationException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenValidationException\n  nameWithType: SecurityTokenValidationException\n  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: SecurityTokenAuthenticator()\n  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n  fullName: SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.IdentityModel.Policy.IAuthorizationPolicy\n  name: IAuthorizationPolicy\n  nameWithType: IAuthorizationPolicy\n  fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator\n  fullName: SecurityTokenAuthenticator.SecurityTokenAuthenticator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken\n  fullName: SecurityTokenAuthenticator.CanValidateToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore\n  fullName: SecurityTokenAuthenticator.CanValidateTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken\n  nameWithType: SecurityTokenAuthenticator.ValidateToken\n  fullName: SecurityTokenAuthenticator.ValidateToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore\n  fullName: SecurityTokenAuthenticator.ValidateTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/SecurityTokenAuthenticator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}