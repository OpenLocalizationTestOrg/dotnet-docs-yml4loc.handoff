### YamlMime:ManagedReference
items:
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  id: ParameterInfo
  children:
  - System.Reflection.ParameterInfo.#ctor
  - System.Reflection.ParameterInfo.Attributes
  - System.Reflection.ParameterInfo.AttrsImpl
  - System.Reflection.ParameterInfo.ClassImpl
  - System.Reflection.ParameterInfo.CustomAttributes
  - System.Reflection.ParameterInfo.DefaultValue
  - System.Reflection.ParameterInfo.DefaultValueImpl
  - System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.ParameterInfo.GetCustomAttributesData
  - System.Reflection.ParameterInfo.GetOptionalCustomModifiers
  - System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)
  - System.Reflection.ParameterInfo.GetRequiredCustomModifiers
  - System.Reflection.ParameterInfo.HasDefaultValue
  - System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.ParameterInfo.IsIn
  - System.Reflection.ParameterInfo.IsLcid
  - System.Reflection.ParameterInfo.IsOptional
  - System.Reflection.ParameterInfo.IsOut
  - System.Reflection.ParameterInfo.IsRetval
  - System.Reflection.ParameterInfo.Member
  - System.Reflection.ParameterInfo.MemberImpl
  - System.Reflection.ParameterInfo.MetadataToken
  - System.Reflection.ParameterInfo.Name
  - System.Reflection.ParameterInfo.NameImpl
  - System.Reflection.ParameterInfo.ParameterType
  - System.Reflection.ParameterInfo.Position
  - System.Reflection.ParameterInfo.PositionImpl
  - System.Reflection.ParameterInfo.RawDefaultValue
  - System.Reflection.ParameterInfo.ToString
  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
  type: Class
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Discovers the attributes of a parameter and provides access to parameter metadata.
  remarks: "Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on.  \n  \n <xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order."
  example:
  - "This example shows how to use various reflection classes to analyze the metadata contained in an assembly.  \n  \n [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]\n [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]\n [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ParameterInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._ParameterInfo, System.Runtime.Serialization.IObjectReference
  inheritance:
  - System.Object
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._ParameterInfo
  - System.Runtime.Serialization.IObjectReference
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.#ctor
  commentId: M:System.Reflection.ParameterInfo.#ctor
  id: '#ctor'
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ParameterInfo()
  nameWithType: ParameterInfo.ParameterInfo()
  fullName: ParameterInfo.ParameterInfo()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Initializes a new instance of the `ParameterInfo` class.
  syntax:
    content: protected ParameterInfo ();
    parameters: []
  overload: System.Reflection.ParameterInfo.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.Attributes
  commentId: P:System.Reflection.ParameterInfo.Attributes
  id: Attributes
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: ParameterInfo.Attributes
  fullName: ParameterInfo.Attributes
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the attributes for this parameter.
  remarks: "This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  example:
  - "The following example defines a method with three parameters. It uses the <xref:System.Reflection.ParameterInfo.Attributes%2A> property to get the attributes of the second parameter and display them at the console.  \n  \n [!code-cpp[ParameterInfo_Attributes1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_Attributes1/CPP/parameterinfo_attributes1.cpp#1)]\n [!code-csharp[ParameterInfo_Attributes1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_Attributes1/CS/parameterinfo_attributes1.cs#1)]\n [!code-vb[ParameterInfo_Attributes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_Attributes1/VB/parameterinfo_attributes1.vb#1)]"
  syntax:
    content: public virtual System.Reflection.ParameterAttributes Attributes { get; }
    return:
      type: System.Reflection.ParameterAttributes
      description: A `ParameterAttributes` object representing the attributes for this parameter.
  overload: System.Reflection.ParameterInfo.Attributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.AttrsImpl
  commentId: F:System.Reflection.ParameterInfo.AttrsImpl
  id: AttrsImpl
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: AttrsImpl
  nameWithType: ParameterInfo.AttrsImpl
  fullName: ParameterInfo.AttrsImpl
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: The attributes of the parameter.
  remarks: "This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>."
  syntax:
    content: protected System.Reflection.ParameterAttributes AttrsImpl;
    return:
      type: System.Reflection.ParameterAttributes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.ClassImpl
  commentId: F:System.Reflection.ParameterInfo.ClassImpl
  id: ClassImpl
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ClassImpl
  nameWithType: ParameterInfo.ClassImpl
  fullName: ParameterInfo.ClassImpl
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: The `Type` of the parameter.
  remarks: "This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>."
  syntax:
    content: protected Type ClassImpl;
    return:
      type: System.Type
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.CustomAttributes
  commentId: P:System.Reflection.ParameterInfo.CustomAttributes
  id: CustomAttributes
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: CustomAttributes
  nameWithType: ParameterInfo.CustomAttributes
  fullName: ParameterInfo.CustomAttributes
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a collection that contains this parameter's custom attributes.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
      description: A collection that contains this parameter's custom attributes.
  overload: System.Reflection.ParameterInfo.CustomAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.DefaultValue
  commentId: P:System.Reflection.ParameterInfo.DefaultValue
  id: DefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ParameterInfo.DefaultValue
  fullName: ParameterInfo.DefaultValue
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating the default value if the parameter has a default value.
  remarks: "This property is used only in the execution context. In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.  \n  \n The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.  \n  \n This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  syntax:
    content: public virtual object DefaultValue { get; }
    return:
      type: System.Object
      description: The default value of the parameter, or <xref href="System.DBNull.Value"></xref> if the parameter has no default value.
  overload: System.Reflection.ParameterInfo.DefaultValue*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.DefaultValueImpl
  commentId: F:System.Reflection.ParameterInfo.DefaultValueImpl
  id: DefaultValueImpl
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: DefaultValueImpl
  nameWithType: ParameterInfo.DefaultValueImpl
  fullName: ParameterInfo.DefaultValueImpl
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: The default value of the parameter.
  remarks: "This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>."
  syntax:
    content: protected object DefaultValueImpl;
    return:
      type: System.Object
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: ParameterInfo.GetCustomAttributes(Type, Boolean)
  fullName: ParameterInfo.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the custom attributes of the specified type or its derived types that are applied to this parameter.
  remarks: This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.
  syntax:
    content: public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The custom attributes identified by type.
    - id: inherit
      type: System.Boolean
      description: This argument is ignored for objects of this type.
    return:
      type: System.Object[]
      description: An array that contains the custom attributes of the specified type or its derived types.
  overload: System.Reflection.ParameterInfo.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The type must be a type provided by the underlying runtime system.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>attributeType</code> is `null`.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type could not be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: ParameterInfo.GetCustomAttributes(Boolean)
  fullName: ParameterInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets all the custom attributes defined on this parameter.
  remarks: This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.
  example:
  - "The following example shows how custom attributes that have been applied to the parameters of methods can be retrieved at run time. The example defines a custom attribute named `MyAttribute` that can be applied to parameters. The example then defines a class named `MyClass` with a method named `MyMethod`, and applies `MyAttribute` to a parameter of the method.  \n  \n When the example is run, it uses the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> method to retrieve the custom attributes that have been applied to all parameters of all methods in `MyClass`, and displays them at the console.  \n  \n [!code-cpp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CPP/source.cpp#1)]\n [!code-csharp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CS/source.cs#1)]\n [!code-vb[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/VB/source.vb#1)]"
  syntax:
    content: public virtual object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: This argument is ignored for objects of this type.
    return:
      type: System.Object[]
      description: An array that contains all the custom attributes applied to this parameter.
  overload: System.Reflection.ParameterInfo.GetCustomAttributes*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type could not be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.GetCustomAttributesData
  commentId: M:System.Reflection.ParameterInfo.GetCustomAttributesData
  id: GetCustomAttributesData
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: GetCustomAttributesData()
  nameWithType: ParameterInfo.GetCustomAttributesData()
  fullName: ParameterInfo.GetCustomAttributesData()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Returns a list of <xref href="System.Reflection.CustomAttributeData"></xref> objects for the current parameter, which can be used in the reflection-only context.
  remarks: Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.
  syntax:
    content: public virtual System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: A generic list of <xref href="System.Reflection.CustomAttributeData"></xref> objects representing data about the attributes that have been applied to the current parameter.
  overload: System.Reflection.ParameterInfo.GetCustomAttributesData*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers
  commentId: M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers
  id: GetOptionalCustomModifiers
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: GetOptionalCustomModifiers()
  nameWithType: ParameterInfo.GetOptionalCustomModifiers()
  fullName: ParameterInfo.GetOptionalCustomModifiers()
  type: Method
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the optional custom modifiers of the parameter.
  remarks: The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public virtual Type[] GetOptionalCustomModifiers ();
    parameters: []
    return:
      type: System.Type[]
      description: An array of <xref href="System.Type"></xref> objects that identify the optional custom modifiers of the current parameter, such as <xref href="System.Runtime.CompilerServices.IsConst"></xref> or <xref href="System.Runtime.CompilerServices.IsImplicitlyDereferenced"></xref>.
  overload: System.Reflection.ParameterInfo.GetOptionalCustomModifiers*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)
  id: GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: GetRealObject(StreamingContext)
  nameWithType: ParameterInfo.GetRealObject(StreamingContext)
  fullName: ParameterInfo.GetRealObject(StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Returns the real object that should be deserialized instead of the object that the serialized stream specifies.
  remarks: This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=fullName> method.
  syntax:
    content: public object GetRealObject (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The serialized stream from which the current object is deserialized.
    return:
      type: System.Object
      description: The actual object that is put into the graph.
  overload: System.Reflection.ParameterInfo.GetRealObject*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: The parameter's position in the parameter list of its associated member is not valid for that member's type.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers
  commentId: M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers
  id: GetRequiredCustomModifiers
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: GetRequiredCustomModifiers()
  nameWithType: ParameterInfo.GetRequiredCustomModifiers()
  fullName: ParameterInfo.GetRequiredCustomModifiers()
  type: Method
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the required custom modifiers of the parameter.
  remarks: The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public virtual Type[] GetRequiredCustomModifiers ();
    parameters: []
    return:
      type: System.Type[]
      description: An array of <xref href="System.Type"></xref> objects that identify the required custom modifiers of the current parameter, such as <xref href="System.Runtime.CompilerServices.IsConst"></xref> or <xref href="System.Runtime.CompilerServices.IsImplicitlyDereferenced"></xref>.
  overload: System.Reflection.ParameterInfo.GetRequiredCustomModifiers*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.HasDefaultValue
  commentId: P:System.Reflection.ParameterInfo.HasDefaultValue
  id: HasDefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: HasDefaultValue
  nameWithType: ParameterInfo.HasDefaultValue
  fullName: ParameterInfo.HasDefaultValue
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value that indicates whether this parameter has a default value.
  syntax:
    content: public virtual bool HasDefaultValue { get; }
    return:
      type: System.Boolean
      description: '`true` if this parameter has a default value; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.HasDefaultValue*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: IsDefined(Type, Boolean)
  nameWithType: ParameterInfo.IsDefined(Type, Boolean)
  fullName: ParameterInfo.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.
  remarks: This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=fullName> method.
  example:
  - "The following example defines two custom attributes, `MyAttribute` and `MyDerivedAttribute`. `MyDerivedAttribute` is derived from `MyAttribute`. The example then applies these attributes to the parameters of a method of an example class.  \n  \n When the example is run, it uses the <xref:System.Reflection.ParameterInfo.IsDefined%2A> method to test all parameters of all methods in the example class. It then displays the parameters that have `MyAttribute` or `MyDerivedAttribute`.  \n  \n [!code-cpp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CPP/ParameterInfo_GetCustomAttribute_IsDefined.cpp#1)]\n [!code-csharp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CS/parameterinfo_getcustomattribute_isdefined.cs#1)]\n [!code-vb[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/VB/parameterinfo_getcustomattribute_isdefined.vb#1)]"
  syntax:
    content: public virtual bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The `Type` object to search for.
    - id: inherit
      type: System.Boolean
      description: This argument is ignored for objects of this type.
    return:
      type: System.Boolean
      description: '`true` if one or more instances of <code>attributeType</code> or its derived types are applied to this parameter; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not a <xref href="System.Type"></xref> object supplied by the common language runtime.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.IsIn
  commentId: P:System.Reflection.ParameterInfo.IsIn
  id: IsIn
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: IsIn
  nameWithType: ParameterInfo.IsIn
  fullName: ParameterInfo.IsIn
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating whether this is an input parameter.
  remarks: "This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `In` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  example:
  - "The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and <xref:System.Reflection.ParameterAttributes?displayProperty=fullName> attributes.  \n  \n The example contains a `DefineMethod` method that does the following:  \n  \n-   Creates a dynamic assembly containing a `MyType` type.  \n  \n-   Adds a `MyMethod` method to `MyType`. `MyMethod` has three parameters. The first parameter is defined with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, the second with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and the third with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>.  \n  \n-   Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> to complete the type.  \n  \n After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly. It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters. The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.  \n  \n [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]\n [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]\n [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]"
  syntax:
    content: public bool IsIn { get; }
    return:
      type: System.Boolean
      description: '`true` if the parameter is an input parameter; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.IsIn*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.IsLcid
  commentId: P:System.Reflection.ParameterInfo.IsLcid
  id: IsLcid
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: IsLcid
  nameWithType: ParameterInfo.IsLcid
  fullName: ParameterInfo.IsLcid
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating whether this parameter is a locale identifier (lcid).
  remarks: "This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  syntax:
    content: public bool IsLcid { get; }
    return:
      type: System.Boolean
      description: '`true` if the parameter is a locale identifier; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.IsLcid*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.IsOptional
  commentId: P:System.Reflection.ParameterInfo.IsOptional
  id: IsOptional
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: IsOptional
  nameWithType: ParameterInfo.IsOptional
  fullName: ParameterInfo.IsOptional
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating whether this parameter is optional.
  remarks: "This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  example:
  - "The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and <xref:System.Reflection.ParameterAttributes?displayProperty=fullName> attributes.  \n  \n The example contains a `DefineMethod` method that does the following:  \n  \n-   Creates a dynamic assembly containing a `MyType` type.  \n  \n-   Adds a `MyMethod` method to `MyType`. `MyMethod` has three parameters. The first parameter is defined with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, the second with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and the third with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>.  \n  \n-   Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> to complete the type.  \n  \n After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly. It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters. The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.  \n  \n [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]\n [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]\n [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]"
  syntax:
    content: public bool IsOptional { get; }
    return:
      type: System.Boolean
      description: '`true` if the parameter is optional; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.IsOptional*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.IsOut
  commentId: P:System.Reflection.ParameterInfo.IsOut
  id: IsOut
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: IsOut
  nameWithType: ParameterInfo.IsOut
  fullName: ParameterInfo.IsOut
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating whether this is an output parameter.
  remarks: "This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Out` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  example:
  - "The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and <xref:System.Reflection.ParameterAttributes?displayProperty=fullName> attributes.  \n  \n The example contains a `DefineMethod` method that does the following:  \n  \n-   Creates a dynamic assembly containing a `MyType` type.  \n  \n-   Adds a `MyMethod` method to `MyType`. `MyMethod` has three parameters. The first parameter is defined with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, the second with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and the third with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>.  \n  \n-   Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> to complete the type.  \n  \n After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly. It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters. The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.  \n  \n [!code-cpp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CPP/source.cpp#1)]\n [!code-csharp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CS/source.cs#1)]\n [!code-vb[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/VB/source.vb#1)]"
  syntax:
    content: public bool IsOut { get; }
    return:
      type: System.Boolean
      description: '`true` if the parameter is an output parameter; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.IsOut*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.IsRetval
  commentId: P:System.Reflection.ParameterInfo.IsRetval
  id: IsRetval
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: IsRetval
  nameWithType: ParameterInfo.IsRetval
  fullName: ParameterInfo.IsRetval
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating whether this is a `Retval` parameter.
  remarks: "This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  syntax:
    content: public bool IsRetval { get; }
    return:
      type: System.Boolean
      description: '`true` if the parameter is a `Retval`; otherwise, `false`.'
  overload: System.Reflection.ParameterInfo.IsRetval*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.Member
  commentId: P:System.Reflection.ParameterInfo.Member
  id: Member
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: Member
  nameWithType: ParameterInfo.Member
  fullName: ParameterInfo.Member
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating the member in which the parameter is implemented.
  syntax:
    content: public virtual System.Reflection.MemberInfo Member { get; }
    return:
      type: System.Reflection.MemberInfo
      description: The member which implanted the parameter represented by this <xref href="System.Reflection.ParameterInfo"></xref>.
  overload: System.Reflection.ParameterInfo.Member*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.MemberImpl
  commentId: F:System.Reflection.ParameterInfo.MemberImpl
  id: MemberImpl
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: MemberImpl
  nameWithType: ParameterInfo.MemberImpl
  fullName: ParameterInfo.MemberImpl
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: The member in which the field is implemented.
  remarks: "This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>."
  syntax:
    content: protected System.Reflection.MemberInfo MemberImpl;
    return:
      type: System.Reflection.MemberInfo
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.MetadataToken
  commentId: P:System.Reflection.ParameterInfo.MetadataToken
  id: MetadataToken
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: MetadataToken
  nameWithType: ParameterInfo.MetadataToken
  fullName: ParameterInfo.MetadataToken
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value that identifies this parameter in metadata.
  remarks: "To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.  \n  \n The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)."
  syntax:
    content: public virtual int MetadataToken { get; }
    return:
      type: System.Int32
      description: A value which, in combination with the module, uniquely identifies this parameter in metadata.
  overload: System.Reflection.ParameterInfo.MetadataToken*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.Name
  commentId: P:System.Reflection.ParameterInfo.Name
  id: Name
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: Name
  nameWithType: ParameterInfo.Name
  fullName: ParameterInfo.Name
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the name of the parameter.
  remarks: "This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.  \n  \n> [!WARNING]\n>  If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=fullName> property), this property will be `null`."
  example:
  - "The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.Name%2A> property to obtain the parameter names.  \n  \n [!code-cpp[Classic ParameterInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CPP/source.cpp#1)]\n [!code-csharp[Classic ParameterInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CS/source.cs#1)]\n [!code-vb[Classic ParameterInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/VB/source.vb#1)]"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: The simple name of this parameter.
  overload: System.Reflection.ParameterInfo.Name*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.NameImpl
  commentId: F:System.Reflection.ParameterInfo.NameImpl
  id: NameImpl
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: NameImpl
  nameWithType: ParameterInfo.NameImpl
  fullName: ParameterInfo.NameImpl
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: The name of the parameter.
  remarks: "This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>."
  syntax:
    content: protected string NameImpl;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.ParameterType
  commentId: P:System.Reflection.ParameterInfo.ParameterType
  id: ParameterType
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ParameterType
  nameWithType: ParameterInfo.ParameterType
  fullName: ParameterInfo.ParameterType
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the `Type` of this parameter.
  remarks: "This method depends on an optional metadata and might not be available in all compilers.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  example:
  - "The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.ParameterType%2A> property to display the type of each parameter.  \n  \n [!code-cpp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CPP/source.cpp#1)]\n [!code-csharp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CS/source.cs#1)]\n [!code-vb[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/VB/source.vb#1)]"
  syntax:
    content: public virtual Type ParameterType { get; }
    return:
      type: System.Type
      description: The `Type` object that represents the `Type` of this parameter.
  overload: System.Reflection.ParameterInfo.ParameterType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.Position
  commentId: P:System.Reflection.ParameterInfo.Position
  id: Position
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: Position
  nameWithType: ParameterInfo.Position
  fullName: ParameterInfo.Position
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the zero-based position of the parameter in the formal parameter list.
  remarks: "Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position. For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.  \n  \n This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."
  syntax:
    content: public virtual int Position { get; }
    return:
      type: System.Int32
      description: An integer representing the position this parameter occupies in the parameter list.
  overload: System.Reflection.ParameterInfo.Position*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.PositionImpl
  commentId: F:System.Reflection.ParameterInfo.PositionImpl
  id: PositionImpl
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: PositionImpl
  nameWithType: ParameterInfo.PositionImpl
  fullName: ParameterInfo.PositionImpl
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: The zero-based position of the parameter in the parameter list.
  remarks: "This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>."
  syntax:
    content: protected int PositionImpl;
    return:
      type: System.Int32
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.RawDefaultValue
  commentId: P:System.Reflection.ParameterInfo.RawDefaultValue
  id: RawDefaultValue
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: RawDefaultValue
  nameWithType: ParameterInfo.RawDefaultValue
  fullName: ParameterInfo.RawDefaultValue
  type: Property
  assemblies:
  - System.Reflection
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets a value indicating the default value if the parameter has a default value.
  remarks: "This property can be used in both the execution context and the reflection-only context.  \n  \n The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method."
  syntax:
    content: public virtual object RawDefaultValue { get; }
    return:
      type: System.Object
      description: The default value of the parameter, or <xref href="System.DBNull.Value"></xref> if the parameter has no default value.
  overload: System.Reflection.ParameterInfo.RawDefaultValue*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.ToString
  commentId: M:System.Reflection.ParameterInfo.ToString
  id: ToString
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: ParameterInfo.ToString()
  fullName: ParameterInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Gets the parameter type and name represented as a string.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string containing the type and the name of the parameter.
  overload: System.Reflection.ParameterInfo.ToString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: ''
    return:
      type: System.Object[]
      description: ''
  overload: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: ''
    - id: inherit
      type: System.Boolean
      description: ''
    return:
      type: System.Object[]
      description: ''
  overload: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  id: System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  syntax:
    content: bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: ''
    - id: inherit
      type: System.Boolean
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: _ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _ParameterInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: _ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _ParameterInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: _ParameterInfo.GetTypeInfoCount(UInt32)
  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)
  fullName: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _ParameterInfo.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.ParameterInfo
  langs:
  - csharp
  name: _ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _ParameterInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  nameWithType: TypeLoadException
  fullName: System.TypeLoadException
- uid: System.Runtime.Serialization.SerializationException
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationException
  nameWithType: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.ParameterInfo.#ctor
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ParameterInfo()
  nameWithType: ParameterInfo.ParameterInfo()
  fullName: ParameterInfo.ParameterInfo()
- uid: System.Reflection.ParameterInfo.Attributes
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Attributes
  nameWithType: ParameterInfo.Attributes
  fullName: ParameterInfo.Attributes
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Reflection.ParameterInfo.AttrsImpl
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: AttrsImpl
  nameWithType: ParameterInfo.AttrsImpl
  fullName: ParameterInfo.AttrsImpl
- uid: System.Reflection.ParameterInfo.ClassImpl
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ClassImpl
  nameWithType: ParameterInfo.ClassImpl
  fullName: ParameterInfo.ClassImpl
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.ParameterInfo.CustomAttributes
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: ParameterInfo.CustomAttributes
  fullName: ParameterInfo.CustomAttributes
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Reflection.CustomAttributeData
  name: CustomAttributeData
  nameWithType: CustomAttributeData
  fullName: System.Reflection.CustomAttributeData
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<CustomAttributeData>
  nameWithType: IEnumerable<CustomAttributeData>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.ParameterInfo.DefaultValue
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: DefaultValue
  nameWithType: ParameterInfo.DefaultValue
  fullName: ParameterInfo.DefaultValue
- uid: System.Reflection.ParameterInfo.DefaultValueImpl
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: DefaultValueImpl
  nameWithType: ParameterInfo.DefaultValueImpl
  fullName: ParameterInfo.DefaultValueImpl
- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: ParameterInfo.GetCustomAttributes(Type, Boolean)
  fullName: ParameterInfo.GetCustomAttributes(Type, Boolean)
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: ParameterInfo.GetCustomAttributes(Boolean)
  fullName: ParameterInfo.GetCustomAttributes(Boolean)
- uid: System.Reflection.ParameterInfo.GetCustomAttributesData
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: ParameterInfo.GetCustomAttributesData()
  fullName: ParameterInfo.GetCustomAttributesData()
- uid: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<CustomAttributeData>
  nameWithType: IList<CustomAttributeData>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetOptionalCustomModifiers()
  nameWithType: ParameterInfo.GetOptionalCustomModifiers()
  fullName: ParameterInfo.GetOptionalCustomModifiers()
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetRealObject(StreamingContext)
  nameWithType: ParameterInfo.GetRealObject(StreamingContext)
  fullName: ParameterInfo.GetRealObject(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetRequiredCustomModifiers()
  nameWithType: ParameterInfo.GetRequiredCustomModifiers()
  fullName: ParameterInfo.GetRequiredCustomModifiers()
- uid: System.Reflection.ParameterInfo.HasDefaultValue
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: HasDefaultValue
  nameWithType: ParameterInfo.HasDefaultValue
  fullName: ParameterInfo.HasDefaultValue
- uid: System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: ParameterInfo.IsDefined(Type, Boolean)
  fullName: ParameterInfo.IsDefined(Type, Boolean)
- uid: System.Reflection.ParameterInfo.IsIn
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsIn
  nameWithType: ParameterInfo.IsIn
  fullName: ParameterInfo.IsIn
- uid: System.Reflection.ParameterInfo.IsLcid
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsLcid
  nameWithType: ParameterInfo.IsLcid
  fullName: ParameterInfo.IsLcid
- uid: System.Reflection.ParameterInfo.IsOptional
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsOptional
  nameWithType: ParameterInfo.IsOptional
  fullName: ParameterInfo.IsOptional
- uid: System.Reflection.ParameterInfo.IsOut
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsOut
  nameWithType: ParameterInfo.IsOut
  fullName: ParameterInfo.IsOut
- uid: System.Reflection.ParameterInfo.IsRetval
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsRetval
  nameWithType: ParameterInfo.IsRetval
  fullName: ParameterInfo.IsRetval
- uid: System.Reflection.ParameterInfo.Member
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Member
  nameWithType: ParameterInfo.Member
  fullName: ParameterInfo.Member
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.ParameterInfo.MemberImpl
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: MemberImpl
  nameWithType: ParameterInfo.MemberImpl
  fullName: ParameterInfo.MemberImpl
- uid: System.Reflection.ParameterInfo.MetadataToken
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: MetadataToken
  nameWithType: ParameterInfo.MetadataToken
  fullName: ParameterInfo.MetadataToken
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterInfo.Name
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Name
  nameWithType: ParameterInfo.Name
  fullName: ParameterInfo.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.ParameterInfo.NameImpl
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: NameImpl
  nameWithType: ParameterInfo.NameImpl
  fullName: ParameterInfo.NameImpl
- uid: System.Reflection.ParameterInfo.ParameterType
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ParameterType
  nameWithType: ParameterInfo.ParameterType
  fullName: ParameterInfo.ParameterType
- uid: System.Reflection.ParameterInfo.Position
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Position
  nameWithType: ParameterInfo.Position
  fullName: ParameterInfo.Position
- uid: System.Reflection.ParameterInfo.PositionImpl
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: PositionImpl
  nameWithType: ParameterInfo.PositionImpl
  fullName: ParameterInfo.PositionImpl
- uid: System.Reflection.ParameterInfo.RawDefaultValue
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: RawDefaultValue
  nameWithType: ParameterInfo.RawDefaultValue
  fullName: ParameterInfo.RawDefaultValue
- uid: System.Reflection.ParameterInfo.ToString
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ToString()
  nameWithType: ParameterInfo.ToString()
  fullName: ParameterInfo.ToString()
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: _ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: _ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: _ParameterInfo.GetTypeInfoCount(UInt32)
  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)
  fullName: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: _ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.ParameterInfo.#ctor*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ParameterInfo
  nameWithType: ParameterInfo.ParameterInfo
  fullName: ParameterInfo.ParameterInfo
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.Attributes*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Attributes
  nameWithType: ParameterInfo.Attributes
  fullName: ParameterInfo.Attributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.CustomAttributes*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: ParameterInfo.CustomAttributes
  fullName: ParameterInfo.CustomAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.DefaultValue*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: DefaultValue
  nameWithType: ParameterInfo.DefaultValue
  fullName: ParameterInfo.DefaultValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.GetCustomAttributes*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: ParameterInfo.GetCustomAttributes
  fullName: ParameterInfo.GetCustomAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.GetCustomAttributesData*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetCustomAttributesData
  nameWithType: ParameterInfo.GetCustomAttributesData
  fullName: ParameterInfo.GetCustomAttributesData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetOptionalCustomModifiers
  nameWithType: ParameterInfo.GetOptionalCustomModifiers
  fullName: ParameterInfo.GetOptionalCustomModifiers
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.GetRealObject*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetRealObject
  nameWithType: ParameterInfo.GetRealObject
  fullName: ParameterInfo.GetRealObject
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: GetRequiredCustomModifiers
  nameWithType: ParameterInfo.GetRequiredCustomModifiers
  fullName: ParameterInfo.GetRequiredCustomModifiers
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.HasDefaultValue*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: HasDefaultValue
  nameWithType: ParameterInfo.HasDefaultValue
  fullName: ParameterInfo.HasDefaultValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.IsDefined*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsDefined
  nameWithType: ParameterInfo.IsDefined
  fullName: ParameterInfo.IsDefined
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.IsIn*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsIn
  nameWithType: ParameterInfo.IsIn
  fullName: ParameterInfo.IsIn
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.IsLcid*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsLcid
  nameWithType: ParameterInfo.IsLcid
  fullName: ParameterInfo.IsLcid
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.IsOptional*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsOptional
  nameWithType: ParameterInfo.IsOptional
  fullName: ParameterInfo.IsOptional
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.IsOut*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsOut
  nameWithType: ParameterInfo.IsOut
  fullName: ParameterInfo.IsOut
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.IsRetval*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: IsRetval
  nameWithType: ParameterInfo.IsRetval
  fullName: ParameterInfo.IsRetval
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.Member*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Member
  nameWithType: ParameterInfo.Member
  fullName: ParameterInfo.Member
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.MetadataToken*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: MetadataToken
  nameWithType: ParameterInfo.MetadataToken
  fullName: ParameterInfo.MetadataToken
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.Name*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Name
  nameWithType: ParameterInfo.Name
  fullName: ParameterInfo.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.ParameterType*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ParameterType
  nameWithType: ParameterInfo.ParameterType
  fullName: ParameterInfo.ParameterType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.Position*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: Position
  nameWithType: ParameterInfo.Position
  fullName: ParameterInfo.Position
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.RawDefaultValue*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: RawDefaultValue
  nameWithType: ParameterInfo.RawDefaultValue
  fullName: ParameterInfo.RawDefaultValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.ToString*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: ToString
  nameWithType: ParameterInfo.ToString
  fullName: ParameterInfo.ToString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: System.Reflection.ICustomAttributeProvider.GetCustomAttributes
  nameWithType: ParameterInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes
  fullName: ParameterInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: System.Reflection.ICustomAttributeProvider.IsDefined
  nameWithType: ParameterInfo.System.Reflection.ICustomAttributeProvider.IsDefined
  fullName: ParameterInfo.System.Reflection.ICustomAttributeProvider.IsDefined
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames
  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames
  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo
  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfo
  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount
  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount
  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke*
  parent: System.Reflection.ParameterInfo
  isExternal: false
  name: System.Runtime.InteropServices._ParameterInfo.Invoke
  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.Invoke
  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._ParameterInfo
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _ParameterInfo
  nameWithType: _ParameterInfo
  fullName: System.Runtime.InteropServices._ParameterInfo
- uid: System.Runtime.Serialization.IObjectReference
  parent: System.Runtime.Serialization
  isExternal: false
  name: IObjectReference
  nameWithType: IObjectReference
  fullName: System.Runtime.Serialization.IObjectReference
