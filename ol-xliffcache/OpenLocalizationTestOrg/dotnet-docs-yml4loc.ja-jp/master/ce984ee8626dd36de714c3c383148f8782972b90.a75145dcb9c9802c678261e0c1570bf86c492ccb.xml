{"nodes":[{"content":"Defines constants for read, write, or read/write access to a file.","nodes":[{"pos":[0,66],"content":"Defines constants for read, write, or read/write access to a file.","nodes":[{"content":"Defines constants for read, write, or read/write access to a file.","pos":[0,66]}]}],"pos":[469,536],"yaml":true},{"content":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).  \n  \n A `FileAccess` parameter is specified in many of the constructors for <xref:System.IO.File>, <xref:System.IO.FileInfo>, <xref:System.IO.FileStream>, and other constructors where it is important to control the kind of access users have to a file.","nodes":[{"pos":[0,475],"content":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).","nodes":[{"content":"For an example of creating a file and writing text to a file, see <bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.","pos":[0,148],"source":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)."},{"content":"For an example of reading text from a file, see <bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.","pos":[149,281],"source":" For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)."},{"content":"For an example of reading from and writing to a binary file, see <bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.","pos":[282,475],"source":" For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)."}]},{"pos":[482,727],"content":"A <ph id=\"ph1\">`FileAccess`</ph> parameter is specified in many of the constructors for <ph id=\"ph2\">&lt;xref:System.IO.File&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IO.FileInfo&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.IO.FileStream&gt;</ph>, and other constructors where it is important to control the kind of access users have to a file.","source":"A `FileAccess` parameter is specified in many of the constructors for <xref:System.IO.File>, <xref:System.IO.FileInfo>, <xref:System.IO.FileStream>, and other constructors where it is important to control the kind of access users have to a file."}],"pos":[547,1279],"yaml":true,"extradata":"MT"},{"content":"Read access to the file. Data can be read from the file. Combine with `Write` for read/write access.","nodes":[{"pos":[0,100],"content":"Read access to the file. Data can be read from the file. Combine with `Write` for read/write access.","nodes":[{"content":"Read access to the file.","pos":[0,24]},{"content":"Data can be read from the file.","pos":[25,56]},{"content":"Combine with <ph id=\"ph1\">`Write`</ph> for read/write access.","pos":[57,100],"source":" Combine with `Write` for read/write access."}]}],"pos":[3387,3488],"yaml":true},{"content":"Read and write access to the file. Data can be written to and read from the file.","nodes":[{"pos":[0,81],"content":"Read and write access to the file. Data can be written to and read from the file.","nodes":[{"content":"Read and write access to the file. Data can be written to and read from the file.","pos":[0,81],"nodes":[{"content":"Read and write access to the file.","pos":[0,34]},{"content":"Data can be written to and read from the file.","pos":[35,81]}]}]}],"pos":[4789,4871],"yaml":true},{"content":"Write access to the file. Data can be written to the file. Combine with `Read` for read/write access.","nodes":[{"pos":[0,101],"content":"Write access to the file. Data can be written to the file. Combine with `Read` for read/write access.","nodes":[{"content":"Write access to the file.","pos":[0,25]},{"content":"Data can be written to the file.","pos":[26,58]},{"content":"Combine with <ph id=\"ph1\">`Read`</ph> for read/write access.","pos":[59,101],"source":" Combine with `Read` for read/write access."}]}],"pos":[6153,6255],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.FileAccess\n  commentId: T:System.IO.FileAccess\n  id: FileAccess\n  children:\n  - System.IO.FileAccess.Read\n  - System.IO.FileAccess.ReadWrite\n  - System.IO.FileAccess.Write\n  langs:\n  - csharp\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n  type: Enum\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Defines constants for read, write, or read/write access to a file.\n  remarks: \"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).  \\n  \\n A `FileAccess` parameter is specified in many of the constructors for <xref:System.IO.File>, <xref:System.IO.FileInfo>, <xref:System.IO.FileStream>, and other constructors where it is important to control the kind of access users have to a file.\"\n  example:\n  - \"The following `FileStream` constructor grants read-only access to an existing file (`FileAccess.Read`).  \\n  \\n [!code-cpp[Classic FileAccess Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic FileAccess Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]\\n [!code-vb[Classic FileAccess Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum FileAccess\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileAccess.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileAccess.Read\n  commentId: F:System.IO.FileAccess.Read\n  id: Read\n  parent: System.IO.FileAccess\n  langs:\n  - csharp\n  name: Read\n  nameWithType: FileAccess.Read\n  fullName: FileAccess.Read\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Read access to the file. Data can be read from the file. Combine with `Write` for read/write access.\n  syntax:\n    content: Read\n    return:\n      type: System.IO.FileAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileAccess.xml\n- uid: System.IO.FileAccess.ReadWrite\n  commentId: F:System.IO.FileAccess.ReadWrite\n  id: ReadWrite\n  parent: System.IO.FileAccess\n  langs:\n  - csharp\n  name: ReadWrite\n  nameWithType: FileAccess.ReadWrite\n  fullName: FileAccess.ReadWrite\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Read and write access to the file. Data can be written to and read from the file.\n  syntax:\n    content: ReadWrite\n    return:\n      type: System.IO.FileAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileAccess.xml\n- uid: System.IO.FileAccess.Write\n  commentId: F:System.IO.FileAccess.Write\n  id: Write\n  parent: System.IO.FileAccess\n  langs:\n  - csharp\n  name: Write\n  nameWithType: FileAccess.Write\n  fullName: FileAccess.Write\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Write access to the file. Data can be written to the file. Combine with `Read` for read/write access.\n  syntax:\n    content: Write\n    return:\n      type: System.IO.FileAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileAccess.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.IO.FileAccess.Read\n  parent: System.IO.FileAccess\n  isExternal: false\n  name: Read\n  nameWithType: FileAccess.Read\n  fullName: FileAccess.Read\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.IO.FileAccess.ReadWrite\n  parent: System.IO.FileAccess\n  isExternal: false\n  name: ReadWrite\n  nameWithType: FileAccess.ReadWrite\n  fullName: FileAccess.ReadWrite\n- uid: System.IO.FileAccess.Write\n  parent: System.IO.FileAccess\n  isExternal: false\n  name: Write\n  nameWithType: FileAccess.Write\n  fullName: FileAccess.Write\n"}