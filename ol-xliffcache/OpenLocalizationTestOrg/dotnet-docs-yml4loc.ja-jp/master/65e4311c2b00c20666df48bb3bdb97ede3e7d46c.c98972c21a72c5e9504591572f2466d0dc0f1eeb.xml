{"nodes":[{"content":"Used for weakly typed query scenarios.","nodes":[{"pos":[0,38],"content":"Used for weakly typed query scenarios.","nodes":[{"content":"Used for weakly typed query scenarios.","pos":[0,38]}]}],"pos":[1128,1167],"yaml":true},{"content":"For more information about methods, see <xref:System.Data.Linq.Table%601>.","nodes":[{"pos":[0,74],"content":"For more information about methods, see <xref:System.Data.Linq.Table%601>.","nodes":[{"content":"For more information about methods, see <ph id=\"ph1\">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.","pos":[0,74],"source":"For more information about methods, see <xref:System.Data.Linq.Table%601>."}]}],"pos":[1178,1253],"yaml":true,"extradata":"MT"},{"content":"Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in an unmodified state.","nodes":[{"pos":[0,99],"content":"Attaches an entity to the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> in an unmodified state.","source":"Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in an unmodified state."}],"pos":[2849,2949],"yaml":true},{"content":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).","nodes":[{"pos":[0,227],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.","source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)."}],"pos":[2960,3188],"yaml":true,"extradata":"MT"},{"content":"The entity to be attached.","nodes":[{"pos":[0,26],"content":"The entity to be attached.","nodes":[{"content":"The entity to be attached.","pos":[0,26]}]}],"pos":[3325,3352],"yaml":true},{"content":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.","nodes":[{"pos":[0,136],"content":"Attaches all entities of a collection to the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.","source":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state."}],"pos":[4430,4567],"yaml":true},{"content":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).","nodes":[{"pos":[0,227],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.","source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)."}],"pos":[4578,4806],"yaml":true,"extradata":"MT"},{"content":"The collection of entities.","nodes":[{"pos":[0,27],"content":"The collection of entities.","nodes":[{"content":"The collection of entities.","pos":[0,27]}]}],"pos":[4960,4988],"yaml":true},{"content":"`true` to attach the entities as modified.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">`true`</ph> to attach the entities as modified.","source":"`true` to attach the entities as modified."}],"pos":[5055,5100],"yaml":true},{"content":"Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state by specifying both the entity and its original state.","nodes":[{"pos":[0,170],"content":"Attaches an entity to the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.","source":"Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state by specifying both the entity and its original state."}],"pos":[6172,6343],"yaml":true},{"content":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).","nodes":[{"pos":[0,227],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.","source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)."}],"pos":[6354,6582],"yaml":true,"extradata":"MT"},{"content":"The entity to be attached.","nodes":[{"pos":[0,26],"content":"The entity to be attached.","nodes":[{"content":"The entity to be attached.","pos":[0,26]}]}],"pos":[6736,6763],"yaml":true},{"content":"An instance of the same entity type with data members that contain the original values.","nodes":[{"pos":[0,87],"content":"An instance of the same entity type with data members that contain the original values.","nodes":[{"content":"An instance of the same entity type with data members that contain the original values.","pos":[0,87]}]}],"pos":[6827,6915],"yaml":true},{"content":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.","nodes":[{"pos":[0,136],"content":"Attaches all entities of a collection to the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.","source":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state."}],"pos":[8005,8142],"yaml":true},{"content":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).","nodes":[{"pos":[0,227],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.","source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)."}],"pos":[8153,8381],"yaml":true,"extradata":"MT"},{"content":"The collection of entities.","nodes":[{"pos":[0,27],"content":"The collection of entities.","nodes":[{"content":"The collection of entities.","pos":[0,27]}]}],"pos":[8566,8594],"yaml":true},{"content":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.","nodes":[{"pos":[0,136],"content":"Attaches all entities of a collection to the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.","source":"Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state."}],"pos":[9759,9896],"yaml":true},{"content":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).","nodes":[{"pos":[0,227],"content":"For more information about how to use this method, see <bpt id=\"p1\">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id=\"p1\">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.","source":"For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)."}],"pos":[9907,10135],"yaml":true,"extradata":"MT"},{"content":"The collection of entities.","nodes":[{"pos":[0,27],"content":"The collection of entities.","nodes":[{"content":"The collection of entities.","pos":[0,27]}]}],"pos":[10337,10365],"yaml":true},{"content":"`true` to attach the entities as modified.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">`true`</ph> to attach the entities as modified.","source":"`true` to attach the entities as modified."}],"pos":[10432,10477],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> that has been used to retrieve this <xref href=\"System.Data.Linq.ITable\"></xref>.","nodes":[{"pos":[0,140],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> that has been used to retrieve this <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.ITable\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> that has been used to retrieve this <xref href=\"System.Data.Linq.ITable\"></xref>."}],"pos":[11425,11566],"yaml":true},{"content":"The <xref href=\"System.Data.Linq.DataContext\"></xref> used to retrieve the <xref href=\"System.Data.Linq.ITable\"></xref>.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> used to retrieve the <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.ITable\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Data.Linq.DataContext\"></xref> used to retrieve the <xref href=\"System.Data.Linq.ITable\"></xref>."}],"pos":[11714,11835],"yaml":true},{"content":"Puts all entities from the collection into a `pending delete` state.","nodes":[{"pos":[0,68],"content":"Puts all entities from the collection into a <ph id=\"ph1\">`pending delete`</ph> state.","source":"Puts all entities from the collection into a `pending delete` state."}],"pos":[12974,13043],"yaml":true},{"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","nodes":[{"pos":[0,105],"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> to perform the actual deletion in the database.","pos":[0,105],"source":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database."}]}],"pos":[13054,13160],"yaml":true,"extradata":"MT"},{"content":"The collection from which all items are removed.","nodes":[{"pos":[0,48],"content":"The collection from which all items are removed.","nodes":[{"content":"The collection from which all items are removed.","pos":[0,48]}]}],"pos":[13353,13402],"yaml":true},{"content":"Puts an entity from this table into a `pending delete` state.","nodes":[{"pos":[0,61],"content":"Puts an entity from this table into a <ph id=\"ph1\">`pending delete`</ph> state.","source":"Puts an entity from this table into a `pending delete` state."}],"pos":[14467,14529],"yaml":true},{"content":"Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","nodes":[{"pos":[0,172],"content":"Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","nodes":[{"content":"Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.","pos":[0,172],"nodes":[{"content":"Disconnected entities must be attached before they can be deleted.","pos":[0,66]},{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> to perform the actual deletion in the database.","pos":[67,172],"source":" Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database."}]}]}],"pos":[14540,14713],"yaml":true,"extradata":"MT"},{"content":"The entity to be removed.","nodes":[{"pos":[0,25],"content":"The entity to be removed.","nodes":[{"content":"The entity to be removed.","pos":[0,25]}]}],"pos":[14858,14884],"yaml":true},{"content":"Returns an array of modified members that contain their current and original values.","nodes":[{"pos":[0,84],"content":"Returns an array of modified members that contain their current and original values.","nodes":[{"content":"Returns an array of modified members that contain their current and original values.","pos":[0,84]}]}],"pos":[15970,16055],"yaml":true},{"content":"The entity from which to get the array.","nodes":[{"pos":[0,39],"content":"The entity from which to get the array.","nodes":[{"content":"The entity from which to get the array.","pos":[0,39]}]}],"pos":[16237,16277],"yaml":true},{"content":"Retrieves original values.","nodes":[{"pos":[0,26],"content":"Retrieves original values.","nodes":[{"content":"Retrieves original values.","pos":[0,26]}]}],"pos":[17475,17502],"yaml":true},{"content":"Note the following:  \n  \n-   The entity argument must be non-null. Otherwise, a null argument exception is thrown.  \n  \n-   In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type. That is, it must have object ID information in its mapping. Otherwise, a wrong type exception is thrown.","nodes":[{"pos":[0,19],"content":"Note the following:","nodes":[{"content":"Note the following:","pos":[0,19]}]},{"pos":[29,114],"content":"The entity argument must be non-null. Otherwise, a null argument exception is thrown.","nodes":[{"content":"The entity argument must be non-null. Otherwise, a null argument exception is thrown.","pos":[0,85],"nodes":[{"content":"The entity argument must be non-null.","pos":[0,37]},{"content":"Otherwise, a null argument exception is thrown.","pos":[38,85]}]}]},{"pos":[124,334],"content":"In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type. That is, it must have object ID information in its mapping. Otherwise, a wrong type exception is thrown.","nodes":[{"content":"In the case of the strongly typed (<ph id=\"ph1\">`TEntity`</ph>) method, the type must be mapped and must be an entity type.","pos":[0,105],"source":"In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type."},{"content":"That is, it must have object ID information in its mapping.","pos":[106,165]},{"content":"Otherwise, a wrong type exception is thrown.","pos":[166,210]}]}],"pos":[17513,17854],"yaml":true,"extradata":"MT"},{"content":"The entity whose original value is to be retrieved.","nodes":[{"pos":[0,51],"content":"The entity whose original value is to be retrieved.","nodes":[{"content":"The entity whose original value is to be retrieved.","pos":[0,51]}]}],"pos":[18009,18061],"yaml":true},{"content":"A copy of the original entity. The value is null if the entity passed in is not tracked. Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state. The \"original state\" of a newly attached entity is established based on values supplied by the client. The data context does not track the state of disconnected entities.","nodes":[{"pos":[0,413],"content":"A copy of the original entity. The value is null if the entity passed in is not tracked. Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state. The \"original state\" of a newly attached entity is established based on values supplied by the client. The data context does not track the state of disconnected entities.","nodes":[{"content":"A copy of the original entity.","pos":[0,30]},{"content":"The value is null if the entity passed in is not tracked.","pos":[31,88]},{"content":"Disconnected entities sent back by a client must be attached before the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> can begin to track their state.","pos":[89,242],"source":" Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state."},{"content":"The \"original state\" of a newly attached entity is established based on values supplied by the client.","pos":[243,345]},{"content":"The data context does not track the state of disconnected entities.","pos":[346,413]}]}],"pos":[18118,18532],"yaml":true},{"content":"Adds all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in a `pending insert` state.","nodes":[{"pos":[0,119],"content":"Adds all entities of a collection to the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> in a <ph id=\"ph2\">`pending insert`</ph> state.","source":"Adds all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in a `pending insert` state."}],"pos":[19686,19806],"yaml":true},{"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.","nodes":[{"pos":[0,108],"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> to perform the actual insertion into the database.","pos":[0,108],"source":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database."}]}],"pos":[19817,19926],"yaml":true,"extradata":"MT"},{"content":"The entities to add.","nodes":[{"pos":[0,20],"content":"The entities to add.","nodes":[{"content":"The entities to add.","pos":[0,20]}]}],"pos":[20119,20140],"yaml":true},{"content":"Adds an entity in a `pending insert` state to this table.","nodes":[{"pos":[0,57],"content":"Adds an entity in a <ph id=\"ph1\">`pending insert`</ph> state to this table.","source":"Adds an entity in a `pending insert` state to this table."}],"pos":[21205,21263],"yaml":true},{"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.","nodes":[{"pos":[0,108],"content":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> to perform the actual insertion into the database.","pos":[0,108],"source":"Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database."}]}],"pos":[21274,21383],"yaml":true,"extradata":"MT"},{"content":"The entity to be added.","nodes":[{"pos":[0,23],"content":"The entity to be added.","nodes":[{"content":"The entity to be added.","pos":[0,23]}]}],"pos":[21528,21552],"yaml":true},{"content":"Indicates if the type of the entities contained in this <xref href=\"System.Data.Linq.ITable\"></xref> instance has a primary key.","nodes":[{"pos":[0,128],"content":"Indicates if the type of the entities contained in this <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.ITable\"&gt;&lt;/xref&gt;</ph> instance has a primary key.","source":"Indicates if the type of the entities contained in this <xref href=\"System.Data.Linq.ITable\"></xref> instance has a primary key."}],"pos":[22523,22652],"yaml":true},{"content":"Returns `true` if the entity type does not have a primary key; otherwise, false.","nodes":[{"pos":[0,80],"content":"Returns <ph id=\"ph1\">`true`</ph> if the entity type does not have a primary key; otherwise, false.","source":"Returns `true` if the entity type does not have a primary key; otherwise, false."}],"pos":[22765,22846],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.ITable\n  commentId: T:System.Data.Linq.ITable\n  id: ITable\n  children:\n  - System.Data.Linq.ITable.Attach(System.Object)\n  - System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  - System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  - System.Data.Linq.ITable.Context\n  - System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  - System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  - System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  - System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  - System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  - System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  - System.Data.Linq.ITable.IsReadOnly\n  langs:\n  - csharp\n  name: ITable\n  nameWithType: ITable\n  fullName: System.Data.Linq.ITable\n  type: Interface\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Used for weakly typed query scenarios.\n  remarks: For more information about methods, see <xref:System.Data.Linq.Table%601>.\n  syntax:\n    content: 'public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable'\n  derivedClasses:\n  - System.Data.Linq.Table`1\n  implements:\n  - System.Collections.IEnumerable\n  - System.Linq.IQueryable\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\n  - System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.Attach(System.Object)\n  commentId: M:System.Data.Linq.ITable.Attach(System.Object)\n  id: Attach(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Attach(Object)\n  nameWithType: ITable.Attach(Object)\n  fullName: ITable.Attach(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in an unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).\n  syntax:\n    content: public void Attach (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be attached.\n  overload: System.Data.Linq.ITable.Attach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  commentId: M:System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  id: Attach(System.Object,System.Boolean)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Attach(Object, Boolean)\n  nameWithType: ITable.Attach(Object, Boolean)\n  fullName: ITable.Attach(Object, Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).\n  syntax:\n    content: public void Attach (object entity, bool asModified);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The collection of entities.\n    - id: asModified\n      type: System.Boolean\n      description: '`true` to attach the entities as modified.'\n  overload: System.Data.Linq.ITable.Attach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  commentId: M:System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  id: Attach(System.Object,System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Attach(Object, Object)\n  nameWithType: ITable.Attach(Object, Object)\n  fullName: ITable.Attach(Object, Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches an entity to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state by specifying both the entity and its original state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).\n  syntax:\n    content: public void Attach (object entity, object original);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be attached.\n    - id: original\n      type: System.Object\n      description: An instance of the same entity type with data members that contain the original values.\n  overload: System.Data.Linq.ITable.Attach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  commentId: M:System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  id: AttachAll(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: AttachAll(IEnumerable)\n  nameWithType: ITable.AttachAll(IEnumerable)\n  fullName: ITable.AttachAll(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).\n  syntax:\n    content: public void AttachAll (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection of entities.\n  overload: System.Data.Linq.ITable.AttachAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  commentId: M:System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  id: AttachAll(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: AttachAll(IEnumerable, Boolean)\n  nameWithType: ITable.AttachAll(IEnumerable, Boolean)\n  fullName: ITable.AttachAll(IEnumerable, Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Attaches all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in either a modified or unmodified state.\n  remarks: For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).\n  syntax:\n    content: public void AttachAll (System.Collections.IEnumerable entities, bool asModified);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection of entities.\n    - id: asModified\n      type: System.Boolean\n      description: '`true` to attach the entities as modified.'\n  overload: System.Data.Linq.ITable.AttachAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.Context\n  commentId: P:System.Data.Linq.ITable.Context\n  id: Context\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: Context\n  nameWithType: ITable.Context\n  fullName: ITable.Context\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> that has been used to retrieve this <xref href=\"System.Data.Linq.ITable\"></xref>.\n  syntax:\n    content: public System.Data.Linq.DataContext Context { get; }\n    return:\n      type: System.Data.Linq.DataContext\n      description: The <xref href=\"System.Data.Linq.DataContext\"></xref> used to retrieve the <xref href=\"System.Data.Linq.ITable\"></xref>.\n  overload: System.Data.Linq.ITable.Context*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  commentId: M:System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  id: DeleteAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: DeleteAllOnSubmit(IEnumerable)\n  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)\n  fullName: ITable.DeleteAllOnSubmit(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Puts all entities from the collection into a `pending delete` state.\n  remarks: Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.\n  syntax:\n    content: public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection from which all items are removed.\n  overload: System.Data.Linq.ITable.DeleteAllOnSubmit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  commentId: M:System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  id: DeleteOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: DeleteOnSubmit(Object)\n  nameWithType: ITable.DeleteOnSubmit(Object)\n  fullName: ITable.DeleteOnSubmit(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Puts an entity from this table into a `pending delete` state.\n  remarks: Disconnected entities must be attached before they can be deleted. Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.\n  syntax:\n    content: public void DeleteOnSubmit (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be removed.\n  overload: System.Data.Linq.ITable.DeleteOnSubmit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  commentId: M:System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  id: GetModifiedMembers(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: GetModifiedMembers(Object)\n  nameWithType: ITable.GetModifiedMembers(Object)\n  fullName: ITable.GetModifiedMembers(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns an array of modified members that contain their current and original values.\n  syntax:\n    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity from which to get the array.\n    return:\n      type: System.Data.Linq.ModifiedMemberInfo[]\n      description: ''\n  overload: System.Data.Linq.ITable.GetModifiedMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  commentId: M:System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  id: GetOriginalEntityState(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: GetOriginalEntityState(Object)\n  nameWithType: ITable.GetOriginalEntityState(Object)\n  fullName: ITable.GetOriginalEntityState(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Retrieves original values.\n  remarks: \"Note the following:  \\n  \\n-   The entity argument must be non-null. Otherwise, a null argument exception is thrown.  \\n  \\n-   In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type. That is, it must have object ID information in its mapping. Otherwise, a wrong type exception is thrown.\"\n  syntax:\n    content: public object GetOriginalEntityState (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity whose original value is to be retrieved.\n    return:\n      type: System.Object\n      description: A copy of the original entity. The value is null if the entity passed in is not tracked. Disconnected entities sent back by a client must be attached before the <xref href=\"System.Data.Linq.DataContext\"></xref> can begin to track their state. The \"original state\" of a newly attached entity is established based on values supplied by the client. The data context does not track the state of disconnected entities.\n  overload: System.Data.Linq.ITable.GetOriginalEntityState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  commentId: M:System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  id: InsertAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: InsertAllOnSubmit(IEnumerable)\n  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)\n  fullName: ITable.InsertAllOnSubmit(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Adds all entities of a collection to the <xref href=\"System.Data.Linq.DataContext\"></xref> in a `pending insert` state.\n  remarks: Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.\n  syntax:\n    content: public void InsertAllOnSubmit (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The entities to add.\n  overload: System.Data.Linq.ITable.InsertAllOnSubmit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  commentId: M:System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  id: InsertOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: InsertOnSubmit(Object)\n  nameWithType: ITable.InsertOnSubmit(Object)\n  fullName: ITable.InsertOnSubmit(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Adds an entity in a `pending insert` state to this table.\n  remarks: Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.\n  syntax:\n    content: public void InsertOnSubmit (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be added.\n  overload: System.Data.Linq.ITable.InsertOnSubmit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ITable.IsReadOnly\n  commentId: P:System.Data.Linq.ITable.IsReadOnly\n  id: IsReadOnly\n  parent: System.Data.Linq.ITable\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ITable.IsReadOnly\n  fullName: ITable.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Indicates if the type of the entities contained in this <xref href=\"System.Data.Linq.ITable\"></xref> instance has a primary key.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Returns `true` if the entity type does not have a primary key; otherwise, false.\n  overload: System.Data.Linq.ITable.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Linq.ITable.Attach(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach(Object)\n  nameWithType: ITable.Attach(Object)\n  fullName: ITable.Attach(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach(Object, Boolean)\n  nameWithType: ITable.Attach(Object, Boolean)\n  fullName: ITable.Attach(Object, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach(Object, Object)\n  nameWithType: ITable.Attach(Object, Object)\n  fullName: ITable.Attach(Object, Object)\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: AttachAll(IEnumerable)\n  nameWithType: ITable.AttachAll(IEnumerable)\n  fullName: ITable.AttachAll(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: AttachAll(IEnumerable, Boolean)\n  nameWithType: ITable.AttachAll(IEnumerable, Boolean)\n  fullName: ITable.AttachAll(IEnumerable, Boolean)\n- uid: System.Data.Linq.ITable.Context\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Context\n  nameWithType: ITable.Context\n  fullName: ITable.Context\n- uid: System.Data.Linq.DataContext\n  parent: System.Data.Linq\n  isExternal: false\n  name: DataContext\n  nameWithType: DataContext\n  fullName: System.Data.Linq.DataContext\n- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteAllOnSubmit(IEnumerable)\n  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)\n  fullName: ITable.DeleteAllOnSubmit(IEnumerable)\n- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteOnSubmit(Object)\n  nameWithType: ITable.DeleteOnSubmit(Object)\n  fullName: ITable.DeleteOnSubmit(Object)\n- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetModifiedMembers(Object)\n  nameWithType: ITable.GetModifiedMembers(Object)\n  fullName: ITable.GetModifiedMembers(Object)\n- uid: System.Data.Linq.ModifiedMemberInfo\n  name: ModifiedMemberInfo\n  nameWithType: ModifiedMemberInfo\n  fullName: System.Data.Linq.ModifiedMemberInfo\n- uid: System.Data.Linq.ModifiedMemberInfo[]\n  parent: System.Data.Linq\n  isExternal: false\n  name: ModifiedMemberInfo[]\n  nameWithType: ModifiedMemberInfo[]\n  fullName: System.Data.Linq.ModifiedMemberInfo[]\n  spec.csharp:\n  - uid: System.Data.Linq.ModifiedMemberInfo\n    name: ModifiedMemberInfo\n    nameWithType: ModifiedMemberInfo\n    fullName: System.Data.Linq.ModifiedMemberInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetOriginalEntityState(Object)\n  nameWithType: ITable.GetOriginalEntityState(Object)\n  fullName: ITable.GetOriginalEntityState(Object)\n- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertAllOnSubmit(IEnumerable)\n  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)\n  fullName: ITable.InsertAllOnSubmit(IEnumerable)\n- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertOnSubmit(Object)\n  nameWithType: ITable.InsertOnSubmit(Object)\n  fullName: ITable.InsertOnSubmit(Object)\n- uid: System.Data.Linq.ITable.IsReadOnly\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ITable.IsReadOnly\n  fullName: ITable.IsReadOnly\n- uid: System.Data.Linq.ITable.Attach*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Attach\n  nameWithType: ITable.Attach\n  fullName: ITable.Attach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.AttachAll*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: AttachAll\n  nameWithType: ITable.AttachAll\n  fullName: ITable.AttachAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.Context*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: Context\n  nameWithType: ITable.Context\n  fullName: ITable.Context\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.DeleteAllOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteAllOnSubmit\n  nameWithType: ITable.DeleteAllOnSubmit\n  fullName: ITable.DeleteAllOnSubmit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.DeleteOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: DeleteOnSubmit\n  nameWithType: ITable.DeleteOnSubmit\n  fullName: ITable.DeleteOnSubmit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.GetModifiedMembers*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetModifiedMembers\n  nameWithType: ITable.GetModifiedMembers\n  fullName: ITable.GetModifiedMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.GetOriginalEntityState*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: GetOriginalEntityState\n  nameWithType: ITable.GetOriginalEntityState\n  fullName: ITable.GetOriginalEntityState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.InsertAllOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertAllOnSubmit\n  nameWithType: ITable.InsertAllOnSubmit\n  fullName: ITable.InsertAllOnSubmit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.InsertOnSubmit*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: InsertOnSubmit\n  nameWithType: ITable.InsertOnSubmit\n  fullName: ITable.InsertOnSubmit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Data.Linq.ITable.IsReadOnly*\n  parent: System.Data.Linq.ITable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ITable.IsReadOnly\n  fullName: ITable.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ITable.xml\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Cast<TResult>(IQueryable)\n  nameWithType: Queryable.Cast<TResult>(IQueryable)\n  fullName: Queryable.Cast<TResult>(IQueryable)\n- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OfType<TResult>(IQueryable)\n  nameWithType: Queryable.OfType<TResult>(IQueryable)\n  fullName: Queryable.OfType<TResult>(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n"}