{"nodes":[{"content":"Defines the type of events that are logged in an event log. Each log can only contain one type of event.","nodes":[{"pos":[0,104],"content":"Defines the type of events that are logged in an event log. Each log can only contain one type of event.","nodes":[{"content":"Defines the type of events that are logged in an event log. Each log can only contain one type of event.","pos":[0,104],"nodes":[{"content":"Defines the type of events that are logged in an event log.","pos":[0,59]},{"content":"Each log can only contain one type of event.","pos":[60,104]}]}]}],"pos":[669,774],"yaml":true},{"content":"These events are primarily for end users, administrators, and support. The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on. An example of an administrative event is an event that occurs when an application fails to connect to a printer.","nodes":[{"pos":[0,322],"content":"These events are primarily for end users, administrators, and support. The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on. An example of an administrative event is an event that occurs when an application fails to connect to a printer.","nodes":[{"content":"These events are primarily for end users, administrators, and support. The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on. An example of an administrative event is an event that occurs when an application fails to connect to a printer.","pos":[0,322],"nodes":[{"content":"These events are primarily for end users, administrators, and support.","pos":[0,70]},{"content":"The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on.","pos":[71,209]},{"content":"An example of an administrative event is an event that occurs when an application fails to connect to a printer.","pos":[210,322]}]}]}],"pos":[1877,2200],"yaml":true},{"content":"Events in an analytic event log are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.","nodes":[{"pos":[0,160],"content":"Events in an analytic event log are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.","nodes":[{"content":"Events in an analytic event log are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.","pos":[0,160],"nodes":[{"content":"Events in an analytic event log are published in high volume.","pos":[0,61]},{"content":"They describe program operation and indicate problems that cannot be handled by user intervention.","pos":[62,160]}]}]}],"pos":[3233,3394],"yaml":true},{"content":"Events in a debug type event log are used solely by developers to diagnose a problem for debugging.","nodes":[{"pos":[0,99],"content":"Events in a debug type event log are used solely by developers to diagnose a problem for debugging.","nodes":[{"content":"Events in a debug type event log are used solely by developers to diagnose a problem for debugging.","pos":[0,99]}]}],"pos":[4393,4493],"yaml":true},{"content":"Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.","nodes":[{"pos":[0,290],"content":"Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.","nodes":[{"content":"Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.","pos":[0,290],"nodes":[{"content":"Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence.","pos":[0,102]},{"content":"They can be used to trigger tools or tasks based on the problem or occurrence.","pos":[103,181]},{"content":"An example of an operational event is an event that occurs when a printer is added or removed from a system.","pos":[182,290]}]}]}],"pos":[5523,5814],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogType\n  commentId: T:System.Diagnostics.Eventing.Reader.EventLogType\n  id: EventLogType\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogType.Administrative\n  - System.Diagnostics.Eventing.Reader.EventLogType.Analytical\n  - System.Diagnostics.Eventing.Reader.EventLogType.Debug\n  - System.Diagnostics.Eventing.Reader.EventLogType.Operational\n  langs:\n  - csharp\n  name: EventLogType\n  nameWithType: EventLogType\n  fullName: System.Diagnostics.Eventing.Reader.EventLogType\n  type: Enum\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Defines the type of events that are logged in an event log. Each log can only contain one type of event.\n  syntax:\n    content: public enum EventLogType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogType.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Administrative\n  commentId: F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative\n  id: Administrative\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  langs:\n  - csharp\n  name: Administrative\n  nameWithType: EventLogType.Administrative\n  fullName: EventLogType.Administrative\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: These events are primarily for end users, administrators, and support. The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on. An example of an administrative event is an event that occurs when an application fails to connect to a printer.\n  syntax:\n    content: Administrative\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogType.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Analytical\n  commentId: F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical\n  id: Analytical\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  langs:\n  - csharp\n  name: Analytical\n  nameWithType: EventLogType.Analytical\n  fullName: EventLogType.Analytical\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Events in an analytic event log are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.\n  syntax:\n    content: Analytical\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogType.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Debug\n  commentId: F:System.Diagnostics.Eventing.Reader.EventLogType.Debug\n  id: Debug\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  langs:\n  - csharp\n  name: Debug\n  nameWithType: EventLogType.Debug\n  fullName: EventLogType.Debug\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Events in a debug type event log are used solely by developers to diagnose a problem for debugging.\n  syntax:\n    content: Debug\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogType.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Operational\n  commentId: F:System.Diagnostics.Eventing.Reader.EventLogType.Operational\n  id: Operational\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  langs:\n  - csharp\n  name: Operational\n  nameWithType: EventLogType.Operational\n  fullName: EventLogType.Operational\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.\n  syntax:\n    content: Operational\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Administrative\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  isExternal: false\n  name: Administrative\n  nameWithType: EventLogType.Administrative\n  fullName: EventLogType.Administrative\n- uid: System.Diagnostics.Eventing.Reader.EventLogType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogType\n  nameWithType: EventLogType\n  fullName: System.Diagnostics.Eventing.Reader.EventLogType\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Analytical\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  isExternal: false\n  name: Analytical\n  nameWithType: EventLogType.Analytical\n  fullName: EventLogType.Analytical\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Debug\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  isExternal: false\n  name: Debug\n  nameWithType: EventLogType.Debug\n  fullName: EventLogType.Debug\n- uid: System.Diagnostics.Eventing.Reader.EventLogType.Operational\n  parent: System.Diagnostics.Eventing.Reader.EventLogType\n  isExternal: false\n  name: Operational\n  nameWithType: EventLogType.Operational\n  fullName: EventLogType.Operational\n"}