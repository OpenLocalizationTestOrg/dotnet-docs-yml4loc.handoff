{"nodes":[{"content":"Represents an access rule for a cryptographic key. An access rule represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An access rule object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.","nodes":[{"pos":[0,313],"content":"Represents an access rule for a cryptographic key. An access rule represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An access rule object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.","nodes":[{"content":"Represents an access rule for a cryptographic key. An access rule represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An access rule object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.","pos":[0,313],"nodes":[{"content":"Represents an access rule for a cryptographic key.","pos":[0,50]},{"content":"An access rule represents a combination of a user's identity, an access mask, and an access control type (allow or deny).","pos":[51,172]},{"content":"An access rule object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.","pos":[173,313]}]}]}],"pos":[875,1189],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"></xref> class using the specified values.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"&gt;&lt;/xref&gt;</ph> class using the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"></xref> class using the specified values."}],"pos":[3854,3993],"yaml":true},{"content":"The identity to which the access rule applies. This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,168],"content":"The identity to which the access rule applies. This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"This parameter must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[47,168],"source":" This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[4326,4495],"yaml":true},{"content":"The cryptographic key operation to which this access rule controls access.","nodes":[{"pos":[0,74],"content":"The cryptographic key operation to which this access rule controls access.","nodes":[{"content":"The cryptographic key operation to which this access rule controls access.","pos":[0,74]}]}],"pos":[4598,4673],"yaml":true},{"content":"The valid access control type.","nodes":[{"pos":[0,30],"content":"The valid access control type.","nodes":[{"content":"The valid access control type.","pos":[0,30]}]}],"pos":[4767,4798],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"></xref> class using the specified values.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"&gt;&lt;/xref&gt;</ph> class using the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"></xref> class using the specified values."}],"pos":[6479,6618],"yaml":true},{"content":"The identity to which the access rule applies.","nodes":[{"pos":[0,46],"content":"The identity to which the access rule applies.","nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]}]}],"pos":[6884,6931],"yaml":true},{"content":"The cryptographic key operation to which this access rule controls access.","nodes":[{"pos":[0,74],"content":"The cryptographic key operation to which this access rule controls access.","nodes":[{"content":"The cryptographic key operation to which this access rule controls access.","pos":[0,74]}]}],"pos":[7034,7109],"yaml":true},{"content":"The valid access control type.","nodes":[{"pos":[0,30],"content":"The valid access control type.","nodes":[{"content":"The valid access control type.","pos":[0,30]}]}],"pos":[7203,7234],"yaml":true},{"content":"Gets the cryptographic key operation to which this access rule controls access.","nodes":[{"pos":[0,79],"content":"Gets the cryptographic key operation to which this access rule controls access.","nodes":[{"content":"Gets the cryptographic key operation to which this access rule controls access.","pos":[0,79]}]}],"pos":[8469,8549],"yaml":true},{"content":"The cryptographic key operation to which this access rule controls access.","nodes":[{"pos":[0,74],"content":"The cryptographic key operation to which this access rule controls access.","nodes":[{"content":"The cryptographic key operation to which this access rule controls access.","pos":[0,74]}]}],"pos":[8739,8814],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  commentId: T:System.Security.AccessControl.CryptoKeyAccessRule\n  id: CryptoKeyAccessRule\n  children:\n  - System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  langs:\n  - csharp\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents an access rule for a cryptographic key. An access rule represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An access rule object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.\n  syntax:\n    content: 'public sealed class CryptoKeyAccessRule : System.Security.AccessControl.AccessRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeyAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  langs:\n  - csharp\n  name: CryptoKeyAccessRule(IdentityReference, CryptoKeyRights, AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference, CryptoKeyRights, AccessControlType)\n  fullName: CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference, CryptoKeyRights, AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"></xref> class using the specified values.\n  syntax:\n    content: public CryptoKeyAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.CryptoKeyRights cryptoKeyRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies. This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: cryptoKeyRights\n      type: System.Security.AccessControl.CryptoKeyRights\n      description: The cryptographic key operation to which this access rule controls access.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: The valid access control type.\n  overload: System.Security.AccessControl.CryptoKeyAccessRule.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeyAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  langs:\n  - csharp\n  name: CryptoKeyAccessRule(String, CryptoKeyRights, AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(String, CryptoKeyRights, AccessControlType)\n  fullName: CryptoKeyAccessRule.CryptoKeyAccessRule(String, CryptoKeyRights, AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeyAccessRule\"></xref> class using the specified values.\n  syntax:\n    content: public CryptoKeyAccessRule (string identity, System.Security.AccessControl.CryptoKeyRights cryptoKeyRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: The identity to which the access rule applies.\n    - id: cryptoKeyRights\n      type: System.Security.AccessControl.CryptoKeyRights\n      description: The cryptographic key operation to which this access rule controls access.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: The valid access control type.\n  overload: System.Security.AccessControl.CryptoKeyAccessRule.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeyAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  commentId: P:System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  id: CryptoKeyRights\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  langs:\n  - csharp\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyAccessRule.CryptoKeyRights\n  fullName: CryptoKeyAccessRule.CryptoKeyRights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the cryptographic key operation to which this access rule controls access.\n  syntax:\n    content: public System.Security.AccessControl.CryptoKeyRights CryptoKeyRights { get; }\n    return:\n      type: System.Security.AccessControl.CryptoKeyRights\n      description: The cryptographic key operation to which this access rule controls access.\n  overload: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeyAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyAccessRule(IdentityReference, CryptoKeyRights, AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference, CryptoKeyRights, AccessControlType)\n  fullName: CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference, CryptoKeyRights, AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.CryptoKeyRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyRights\n  fullName: System.Security.AccessControl.CryptoKeyRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyAccessRule(String, CryptoKeyRights, AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(String, CryptoKeyRights, AccessControlType)\n  fullName: CryptoKeyAccessRule.CryptoKeyAccessRule(String, CryptoKeyRights, AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyAccessRule.CryptoKeyRights\n  fullName: CryptoKeyAccessRule.CryptoKeyRights\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor*\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule\n  fullName: CryptoKeyAccessRule.CryptoKeyAccessRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeyAccessRule.xml\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights*\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyAccessRule.CryptoKeyRights\n  fullName: CryptoKeyAccessRule.CryptoKeyRights\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeyAccessRule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n- uid: System.Security.AccessControl.AccessRule.AccessControlType\n  parent: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessRule.AccessControlType\n  fullName: AccessRule.AccessControlType\n"}