### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.SqlProfileProvider
  commentId: T:System.Web.Profile.SqlProfileProvider
  id: SqlProfileProvider
  children:
  - System.Web.Profile.SqlProfileProvider.#ctor
  - System.Web.Profile.SqlProfileProvider.ApplicationName
  - System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])
  - System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  langs:
  - csharp
  name: SqlProfileProvider
  nameWithType: SqlProfileProvider
  fullName: System.Web.Profile.SqlProfileProvider
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Manages storage of profile information for an ASP.NET application in a SQL Server database.
  remarks: "The ASP.NET profile is used to store and retrieve user settings in a data source such as a database. The user profile is accessed using the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>. Profile information and property values are managed using a profile provider.  \n  \n The <xref:System.Web.Profile.SqlProfileProvider> class is used by ASP.NET to store and retrieve profile settings for an ASP.NET application that is using a SQL Server database. To use a <xref:System.Web.Profile.SqlProfileProvider>, you must first create the SQL Server database used by the <xref:System.Web.Profile.SqlProfileProvider>. To create the database used by the <xref:System.Web.Profile.SqlProfileProvider>, run the aspnet_regsql.exe tool, which is found in the [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\`2.0versionNumber` folder, and specify the **-A p** option. The following command demonstrates how you might use the aspnet_regsql.exe executable:  \n  \n```  \naspnet_regsql.exe -A p  \n```  \n  \n The example above does not specify a name for the database that is created, so the default name will be used. The default database name is Aspnetdb.  \n  \n The machine configuration contains a default <xref:System.Web.Profile.SqlProfileProvider> instance named AspNetSqlProvider that connects to the SQL Server on the local machine. You can use this instance of the provider, or specify your own in the Web.config file for your ASP.NET application.  \n  \n> [!NOTE]\n>  If the profile provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application configured to use a <xref:System.Web.Profile.SqlProfileProvider>.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=  \n      \"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\"   \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear/>  \n        <add name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"SampleApplication\"  \n          enablePasswordRetrieval=\"true\"  \n          enablePasswordReset=\"true\"  \n          passwordFormat=\"Encrypted\"  \n          requiresQuestionAndAnswer=\"true\" />  \n      </providers>  \n    </membership>  \n  \n    <profile defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <clear />  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Profile.SqlProfileProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"SampleApplication\"  \n          description=\"SqlProfileProvider for SampleApplication\" />  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <add name=\"CityAndState\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlProfileProvider : System.Web.Profile.ProfileProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  - System.Web.Profile.ProfileProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.#ctor
  commentId: M:System.Web.Profile.SqlProfileProvider.#ctor
  id: '#ctor'
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: SqlProfileProvider()
  nameWithType: SqlProfileProvider.SqlProfileProvider()
  fullName: SqlProfileProvider.SqlProfileProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Creates an instance of the <xref href="System.Web.Profile.SqlProfileProvider"></xref> class.
  remarks: ASP.NET calls the <xref:System.Web.Profile.SqlProfileProvider.%23ctor%2A> constructor to create an instance of the <xref:System.Web.Profile.SqlProfileProvider> class using the values specified in the configuration file for the application. This constructor is not intended to be used from your code.
  syntax:
    content: public SqlProfileProvider ();
    parameters: []
  overload: System.Web.Profile.SqlProfileProvider.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.ApplicationName
  commentId: P:System.Web.Profile.SqlProfileProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlProfileProvider.ApplicationName
  fullName: SqlProfileProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Gets or sets the name of the application for which to store and retrieve profile information.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property is used by the <xref:System.Web.Profile.SqlProfileProvider> to associate profile information with different applications. This enables multiple applications to use the same database to store user information without running into conflicts between duplicate users. Multiple ASP.NET applications can use the same user database by specifying the same value in the <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property. The <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property can be set programmatically, or it can be set declaratively in the configuration file for the Web application using the `applicationName` attribute.  \n  \n If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> value is used for ASP.NET applications. For non-ASP.NET applications, the default value is the <xref:System.Diagnostics.ProcessModule.ModuleName%2A> value without the file extension.  \n  \n> [!CAUTION]\n>  Because a single default profile provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property value. The <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property is not thread safe for multiple writes, and changing the <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property value can result in unexpected behavior for multiple users of an application. It is recommended that you avoid writing code that allows users to set the <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property unless you must. An example of an application where setting the <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property may be required is an administrative application that manages profile data for multiple applications. Such an application should be a single-user application and not a Web application."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Profile.SqlProfileProvider> instance and sets the <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> property value to `MyApplication`.  \n  \n```  \n<profile defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n   </providers>  \n</profile>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: The name of the application for which to store and retrieve profile information. The default is the <xref href="System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath"></xref> value.
  overload: System.Web.Profile.SqlProfileProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: An attempt was made to set the <xref href="System.Web.Profile.SqlProfileProvider.ApplicationName"></xref> property by a caller that does not have <xref href="System.Web.AspNetHostingPermissionLevel.High"></xref> ASP.NET hosting permission.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: An attempt was made to set the <xref href="System.Web.Profile.SqlProfileProvider.ApplicationName"></xref> property to a string that is longer than 256 characters.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  commentId: M:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption, DateTime)
  nameWithType: SqlProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption, DateTime)
  fullName: SqlProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption, DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Deletes user profile data for profiles in which the last activity date occurred before the specified date and time.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> method is used to remove unused profile data from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is deleted.  \n  \n The database updates that are performed during the call to the <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> method are made within a transaction. If an error is encountered, the transaction is rolled back and no updates are performed."
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have not been accessed since the date specified for considering a profile to be inactive.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  -->"
  syntax:
    content: public override int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: One of the <xref href="System.Web.Profile.ProfileAuthenticationOption"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are deleted.
    - id: userInactiveSinceDate
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> that identifies which user profiles are considered inactive. If the <xref href="System.Web.Profile.ProfileInfo.LastActivityDate"></xref> of a user profile occurs on or before this date and time, the profile is considered inactive.
    return:
      type: System.Int32
      description: The number of profiles deleted from the data source.
  overload: System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])
  commentId: M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: SqlProfileProvider.DeleteProfiles(String[])
  fullName: SqlProfileProvider.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Deletes profile properties and information from the data source for the supplied list of user names.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method deletes all profile information and properties for the specified profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. The list of profiles to delete is specified as a string array of user names. If profile properties and information exist in the data source for a user name in the `usernames` parameter, they are deleted.  \n  \n The return value may differ from the length of the specified array of `usernames`. This indicates that some of the profiles in the specified array of `usernames` were already deleted from the data store.  \n  \n The database updates that are performed during the call to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method are made within a transaction. If an error is encountered, the transaction is rolled back and no updates are performed."
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  -->"
  syntax:
    content: public override int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: A string array of user names for profiles to be deleted.
    return:
      type: System.Int32
      description: The number of profiles deleted from the data source.
  overload: System.Web.Profile.SqlProfileProvider.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The length of <code>usernames</code> is zero.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is an empty string (\"\"), exceeds a length of 256 characters, or contains a comma.  \n  \n \\- or -  \n  \n Two or more items in <code>usernames</code> have the same value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernames</code> is `null`.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  commentId: M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: SqlProfileProvider.DeleteProfiles(ProfileInfoCollection)
  fullName: SqlProfileProvider.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Deletes profile properties and information for the supplied list of profiles from the data source.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method deletes all profile information and properties for the specified profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. The list of profiles to delete is specified using a <xref:System.Web.Profile.ProfileInfoCollection> that is passed as the `profiles` parameter. A <xref:System.Web.Profile.ProfileInfoCollection> can be returned from the <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>, and <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> methods.  \n  \n The return value may differ from the <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> value for the supplied <xref:System.Web.Profile.ProfileInfoCollection>. This indicates that some of the profiles in the specified <xref:System.Web.Profile.ProfileInfoCollection> were no longer found in the data store.  \n  \n The database updates that are performed during the call to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method are made within a transaction. If an error is encountered, the transaction is rolled back and no updates are performed."
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> and <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  -->"
  syntax:
    content: public override int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: A <xref href="System.Web.Profile.ProfileInfoCollection"></xref> that contains profile information for profiles to be deleted.
    return:
      type: System.Int32
      description: The number of profiles deleted from the data source.
  overload: System.Web.Profile.SqlProfileProvider.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>profiles</code> has a <xref href=\"System.Web.Profile.ProfileInfoCollection.Count\"></xref> value of zero.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref href=\"System.Web.Profile.ProfileInfo.UserName\"></xref> that is an empty string (\"\"), exceeds a length of 256 characters, or contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profiles</code> is `null`.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref href=\"System.Web.Profile.ProfileInfo.UserName\"></xref> that is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption, String, DateTime, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption, String, DateTime, Int32, Int32, Int32)
  fullName: SqlProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption, String, DateTime, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Retrieves profile information for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method is used to retrieve profile information for unused user profiles for the application specified by the `applicationName` attribute in the configuration file. This method will only retrieve profiles for which the user name for the profile matches the supplied `usernameToMatch` parameter value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs before the specified `userInactiveSinceDate` parameter value is returned.  \n  \n The <xref:System.Web.Profile.SqlProfileProvider> searches for a match of the `usernameToMatch` parameter value using the `LIKE` keyword and supports wildcard characters, such as the percent (%) sign. For example, if the `usernameToMatch` parameter is set to \"user1\", then profile information for the profile with the user name of \"user1\" is returned, if it exists. If the `usernameToMatch` parameter is set to \"user%\", then profile information for profiles with the user name of \"user1\", \"user2\", \"user_admin\", and so on are returned. Users are returned in the order that their profiles were added to the data store.  \n  \n The results returned by <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles. The `totalRecords` parameter will be set to 13."
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example also allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method is called; otherwise, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method is called.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  -->"
  syntax:
    content: public override System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: One of the <xref href="System.Web.Profile.ProfileAuthenticationOption"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned.
    - id: usernameToMatch
      type: System.String
      description: The user name for which to search.
    - id: userInactiveSinceDate
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> that identifies which user profiles are considered inactive. If the <xref href="System.Web.Profile.ProfileInfo.LastActivityDate"></xref> of a user profile occurs on or before this date and time, the profile is considered inactive.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: A <xref href="System.Web.Profile.ProfileInfoCollection"></xref> containing user profile information for inactive profiles where the user name matches the supplied <code>usernameToMatch</code> parameter.
  overload: System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>usernameToMatch</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption, String, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption, String, Int32, Int32, Int32)
  fullName: SqlProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption, String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Retrieves profile information for profiles in which the user name matches the specified name.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method returns a list of profile information for which the user name for the profile matches the supplied `usernameToMatch` parameter value for the configured <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A>. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.  \n  \n The <xref:System.Web.Profile.SqlProfileProvider> searches for a match of the `usernameToMatch` parameter value using the `LIKE` keyword and supports wildcard characters, such as the percent (%) sign. For example, if the `usernameToMatch` parameter is set to \"user1\", then profile information for the profile with the user name of \"user1\" is returned, if it exists. If the `usernameToMatch` parameter is set to \"user%\", then profile information for profiles with the user name of \"user1\", \"user2\", \"user_admin\", and so on are returned. Users are returned in the order that their profiles were added to the data store.  \n  \n The results returned by <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the application specified by the `applicationName` attribute in the configuration file, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles. The `totalRecords` parameter will be set to 13."
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example also allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method is called; otherwise, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method is called.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  -->"
  syntax:
    content: public override System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: One of the <xref href="System.Web.Profile.ProfileAuthenticationOption"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned.
    - id: usernameToMatch
      type: System.String
      description: The user name for which to search.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: A <xref href="System.Web.Profile.ProfileInfoCollection"></xref> containing user profile information for profiles where the user name matches the supplied <code>usernameToMatch</code> parameter.
  overload: System.Web.Profile.SqlProfileProvider.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>usernameToMatch</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption, DateTime, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption, DateTime, Int32, Int32, Int32)
  fullName: SqlProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption, DateTime, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Retrieves user profile data for profiles in which the last activity date occurred on or before the specified date and time.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> method is used to retrieve profile information from the data source for unused user profiles for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs before the specified `userInactiveSinceDate` parameter value is returned.  \n  \n The results returned by <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles. The `totalRecords` parameter will be set to 13."
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  -->"
  syntax:
    content: public override System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: One of the <xref href="System.Web.Profile.ProfileAuthenticationOption"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned.
    - id: userInactiveSinceDate
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> that identifies which user profiles are considered inactive. If the <xref href="System.Web.Profile.ProfileInfo.LastActivityDate"></xref> of a user profile occurs on or before this date and time, the profile is considered inactive.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: A <xref href="System.Web.Profile.ProfileInfoCollection"></xref> containing user profile information about the inactive profiles.
  overload: System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.GetAllProfiles(ProfileAuthenticationOption, Int32, Int32, Int32)
  fullName: SqlProfileProvider.GetAllProfiles(ProfileAuthenticationOption, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Retrieves user profile data for profiles in the data source.
  remarks: "The <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A> method is used to retrieve profile information for profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.  \n  \n The results returned by <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles. The `totalRecords` parameter will be set to 13."
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/ShowProfilescs.aspx#3)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/ShowProfilesvb.aspx#3)]  -->"
  syntax:
    content: public override System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: One of the <xref href="System.Web.Profile.ProfileAuthenticationOption"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: A <xref href="System.Web.Profile.ProfileInfoCollection"></xref> containing user profile information for all of the profiles in the data source.
  overload: System.Web.Profile.SqlProfileProvider.GetAllProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  commentId: M:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption, DateTime)
  nameWithType: SqlProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption, DateTime)
  fullName: SqlProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption, DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Gets the number of profiles in the data source where the last activity date occurred on or before the specified <code>userInactiveSinceDate</code>.
  remarks: The <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> method is used to retrieve a count of all of the unused user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, all profiles with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value are counted.
  example:
  - "The following code example allows a user to view and delete active and inactive profiles information based on search criteria. A count of inactive profiles is displayed using the results of the <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  -->"
  syntax:
    content: public override int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: One of the <xref href="System.Web.Profile.ProfileAuthenticationOption"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned.
    - id: userInactiveSinceDate
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> that identifies which user profiles are considered inactive. If the <xref href="System.Web.Profile.ProfileInfo.LastActivityDate"></xref> of a user profile occurs on or before this date and time, the profile is considered inactive.
    return:
      type: System.Int32
      description: The number of profiles in the data source for which the last activity date occurred before the specified date and time.
  overload: System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  commentId: M:System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext, SettingsPropertyCollection)
  nameWithType: SqlProfileProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)
  fullName: SqlProfileProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Retrieves profile property information and values from a SQL Server profile database.
  remarks: The <xref:System.Web.Profile.SqlProfileProvider.GetPropertyValues%2A> method is used by the <xref:System.Web.Profile.ProfileBase> class to retrieve profile properties for the current request that are managed by the <xref:System.Web.Profile.SqlProfileProvider>. Property values are returned from the data source for the application specified by the `applicationName` attribute in the configuration file. Property values and additional property information are returned as a collection of <xref:System.Configuration.SettingsPropertyValue> objects.
  example:
  - "The following code example lists the profile properties and values identified in the current profile.  \n  \n [!code-csharp[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/getpropertyvaluescs.aspx#1)]\n [!code-vb[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/getpropertyvaluesvb.aspx#1)]"
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: sc
      type: System.Configuration.SettingsContext
      description: The <xref href="System.Configuration.SettingsContext"></xref> that contains user profile information.
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: A <xref href="System.Configuration.SettingsPropertyCollection"></xref> containing profile information for the properties to be retrieved.
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: A <xref href="System.Configuration.SettingsPropertyValueCollection"></xref> containing profile property information and values.
  overload: System.Web.Profile.SqlProfileProvider.GetPropertyValues*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: Initialize(String, NameValueCollection)
  nameWithType: SqlProfileProvider.Initialize(String, NameValueCollection)
  fullName: SqlProfileProvider.Initialize(String, NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Initializes the SQL Server profile provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.
  remarks: ASP.NET uses this method to initialize the <xref:System.Web.Profile.SqlProfileProvider> with the property values specified in the ASP.NET application configuration file (Web.config). This method is not intended to be used directly from your code.
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: The name of the <xref href="System.Web.Profile.SqlProfileProvider"></xref> instance to initialize.
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: A <xref href="System.Collections.Specialized.NameValueCollection"></xref> that contains the names and values of configuration options for the profile provider.
  overload: System.Web.Profile.SqlProfileProvider.Initialize*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The `connectionStringName` attribute is an empty string (\"\") or is not specified in the application configuration file for this <xref href=\"System.Web.Profile.SqlProfileProvider\"></xref> instance.  \n  \n \\- or -  \n  \n The value of the connection string specified in the `connectionStringName` attribute value is empty or the specified `connectionStringName` value does not exist in the application configuration file for this <xref href=\"System.Web.Profile.SqlProfileProvider\"></xref> instance.  \n  \n \\- or -  \n  \n The `applicationName` attribute value exceeds 256 characters.  \n  \n \\- or -  \n  \n The application configuration file for this <xref href=\"System.Web.Profile.SqlProfileProvider\"></xref> instance contains an unrecognized attribute."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>config</code> is `null`.
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The current trust level is less than <xref href="System.Web.AspNetHostingPermissionLevel.Low"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  commentId: M:System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Web.Profile.SqlProfileProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)
  nameWithType: SqlProfileProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)
  fullName: SqlProfileProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: Updates the SQL Server profile database with the specified property values.
  remarks: The <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> method is used by ASP.NET profile services to update the SQL Server profile database when property values are set for the current request. Property values are set at the data source for the application specified by the `applicationName` attribute in the configuration file. Profile property information and values to be updated by the <xref:System.Web.Profile.SqlProfileProvider> are specified as a collection of <xref:System.Configuration.SettingsPropertyValue> objects.
  example:
  - "The following code example uses the <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> method to modify profile property values.  \n  \n [!code-csharp[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/setpropertyvaluescs.aspx#2)]\n [!code-vb[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/setpropertyvaluesvb.aspx#2)]"
  syntax:
    content: public override void SetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyValueCollection properties);
    parameters:
    - id: sc
      type: System.Configuration.SettingsContext
      description: The <xref href="System.Configuration.SettingsContext"></xref> that contains user profile information.
    - id: properties
      type: System.Configuration.SettingsPropertyValueCollection
      description: A <xref href="System.Configuration.SettingsPropertyValueCollection"></xref> containing profile information and values for the properties to be updated.
  overload: System.Web.Profile.SqlProfileProvider.SetPropertyValues*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Web.Profile.ProfileProvider
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Web.Profile.SqlProfileProvider.#ctor
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: SqlProfileProvider()
  nameWithType: SqlProfileProvider.SqlProfileProvider()
  fullName: SqlProfileProvider.SqlProfileProvider()
- uid: System.Web.Profile.SqlProfileProvider.ApplicationName
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlProfileProvider.ApplicationName
  fullName: SqlProfileProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption, DateTime)
  nameWithType: SqlProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption, DateTime)
  fullName: SqlProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption, DateTime)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: SqlProfileProvider.DeleteProfiles(String[])
  fullName: SqlProfileProvider.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: SqlProfileProvider.DeleteProfiles(ProfileInfoCollection)
  fullName: SqlProfileProvider.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption, String, DateTime, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption, String, DateTime, Int32, Int32, Int32)
  fullName: SqlProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption, String, DateTime, Int32, Int32, Int32)
- uid: System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption, String, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption, String, Int32, Int32, Int32)
  fullName: SqlProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption, String, Int32, Int32, Int32)
- uid: System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption, DateTime, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption, DateTime, Int32, Int32, Int32)
  fullName: SqlProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption, DateTime, Int32, Int32, Int32)
- uid: System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption, Int32, Int32, Int32)
  nameWithType: SqlProfileProvider.GetAllProfiles(ProfileAuthenticationOption, Int32, Int32, Int32)
  fullName: SqlProfileProvider.GetAllProfiles(ProfileAuthenticationOption, Int32, Int32, Int32)
- uid: System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption, DateTime)
  nameWithType: SqlProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption, DateTime)
  fullName: SqlProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption, DateTime)
- uid: System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext, SettingsPropertyCollection)
  nameWithType: SqlProfileProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)
  fullName: SqlProfileProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: Initialize(String, NameValueCollection)
  nameWithType: SqlProfileProvider.Initialize(String, NameValueCollection)
  fullName: SqlProfileProvider.Initialize(String, NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)
  nameWithType: SqlProfileProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)
  fullName: SqlProfileProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)
- uid: System.Web.Profile.SqlProfileProvider.#ctor*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: SqlProfileProvider
  nameWithType: SqlProfileProvider.SqlProfileProvider
  fullName: SqlProfileProvider.SqlProfileProvider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.ApplicationName*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlProfileProvider.ApplicationName
  fullName: SqlProfileProvider.ApplicationName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: SqlProfileProvider.DeleteInactiveProfiles
  fullName: SqlProfileProvider.DeleteInactiveProfiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.DeleteProfiles*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: DeleteProfiles
  nameWithType: SqlProfileProvider.DeleteProfiles
  fullName: SqlProfileProvider.DeleteProfiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: SqlProfileProvider.FindInactiveProfilesByUserName
  fullName: SqlProfileProvider.FindInactiveProfilesByUserName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.FindProfilesByUserName*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: SqlProfileProvider.FindProfilesByUserName
  fullName: SqlProfileProvider.FindProfilesByUserName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: SqlProfileProvider.GetAllInactiveProfiles
  fullName: SqlProfileProvider.GetAllInactiveProfiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.GetAllProfiles*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetAllProfiles
  nameWithType: SqlProfileProvider.GetAllProfiles
  fullName: SqlProfileProvider.GetAllProfiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: SqlProfileProvider.GetNumberOfInactiveProfiles
  fullName: SqlProfileProvider.GetNumberOfInactiveProfiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.GetPropertyValues*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: SqlProfileProvider.GetPropertyValues
  fullName: SqlProfileProvider.GetPropertyValues
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.Initialize*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlProfileProvider.Initialize
  fullName: SqlProfileProvider.Initialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Web.Profile.SqlProfileProvider.SetPropertyValues*
  parent: System.Web.Profile.SqlProfileProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: SqlProfileProvider.SetPropertyValues
  fullName: SqlProfileProvider.SetPropertyValues
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SqlProfileProvider.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: ProviderBase.Name
