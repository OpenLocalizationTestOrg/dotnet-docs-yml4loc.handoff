{"nodes":[{"content":"Provides the main access point for classes interacting with the security system. This class cannot be inherited.","nodes":[{"pos":[0,112],"content":"Provides the main access point for classes interacting with the security system. This class cannot be inherited.","nodes":[{"content":"Provides the main access point for classes interacting with the security system. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Provides the main access point for classes interacting with the security system.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]}],"pos":[1808,1921],"yaml":true},{"content":"Security provides methods to access and manipulate the security policy configuration. You cannot create instances of <xref:System.Security.SecurityManager>.","nodes":[{"pos":[0,156],"content":"Security provides methods to access and manipulate the security policy configuration. You cannot create instances of <xref:System.Security.SecurityManager>.","nodes":[{"content":"Security provides methods to access and manipulate the security policy configuration. You cannot create instances of <xref:System.Security.SecurityManager>.","pos":[0,156],"nodes":[{"content":"Security provides methods to access and manipulate the security policy configuration.","pos":[0,85]},{"content":"You cannot create instances of <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager&gt;</ph>.","pos":[86,156],"source":" You cannot create instances of <xref:System.Security.SecurityManager>."}]}]}],"pos":[1932,2089],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether code must have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"></xref> in order to execute.","nodes":[{"pos":[0,157],"content":"Gets or sets a value indicating whether code must have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"&gt;&lt;/xref&gt;</ph> in order to execute.","source":"Gets or sets a value indicating whether code must have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"></xref> in order to execute."}],"pos":[3782,3940],"yaml":true},{"content":"If this property is `false`, even code without <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> can execute. Execution checking is expensive and can eliminate the advantages of lazy policy resolution. This property is provided to disable execution checking when needed.  \n  \n A change to this property is not persisted until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry.","nodes":[{"pos":[0,288],"content":"If this property is `false`, even code without <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> can execute. Execution checking is expensive and can eliminate the advantages of lazy policy resolution. This property is provided to disable execution checking when needed.","nodes":[{"content":"If this property is <ph id=\"ph1\">`false`</ph>, even code without <ph id=\"ph2\">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.Execution&gt;</ph> can execute.","pos":[0,127],"source":"If this property is `false`, even code without <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> can execute."},{"content":"Execution checking is expensive and can eliminate the advantages of lazy policy resolution.","pos":[128,219]},{"content":"This property is provided to disable execution checking when needed.","pos":[220,288]}]},{"pos":[295,495],"content":"A change to this property is not persisted until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry.","nodes":[{"content":"A change to this property is not persisted until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry.","pos":[0,200],"nodes":[{"content":"A change to this property is not persisted until <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.SavePolicy%2A&gt;</ph> is called.","pos":[0,112],"source":"A change to this property is not persisted until <xref:System.Security.SecurityManager.SavePolicy%2A> is called."},{"content":"New processes will not be affected by the change until it is persisted in the registry.","pos":[113,200]}]}]}],"pos":[3951,4451],"yaml":true,"extradata":"MT"},{"content":"`true` if code must have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"></xref> in order to execute; otherwise, `false`.","nodes":[{"pos":[0,147],"content":"<ph id=\"ph1\">`true`</ph> if code must have <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"&gt;&lt;/xref&gt;</ph> in order to execute; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if code must have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"></xref> in order to execute; otherwise, `false`."}],"pos":[4620,4770],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."}],"pos":[4962,5095],"yaml":true},{"content":"Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.","nodes":[{"pos":[0,142],"content":"Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.","nodes":[{"content":"Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.","pos":[0,142]}]}],"pos":[6435,6578],"yaml":true},{"content":"You can use the <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> method before you cache sensitive data that is obtained after successful security demands.  \n  \n If the <xref:System.Security.CodeAccessPermission.Assert%2A> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context. Otherwise, sensitive data that is obtained under an <xref:System.Security.CodeAccessPermission.Assert%2A> may become available to code that is no longer be running with that <xref:System.Security.CodeAccessPermission.Assert%2A> in place.  \n  \n> [!IMPORTANT]\n>  The return value is reliable only when it is `false`, which means that the thread is guaranteed not to require a security context capture. The method may return true when a security context capture is not necessary, to avoid security vulnerabilities.  \n  \n <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> is security-critical because its main use is to avoid unnecessary security context captures, which indicates that the code using it is security-sensitive and must be audited.","nodes":[{"pos":[0,192],"content":"You can use the <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> method before you cache sensitive data that is obtained after successful security demands.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A&gt;</ph> method before you cache sensitive data that is obtained after successful security demands.","pos":[0,192],"source":"You can use the <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> method before you cache sensitive data that is obtained after successful security demands."}]},{"pos":[199,625],"content":"If the <xref:System.Security.CodeAccessPermission.Assert%2A> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context. Otherwise, sensitive data that is obtained under an <xref:System.Security.CodeAccessPermission.Assert%2A> may become available to code that is no longer be running with that <xref:System.Security.CodeAccessPermission.Assert%2A> in place.","nodes":[{"content":"If the <xref:System.Security.CodeAccessPermission.Assert%2A> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context. Otherwise, sensitive data that is obtained under an <xref:System.Security.CodeAccessPermission.Assert%2A> may become available to code that is no longer be running with that <xref:System.Security.CodeAccessPermission.Assert%2A> in place.","pos":[0,426],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context.","pos":[0,188],"source":"If the <xref:System.Security.CodeAccessPermission.Assert%2A> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context."},{"content":"Otherwise, sensitive data that is obtained under an <ph id=\"ph1\">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> may become available to code that is no longer be running with that <ph id=\"ph2\">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> in place.","pos":[189,426],"source":" Otherwise, sensitive data that is obtained under an <xref:System.Security.CodeAccessPermission.Assert%2A> may become available to code that is no longer be running with that <xref:System.Security.CodeAccessPermission.Assert%2A> in place."}]}]},{"pos":[633,899],"content":"[!IMPORTANT]\n The return value is reliable only when it is `false`, which means that the thread is guaranteed not to require a security context capture. The method may return true when a security context capture is not necessary, to avoid security vulnerabilities.","leadings":["","> "],"nodes":[{"content":" The return value is reliable only when it is `false`, which means that the thread is guaranteed not to require a security context capture. The method may return true when a security context capture is not necessary, to avoid security vulnerabilities.","pos":[13,264],"nodes":[{"content":"The return value is reliable only when it is <ph id=\"ph1\">`false`</ph>, which means that the thread is guaranteed not to require a security context capture.","pos":[1,139],"source":" The return value is reliable only when it is `false`, which means that the thread is guaranteed not to require a security context capture."},{"content":"The method may return true when a security context capture is not necessary, to avoid security vulnerabilities.","pos":[140,251]}]}]},{"pos":[906,1166],"content":"<xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> is security-critical because its main use is to avoid unnecessary security context captures, which indicates that the code using it is security-sensitive and must be audited.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A&gt;</ph> is security-critical because its main use is to avoid unnecessary security context captures, which indicates that the code using it is security-sensitive and must be audited.","pos":[0,260],"source":"<xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> is security-critical because its main use is to avoid unnecessary security context captures, which indicates that the code using it is security-sensitive and must be audited."}]}],"pos":[6589,7765],"yaml":true,"extradata":"MT"},{"content":"`false` if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active <xref href=\"System.Security.CodeAccessPermission.PermitOnly\"></xref> or <xref href=\"System.Security.CodeAccessPermission.Deny\"></xref> modifiers; `true` if the common language runtime cannot guarantee that the stack contains none of these.","nodes":[{"pos":[0,368],"content":"<ph id=\"ph1\">`false`</ph> if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active <ph id=\"ph2\">&lt;xref href=\"System.Security.CodeAccessPermission.PermitOnly\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Security.CodeAccessPermission.Deny\"&gt;&lt;/xref&gt;</ph> modifiers; <ph id=\"ph4\">`true`</ph> if the common language runtime cannot guarantee that the stack contains none of these.","source":"`false` if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active <xref href=\"System.Security.CodeAccessPermission.PermitOnly\"></xref> or <xref href=\"System.Security.CodeAccessPermission.Deny\"></xref> modifiers; `true` if the common language runtime cannot guarantee that the stack contains none of these."}],"pos":[7932,8303],"yaml":true},{"content":"Gets a permission set that is safe to grant to an application that has the provided evidence.","nodes":[{"pos":[0,93],"content":"Gets a permission set that is safe to grant to an application that has the provided evidence.","nodes":[{"content":"Gets a permission set that is safe to grant to an application that has the provided evidence.","pos":[0,93]}]}],"pos":[9673,9767],"yaml":true},{"content":"> [!NOTE]\n>  In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the host evidence in `evidence` must contain <xref:System.Security.Policy.Zone?displayProperty=fullName> evidence.  \n>   \n>  The following table shows the permission sets that are returned for each zone.  \n  \n|Zone|Permission set|  \n|----------|--------------------|  \n|<xref:System.Security.SecurityZone.MyComputer>|`FullTrust`|  \n|<xref:System.Security.SecurityZone.Intranet>|`LocalIntranet`|  \n|<xref:System.Security.SecurityZone.Trusted>|`Internet`|  \n|<xref:System.Security.SecurityZone.Internet>|`Internet`|  \n|<xref:System.Security.SecurityZone.Untrusted>|None|  \n|<xref:System.Security.SecurityZone.NoZone>|None|  \n  \n Other evidence, such as <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Site>, may be considered.  \n  \n The returned permission set can be used by a sandbox to run the application. Note that this method does not specify policy, but helps a host to determine whether the permission set requested by an application is reasonable. This method can be used to map a zone to a sandbox.","nodes":[{"pos":[2,191],"content":"[!NOTE]\n In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the host evidence in `evidence` must contain <xref:System.Security.Policy.Zone?displayProperty=fullName> evidence.","leadings":["","> "],"nodes":[{"content":"In the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the host evidence in <ph id=\"ph2\">`evidence`</ph> must contain <ph id=\"ph3\">&lt;xref:System.Security.Policy.Zone?displayProperty=fullName&gt;</ph> evidence.","pos":[9,187],"source":" In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the host evidence in `evidence` must contain <xref:System.Security.Policy.Zone?displayProperty=fullName> evidence."}]},{"pos":[202,280],"content":"The following table shows the permission sets that are returned for each zone.","nodes":[{"content":"The following table shows the permission sets that are returned for each zone.","pos":[0,78]}]},{"pos":[287,291],"content":"Zone","nodes":[{"content":"Zone","pos":[0,4]}]},{"pos":[292,306],"content":"Permission set","nodes":[{"content":"Permission set","pos":[0,14]}]},{"pos":[347,393],"content":"<xref:System.Security.SecurityZone.MyComputer>","nodes":[]},{"pos":[410,454],"content":"<xref:System.Security.SecurityZone.Intranet>","nodes":[]},{"pos":[475,518],"content":"<xref:System.Security.SecurityZone.Trusted>","nodes":[]},{"pos":[534,578],"content":"<xref:System.Security.SecurityZone.Internet>","nodes":[]},{"pos":[594,639],"content":"<xref:System.Security.SecurityZone.Untrusted>","nodes":[]},{"pos":[640,644],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[649,691],"content":"<xref:System.Security.SecurityZone.NoZone>","nodes":[]},{"pos":[692,696],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[704,819],"content":"Other evidence, such as <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Site>, may be considered.","nodes":[{"content":"Other evidence, such as <ph id=\"ph1\">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Policy.Site&gt;</ph>, may be considered.","pos":[0,115],"source":"Other evidence, such as <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Site>, may be considered."}]},{"pos":[826,1101],"content":"The returned permission set can be used by a sandbox to run the application. Note that this method does not specify policy, but helps a host to determine whether the permission set requested by an application is reasonable. This method can be used to map a zone to a sandbox.","nodes":[{"content":"The returned permission set can be used by a sandbox to run the application. Note that this method does not specify policy, but helps a host to determine whether the permission set requested by an application is reasonable. This method can be used to map a zone to a sandbox.","pos":[0,275],"nodes":[{"content":"The returned permission set can be used by a sandbox to run the application.","pos":[0,76]},{"content":"Note that this method does not specify policy, but helps a host to determine whether the permission set requested by an application is reasonable.","pos":[77,223]},{"content":"This method can be used to map a zone to a sandbox.","pos":[224,275]}]}]}],"pos":[9778,10898],"yaml":true,"extradata":"MT"},{"content":"The host evidence to match to a permission set.","nodes":[{"pos":[0,47],"content":"The host evidence to match to a permission set.","nodes":[{"content":"The host evidence to match to a permission set.","pos":[0,47]}]}],"pos":[11729,11777],"yaml":true},{"content":"A permission set that can be used as a grant set for the application that has the provided evidence.","nodes":[{"pos":[0,100],"content":"A permission set that can be used as a grant set for the application that has the provided evidence.","nodes":[{"content":"A permission set that can be used as a grant set for the application that has the provided evidence.","pos":[0,100]}]}],"pos":[11850,11951],"yaml":true},{"content":"<code>evidence</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;evidence&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>evidence</code> is `null`."}],"pos":[12131,12164],"yaml":true},{"content":"Gets the granted zone identity and URL identity permission sets for the current assembly.","nodes":[{"pos":[0,89],"content":"Gets the granted zone identity and URL identity permission sets for the current assembly.","nodes":[{"content":"Gets the granted zone identity and URL identity permission sets for the current assembly.","pos":[0,89]}]}],"pos":[13536,13626],"yaml":true},{"content":"The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <xref:System.Security.SecurityManager.ResolvePolicy%2A> for each evidence type. The permission sets returned from the <xref:System.Security.SecurityManager.ResolvePolicy%2A> calls identify the permissions granted to the executing assembly based on its zone and URL of origin.  \n  \n> [!NOTE]\n>  This member makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key. Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key. The security exception is based on the Microsoft public key, not the ECMA pseudo key.","nodes":[{"pos":[0,389],"content":"The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <xref:System.Security.SecurityManager.ResolvePolicy%2A> for each evidence type. The permission sets returned from the <xref:System.Security.SecurityManager.ResolvePolicy%2A> calls identify the permissions granted to the executing assembly based on its zone and URL of origin.","nodes":[{"content":"The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <xref:System.Security.SecurityManager.ResolvePolicy%2A> for each evidence type. The permission sets returned from the <xref:System.Security.SecurityManager.ResolvePolicy%2A> calls identify the permissions granted to the executing assembly based on its zone and URL of origin.","pos":[0,389],"nodes":[{"content":"The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A&gt;</ph> for each evidence type.","pos":[0,193],"source":"The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <xref:System.Security.SecurityManager.ResolvePolicy%2A> for each evidence type."},{"content":"The permission sets returned from the <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A&gt;</ph> calls identify the permissions granted to the executing assembly based on its zone and URL of origin.","pos":[194,389],"source":" The permission sets returned from the <xref:System.Security.SecurityManager.ResolvePolicy%2A> calls identify the permissions granted to the executing assembly based on its zone and URL of origin."}]}]},{"pos":[397,747],"content":"[!NOTE]\n This member makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key. Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key. The security exception is based on the Microsoft public key, not the ECMA pseudo key.","leadings":["","> "],"nodes":[{"content":" This member makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key. Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key. The security exception is based on the Microsoft public key, not the ECMA pseudo key.","pos":[8,348],"nodes":[{"content":"This member makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key.","pos":[1,114]},{"content":"Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key.","pos":[115,254]},{"content":"The security exception is based on the Microsoft public key, not the ECMA pseudo key.","pos":[255,340]}]}]}],"pos":[13637,14390],"yaml":true,"extradata":"MT"},{"content":"An output parameter that contains an <xref href=\"System.Collections.ArrayList\"></xref> of granted <xref href=\"System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone\"></xref> objects.","nodes":[{"pos":[0,192],"content":"An output parameter that contains an <ph id=\"ph1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;&lt;/xref&gt;</ph> of granted <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone\"&gt;&lt;/xref&gt;</ph> objects.","source":"An output parameter that contains an <xref href=\"System.Collections.ArrayList\"></xref> of granted <xref href=\"System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone\"></xref> objects."}],"pos":[14622,14815],"yaml":true},{"content":"An output parameter that contains an <xref href=\"System.Collections.ArrayList\"></xref> of granted <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> objects.","nodes":[{"pos":[0,177],"content":"An output parameter that contains an <ph id=\"ph1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;&lt;/xref&gt;</ph> of granted <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.UrlIdentityPermission\"&gt;&lt;/xref&gt;</ph> objects.","source":"An output parameter that contains an <xref href=\"System.Collections.ArrayList\"></xref> of granted <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> objects."}],"pos":[14892,15070],"yaml":true},{"content":"The request for <xref href=\"System.Security.Permissions.StrongNameIdentityPermission\"></xref> failed.","nodes":[{"pos":[0,101],"content":"The request for <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StrongNameIdentityPermission\"&gt;&lt;/xref&gt;</ph> failed.","source":"The request for <xref href=\"System.Security.Permissions.StrongNameIdentityPermission\"></xref> failed."}],"pos":[15258,15360],"yaml":true},{"content":"Determines whether a permission is granted to the caller.","nodes":[{"pos":[0,57],"content":"Determines whether a permission is granted to the caller.","nodes":[{"content":"Determines whether a permission is granted to the caller.","pos":[0,57]}]}],"pos":[16567,16625],"yaml":true},{"content":"Granting of permissions is determined by policy and is different from a demand subject to overrides, such as an assert. Also, <xref:System.Security.SecurityManager.IsGranted%2A> only tests the grant of the calling code assembly, independent of other callers on the stack.","nodes":[{"pos":[0,271],"content":"Granting of permissions is determined by policy and is different from a demand subject to overrides, such as an assert. Also, <xref:System.Security.SecurityManager.IsGranted%2A> only tests the grant of the calling code assembly, independent of other callers on the stack.","nodes":[{"content":"Granting of permissions is determined by policy and is different from a demand subject to overrides, such as an assert. Also, <xref:System.Security.SecurityManager.IsGranted%2A> only tests the grant of the calling code assembly, independent of other callers on the stack.","pos":[0,271],"nodes":[{"content":"Granting of permissions is determined by policy and is different from a demand subject to overrides, such as an assert.","pos":[0,119]},{"content":"Also, <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.IsGranted%2A&gt;</ph> only tests the grant of the calling code assembly, independent of other callers on the stack.","pos":[120,271],"source":" Also, <xref:System.Security.SecurityManager.IsGranted%2A> only tests the grant of the calling code assembly, independent of other callers on the stack."}]}]}],"pos":[16636,16908],"yaml":true,"extradata":"MT"},{"content":"The permission to test against the grant of the caller.","nodes":[{"pos":[0,55],"content":"The permission to test against the grant of the caller.","nodes":[{"content":"The permission to test against the grant of the caller.","pos":[0,55]}]}],"pos":[17120,17176],"yaml":true},{"content":"`true` if the permissions granted to the caller include the permission <code>perm</code>; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if the permissions granted to the caller include the permission <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">perm</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the permissions granted to the caller include the permission <code>perm</code>; otherwise, `false`."}],"pos":[17234,17346],"yaml":true},{"content":"Loads a <xref href=\"System.Security.Policy.PolicyLevel\"></xref> from the specified file.","nodes":[{"pos":[0,88],"content":"Loads a <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph> from the specified file.","source":"Loads a <xref href=\"System.Security.Policy.PolicyLevel\"></xref> from the specified file."}],"pos":[18848,18937],"yaml":true},{"content":"The physical file path to a file containing the security policy information.","nodes":[{"pos":[0,76],"content":"The physical file path to a file containing the security policy information.","nodes":[{"content":"The physical file path to a file containing the security policy information.","pos":[0,76]}]}],"pos":[19196,19273],"yaml":true},{"content":"One of the enumeration values that specifies the type of the policy level to be loaded.","nodes":[{"pos":[0,87],"content":"One of the enumeration values that specifies the type of the policy level to be loaded.","nodes":[{"content":"One of the enumeration values that specifies the type of the policy level to be loaded.","pos":[0,87]}]}],"pos":[19351,19439],"yaml":true},{"content":"The loaded policy level.","nodes":[{"pos":[0,24],"content":"The loaded policy level.","nodes":[{"content":"The loaded policy level.","pos":[0,24]}]}],"pos":[19517,19542],"yaml":true},{"content":"The <code>path</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>path</code> parameter is `null`."}],"pos":[19727,19770],"yaml":true},{"content":"The file indicated by the <code>path</code> parameter does not exist.","nodes":[{"pos":[0,69],"content":"The file indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not exist.","source":"The file indicated by the <code>path</code> parameter does not exist."}],"pos":[19864,19934],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.  \n  \n -or-  \n  \n The code that calls this method does not have <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"></xref>.  \n  \n -or-  \n  \n The code that calls this method does not have <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref>.  \n  \n -or-  \n  \n The code that calls this method does not have <xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."},{"pos":[139,143],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[150,273],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"></xref>."},{"pos":[280,284],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[291,415],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref>."},{"pos":[422,426],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[433,565],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"></xref>."}],"pos":[20046,20634],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[20736,21084],"yaml":true},{"content":"Loads a <xref href=\"System.Security.Policy.PolicyLevel\"></xref> from the specified string.","nodes":[{"pos":[0,90],"content":"Loads a <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph> from the specified string.","source":"Loads a <xref href=\"System.Security.Policy.PolicyLevel\"></xref> from the specified string."}],"pos":[22526,22617],"yaml":true},{"content":"The XML representation of a security policy level in the same form in which it appears in a configuration file.","nodes":[{"pos":[0,111],"content":"The XML representation of a security policy level in the same form in which it appears in a configuration file.","nodes":[{"content":"The XML representation of a security policy level in the same form in which it appears in a configuration file.","pos":[0,111]}]}],"pos":[22876,22988],"yaml":true},{"content":"One of the enumeration values that specifies the type of the policy level to be loaded.","nodes":[{"pos":[0,87],"content":"One of the enumeration values that specifies the type of the policy level to be loaded.","nodes":[{"content":"One of the enumeration values that specifies the type of the policy level to be loaded.","pos":[0,87]}]}],"pos":[23066,23154],"yaml":true},{"content":"The loaded policy level.","nodes":[{"pos":[0,24],"content":"The loaded policy level.","nodes":[{"content":"The loaded policy level.","pos":[0,24]}]}],"pos":[23232,23257],"yaml":true},{"content":"The <code>str</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>str</code> parameter is `null`."}],"pos":[23444,23486],"yaml":true},{"content":"The <code>str</code> parameter is not valid.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The <code>str</code> parameter is not valid."}],"pos":[23580,23625],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."}],"pos":[23737,23870],"yaml":true},{"content":"Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.","nodes":[{"pos":[0,114],"content":"Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.","nodes":[{"content":"Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.","pos":[0,114]}]}],"pos":[25042,25157],"yaml":true},{"content":"The returned enumerator provides successive <xref:System.Security.Policy.PolicyLevel> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy. These objects are the live policy objects; altering these objects can have unpredictable results.  \n  \n Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level. However, the hierarchy can include additional levels.","nodes":[{"pos":[0,307],"content":"The returned enumerator provides successive <xref:System.Security.Policy.PolicyLevel> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy. These objects are the live policy objects; altering these objects can have unpredictable results.","nodes":[{"content":"The returned enumerator provides successive <xref:System.Security.Policy.PolicyLevel> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy. These objects are the live policy objects; altering these objects can have unpredictable results.","pos":[0,307],"nodes":[{"content":"The returned enumerator provides successive <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy.","pos":[0,209],"source":"The returned enumerator provides successive <xref:System.Security.Policy.PolicyLevel> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy."},{"content":"These objects are the live policy objects; altering these objects can have unpredictable results.","pos":[210,307]}]}]},{"pos":[314,460],"content":"Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level. However, the hierarchy can include additional levels.","nodes":[{"content":"Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level. However, the hierarchy can include additional levels.","pos":[0,146],"nodes":[{"content":"Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level.","pos":[0,92]},{"content":"However, the hierarchy can include additional levels.","pos":[93,146]}]}]}],"pos":[25168,25633],"yaml":true,"extradata":"MT"},{"content":"An enumerator for <xref href=\"System.Security.Policy.PolicyLevel\"></xref> objects that compose the security policy hierarchy.","nodes":[{"pos":[0,125],"content":"An enumerator for <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;&lt;/xref&gt;</ph> objects that compose the security policy hierarchy.","source":"An enumerator for <xref href=\"System.Security.Policy.PolicyLevel\"></xref> objects that compose the security policy hierarchy."}],"pos":[25848,25974],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[26151,26499],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."}],"pos":[26611,26744],"yaml":true},{"content":"Determines what permissions to grant to code based on the specified evidence.","nodes":[{"pos":[0,77],"content":"Determines what permissions to grant to code based on the specified evidence.","nodes":[{"content":"Determines what permissions to grant to code based on the specified evidence.","pos":[0,77]}]}],"pos":[28027,28105],"yaml":true},{"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity. The result is determined by the security policy.","nodes":[{"pos":[0,155],"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity. The result is determined by the security policy.","nodes":[{"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity. The result is determined by the security policy.","pos":[0,155],"nodes":[{"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity.","pos":[0,106]},{"content":"The result is determined by the security policy.","pos":[107,155]}]}]}],"pos":[28116,28272],"yaml":true,"extradata":"MT"},{"content":"The evidence set used to evaluate policy.","nodes":[{"pos":[0,41],"content":"The evidence set used to evaluate policy.","nodes":[{"content":"The evidence set used to evaluate policy.","pos":[0,41]}]}],"pos":[28529,28571],"yaml":true},{"content":"The set of permissions that can be granted by the security system.","nodes":[{"pos":[0,66],"content":"The set of permissions that can be granted by the security system.","nodes":[{"content":"The set of permissions that can be granted by the security system.","pos":[0,66]}]}],"pos":[28644,28711],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[28886,29234],"yaml":true},{"content":"Determines what permissions to grant to code based on the specified evidence.","nodes":[{"pos":[0,77],"content":"Determines what permissions to grant to code based on the specified evidence.","nodes":[{"content":"Determines what permissions to grant to code based on the specified evidence.","pos":[0,77]}]}],"pos":[30529,30607],"yaml":true},{"content":"This method invokes the security policy engine, providing it with an array of <xref:System.Security.Policy.Evidence> objects. The returned permission set represents only those permissions that apply to every evidence in the array. These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence. This method behaves as if you were performing an intersection on the results of resolving policy on each of the <xref:System.Security.Policy.Evidence> objects in the array.","nodes":[{"pos":[0,538],"content":"This method invokes the security policy engine, providing it with an array of <xref:System.Security.Policy.Evidence> objects. The returned permission set represents only those permissions that apply to every evidence in the array. These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence. This method behaves as if you were performing an intersection on the results of resolving policy on each of the <xref:System.Security.Policy.Evidence> objects in the array.","nodes":[{"content":"This method invokes the security policy engine, providing it with an array of <xref:System.Security.Policy.Evidence> objects. The returned permission set represents only those permissions that apply to every evidence in the array. These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence. This method behaves as if you were performing an intersection on the results of resolving policy on each of the <xref:System.Security.Policy.Evidence> objects in the array.","pos":[0,538],"nodes":[{"content":"This method invokes the security policy engine, providing it with an array of <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> objects.","pos":[0,125],"source":"This method invokes the security policy engine, providing it with an array of <xref:System.Security.Policy.Evidence> objects."},{"content":"The returned permission set represents only those permissions that apply to every evidence in the array.","pos":[126,230]},{"content":"These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence.","pos":[231,365]},{"content":"This method behaves as if you were performing an intersection on the results of resolving policy on each of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> objects in the array.","pos":[366,538],"source":" This method behaves as if you were performing an intersection on the results of resolving policy on each of the <xref:System.Security.Policy.Evidence> objects in the array."}]}]}],"pos":[30618,31157],"yaml":true,"extradata":"MT"},{"content":"An array of evidence objects used to evaluate policy.","nodes":[{"pos":[0,53],"content":"An array of evidence objects used to evaluate policy.","nodes":[{"content":"An array of evidence objects used to evaluate policy.","pos":[0,53]}]}],"pos":[31420,31474],"yaml":true},{"content":"The set of permissions that is appropriate for all of the provided evidence.","nodes":[{"pos":[0,76],"content":"The set of permissions that is appropriate for all of the provided evidence.","nodes":[{"content":"The set of permissions that is appropriate for all of the provided evidence.","pos":[0,76]}]}],"pos":[31547,31624],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[31799,32147],"yaml":true},{"content":"Determines what permissions to grant to code based on the specified evidence and requests.","nodes":[{"pos":[0,90],"content":"Determines what permissions to grant to code based on the specified evidence and requests.","nodes":[{"content":"Determines what permissions to grant to code based on the specified evidence and requests.","pos":[0,90]}]}],"pos":[33973,34064],"yaml":true},{"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests. The result is determined by the security policy. This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter. The effective granted permissions are those in the granted set that are not in the denied set.","nodes":[{"pos":[0,464],"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests. The result is determined by the security policy. This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter. The effective granted permissions are those in the granted set that are not in the denied set.","nodes":[{"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests. The result is determined by the security policy. This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter. The effective granted permissions are those in the granted set that are not in the denied set.","pos":[0,464],"nodes":[{"content":"This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests.","pos":[0,151]},{"content":"The result is determined by the security policy.","pos":[152,200]},{"content":"This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter.","pos":[201,369]},{"content":"The effective granted permissions are those in the granted set that are not in the denied set.","pos":[370,464]}]}]}],"pos":[34075,34540],"yaml":true,"extradata":"MT"},{"content":"The evidence set used to evaluate policy.","nodes":[{"pos":[0,41],"content":"The evidence set used to evaluate policy.","nodes":[{"content":"The evidence set used to evaluate policy.","pos":[0,41]}]}],"pos":[34958,35000],"yaml":true},{"content":"The required permissions the code needs to run.","nodes":[{"pos":[0,47],"content":"The required permissions the code needs to run.","nodes":[{"content":"The required permissions the code needs to run.","pos":[0,47]}]}],"pos":[35080,35128],"yaml":true},{"content":"The optional permissions that will be used if granted, but aren't required for the code to run.","nodes":[{"pos":[0,95],"content":"The optional permissions that will be used if granted, but aren't required for the code to run.","nodes":[{"content":"The optional permissions that will be used if granted, but aren't required for the code to run.","pos":[0,95]}]}],"pos":[35207,35303],"yaml":true},{"content":"The denied permissions that must never be granted to the code even if policy otherwise permits it.","nodes":[{"pos":[0,98],"content":"The denied permissions that must never be granted to the code even if policy otherwise permits it.","nodes":[{"content":"The denied permissions that must never be granted to the code even if policy otherwise permits it.","pos":[0,98]}]}],"pos":[35383,35482],"yaml":true},{"content":"An output parameter that contains the set of permissions not granted.","nodes":[{"pos":[0,69],"content":"An output parameter that contains the set of permissions not granted.","nodes":[{"content":"An output parameter that contains the set of permissions not granted.","pos":[0,69]}]}],"pos":[35560,35630],"yaml":true},{"content":"The set of permissions that would be granted by the security system.","nodes":[{"pos":[0,68],"content":"The set of permissions that would be granted by the security system.","nodes":[{"content":"The set of permissions that would be granted by the security system.","pos":[0,68]}]}],"pos":[35703,35772],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[35947,36295],"yaml":true},{"content":"Policy fails to grant the minimum required permissions specified by the <code>reqdPset</code> parameter.","nodes":[{"pos":[0,104],"content":"Policy fails to grant the minimum required permissions specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">reqdPset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"Policy fails to grant the minimum required permissions specified by the <code>reqdPset</code> parameter."}],"pos":[36417,36522],"yaml":true},{"content":"Gets a collection of code groups matching the specified evidence.","nodes":[{"pos":[0,65],"content":"Gets a collection of code groups matching the specified evidence.","nodes":[{"content":"Gets a collection of code groups matching the specified evidence.","pos":[0,65]}]}],"pos":[37841,37907],"yaml":true},{"content":"This method is useful in analyzing how a specified policy configuration works with specific kinds of evidence.  \n  \n Code groups will be returned from all applicable levels of the policy hierarchy matching the `evidence` parameter.","nodes":[{"pos":[0,110],"content":"This method is useful in analyzing how a specified policy configuration works with specific kinds of evidence.","nodes":[{"content":"This method is useful in analyzing how a specified policy configuration works with specific kinds of evidence.","pos":[0,110]}]},{"pos":[117,231],"content":"Code groups will be returned from all applicable levels of the policy hierarchy matching the <ph id=\"ph1\">`evidence`</ph> parameter.","source":"Code groups will be returned from all applicable levels of the policy hierarchy matching the `evidence` parameter."}],"pos":[37918,38154],"yaml":true,"extradata":"MT"},{"content":"The evidence set against which the policy is evaluated.","nodes":[{"pos":[0,55],"content":"The evidence set against which the policy is evaluated.","nodes":[{"content":"The evidence set against which the policy is evaluated.","pos":[0,55]}]}],"pos":[38418,38474],"yaml":true},{"content":"An enumeration of the set of code groups matching the evidence.","nodes":[{"pos":[0,63],"content":"An enumeration of the set of code groups matching the evidence.","nodes":[{"content":"An enumeration of the set of code groups matching the evidence.","pos":[0,63]}]}],"pos":[38548,38612],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[38793,39141],"yaml":true},{"content":"Determines which permissions to grant to code based on the specified evidence, excluding the policy for the <xref href=\"System.AppDomain\"></xref> level.","nodes":[{"pos":[0,152],"content":"Determines which permissions to grant to code based on the specified evidence, excluding the policy for the <ph id=\"ph1\">&lt;xref href=\"System.AppDomain\"&gt;&lt;/xref&gt;</ph> level.","source":"Determines which permissions to grant to code based on the specified evidence, excluding the policy for the <xref href=\"System.AppDomain\"></xref> level."}],"pos":[40460,40613],"yaml":true},{"content":"This method invokes the security policy engine and provides it with evidence of the calling code's identity. The result is determined by the system security policy exclusive of any <xref:System.AppDomain> policy.","nodes":[{"pos":[0,212],"content":"This method invokes the security policy engine and provides it with evidence of the calling code's identity. The result is determined by the system security policy exclusive of any <xref:System.AppDomain> policy.","nodes":[{"content":"This method invokes the security policy engine and provides it with evidence of the calling code's identity. The result is determined by the system security policy exclusive of any <xref:System.AppDomain> policy.","pos":[0,212],"nodes":[{"content":"This method invokes the security policy engine and provides it with evidence of the calling code's identity.","pos":[0,108]},{"content":"The result is determined by the system security policy exclusive of any <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> policy.","pos":[109,212],"source":" The result is determined by the system security policy exclusive of any <xref:System.AppDomain> policy."}]}]}],"pos":[40624,40837],"yaml":true,"extradata":"MT"},{"content":"The evidence set used to evaluate policy.","nodes":[{"pos":[0,41],"content":"The evidence set used to evaluate policy.","nodes":[{"content":"The evidence set used to evaluate policy.","pos":[0,41]}]}],"pos":[41100,41142],"yaml":true},{"content":"The set of permissions that can be granted by the security system.","nodes":[{"pos":[0,66],"content":"The set of permissions that can be granted by the security system.","nodes":[{"content":"The set of permissions that can be granted by the security system.","pos":[0,66]}]}],"pos":[41215,41282],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[41463,41811],"yaml":true},{"content":"Saves the modified security policy state.","nodes":[{"pos":[0,41],"content":"Saves the modified security policy state.","nodes":[{"content":"Saves the modified security policy state.","pos":[0,41]}]}],"pos":[42953,42995],"yaml":true},{"content":"This method saves the policy as exposed by <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, and other classes that represent configuration of the security policy. Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.","nodes":[{"pos":[0,347],"content":"This method saves the policy as exposed by <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, and other classes that represent configuration of the security policy. Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.","nodes":[{"content":"This method saves the policy as exposed by <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, and other classes that represent configuration of the security policy. Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.","pos":[0,347],"nodes":[{"content":"This method saves the policy as exposed by <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.PolicyHierarchy%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph>, and other classes that represent configuration of the security policy.","pos":[0,215],"source":"This method saves the policy as exposed by <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, and other classes that represent configuration of the security policy."},{"content":"Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.","pos":[216,347]}]}]}],"pos":[43006,43354],"yaml":true,"extradata":"MT"},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[43636,43984],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."}],"pos":[44096,44229],"yaml":true},{"content":"Saves a modified security policy level loaded with <xref href=\"System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\"></xref>.","nodes":[{"pos":[0,175],"content":"Saves a modified security policy level loaded with <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\"&gt;&lt;/xref&gt;</ph>.","source":"Saves a modified security policy level loaded with <xref href=\"System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\"></xref>."}],"pos":[45542,45718],"yaml":true},{"content":"The <xref:System.Security.Policy.PolicyLevel> will be saved to the same location from which it loaded.","nodes":[{"pos":[0,102],"content":"The <xref:System.Security.Policy.PolicyLevel> will be saved to the same location from which it loaded.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> will be saved to the same location from which it loaded.","pos":[0,102],"source":"The <xref:System.Security.Policy.PolicyLevel> will be saved to the same location from which it loaded."}]}],"pos":[45729,45832],"yaml":true,"extradata":"MT"},{"content":"The policy level object to be saved.","nodes":[{"pos":[0,36],"content":"The policy level object to be saved.","nodes":[{"content":"The policy level object to be saved.","pos":[0,36]}]}],"pos":[46066,46103],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."}],"pos":[46290,46423],"yaml":true},{"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"pos":[0,347],"content":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).","nodes":[{"content":"This method uses code access security (CAS) policy, which is obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.","pos":[0,133],"source":"This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]."},{"content":"To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;legacyCasPolicy&gt;</ph> element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.","pos":[134,347],"source":" To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)."}]}],"pos":[46525,46873],"yaml":true},{"content":"Gets or sets a value indicating whether security is enabled.","nodes":[{"pos":[0,60],"content":"Gets or sets a value indicating whether security is enabled.","nodes":[{"content":"Gets or sets a value indicating whether security is enabled.","pos":[0,60]}]}],"pos":[48041,48102],"yaml":true},{"content":"This property is used by the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)  \n  \n `-security` (`-s`) option to turn off code-based security.  \n  \n <xref:System.Security.SecurityManager.SecurityEnabled%2A> provides a way for administrators to disable code access security. When code access security is disabled, all code access demands succeed. Effectively, this grants all code `FullTrust`. Disabling code access security bypasses the security system so that code might perform slightly better than the equivalent security policy granting `FullTrust` to all code. This property does not disable role-based security; therefore, <xref:System.Security.Permissions.PrincipalPermission> demands are not affected.  \n  \n> [!CAUTION]\n>  Disabling code access security makes the system vulnerable to attacks by malicious code such as viruses and worms. Disabling code access security does not automatically block managed code from running in any way. It only causes managed code to run without restriction by the code access security system, and should only be done with the most extreme caution. Turning off security to gain extra performance should only be done when other security measures have been taken to help protect system security. Examples of other security precautions include disconnecting from public networks, physically securing computers, and so on.  \n  \n A change to this property is not persisted in the registry until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry. Changing the value of this property in a running process does not necessarily change the state in the expected manner. To ensure changes have taken effect, you must call <xref:System.Security.SecurityManager.SavePolicy%2A> and start a new process.","nodes":[{"pos":[0,147],"content":"This property is used by the <bpt id=\"p1\">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id=\"p1\">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept>","source":"This property is used by the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)"},{"pos":[154,212],"content":"<ph id=\"ph1\">`-security`</ph> (<ph id=\"ph2\">`-s`</ph>) option to turn off code-based security.","source":"`-security` (`-s`) option to turn off code-based security."},{"pos":[219,779],"content":"<xref:System.Security.SecurityManager.SecurityEnabled%2A> provides a way for administrators to disable code access security. When code access security is disabled, all code access demands succeed. Effectively, this grants all code `FullTrust`. Disabling code access security bypasses the security system so that code might perform slightly better than the equivalent security policy granting `FullTrust` to all code. This property does not disable role-based security; therefore, <xref:System.Security.Permissions.PrincipalPermission> demands are not affected.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.SecurityEnabled%2A&gt;</ph> provides a way for administrators to disable code access security.","pos":[0,124],"source":"<xref:System.Security.SecurityManager.SecurityEnabled%2A> provides a way for administrators to disable code access security."},{"content":"When code access security is disabled, all code access demands succeed.","pos":[125,196]},{"content":"Effectively, this grants all code <ph id=\"ph1\">`FullTrust`</ph>.","pos":[197,243],"source":" Effectively, this grants all code `FullTrust`."},{"content":"Disabling code access security bypasses the security system so that code might perform slightly better than the equivalent security policy granting <ph id=\"ph1\">`FullTrust`</ph> to all code.","pos":[244,416],"source":" Disabling code access security bypasses the security system so that code might perform slightly better than the equivalent security policy granting `FullTrust` to all code."},{"content":"This property does not disable role-based security; therefore, <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PrincipalPermission&gt;</ph> demands are not affected.","pos":[417,560],"source":" This property does not disable role-based security; therefore, <xref:System.Security.Permissions.PrincipalPermission> demands are not affected."}]},{"pos":[787,1429],"content":"[!CAUTION]\n Disabling code access security makes the system vulnerable to attacks by malicious code such as viruses and worms. Disabling code access security does not automatically block managed code from running in any way. It only causes managed code to run without restriction by the code access security system, and should only be done with the most extreme caution. Turning off security to gain extra performance should only be done when other security measures have been taken to help protect system security. Examples of other security precautions include disconnecting from public networks, physically securing computers, and so on.","leadings":["","> "],"nodes":[{"content":" Disabling code access security makes the system vulnerable to attacks by malicious code such as viruses and worms. Disabling code access security does not automatically block managed code from running in any way. It only causes managed code to run without restriction by the code access security system, and should only be done with the most extreme caution. Turning off security to gain extra performance should only be done when other security measures have been taken to help protect system security. Examples of other security precautions include disconnecting from public networks, physically securing computers, and so on.","pos":[11,640],"nodes":[{"content":"Disabling code access security makes the system vulnerable to attacks by malicious code such as viruses and worms.","pos":[1,115]},{"content":"Disabling code access security does not automatically block managed code from running in any way.","pos":[116,213]},{"content":"It only causes managed code to run without restriction by the code access security system, and should only be done with the most extreme caution.","pos":[214,359]},{"content":"Turning off security to gain extra performance should only be done when other security measures have been taken to help protect system security.","pos":[360,504]},{"content":"Examples of other security precautions include disconnecting from public networks, physically securing computers, and so on.","pos":[505,629]}]}]},{"pos":[1436,1900],"content":"A change to this property is not persisted in the registry until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry. Changing the value of this property in a running process does not necessarily change the state in the expected manner. To ensure changes have taken effect, you must call <xref:System.Security.SecurityManager.SavePolicy%2A> and start a new process.","nodes":[{"content":"A change to this property is not persisted in the registry until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry. Changing the value of this property in a running process does not necessarily change the state in the expected manner. To ensure changes have taken effect, you must call <xref:System.Security.SecurityManager.SavePolicy%2A> and start a new process.","pos":[0,464],"nodes":[{"content":"A change to this property is not persisted in the registry until <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.SavePolicy%2A&gt;</ph> is called.","pos":[0,128],"source":"A change to this property is not persisted in the registry until <xref:System.Security.SecurityManager.SavePolicy%2A> is called."},{"content":"New processes will not be affected by the change until it is persisted in the registry.","pos":[129,216]},{"content":"Changing the value of this property in a running process does not necessarily change the state in the expected manner.","pos":[217,335]},{"content":"To ensure changes have taken effect, you must call <ph id=\"ph1\">&lt;xref:System.Security.SecurityManager.SavePolicy%2A&gt;</ph> and start a new process.","pos":[336,464],"source":" To ensure changes have taken effect, you must call <xref:System.Security.SecurityManager.SavePolicy%2A> and start a new process."}]}]}],"pos":[48113,50025],"yaml":true,"extradata":"MT"},{"content":"`true` if security is enabled; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if security is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if security is enabled; otherwise, `false`."}],"pos":[50248,50301],"yaml":true},{"content":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.","nodes":[{"pos":[0,132],"content":"The code that calls this method does not have <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>."}],"pos":[50488,50621],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.SecurityManager\n  commentId: T:System.Security.SecurityManager\n  id: SecurityManager\n  children:\n  - System.Security.SecurityManager.CheckExecutionRights\n  - System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  - System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  - System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  - System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  - System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  - System.Security.SecurityManager.PolicyHierarchy\n  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  - System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.SavePolicy\n  - System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  - System.Security.SecurityManager.SecurityEnabled\n  langs:\n  - csharp\n  name: SecurityManager\n  nameWithType: SecurityManager\n  fullName: System.Security.SecurityManager\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Provides the main access point for classes interacting with the security system. This class cannot be inherited.\n  remarks: Security provides methods to access and manipulate the security policy configuration. You cannot create instances of <xref:System.Security.SecurityManager>.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static class SecurityManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.CheckExecutionRights\n  commentId: P:System.Security.SecurityManager.CheckExecutionRights\n  id: CheckExecutionRights\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: CheckExecutionRights\n  nameWithType: SecurityManager.CheckExecutionRights\n  fullName: SecurityManager.CheckExecutionRights\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Gets or sets a value indicating whether code must have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"></xref> in order to execute.\n  remarks: \"If this property is `false`, even code without <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> can execute. Execution checking is expensive and can eliminate the advantages of lazy policy resolution. This property is provided to disable execution checking when needed.  \\n  \\n A change to this property is not persisted until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry.\"\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static bool CheckExecutionRights { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if code must have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.Execution\"></xref> in order to execute; otherwise, `false`.'\n  overload: System.Security.SecurityManager.CheckExecutionRights*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  commentId: M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  id: CurrentThreadRequiresSecurityContextCapture\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: CurrentThreadRequiresSecurityContextCapture()\n  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n  fullName: SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.\n  remarks: \"You can use the <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> method before you cache sensitive data that is obtained after successful security demands.  \\n  \\n If the <xref:System.Security.CodeAccessPermission.Assert%2A> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context. Otherwise, sensitive data that is obtained under an <xref:System.Security.CodeAccessPermission.Assert%2A> may become available to code that is no longer be running with that <xref:System.Security.CodeAccessPermission.Assert%2A> in place.  \\n  \\n> [!IMPORTANT]\\n>  The return value is reliable only when it is `false`, which means that the thread is guaranteed not to require a security context capture. The method may return true when a security context capture is not necessary, to avoid security vulnerabilities.  \\n  \\n <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> is security-critical because its main use is to avoid unnecessary security context captures, which indicates that the code using it is security-sensitive and must be audited.\"\n  syntax:\n    content: public static bool CurrentThreadRequiresSecurityContextCapture ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`false` if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active <xref href=\"System.Security.CodeAccessPermission.PermitOnly\"></xref> or <xref href=\"System.Security.CodeAccessPermission.Deny\"></xref> modifiers; `true` if the common language runtime cannot guarantee that the stack contains none of these.'\n  overload: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  commentId: M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  id: GetStandardSandbox(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: GetStandardSandbox(Evidence)\n  nameWithType: SecurityManager.GetStandardSandbox(Evidence)\n  fullName: SecurityManager.GetStandardSandbox(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Gets a permission set that is safe to grant to an application that has the provided evidence.\n  remarks: \"> [!NOTE]\\n>  In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the host evidence in `evidence` must contain <xref:System.Security.Policy.Zone?displayProperty=fullName> evidence.  \\n>   \\n>  The following table shows the permission sets that are returned for each zone.  \\n  \\n|Zone|Permission set|  \\n|----------|--------------------|  \\n|<xref:System.Security.SecurityZone.MyComputer>|`FullTrust`|  \\n|<xref:System.Security.SecurityZone.Intranet>|`LocalIntranet`|  \\n|<xref:System.Security.SecurityZone.Trusted>|`Internet`|  \\n|<xref:System.Security.SecurityZone.Internet>|`Internet`|  \\n|<xref:System.Security.SecurityZone.Untrusted>|None|  \\n|<xref:System.Security.SecurityZone.NoZone>|None|  \\n  \\n Other evidence, such as <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Site>, may be considered.  \\n  \\n The returned permission set can be used by a sandbox to run the application. Note that this method does not specify policy, but helps a host to determine whether the permission set requested by an application is reasonable. This method can be used to map a zone to a sandbox.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Security.SecurityManager.GetStandardSandbox%2A> method to obtain the permission set for a sandboxed application. For more information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  \\n  \\n [!code-csharp[sandboxingApis#1](~/samples/snippets/csharp/VS_Snippets_CLR/SandboxingAPIs/CS/program.cs#1)]\\n [!code-vb[sandboxingApis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SandboxingAPIs/VB/program.vb#1)]\"\n  syntax:\n    content: public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The host evidence to match to a permission set.\n    return:\n      type: System.Security.PermissionSet\n      description: A permission set that can be used as a grant set for the application that has the provided evidence.\n  overload: System.Security.SecurityManager.GetStandardSandbox*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>evidence</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  commentId: M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  id: GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: GetZoneAndOrigin(ArrayList, ArrayList)\n  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList, ArrayList)\n  fullName: SecurityManager.GetZoneAndOrigin(ArrayList, ArrayList)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Gets the granted zone identity and URL identity permission sets for the current assembly.\n  remarks: \"The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <xref:System.Security.SecurityManager.ResolvePolicy%2A> for each evidence type. The permission sets returned from the <xref:System.Security.SecurityManager.ResolvePolicy%2A> calls identify the permissions granted to the executing assembly based on its zone and URL of origin.  \\n  \\n> [!NOTE]\\n>  This member makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key. Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key. The security exception is based on the Microsoft public key, not the ECMA pseudo key.\"\n  syntax:\n    content: public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);\n    parameters:\n    - id: zone\n      type: System.Collections.ArrayList\n      description: An output parameter that contains an <xref href=\"System.Collections.ArrayList\"></xref> of granted <xref href=\"System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone\"></xref> objects.\n    - id: origin\n      type: System.Collections.ArrayList\n      description: An output parameter that contains an <xref href=\"System.Collections.ArrayList\"></xref> of granted <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> objects.\n  overload: System.Security.SecurityManager.GetZoneAndOrigin*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The request for <xref href=\"System.Security.Permissions.StrongNameIdentityPermission\"></xref> failed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  commentId: M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  id: IsGranted(System.Security.IPermission)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: IsGranted(IPermission)\n  nameWithType: SecurityManager.IsGranted(IPermission)\n  fullName: SecurityManager.IsGranted(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines whether a permission is granted to the caller.\n  remarks: Granting of permissions is determined by policy and is different from a demand subject to overrides, such as an assert. Also, <xref:System.Security.SecurityManager.IsGranted%2A> only tests the grant of the calling code assembly, independent of other callers on the stack.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static bool IsGranted (System.Security.IPermission perm);\n    parameters:\n    - id: perm\n      type: System.Security.IPermission\n      description: The permission to test against the grant of the caller.\n    return:\n      type: System.Boolean\n      description: '`true` if the permissions granted to the caller include the permission <code>perm</code>; otherwise, `false`.'\n  overload: System.Security.SecurityManager.IsGranted*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  commentId: M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  id: LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: LoadPolicyLevelFromFile(String, PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String, PolicyLevelType)\n  fullName: SecurityManager.LoadPolicyLevelFromFile(String, PolicyLevelType)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Loads a <xref href=\"System.Security.Policy.PolicyLevel\"></xref> from the specified file.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);\n    parameters:\n    - id: path\n      type: System.String\n      description: The physical file path to a file containing the security policy information.\n    - id: type\n      type: System.Security.PolicyLevelType\n      description: One of the enumeration values that specifies the type of the policy level to be loaded.\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: The loaded policy level.\n  overload: System.Security.SecurityManager.LoadPolicyLevelFromFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The file indicated by the <code>path</code> parameter does not exist.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The code that calls this method does not have <xref href=\\\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\\\"></xref>.  \\n  \\n -or-  \\n  \\n The code that calls this method does not have <xref href=\\\"System.Security.Permissions.FileIOPermissionAccess.Read\\\"></xref>.  \\n  \\n -or-  \\n  \\n The code that calls this method does not have <xref href=\\\"System.Security.Permissions.FileIOPermissionAccess.Write\\\"></xref>.  \\n  \\n -or-  \\n  \\n The code that calls this method does not have <xref href=\\\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  commentId: M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  id: LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: LoadPolicyLevelFromString(String, PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromString(String, PolicyLevelType)\n  fullName: SecurityManager.LoadPolicyLevelFromString(String, PolicyLevelType)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Loads a <xref href=\"System.Security.Policy.PolicyLevel\"></xref> from the specified string.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);\n    parameters:\n    - id: str\n      type: System.String\n      description: The XML representation of a security policy level in the same form in which it appears in a configuration file.\n    - id: type\n      type: System.Security.PolicyLevelType\n      description: One of the enumeration values that specifies the type of the policy level to be loaded.\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: The loaded policy level.\n  overload: System.Security.SecurityManager.LoadPolicyLevelFromString*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>str</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>str</code> parameter is not valid.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.PolicyHierarchy\n  commentId: M:System.Security.SecurityManager.PolicyHierarchy\n  id: PolicyHierarchy\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: PolicyHierarchy()\n  nameWithType: SecurityManager.PolicyHierarchy()\n  fullName: SecurityManager.PolicyHierarchy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.\n  remarks: \"The returned enumerator provides successive <xref:System.Security.Policy.PolicyLevel> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy. These objects are the live policy objects; altering these objects can have unpredictable results.  \\n  \\n Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level. However, the hierarchy can include additional levels.\"\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Collections.IEnumerator PolicyHierarchy ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator for <xref href=\"System.Security.Policy.PolicyLevel\"></xref> objects that compose the security policy hierarchy.\n  overload: System.Security.SecurityManager.PolicyHierarchy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  commentId: M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  id: ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence)\n  fullName: SecurityManager.ResolvePolicy(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines what permissions to grant to code based on the specified evidence.\n  remarks: This method invokes the security policy engine, providing it with evidence of the calling code's identity. The result is determined by the security policy.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence set used to evaluate policy.\n    return:\n      type: System.Security.PermissionSet\n      description: The set of permissions that can be granted by the security system.\n  overload: System.Security.SecurityManager.ResolvePolicy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  commentId: M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  id: ResolvePolicy(System.Security.Policy.Evidence[])\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence[])\n  nameWithType: SecurityManager.ResolvePolicy(Evidence[])\n  fullName: SecurityManager.ResolvePolicy(Evidence[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines what permissions to grant to code based on the specified evidence.\n  remarks: This method invokes the security policy engine, providing it with an array of <xref:System.Security.Policy.Evidence> objects. The returned permission set represents only those permissions that apply to every evidence in the array. These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence. This method behaves as if you were performing an intersection on the results of resolving policy on each of the <xref:System.Security.Policy.Evidence> objects in the array.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);\n    parameters:\n    - id: evidences\n      type: System.Security.Policy.Evidence[]\n      description: An array of evidence objects used to evaluate policy.\n    return:\n      type: System.Security.PermissionSet\n      description: The set of permissions that is appropriate for all of the provided evidence.\n  overload: System.Security.SecurityManager.ResolvePolicy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  commentId: M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  id: ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet)\n  fullName: SecurityManager.ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines what permissions to grant to code based on the specified evidence and requests.\n  remarks: This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests. The result is determined by the security policy. This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter. The effective granted permissions are those in the granted set that are not in the denied set.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence set used to evaluate policy.\n    - id: reqdPset\n      type: System.Security.PermissionSet\n      description: The required permissions the code needs to run.\n    - id: optPset\n      type: System.Security.PermissionSet\n      description: The optional permissions that will be used if granted, but aren't required for the code to run.\n    - id: denyPset\n      type: System.Security.PermissionSet\n      description: The denied permissions that must never be granted to the code even if policy otherwise permits it.\n    - id: denied\n      type: System.Security.PermissionSet\n      description: An output parameter that contains the set of permissions not granted.\n    return:\n      type: System.Security.PermissionSet\n      description: The set of permissions that would be granted by the security system.\n  overload: System.Security.SecurityManager.ResolvePolicy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: Policy fails to grant the minimum required permissions specified by the <code>reqdPset</code> parameter.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  commentId: M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  id: ResolvePolicyGroups(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicyGroups(Evidence)\n  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)\n  fullName: SecurityManager.ResolvePolicyGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Gets a collection of code groups matching the specified evidence.\n  remarks: \"This method is useful in analyzing how a specified policy configuration works with specific kinds of evidence.  \\n  \\n Code groups will be returned from all applicable levels of the policy hierarchy matching the `evidence` parameter.\"\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence set against which the policy is evaluated.\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumeration of the set of code groups matching the evidence.\n  overload: System.Security.SecurityManager.ResolvePolicyGroups*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  commentId: M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  id: ResolveSystemPolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolveSystemPolicy(Evidence)\n  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)\n  fullName: SecurityManager.ResolveSystemPolicy(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Determines which permissions to grant to code based on the specified evidence, excluding the policy for the <xref href=\"System.AppDomain\"></xref> level.\n  remarks: This method invokes the security policy engine and provides it with evidence of the calling code's identity. The result is determined by the system security policy exclusive of any <xref:System.AppDomain> policy.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence set used to evaluate policy.\n    return:\n      type: System.Security.PermissionSet\n      description: The set of permissions that can be granted by the security system.\n  overload: System.Security.SecurityManager.ResolveSystemPolicy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.SavePolicy\n  commentId: M:System.Security.SecurityManager.SavePolicy\n  id: SavePolicy\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: SavePolicy()\n  nameWithType: SecurityManager.SavePolicy()\n  fullName: SecurityManager.SavePolicy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Saves the modified security policy state.\n  remarks: This method saves the policy as exposed by <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, and other classes that represent configuration of the security policy. Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static void SavePolicy ();\n    parameters: []\n  overload: System.Security.SecurityManager.SavePolicy*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  id: SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: SavePolicyLevel(PolicyLevel)\n  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)\n  fullName: SecurityManager.SavePolicyLevel(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Saves a modified security policy level loaded with <xref href=\"System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\"></xref>.\n  remarks: The <xref:System.Security.Policy.PolicyLevel> will be saved to the same location from which it loaded.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The policy level object to be saved.\n  overload: System.Security.SecurityManager.SavePolicyLevel*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method uses code access security (CAS) policy, which is obsolete in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the [<legacyCasPolicy> element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityManager.SecurityEnabled\n  commentId: P:System.Security.SecurityManager.SecurityEnabled\n  id: SecurityEnabled\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: SecurityEnabled\n  nameWithType: SecurityManager.SecurityEnabled\n  fullName: SecurityManager.SecurityEnabled\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security\n  summary: Gets or sets a value indicating whether security is enabled.\n  remarks: \"This property is used by the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)  \\n  \\n `-security` (`-s`) option to turn off code-based security.  \\n  \\n <xref:System.Security.SecurityManager.SecurityEnabled%2A> provides a way for administrators to disable code access security. When code access security is disabled, all code access demands succeed. Effectively, this grants all code `FullTrust`. Disabling code access security bypasses the security system so that code might perform slightly better than the equivalent security policy granting `FullTrust` to all code. This property does not disable role-based security; therefore, <xref:System.Security.Permissions.PrincipalPermission> demands are not affected.  \\n  \\n> [!CAUTION]\\n>  Disabling code access security makes the system vulnerable to attacks by malicious code such as viruses and worms. Disabling code access security does not automatically block managed code from running in any way. It only causes managed code to run without restriction by the code access security system, and should only be done with the most extreme caution. Turning off security to gain extra performance should only be done when other security measures have been taken to help protect system security. Examples of other security precautions include disconnecting from public networks, physically securing computers, and so on.  \\n  \\n A change to this property is not persisted in the registry until <xref:System.Security.SecurityManager.SavePolicy%2A> is called. New processes will not be affected by the change until it is persisted in the registry. Changing the value of this property in a running process does not necessarily change the state in the expected manner. To ensure changes have taken effect, you must call <xref:System.Security.SecurityManager.SavePolicy%2A> and start a new process.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The security manager cannot be turned off on MS runtime\")]\n\n      public static bool SecurityEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if security is enabled; otherwise, `false`.'\n  overload: System.Security.SecurityManager.SecurityEnabled*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The code that calls this method does not have <xref href=\"System.Security.Permissions.SecurityPermissionFlag.ControlPolicy\"></xref>.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Security.SecurityManager.CheckExecutionRights\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: CheckExecutionRights\n  nameWithType: SecurityManager.CheckExecutionRights\n  fullName: SecurityManager.CheckExecutionRights\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: CurrentThreadRequiresSecurityContextCapture()\n  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n  fullName: SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: GetStandardSandbox(Evidence)\n  nameWithType: SecurityManager.GetStandardSandbox(Evidence)\n  fullName: SecurityManager.GetStandardSandbox(Evidence)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: GetZoneAndOrigin(ArrayList, ArrayList)\n  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList, ArrayList)\n  fullName: SecurityManager.GetZoneAndOrigin(ArrayList, ArrayList)\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: IsGranted(IPermission)\n  nameWithType: SecurityManager.IsGranted(IPermission)\n  fullName: SecurityManager.IsGranted(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: LoadPolicyLevelFromFile(String, PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String, PolicyLevelType)\n  fullName: SecurityManager.LoadPolicyLevelFromFile(String, PolicyLevelType)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.PolicyLevelType\n  parent: System.Security\n  isExternal: false\n  name: PolicyLevelType\n  nameWithType: PolicyLevelType\n  fullName: System.Security.PolicyLevelType\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: LoadPolicyLevelFromString(String, PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromString(String, PolicyLevelType)\n  fullName: SecurityManager.LoadPolicyLevelFromString(String, PolicyLevelType)\n- uid: System.Security.SecurityManager.PolicyHierarchy\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: PolicyHierarchy()\n  nameWithType: SecurityManager.PolicyHierarchy()\n  fullName: SecurityManager.PolicyHierarchy()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence)\n  fullName: SecurityManager.ResolvePolicy(Evidence)\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence[])\n  nameWithType: SecurityManager.ResolvePolicy(Evidence[])\n  fullName: SecurityManager.ResolvePolicy(Evidence[])\n- uid: System.Security.Policy.Evidence[]\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence[]\n  nameWithType: Evidence[]\n  fullName: System.Security.Policy.Evidence[]\n  spec.csharp:\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    nameWithType: Evidence\n    fullName: System.Security.Policy.Evidence\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet)\n  fullName: SecurityManager.ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet)\n- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicyGroups(Evidence)\n  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)\n  fullName: SecurityManager.ResolvePolicyGroups(Evidence)\n- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolveSystemPolicy(Evidence)\n  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)\n  fullName: SecurityManager.ResolveSystemPolicy(Evidence)\n- uid: System.Security.SecurityManager.SavePolicy\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SavePolicy()\n  nameWithType: SecurityManager.SavePolicy()\n  fullName: SecurityManager.SavePolicy()\n- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SavePolicyLevel(PolicyLevel)\n  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)\n  fullName: SecurityManager.SavePolicyLevel(PolicyLevel)\n- uid: System.Security.SecurityManager.SecurityEnabled\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SecurityEnabled\n  nameWithType: SecurityManager.SecurityEnabled\n  fullName: SecurityManager.SecurityEnabled\n- uid: System.Security.SecurityManager.CheckExecutionRights*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: CheckExecutionRights\n  nameWithType: SecurityManager.CheckExecutionRights\n  fullName: SecurityManager.CheckExecutionRights\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: CurrentThreadRequiresSecurityContextCapture\n  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  fullName: SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.GetStandardSandbox*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: GetStandardSandbox\n  nameWithType: SecurityManager.GetStandardSandbox\n  fullName: SecurityManager.GetStandardSandbox\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.GetZoneAndOrigin*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: GetZoneAndOrigin\n  nameWithType: SecurityManager.GetZoneAndOrigin\n  fullName: SecurityManager.GetZoneAndOrigin\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.IsGranted*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: IsGranted\n  nameWithType: SecurityManager.IsGranted\n  fullName: SecurityManager.IsGranted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: LoadPolicyLevelFromFile\n  nameWithType: SecurityManager.LoadPolicyLevelFromFile\n  fullName: SecurityManager.LoadPolicyLevelFromFile\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromString*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: LoadPolicyLevelFromString\n  nameWithType: SecurityManager.LoadPolicyLevelFromString\n  fullName: SecurityManager.LoadPolicyLevelFromString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.PolicyHierarchy*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: PolicyHierarchy\n  nameWithType: SecurityManager.PolicyHierarchy\n  fullName: SecurityManager.PolicyHierarchy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.ResolvePolicy*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy\n  nameWithType: SecurityManager.ResolvePolicy\n  fullName: SecurityManager.ResolvePolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.ResolvePolicyGroups*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicyGroups\n  nameWithType: SecurityManager.ResolvePolicyGroups\n  fullName: SecurityManager.ResolvePolicyGroups\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.ResolveSystemPolicy*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolveSystemPolicy\n  nameWithType: SecurityManager.ResolveSystemPolicy\n  fullName: SecurityManager.ResolveSystemPolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.SavePolicy*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SavePolicy\n  nameWithType: SecurityManager.SavePolicy\n  fullName: SecurityManager.SavePolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.SavePolicyLevel*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SavePolicyLevel\n  nameWithType: SecurityManager.SavePolicyLevel\n  fullName: SecurityManager.SavePolicyLevel\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Security.SecurityManager.SecurityEnabled*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SecurityEnabled\n  nameWithType: SecurityManager.SecurityEnabled\n  fullName: SecurityManager.SecurityEnabled\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}