{"nodes":[{"content":"Controls the ability to access key containers. This class cannot be inherited.","nodes":[{"pos":[0,78],"content":"Controls the ability to access key containers. This class cannot be inherited.","nodes":[{"content":"Controls the ability to access key containers. This class cannot be inherited.","pos":[0,78],"nodes":[{"content":"Controls the ability to access key containers.","pos":[0,46]},{"content":"This class cannot be inherited.","pos":[47,78]}]}]}],"pos":[1581,1660],"yaml":true},{"content":"This permission is used to provide limited access to key containers.","nodes":[{"pos":[0,68],"content":"This permission is used to provide limited access to key containers.","nodes":[{"content":"This permission is used to provide limited access to key containers.","pos":[0,68]}]}],"pos":[1671,1740],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with the specified access.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph> class with the specified access.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with the specified access."}],"pos":[4808,4947],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,113],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[6029,6143],"yaml":true},{"content":"<code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid combination of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[6321,6459],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with either restricted or unrestricted permission.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph> class with either restricted or unrestricted permission.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with either restricted or unrestricted permission."}],"pos":[7862,8025],"yaml":true},{"content":"Creates either `None` (fully restricted) or `Unrestricted` access to key containers.","nodes":[{"pos":[0,84],"content":"Creates either <ph id=\"ph1\">`None`</ph> (fully restricted) or <ph id=\"ph2\">`Unrestricted`</ph> access to key containers.","source":"Creates either `None` (fully restricted) or `Unrestricted` access to key containers."}],"pos":[8036,8121],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[8334,8418],"yaml":true},{"content":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."}],"pos":[8596,8702],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with the specified global access and specific key container access rights.","nodes":[{"pos":[0,186],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph> class with the specified global access and specific key container access rights.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with the specified global access and specific key container access rights."}],"pos":[10480,10667],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,113],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[11895,12009],"yaml":true},{"content":"An array of <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects identifying specific key container access rights.","nodes":[{"pos":[0,152],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> objects identifying specific key container access rights.","source":"An array of <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects identifying specific key container access rights."}],"pos":[12125,12278],"yaml":true},{"content":"<code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid combination of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[12456,12594],"yaml":true},{"content":"<code>accessList</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;accessList&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>accessList</code> is `null`."}],"pos":[12696,12731],"yaml":true},{"content":"Gets the collection of <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects associated with the current permission.","nodes":[{"pos":[0,153],"content":"Gets the collection of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> objects associated with the current permission.","source":"Gets the collection of <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects associated with the current permission."}],"pos":[13940,14094],"yaml":true},{"content":"Each <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection specifies the access rights for a specific key container.","nodes":[{"pos":[0,156],"content":"Each <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection specifies the access rights for a specific key container.","nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object in the collection specifies the access rights for a specific key container.","pos":[0,156],"source":"Each <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection specifies the access rights for a specific key container."}]}],"pos":[14105,14262],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"></xref> containing the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects for this <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>.","nodes":[{"pos":[0,282],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"&gt;&lt;/xref&gt;</ph> containing the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> objects for this <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"></xref> containing the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects for this <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>."}],"pos":[14502,14785],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[16039,16104],"yaml":true},{"content":"A copy of the permission represents the same access to resources as the original permission.","nodes":[{"pos":[0,92],"content":"A copy of the permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of the permission represents the same access to resources as the original permission.","pos":[0,92]}]}],"pos":[16115,16208],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[16374,16408],"yaml":true},{"content":"Gets the key container permission flags that apply to all key containers associated with the permission.","nodes":[{"pos":[0,104],"content":"Gets the key container permission flags that apply to all key containers associated with the permission.","nodes":[{"content":"Gets the key container permission flags that apply to all key containers associated with the permission.","pos":[0,104]}]}],"pos":[17655,17760],"yaml":true},{"content":"The <xref:System.Security.Permissions.KeyContainerPermission.Flags%2A> property is set by the constructor.","nodes":[{"pos":[0,106],"content":"The <xref:System.Security.Permissions.KeyContainerPermission.Flags%2A> property is set by the constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermission.Flags%2A&gt;</ph> property is set by the constructor.","pos":[0,106],"source":"The <xref:System.Security.Permissions.KeyContainerPermission.Flags%2A> property is set by the constructor."}]}],"pos":[17771,17878],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,113],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[18078,18192],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[19600,19671],"yaml":true},{"content":"The <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.KeyContainerPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.KeyContainerPermission>, including state information.","nodes":[{"pos":[0,429],"content":"The <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.KeyContainerPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.KeyContainerPermission>, including state information.","nodes":[{"content":"The <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.KeyContainerPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.KeyContainerPermission>, including state information.","pos":[0,429],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermission&gt;</ph> object from an XML encoding defined by the <ph id=\"ph3\">&lt;xref:System.Security.SecurityElement&gt;</ph> class.","pos":[0,241],"source":"The <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.KeyContainerPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A&gt;</ph> method to XML-encode the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermission&gt;</ph>, including state information.","pos":[242,429],"source":" Use the <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.KeyContainerPermission>, including state information."}]}]}],"pos":[19682,20112],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding used to reconstruct the permission.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> that contains the XML encoding used to reconstruct the permission.","source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding used to reconstruct the permission."}],"pos":[20320,20442],"yaml":true},{"content":"<code>securityElement</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityElement</code> is `null`."}],"pos":[20630,20670],"yaml":true},{"content":"<code>securityElement</code> is not a valid permission element.  \n  \n -or-  \n  \n The version number of <code>securityElement</code> is not supported.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not a valid permission element.","source":"<code>securityElement</code> is not a valid permission element."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,149],"content":"The version number of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not supported.","source":"The version number of <code>securityElement</code> is not supported."}],"pos":[20764,20920],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[22229,22343],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.","nodes":[{"pos":[0,200],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.","pos":[0,200],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both individual permissions will pass the intersection.","pos":[119,200]}]}]}],"pos":[22354,22555],"yaml":true,"extradata":"MT"},{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","nodes":[{"pos":[0,106],"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","pos":[0,106],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be the same type as the current permission.","pos":[55,106]}]}]}],"pos":[22762,22869],"yaml":true},{"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"pos":[0,165],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[106,165],"source":" This new permission is `null` if the intersection is empty."}]}],"pos":[22940,23106],"yaml":true},{"content":"<code>target</code> is not `null` and does not specify a permission of the same type as the current permission.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <ph id=\"ph2\">`null`</ph> and does not specify a permission of the same type as the current permission.","source":"<code>target</code> is not `null` and does not specify a permission of the same type as the current permission."}],"pos":[23288,23400],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[24715,24798],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission. For example, a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open> access is a subset of a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags> access.","nodes":[{"pos":[0,389],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission. For example, a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open> access is a subset of a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags> access.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission. For example, a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open> access is a subset of a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags> access.","pos":[0,389],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission.","pos":[0,172]},{"content":"For example, a permission for <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Open&gt;</ph> access is a subset of a permission for <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags&gt;</ph> access.","pos":[173,389],"source":" For example, a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open> access is a subset of a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags> access."}]}]}],"pos":[24809,25199],"yaml":true,"extradata":"MT"},{"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","nodes":[{"pos":[0,114],"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","nodes":[{"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","pos":[0,114],"nodes":[{"content":"A permission to test for the subset relationship.","pos":[0,49]},{"content":"This permission must be the same type as the current permission.","pos":[50,114]}]}]}],"pos":[25384,25499],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[25557,25653],"yaml":true},{"content":"<code>target</code> is not `null` and does not specify a permission of the same type as the current permission.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <ph id=\"ph2\">`null`</ph> and does not specify a permission of the same type as the current permission.","source":"<code>target</code> is not `null` and does not specify a permission of the same type as the current permission."}],"pos":[25836,25948],"yaml":true},{"content":"Determines whether the current permission is unrestricted.","nodes":[{"pos":[0,58],"content":"Determines whether the current permission is unrestricted.","nodes":[{"content":"Determines whether the current permission is unrestricted.","pos":[0,58]}]}],"pos":[27167,27226],"yaml":true},{"content":"An unrestricted permission represents access to all resources protected by the permission.","nodes":[{"pos":[0,90],"content":"An unrestricted permission represents access to all resources protected by the permission.","nodes":[{"content":"An unrestricted permission represents access to all resources protected by the permission.","pos":[0,90]}]}],"pos":[27237,27328],"yaml":true,"extradata":"MT"},{"content":"`true` if the current permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is unrestricted; otherwise, `false`."}],"pos":[27459,27531],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[28792,28857],"yaml":true},{"content":"Use the <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.","nodes":[{"pos":[0,163],"content":"Use the <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id=\"ph2\">&lt;xref:System.Security.SecurityElement&gt;</ph>.","pos":[0,163],"source":"Use the <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>."}]}],"pos":[28868,29032],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including state information.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> that contains an XML encoding of the permission, including state information.","source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including state information."}],"pos":[29207,29340],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[30712,30807],"yaml":true},{"content":"The result of a call to <xref:System.Security.Permissions.KeyContainerPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,271],"content":"The result of a call to <xref:System.Security.Permissions.KeyContainerPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"content":"The result of a call to <xref:System.Security.Permissions.KeyContainerPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,271],"nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermission.Union%2A&gt;</ph> is a permission that represents all operations represented by both the current permission and the specified permission.","pos":[0,210],"source":"The result of a call to <xref:System.Security.Permissions.KeyContainerPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[211,271]}]}]}],"pos":[30818,31090],"yaml":true,"extradata":"MT"},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[31293,31401],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[31472,31571],"yaml":true},{"content":"<code>target</code> is not `null` and does not specify a permission of the same type as the current permission.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <ph id=\"ph2\">`null`</ph> and does not specify a permission of the same type as the current permission.","source":"<code>target</code> is not `null` and does not specify a permission of the same type as the current permission."}],"pos":[31749,31861],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermission\n  commentId: T:System.Security.Permissions.KeyContainerPermission\n  id: KeyContainerPermission\n  children:\n  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  - System.Security.Permissions.KeyContainerPermission.AccessEntries\n  - System.Security.Permissions.KeyContainerPermission.Copy\n  - System.Security.Permissions.KeyContainerPermission.Flags\n  - System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  - System.Security.Permissions.KeyContainerPermission.ToXml\n  - System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: KeyContainerPermission\n  nameWithType: KeyContainerPermission\n  fullName: System.Security.Permissions.KeyContainerPermission\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Controls the ability to access key containers. This class cannot be inherited.\n  remarks: This permission is used to provide limited access to key containers.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  commentId: M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: KeyContainerPermission(KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with the specified access.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermission.%23ctor%28System.Security.Permissions.KeyContainerPermissionFlags%29?displayProperty=fullName> constructor.  \\n  \\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#20)]\\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#20)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#20)]\"\n  syntax:\n    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: KeyContainerPermission(PermissionState)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)\n  fullName: KeyContainerPermission.KeyContainerPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with either restricted or unrestricted permission.\n  remarks: Creates either `None` (fully restricted) or `Unrestricted` access to key containers.\n  syntax:\n    content: public KeyContainerPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  commentId: M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])'\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])\n  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> class with the specified global access and specific key container access rights.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermission.%23ctor%28System.Security.Permissions.KeyContainerPermissionFlags%2CSystem.Security.Permissions.KeyContainerPermissionAccessEntry%5B%5D%29?displayProperty=fullName> constructor.  \\n  \\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#13)]\\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#13)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#13)]\"\n  syntax:\n    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags, System.Security.Permissions.KeyContainerPermissionAccessEntry[] accessList);\n    parameters:\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n    - id: accessList\n      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]\n      description: An array of <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects identifying specific key container access rights.\n  overload: System.Security.Permissions.KeyContainerPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>accessList</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries\n  commentId: P:System.Security.Permissions.KeyContainerPermission.AccessEntries\n  id: AccessEntries\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: AccessEntries\n  nameWithType: KeyContainerPermission.AccessEntries\n  fullName: KeyContainerPermission.AccessEntries\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets the collection of <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects associated with the current permission.\n  remarks: Each <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection specifies the access rights for a specific key container.\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries { get; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\n      description: A <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"></xref> containing the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects for this <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>.\n  overload: System.Security.Permissions.KeyContainerPermission.AccessEntries*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.Copy\n  commentId: M:System.Security.Permissions.KeyContainerPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: KeyContainerPermission.Copy()\n  fullName: KeyContainerPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of the permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.KeyContainerPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.Flags\n  commentId: P:System.Security.Permissions.KeyContainerPermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermission.Flags\n  fullName: KeyContainerPermission.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets the key container permission flags that apply to all key containers associated with the permission.\n  remarks: The <xref:System.Security.Permissions.KeyContainerPermission.Flags%2A> property is set by the constructor.\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermission.Flags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: KeyContainerPermission.FromXml(SecurityElement)\n  fullName: KeyContainerPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  remarks: The <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.KeyContainerPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.KeyContainerPermission>, including state information.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding used to reconstruct the permission.\n  overload: System.Security.Permissions.KeyContainerPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>securityElement</code> is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number of <code>securityElement</code> is not supported.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: KeyContainerPermission.Intersect(IPermission)\n  fullName: KeyContainerPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.\n  overload: System.Security.Permissions.KeyContainerPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not `null` and does not specify a permission of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)\n  fullName: KeyContainerPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission. For example, a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open> access is a subset of a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags> access.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to test for the subset relationship. This permission must be the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not `null` and does not specify a permission of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: KeyContainerPermission.IsUnrestricted()\n  fullName: KeyContainerPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is unrestricted; otherwise, `false`.'\n  overload: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.ToXml\n  commentId: M:System.Security.Permissions.KeyContainerPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: KeyContainerPermission.ToXml()\n  fullName: KeyContainerPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: Use the <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including state information.\n  overload: System.Security.Permissions.KeyContainerPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: KeyContainerPermission.Union(IPermission)\n  fullName: KeyContainerPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to <xref:System.Security.Permissions.KeyContainerPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.KeyContainerPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not `null` and does not specify a permission of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission(KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission(PermissionState)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)\n  fullName: KeyContainerPermission.KeyContainerPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])\n  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry[]\n  nameWithType: KeyContainerPermissionAccessEntry[]\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]\n  spec.csharp:\n  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n    name: KeyContainerPermissionAccessEntry\n    nameWithType: KeyContainerPermissionAccessEntry\n    fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: AccessEntries\n  nameWithType: KeyContainerPermission.AccessEntries\n  fullName: KeyContainerPermission.AccessEntries\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionAccessEntryCollection\n  nameWithType: KeyContainerPermissionAccessEntryCollection\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\n- uid: System.Security.Permissions.KeyContainerPermission.Copy\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: KeyContainerPermission.Copy()\n  fullName: KeyContainerPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.KeyContainerPermission.Flags\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermission.Flags\n  fullName: KeyContainerPermission.Flags\n- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: KeyContainerPermission.FromXml(SecurityElement)\n  fullName: KeyContainerPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: KeyContainerPermission.Intersect(IPermission)\n  fullName: KeyContainerPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)\n  fullName: KeyContainerPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: KeyContainerPermission.IsUnrestricted()\n  fullName: KeyContainerPermission.IsUnrestricted()\n- uid: System.Security.Permissions.KeyContainerPermission.ToXml\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: KeyContainerPermission.ToXml()\n  fullName: KeyContainerPermission.ToXml()\n- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: KeyContainerPermission.Union(IPermission)\n  fullName: KeyContainerPermission.Union(IPermission)\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission\n  nameWithType: KeyContainerPermission.KeyContainerPermission\n  fullName: KeyContainerPermission.KeyContainerPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: AccessEntries\n  nameWithType: KeyContainerPermission.AccessEntries\n  fullName: KeyContainerPermission.AccessEntries\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.Copy*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Copy\n  nameWithType: KeyContainerPermission.Copy\n  fullName: KeyContainerPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.Flags*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermission.Flags\n  fullName: KeyContainerPermission.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.FromXml*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: KeyContainerPermission.FromXml\n  fullName: KeyContainerPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.Intersect*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: KeyContainerPermission.Intersect\n  fullName: KeyContainerPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: KeyContainerPermission.IsSubsetOf\n  fullName: KeyContainerPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: KeyContainerPermission.IsUnrestricted\n  fullName: KeyContainerPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.ToXml*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: KeyContainerPermission.ToXml\n  fullName: KeyContainerPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.Permissions.KeyContainerPermission.Union*\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Union\n  nameWithType: KeyContainerPermission.Union\n  fullName: KeyContainerPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}