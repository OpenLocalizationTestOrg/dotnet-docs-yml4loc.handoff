<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27e4efe9a8692c3103089cd7e83252aed01772ea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Configuration.LocalFileSettingsProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09938afc6286a5eda25583968884ecd5f6f8dc5a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91097ac4600970f282f9696a8f1017226772e57a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides persistence for application settings classes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting providers define a mechanism for storing configuration data used in the application settings architecture.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> contains a single default settings provider, <ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>, which stores configuration data to the local file system.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application settings property or group of properties are associated to a specific settings provider through the use of the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, many of the members of <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> delegate their work to the associated settings provider.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> persists settings to configuration files that have the extension <ph id="ph2">`.config`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of configuration files are structured as XML documents.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an <ph id="ph1">`&lt;applicationSettings&gt;`</ph> or a <ph id="ph2">`&lt;userSettings&gt;`</ph> section group, respectively.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these section groups is represented by a corresponding <ph id="ph1">&lt;xref:System.Configuration.AppSettingsSection&gt;</ph> or <ph id="ph2">&lt;xref:System.Configuration.ClientSettingsSection&gt;</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each section object is owned and administered by a configuration section handler, which is an object of type <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application-scoped settings and the default user-scoped settings are stored in a file named <ph id="ph1">`application.exe.config`</ph>, which is created in the same directory as the executable file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application configuration settings are read-only.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specific user data is stored in a file named <ph id="ph1">`user.config`</ph>, stored under the user's home directory.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If roaming profiles are enabled, two versions of the user configuration file could exist.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about application settings, see <bpt id="p1">[</bpt>Application Settings for Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Configuration.LocalFileSettingsProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor sets the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the currently running application.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</ph> properties help to disambiguate similarly named setting properties in different applications.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A string that contains the application's display name.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the value of the named settings property for the previous version of the same application.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A&gt;</ph> method is often used in conjunction with the <ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> method when migrating application settings during the installation of a new version of an application.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsContext"&gt;&lt;/xref&gt;</ph> that describes where the application settings property is used.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Configuration.SettingsProperty"&gt;&lt;/xref&gt;</ph> whose value is to be returned.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyValue"&gt;&lt;/xref&gt;</ph> representing the application setting if found; otherwise, <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the collection of setting property values for the specified application instance and settings property group.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A&gt;</ph> method also manages the special application settings type <ph id="ph2">&lt;xref:System.Configuration.SpecialSetting.ConnectionString&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Connection strings are stored in a special section of the configuration file delimited by the element <ph id="ph1">`&lt;connectionstrings&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not use encryption to persist any settings.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id="p1">](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsContext"&gt;&lt;/xref&gt;</ph> describing the current application usage.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyCollection"&gt;&lt;/xref&gt;</ph> containing the settings property group whose values are to be retrieved.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyValueCollection"&gt;&lt;/xref&gt;</ph> containing the values for the specified settings property group.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes the provider.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The friendly name of the provider.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Resets all application settings properties associated with the specified application to their default values.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.Reset%2A&gt;</ph> method restores the stored values of the specified application settings group.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The action of <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.Reset%2A&gt;</ph> depends on the scope of the application settings property:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application-scoped settings are not affected.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, <ph id="ph1">`application.exe.config`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that if roaming profiles are used, there can be two <ph id="ph1">`user.config`</ph> files, one for the local settings and one for the roaming profile.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsContext"&gt;&lt;/xref&gt;</ph> describing the current application usage.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sets the values of the specified group of property settings.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>A settings wrapper class, derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, contains the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method, which is called to persist the values of all of its settings properties.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enumerates through all the settings providers associated with its settings properties, and calls the <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> method for each <ph id="ph2">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> to perform the actual serialization operation.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A&gt;</ph> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate <ph id="ph2">`user.config`</ph> configuration file.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A&gt;</ph> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type has an associated <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> with a <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertToString%2A&gt;</ph> method implementation, this conversion is used.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML serialization is used.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can specify a preferred serialization mechanism by using the <ph id="ph1">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not support binary serialization in <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The next read access for this property will simply use the default value.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not use encryption to persist any settings.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id="p1">](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsContext"&gt;&lt;/xref&gt;</ph> describing the current application usage.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyValueCollection"&gt;&lt;/xref&gt;</ph> representing the group of property settings to set.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>There was a general failure saving the settings to the configuration file.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Attempts to migrate previous user-scoped settings from a previous version of the same application.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> migrates the local and roaming settings in separate operations.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> method is suppressed for every application setting that has the <ph id="ph2">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph> applied to it, or to the entire settings wrapper class, derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This way this method is called depends on the type of application that is being upgraded:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each version of a <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application is stored in its own isolated installation directory.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a new version of a <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application is installed, and when the new version is first run, internal logic will automatically call <ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> to migrate all common application settings to the new version.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ClickOnce and Application Settings<ept id="p1">](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard Windows Forms and console applications must manually call <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph>, because there is not a general, automatic way to determine when such an application is first run.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like <ph id="ph1">`IsFirstRun`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsContext"&gt;&lt;/xref&gt;</ph> describing the current application usage.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyCollection"&gt;&lt;/xref&gt;</ph> containing the settings property group whose values are to be retrieved.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The previous version of the configuration file could not be accessed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>