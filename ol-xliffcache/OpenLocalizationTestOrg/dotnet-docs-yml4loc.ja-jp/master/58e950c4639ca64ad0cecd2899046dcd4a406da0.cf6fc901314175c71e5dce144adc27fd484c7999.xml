{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.UIElement.ManipulationStarting\"></xref>, event.","nodes":[{"pos":[0,96],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.ManipulationStarting\"&gt;&lt;/xref&gt;</ph>, event.","source":"Provides data for the <xref href=\"System.Windows.UIElement.ManipulationStarting\"></xref>, event."}],"pos":[1119,1216],"yaml":true},{"content":"The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.  Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:  \n  \n-   Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.  \n  \n-   Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName> property.  \n  \n-   Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.  \n  \n-   Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property.  \n  \n-   Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName> property to `true`.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,203],"content":"The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.  Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:","nodes":[{"content":"The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.  Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:","pos":[0,203],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;</ph> enable you to specify the behavior of a manipulation.","pos":[0,115],"source":"The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;</ph> to do the following:","pos":[117,203],"source":"  Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:"}]}]},{"pos":[213,379],"content":"Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.","nodes":[{"content":"Specify that the position should be relative to an element by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</ph> property.","pos":[0,166],"source":"Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property."}]},{"pos":[389,575],"content":"Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName> property.","nodes":[{"content":"Specify whether single-finger manipulation are enabled by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,186],"source":"Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName> property."}]},{"pos":[585,811],"content":"Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.","nodes":[{"content":"Specify which types of manipulation are enabled by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt;</ph> property to a <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationModes&gt;</ph> enumeration.","pos":[0,226],"source":"Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName> property to a <xref:System.Windows.Input.ManipulationModes> enumeration."}]},{"pos":[821,984],"content":"Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property.","nodes":[{"content":"Specify the center of a single-finger rotation by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,163],"source":"Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property."}]},{"pos":[994,1145],"content":"Cancel the manipulation by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","source":"Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName> property to `true`."},{"pos":[1152,1476],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[118,324],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[1227,2718],"yaml":true,"extradata":"MT"},{"content":"Cancels the manipulation and promotes touch to mouse events.","nodes":[{"pos":[0,60],"content":"Cancels the manipulation and promotes touch to mouse events.","nodes":[{"content":"Cancels the manipulation and promotes touch to mouse events.","pos":[0,60]}]}],"pos":[4634,4695],"yaml":true},{"content":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.","nodes":[{"pos":[0,174],"content":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.","nodes":[{"content":"If the method succeeds, the default <ph id=\"ph1\">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> sends previous touch down events as mouse down events and future manipulation events do not occur.","pos":[0,174],"source":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur."}]}],"pos":[4706,4881],"yaml":true,"extradata":"MT"},{"content":"`true` if touch was successfully promoted to mouse events, otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if touch was successfully promoted to mouse events, otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if touch was successfully promoted to mouse events, otherwise, `false`."}],"pos":[5004,5085],"yaml":true},{"content":"Gets or sets whether one finger can start a manipulation.","nodes":[{"pos":[0,57],"content":"Gets or sets whether one finger can start a manipulation.","nodes":[{"content":"Gets or sets whether one finger can start a manipulation.","pos":[0,57]}]}],"pos":[7732,7790],"yaml":true},{"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,324],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[118,324],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[7801,8128],"yaml":true,"extradata":"MT"},{"content":"`true` one finger can start a manipulation; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,86],"content":"`true` one finger can start a manipulation; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> one finger can start a manipulation; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` one finger can start a manipulation; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[64,86],"source":" The default is `true`."}]}],"pos":[8256,8345],"yaml":true},{"content":"Gets or sets the container that all manipulation events and calculations are relative to.","nodes":[{"pos":[0,89],"content":"Gets or sets the container that all manipulation events and calculations are relative to.","nodes":[{"content":"Gets or sets the container that all manipulation events and calculations are relative to.","pos":[0,89]}]}],"pos":[9506,9596],"yaml":true},{"content":"You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property. For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events. The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,507],"content":"You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property. For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events. The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.","nodes":[{"content":"You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property. For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events. The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.","pos":[0,507],"nodes":[{"content":"You can specify that the position should be relative to another element by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</ph> property.","pos":[0,179],"source":"You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property."},{"content":"For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events.","pos":[180,309]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph> event handler is the only place in which you can set the <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</ph>.","pos":[310,507],"source":" The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>."}]}]},{"pos":[514,838],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[118,324],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[9607,10450],"yaml":true,"extradata":"MT"},{"content":"The container that all manipulation events and calculations are relative to. The default is the element on which the event occurred.","nodes":[{"pos":[0,132],"content":"The container that all manipulation events and calculations are relative to. The default is the element on which the event occurred.","nodes":[{"content":"The container that all manipulation events and calculations are relative to. The default is the element on which the event occurred.","pos":[0,132],"nodes":[{"content":"The container that all manipulation events and calculations are relative to.","pos":[0,76]},{"content":"The default is the element on which the event occurred.","pos":[77,132]}]}]}],"pos":[10617,10750],"yaml":true},{"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","nodes":[{"pos":[0,85],"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","nodes":[{"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","pos":[0,85]}]}],"pos":[11880,11966],"yaml":true},{"content":"A collection of objects that represents the touch contacts for the manipulation.","nodes":[{"pos":[0,80],"content":"A collection of objects that represents the touch contacts for the manipulation.","nodes":[{"content":"A collection of objects that represents the touch contacts for the manipulation.","pos":[0,80]}]}],"pos":[12209,12290],"yaml":true},{"content":"Gets or sets which types of manipulations are possible.","nodes":[{"pos":[0,55],"content":"Gets or sets which types of manipulations are possible.","nodes":[{"content":"Gets or sets which types of manipulations are possible.","pos":[0,55]}]}],"pos":[13341,13397],"yaml":true},{"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,324],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[118,324],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[13408,13735],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values. The default is <xref href=\"System.Windows.Input.ManipulationModes.All\"></xref>.","nodes":[{"pos":[0,110],"content":"One of the enumeration values. The default is <xref href=\"System.Windows.Input.ManipulationModes.All\"></xref>.","nodes":[{"content":"One of the enumeration values.","pos":[0,30]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ManipulationModes.All\"&gt;&lt;/xref&gt;</ph>.","pos":[31,110],"source":" The default is <xref href=\"System.Windows.Input.ManipulationModes.All\"></xref>."}]}],"pos":[13905,14016],"yaml":true},{"content":"The property is set to a value other than one or more of the <xref href=\"System.Windows.Input.ManipulationModes\"></xref> enumerations value","nodes":[{"pos":[0,139],"content":"The property is set to a value other than one or more of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ManipulationModes\"&gt;&lt;/xref&gt;</ph> enumerations value","source":"The property is set to a value other than one or more of the <xref href=\"System.Windows.Input.ManipulationModes\"></xref> enumerations value"}],"pos":[14193,14333],"yaml":true},{"content":"Gets or sets an object that describes the pivot for a single-point manipulation.","nodes":[{"pos":[0,80],"content":"Gets or sets an object that describes the pivot for a single-point manipulation.","nodes":[{"content":"Gets or sets an object that describes the pivot for a single-point manipulation.","pos":[0,80]}]}],"pos":[15318,15399],"yaml":true},{"content":"When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.  This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.  If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,455],"content":"When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.  This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.  If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.","nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A&gt;</ph> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.","pos":[0,190],"source":"When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation."},{"content":"This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.","pos":[192,320]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A&gt;</ph> is <ph id=\"ph2\">`null`</ph>, the user must use two fingers to cause rotation.","pos":[322,455],"source":"  If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation."}]},{"pos":[462,786],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[118,324],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[15410,16201],"yaml":true,"extradata":"MT"},{"content":"An object that describes the pivot for a single-point manipulation.","nodes":[{"pos":[0,67],"content":"An object that describes the pivot for a single-point manipulation.","nodes":[{"content":"An object that describes the pivot for a single-point manipulation.","pos":[0,67]}]}],"pos":[17210,17278],"yaml":true},{"content":"Adds parameters to the current manipulation of the specified element.","nodes":[{"pos":[0,69],"content":"Adds parameters to the current manipulation of the specified element.","nodes":[{"content":"Adds parameters to the current manipulation of the specified element.","pos":[0,69]}]}],"pos":[18723,18793],"yaml":true},{"content":"You typically do not need to call this method.  Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.","nodes":[{"pos":[0,140],"content":"You typically do not need to call this method.  Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.","nodes":[{"content":"You typically do not need to call this method.  Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.","pos":[0,140],"nodes":[{"content":"You typically do not need to call this method.","pos":[0,46]},{"content":"Use the properties on the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;</ph> instead.","pos":[48,140],"source":"  Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead."}]}]}],"pos":[18804,18945],"yaml":true,"extradata":"MT"},{"content":"The parameter to add.","nodes":[{"pos":[0,21],"content":"The parameter to add.","nodes":[{"content":"The parameter to add.","pos":[0,21]}]}],"pos":[19262,19284],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationStartingEventArgs\n  commentId: T:System.Windows.Input.ManipulationStartingEventArgs\n  id: ManipulationStartingEventArgs\n  children:\n  - System.Windows.Input.ManipulationStartingEventArgs.Cancel\n  - System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled\n  - System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer\n  - System.Windows.Input.ManipulationStartingEventArgs.Manipulators\n  - System.Windows.Input.ManipulationStartingEventArgs.Mode\n  - System.Windows.Input.ManipulationStartingEventArgs.Pivot\n  - System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)\n  langs:\n  - csharp\n  name: ManipulationStartingEventArgs\n  nameWithType: ManipulationStartingEventArgs\n  fullName: System.Windows.Input.ManipulationStartingEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides data for the <xref href=\"System.Windows.UIElement.ManipulationStarting\"></xref>, event.\n  remarks: \"The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.  Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:  \\n  \\n-   Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.  \\n  \\n-   Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName> property.  \\n  \\n-   Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.  \\n  \\n-   Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property.  \\n  \\n-   Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName> property to `true`.  \\n  \\n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).\"\n  syntax:\n    content: 'public sealed class ManipulationStartingEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Cancel\n  commentId: M:System.Windows.Input.ManipulationStartingEventArgs.Cancel\n  id: Cancel\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: ManipulationStartingEventArgs.Cancel()\n  fullName: ManipulationStartingEventArgs.Cancel()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Cancels the manipulation and promotes touch to mouse events.\n  remarks: If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.\n  syntax:\n    content: public bool Cancel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if touch was successfully promoted to mouse events, otherwise, `false`.'\n  overload: System.Windows.Input.ManipulationStartingEventArgs.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: ''\n    - id: genericTarget\n      type: System.Object\n      description: ''\n  overload: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled\n  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled\n  id: IsSingleTouchEnabled\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: IsSingleTouchEnabled\n  nameWithType: ManipulationStartingEventArgs.IsSingleTouchEnabled\n  fullName: ManipulationStartingEventArgs.IsSingleTouchEnabled\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets whether one finger can start a manipulation.\n  remarks: 'For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).'\n  syntax:\n    content: public bool IsSingleTouchEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` one finger can start a manipulation; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer\n  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer\n  id: ManipulationContainer\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: ManipulationContainer\n  nameWithType: ManipulationStartingEventArgs.ManipulationContainer\n  fullName: ManipulationStartingEventArgs.ManipulationContainer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the container that all manipulation events and calculations are relative to.\n  remarks: \"You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property. For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events. The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.  \\n  \\n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).\"\n  syntax:\n    content: public System.Windows.IInputElement ManipulationContainer { get; set; }\n    return:\n      type: System.Windows.IInputElement\n      description: The container that all manipulation events and calculations are relative to. The default is the element on which the event occurred.\n  overload: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Manipulators\n  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.Manipulators\n  id: Manipulators\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: Manipulators\n  nameWithType: ManipulationStartingEventArgs.Manipulators\n  fullName: ManipulationStartingEventArgs.Manipulators\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a collection of objects that represents the touch contacts for the manipulation.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n      description: A collection of objects that represents the touch contacts for the manipulation.\n  overload: System.Windows.Input.ManipulationStartingEventArgs.Manipulators*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Mode\n  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.Mode\n  id: Mode\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: ManipulationStartingEventArgs.Mode\n  fullName: ManipulationStartingEventArgs.Mode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets which types of manipulations are possible.\n  remarks: 'For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).'\n  syntax:\n    content: public System.Windows.Input.ManipulationModes Mode { get; set; }\n    return:\n      type: System.Windows.Input.ManipulationModes\n      description: One of the enumeration values. The default is <xref href=\"System.Windows.Input.ManipulationModes.All\"></xref>.\n  overload: System.Windows.Input.ManipulationStartingEventArgs.Mode*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property is set to a value other than one or more of the <xref href=\"System.Windows.Input.ManipulationModes\"></xref> enumerations value\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Pivot\n  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.Pivot\n  id: Pivot\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: Pivot\n  nameWithType: ManipulationStartingEventArgs.Pivot\n  fullName: ManipulationStartingEventArgs.Pivot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets an object that describes the pivot for a single-point manipulation.\n  remarks: \"When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.  This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.  If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.  \\n  \\n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property. To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 4 with this code.  \\n  \\n [!code-csharp[BasicManipulation#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]\\n [!code-vb[BasicManipulation#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]\"\n  syntax:\n    content: public System.Windows.Input.ManipulationPivot Pivot { get; set; }\n    return:\n      type: System.Windows.Input.ManipulationPivot\n      description: An object that describes the pivot for a single-point manipulation.\n  overload: System.Windows.Input.ManipulationStartingEventArgs.Pivot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)\n  commentId: M:System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)\n  id: SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  langs:\n  - csharp\n  name: SetManipulationParameter(ManipulationParameters2D)\n  nameWithType: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)\n  fullName: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds parameters to the current manipulation of the specified element.\n  remarks: You typically do not need to call this method.  Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public void SetManipulationParameter (System.Windows.Input.Manipulations.ManipulationParameters2D parameter);\n    parameters:\n    - id: parameter\n      type: System.Windows.Input.Manipulations.ManipulationParameters2D\n      description: The parameter to add.\n  overload: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputEventArgs\n  nameWithType: InputEventArgs\n  fullName: System.Windows.Input.InputEventArgs\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Cancel\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Cancel()\n  nameWithType: ManipulationStartingEventArgs.Cancel()\n  fullName: ManipulationStartingEventArgs.Cancel()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: IsSingleTouchEnabled\n  nameWithType: ManipulationStartingEventArgs.IsSingleTouchEnabled\n  fullName: ManipulationStartingEventArgs.IsSingleTouchEnabled\n- uid: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationStartingEventArgs.ManipulationContainer\n  fullName: ManipulationStartingEventArgs.ManipulationContainer\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Manipulators\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationStartingEventArgs.Manipulators\n  fullName: ManipulationStartingEventArgs.Manipulators\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Windows.Input.IManipulator\n  name: IManipulator\n  nameWithType: IManipulator\n  fullName: System.Windows.Input.IManipulator\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<IManipulator>\n  nameWithType: IEnumerable<IManipulator>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Input.IManipulator\n    name: IManipulator\n    nameWithType: IManipulator\n    fullName: System.Windows.Input.IManipulator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Mode\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Mode\n  nameWithType: ManipulationStartingEventArgs.Mode\n  fullName: ManipulationStartingEventArgs.Mode\n- uid: System.Windows.Input.ManipulationModes\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationModes\n  nameWithType: ManipulationModes\n  fullName: System.Windows.Input.ManipulationModes\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Pivot\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Pivot\n  nameWithType: ManipulationStartingEventArgs.Pivot\n  fullName: ManipulationStartingEventArgs.Pivot\n- uid: System.Windows.Input.ManipulationPivot\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationPivot\n  nameWithType: ManipulationPivot\n  fullName: System.Windows.Input.ManipulationPivot\n- uid: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: SetManipulationParameter(ManipulationParameters2D)\n  nameWithType: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)\n  fullName: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)\n- uid: System.Windows.Input.Manipulations.ManipulationParameters2D\n  parent: System.Windows.Input.Manipulations\n  isExternal: false\n  name: ManipulationParameters2D\n  nameWithType: ManipulationParameters2D\n  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Cancel*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: ManipulationStartingEventArgs.Cancel\n  fullName: ManipulationStartingEventArgs.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: ManipulationStartingEventArgs.InvokeEventHandler\n  fullName: ManipulationStartingEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: IsSingleTouchEnabled\n  nameWithType: ManipulationStartingEventArgs.IsSingleTouchEnabled\n  fullName: ManipulationStartingEventArgs.IsSingleTouchEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationStartingEventArgs.ManipulationContainer\n  fullName: ManipulationStartingEventArgs.ManipulationContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Manipulators*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationStartingEventArgs.Manipulators\n  fullName: ManipulationStartingEventArgs.Manipulators\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Mode*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Mode\n  nameWithType: ManipulationStartingEventArgs.Mode\n  fullName: ManipulationStartingEventArgs.Mode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.Pivot*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: Pivot\n  nameWithType: ManipulationStartingEventArgs.Pivot\n  fullName: ManipulationStartingEventArgs.Pivot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter*\n  parent: System.Windows.Input.ManipulationStartingEventArgs\n  isExternal: false\n  name: SetManipulationParameter\n  nameWithType: ManipulationStartingEventArgs.SetManipulationParameter\n  fullName: ManipulationStartingEventArgs.SetManipulationParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n- uid: System.Windows.Input.InputEventArgs.Device\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Device\n  nameWithType: InputEventArgs.Device\n  fullName: InputEventArgs.Device\n- uid: System.Windows.Input.InputEventArgs.Timestamp\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Timestamp\n  nameWithType: InputEventArgs.Timestamp\n  fullName: InputEventArgs.Timestamp\n"}