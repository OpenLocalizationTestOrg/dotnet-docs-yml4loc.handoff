{"nodes":[{"content":"Represents an activity timer extension that can be persisted.","nodes":[{"pos":[0,61],"content":"Represents an activity timer extension that can be persisted.","nodes":[{"content":"Represents an activity timer extension that can be persisted.","pos":[0,61]}]}],"pos":[985,1047],"yaml":true},{"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:  \n  \n```Output  \nThis TimerExtension has already been attached to a workflow instance.  \n```","nodes":[{"pos":[0,319],"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:","nodes":[{"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:","pos":[0,319],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Activities.Statements.DurableTimerExtension&gt;</ph> object can only be associated with a single workflow instance.","pos":[0,122],"source":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.DurableTimerExtension&gt;</ph> object is used with more than one workflow instance, an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown with the following message:","pos":[123,319],"source":" If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:"}]}]}],"pos":[1058,1477],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.DurableTimerExtension\"></xref> class.","nodes":[{"pos":[0,108],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.DurableTimerExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.DurableTimerExtension\"></xref> class."}],"pos":[3351,3460],"yaml":true},{"content":"Terminates all registered timers.","nodes":[{"pos":[0,33],"content":"Terminates all registered timers.","nodes":[{"content":"Terminates all registered timers.","pos":[0,33]}]}],"pos":[4617,4651],"yaml":true},{"content":"Returns an enumerator that iterates over the collection of timer extensions.","nodes":[{"pos":[0,76],"content":"Returns an enumerator that iterates over the collection of timer extensions.","nodes":[{"content":"Returns an enumerator that iterates over the collection of timer extensions.","pos":[0,76]}]}],"pos":[5897,5974],"yaml":true},{"content":"An enumerator.","nodes":[{"pos":[0,14],"content":"An enumerator.","nodes":[{"content":"An enumerator.","pos":[0,14]}]}],"pos":[6203,6218],"yaml":true},{"content":"Removes a timer object from the table of registered timers for the current workflow operation.","nodes":[{"pos":[0,94],"content":"Removes a timer object from the table of registered timers for the current workflow operation.","nodes":[{"content":"Removes a timer object from the table of registered timers for the current workflow operation.","pos":[0,94]}]}],"pos":[7479,7574],"yaml":true},{"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.","nodes":[{"pos":[0,118],"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.","nodes":[{"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.","pos":[0,118]}]}],"pos":[7767,7886],"yaml":true},{"content":"Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.","nodes":[{"pos":[0,152],"content":"Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.","nodes":[{"content":"Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.","pos":[0,152]}]}],"pos":[9210,9363],"yaml":true},{"content":"A time span object that is added to the timer registration table entry in a workflow operation along with callback information.","nodes":[{"pos":[0,127],"content":"A time span object that is added to the timer registration table entry in a workflow operation along with callback information.","nodes":[{"content":"A time span object that is added to the timer registration table entry in a workflow operation along with callback information.","pos":[0,127]}]}],"pos":[9564,9692],"yaml":true},{"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.","nodes":[{"pos":[0,116],"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.","nodes":[{"content":"A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.","pos":[0,116]}]}],"pos":[9769,9886],"yaml":true},{"content":"Establishes the specified workflow instance as the current instance.","nodes":[{"pos":[0,68],"content":"Establishes the specified workflow instance as the current instance.","nodes":[{"content":"Establishes the specified workflow instance as the current instance.","pos":[0,68]}]}],"pos":[11212,11281],"yaml":true},{"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:  \n  \n```Output  \nThis TimerExtension has already been attached to a workflow instance.  \n```","nodes":[{"pos":[0,319],"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:","nodes":[{"content":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:","pos":[0,319],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Activities.Statements.DurableTimerExtension&gt;</ph> object can only be associated with a single workflow instance.","pos":[0,122],"source":"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.DurableTimerExtension&gt;</ph> object is used with more than one workflow instance, an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown with the following message:","pos":[123,319],"source":" If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:"}]}]}],"pos":[11292,11711],"yaml":true,"extradata":"MT"},{"content":"The workflow instance to make current.","nodes":[{"pos":[0,38],"content":"The workflow instance to make current.","nodes":[{"content":"The workflow instance to make current.","pos":[0,38]}]}],"pos":[11940,11979],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.DurableTimerExtension\n  commentId: T:System.Activities.Statements.DurableTimerExtension\n  id: DurableTimerExtension\n  children:\n  - System.Activities.Statements.DurableTimerExtension.#ctor\n  - System.Activities.Statements.DurableTimerExtension.Dispose\n  - System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  - System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  - System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  - System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  langs:\n  - csharp\n  name: DurableTimerExtension\n  nameWithType: DurableTimerExtension\n  fullName: System.Activities.Statements.DurableTimerExtension\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Represents an activity timer extension that can be persisted.\n  remarks: \"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:  \\n  \\n```Output  \\nThis TimerExtension has already been attached to a workflow instance.  \\n```\"\n  syntax:\n    content: 'public class DurableTimerExtension : System.Activities.Statements.TimerExtension, IDisposable, System.Activities.Hosting.IWorkflowInstanceExtension'\n  inheritance:\n  - System.Object\n  - System.Activities.Statements.TimerExtension\n  implements:\n  - System.Activities.Hosting.IWorkflowInstanceExtension\n  - System.IDisposable\n  inheritedMembers:\n  - System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)\n  - System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.DurableTimerExtension.#ctor\n  commentId: M:System.Activities.Statements.DurableTimerExtension.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: DurableTimerExtension()\n  nameWithType: DurableTimerExtension.DurableTimerExtension()\n  fullName: DurableTimerExtension.DurableTimerExtension()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.DurableTimerExtension\"></xref> class.\n  syntax:\n    content: public DurableTimerExtension ();\n    parameters: []\n  overload: System.Activities.Statements.DurableTimerExtension.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.DurableTimerExtension.Dispose\n  commentId: M:System.Activities.Statements.DurableTimerExtension.Dispose\n  id: Dispose\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DurableTimerExtension.Dispose()\n  fullName: DurableTimerExtension.Dispose()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Terminates all registered timers.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Activities.Statements.DurableTimerExtension.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  commentId: M:System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  id: GetAdditionalExtensions\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: GetAdditionalExtensions()\n  nameWithType: DurableTimerExtension.GetAdditionalExtensions()\n  fullName: DurableTimerExtension.GetAdditionalExtensions()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Returns an enumerator that iterates over the collection of timer extensions.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<object> GetAdditionalExtensions ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: An enumerator.\n  overload: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  commentId: M:System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  id: OnCancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: OnCancelTimer(Bookmark)\n  nameWithType: DurableTimerExtension.OnCancelTimer(Bookmark)\n  fullName: DurableTimerExtension.OnCancelTimer(Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Removes a timer object from the table of registered timers for the current workflow operation.\n  syntax:\n    content: protected override void OnCancelTimer (System.Activities.Bookmark bookmark);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: A point at which a workflow or activity can passively wait to be resumed following the expiration of the timer object.\n  overload: System.Activities.Statements.DurableTimerExtension.OnCancelTimer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  commentId: M:System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  id: OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: OnRegisterTimer(TimeSpan, Bookmark)\n  nameWithType: DurableTimerExtension.OnRegisterTimer(TimeSpan, Bookmark)\n  fullName: DurableTimerExtension.OnRegisterTimer(TimeSpan, Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Adds a timer object that contains the specified time span and bookmark information to the table of registered timers for the current workflow operation.\n  syntax:\n    content: protected override void OnRegisterTimer (TimeSpan timeout, System.Activities.Bookmark bookmark);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A time span object that is added to the timer registration table entry in a workflow operation along with callback information.\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: A point at which a workflow or activity can passively wait to be resumed following the expiration of a timer object.\n  overload: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  commentId: M:System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  id: SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  parent: System.Activities.Statements.DurableTimerExtension\n  langs:\n  - csharp\n  name: SetInstance(WorkflowInstanceProxy)\n  nameWithType: DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Establishes the specified workflow instance as the current instance.\n  remarks: \"A <xref:System.Activities.Statements.DurableTimerExtension> object can only be associated with a single workflow instance. If a <xref:System.Activities.Statements.DurableTimerExtension> object is used with more than one workflow instance, an <xref:System.InvalidOperationException> is thrown with the following message:  \\n  \\n```Output  \\nThis TimerExtension has already been attached to a workflow instance.  \\n```\"\n  syntax:\n    content: public virtual void SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);\n    parameters:\n    - id: instance\n      type: System.Activities.Hosting.WorkflowInstanceProxy\n      description: The workflow instance to make current.\n  overload: System.Activities.Statements.DurableTimerExtension.SetInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Statements.TimerExtension\n  parent: System.Activities.Statements\n  isExternal: false\n  name: TimerExtension\n  nameWithType: TimerExtension\n  fullName: System.Activities.Statements.TimerExtension\n- uid: System.Activities.Statements.DurableTimerExtension.#ctor\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: DurableTimerExtension()\n  nameWithType: DurableTimerExtension.DurableTimerExtension()\n  fullName: DurableTimerExtension.DurableTimerExtension()\n- uid: System.Activities.Statements.DurableTimerExtension.Dispose\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: Dispose()\n  nameWithType: DurableTimerExtension.Dispose()\n  fullName: DurableTimerExtension.Dispose()\n- uid: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: GetAdditionalExtensions()\n  nameWithType: DurableTimerExtension.GetAdditionalExtensions()\n  fullName: DurableTimerExtension.GetAdditionalExtensions()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Object>\n  nameWithType: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnCancelTimer(Bookmark)\n  nameWithType: DurableTimerExtension.OnCancelTimer(Bookmark)\n  fullName: DurableTimerExtension.OnCancelTimer(Bookmark)\n- uid: System.Activities.Bookmark\n  parent: System.Activities\n  isExternal: false\n  name: Bookmark\n  nameWithType: Bookmark\n  fullName: System.Activities.Bookmark\n- uid: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnRegisterTimer(TimeSpan, Bookmark)\n  nameWithType: DurableTimerExtension.OnRegisterTimer(TimeSpan, Bookmark)\n  fullName: DurableTimerExtension.OnRegisterTimer(TimeSpan, Bookmark)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: SetInstance(WorkflowInstanceProxy)\n  nameWithType: DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: DurableTimerExtension.SetInstance(WorkflowInstanceProxy)\n- uid: System.Activities.Hosting.WorkflowInstanceProxy\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstanceProxy\n  nameWithType: WorkflowInstanceProxy\n  fullName: System.Activities.Hosting.WorkflowInstanceProxy\n- uid: System.Activities.Statements.DurableTimerExtension.#ctor*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: DurableTimerExtension\n  nameWithType: DurableTimerExtension.DurableTimerExtension\n  fullName: DurableTimerExtension.DurableTimerExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n- uid: System.Activities.Statements.DurableTimerExtension.Dispose*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: Dispose\n  nameWithType: DurableTimerExtension.Dispose\n  fullName: DurableTimerExtension.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n- uid: System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: GetAdditionalExtensions\n  nameWithType: DurableTimerExtension.GetAdditionalExtensions\n  fullName: DurableTimerExtension.GetAdditionalExtensions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n- uid: System.Activities.Statements.DurableTimerExtension.OnCancelTimer*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnCancelTimer\n  nameWithType: DurableTimerExtension.OnCancelTimer\n  fullName: DurableTimerExtension.OnCancelTimer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n- uid: System.Activities.Statements.DurableTimerExtension.OnRegisterTimer*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: OnRegisterTimer\n  nameWithType: DurableTimerExtension.OnRegisterTimer\n  fullName: DurableTimerExtension.OnRegisterTimer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n- uid: System.Activities.Statements.DurableTimerExtension.SetInstance*\n  parent: System.Activities.Statements.DurableTimerExtension\n  isExternal: false\n  name: SetInstance\n  nameWithType: DurableTimerExtension.SetInstance\n  fullName: DurableTimerExtension.SetInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/DurableTimerExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: CancelTimer(Bookmark)\n  nameWithType: TimerExtension.CancelTimer(Bookmark)\n  fullName: TimerExtension.CancelTimer(Bookmark)\n- uid: System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: RegisterTimer(TimeSpan, Bookmark)\n  nameWithType: TimerExtension.RegisterTimer(TimeSpan, Bookmark)\n  fullName: TimerExtension.RegisterTimer(TimeSpan, Bookmark)\n- uid: System.Activities.Hosting.IWorkflowInstanceExtension\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: IWorkflowInstanceExtension\n  nameWithType: IWorkflowInstanceExtension\n  fullName: System.Activities.Hosting.IWorkflowInstanceExtension\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}