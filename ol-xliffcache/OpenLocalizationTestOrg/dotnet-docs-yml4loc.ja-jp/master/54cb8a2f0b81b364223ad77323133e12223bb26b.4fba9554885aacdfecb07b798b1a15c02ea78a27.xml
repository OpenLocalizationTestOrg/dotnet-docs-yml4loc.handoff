{"nodes":[{"content":"Specifies a class that will add extra attributes to the metadata store.","nodes":[{"pos":[0,71],"content":"Specifies a class that will add extra attributes to the metadata store.","nodes":[{"content":"Specifies a class that will add extra attributes to the metadata store.","pos":[0,71]}]}],"pos":[562,634],"yaml":true},{"content":"<xref:System.Activities.Presentation.Metadata.IRegisterMetadata> types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion. An application hosting the [!INCLUDE[wfd1](~/includes/wfd1-md.md)] can use the <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> interface to register the attributes for the activity. For instance, [!INCLUDE[vs2010](~/includes/vs2010-md.md)] searches for types that implement <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.","nodes":[{"pos":[0,663],"content":"<xref:System.Activities.Presentation.Metadata.IRegisterMetadata> types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion. An application hosting the [!INCLUDE[wfd1](~/includes/wfd1-md.md)] can use the <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> interface to register the attributes for the activity. For instance, [!INCLUDE[vs2010](~/includes/vs2010-md.md)] searches for types that implement <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.IRegisterMetadata&gt;</ph> types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion.","pos":[0,189],"source":"<xref:System.Activities.Presentation.Metadata.IRegisterMetadata> types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion."},{"content":"An application hosting the <ph id=\"ph1\">[!INCLUDE[wfd1](~/includes/wfd1-md.md)]</ph> can use the <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.Metadata.IRegisterMetadata&gt;</ph> interface to register the attributes for the activity.","pos":[190,388],"source":" An application hosting the [!INCLUDE[wfd1](~/includes/wfd1-md.md)] can use the <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> interface to register the attributes for the activity."},{"content":"For instance, <ph id=\"ph1\">[!INCLUDE[vs2010](~/includes/vs2010-md.md)]</ph> searches for types that implement <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.Metadata.IRegisterMetadata&gt;</ph> when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.","pos":[389,663],"source":" For instance, [!INCLUDE[vs2010](~/includes/vs2010-md.md)] searches for types that implement <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies."}]}],"pos":[645,1309],"yaml":true,"extradata":"MT"},{"content":"Adds additional metadata to the metadata store upon initialization of the designer.","nodes":[{"pos":[0,83],"content":"Adds additional metadata to the metadata store upon initialization of the designer.","nodes":[{"content":"Adds additional metadata to the metadata store upon initialization of the designer.","pos":[0,83]}]}],"pos":[2504,2588],"yaml":true},{"content":"Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store.","nodes":[{"pos":[0,144],"content":"Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store.","nodes":[{"content":"Implementations should call <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A&gt;</ph> to add data to the metadata store.","pos":[0,144],"source":"Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store."}]}],"pos":[2599,2744],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata\n  commentId: T:System.Activities.Presentation.Metadata.IRegisterMetadata\n  id: IRegisterMetadata\n  children:\n  - System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  langs:\n  - csharp\n  name: IRegisterMetadata\n  nameWithType: IRegisterMetadata\n  fullName: System.Activities.Presentation.Metadata.IRegisterMetadata\n  type: Interface\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Specifies a class that will add extra attributes to the metadata store.\n  remarks: <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion. An application hosting the [!INCLUDE[wfd1](~/includes/wfd1-md.md)] can use the <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> interface to register the attributes for the activity. For instance, [!INCLUDE[vs2010](~/includes/vs2010-md.md)] searches for types that implement <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.\n  syntax:\n    content: public interface IRegisterMetadata\n  derivedClasses:\n  - System.Activities.Core.Presentation.DesignerMetadata\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/IRegisterMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  commentId: M:System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  id: Register\n  parent: System.Activities.Presentation.Metadata.IRegisterMetadata\n  langs:\n  - csharp\n  name: Register()\n  nameWithType: IRegisterMetadata.Register()\n  fullName: IRegisterMetadata.Register()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds additional metadata to the metadata store upon initialization of the designer.\n  remarks: Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store.\n  syntax:\n    content: public void Register ();\n    parameters: []\n  overload: System.Activities.Presentation.Metadata.IRegisterMetadata.Register*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/IRegisterMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  parent: System.Activities.Presentation.Metadata.IRegisterMetadata\n  isExternal: false\n  name: Register()\n  nameWithType: IRegisterMetadata.Register()\n  fullName: IRegisterMetadata.Register()\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata.Register*\n  parent: System.Activities.Presentation.Metadata.IRegisterMetadata\n  isExternal: false\n  name: Register\n  nameWithType: IRegisterMetadata.Register\n  fullName: IRegisterMetadata.Register\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/IRegisterMetadata.xml\n"}