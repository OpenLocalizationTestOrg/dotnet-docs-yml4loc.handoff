{"nodes":[{"content":"Represents a symbol reader for managed code.","nodes":[{"pos":[0,44],"content":"Represents a symbol reader for managed code.","nodes":[{"content":"Represents a symbol reader for managed code.","pos":[0,44]}]}],"pos":[1429,1474],"yaml":true},{"content":"The interface provides access to documents, methods, and variables.  \n  \n> [!NOTE]\n>  This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","nodes":[{"pos":[0,67],"content":"The interface provides access to documents, methods, and variables.","nodes":[{"content":"The interface provides access to documents, methods, and variables.","pos":[0,67]}]},{"pos":[75,288],"content":"[!NOTE]\n This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","leadings":["","> "],"nodes":[{"content":"This interface is the managed counterpart of the <ph id=\"ph1\">`ISymUnmanagedReader`</ph> interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","pos":[9,211],"source":" This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information."}]}],"pos":[1485,1779],"yaml":true,"extradata":"MT"},{"content":"Gets a document specified by the language, vendor, and type.","nodes":[{"pos":[0,60],"content":"Gets a document specified by the language, vendor, and type.","nodes":[{"content":"Gets a document specified by the language, vendor, and type.","pos":[0,60]}]}],"pos":[3499,3560],"yaml":true},{"content":"The URL that identifies the document.","nodes":[{"pos":[0,37],"content":"The URL that identifies the document.","nodes":[{"content":"The URL that identifies the document.","pos":[0,37]}]}],"pos":[3793,3831],"yaml":true},{"content":"The document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"pos":[0,96],"content":"The document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"content":"The document language.","pos":[0,22]},{"content":"You can specify this parameter as <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[23,96],"source":" You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>."}]}],"pos":[3893,3990],"yaml":true},{"content":"The identity of the vendor for the document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"pos":[0,127],"content":"The identity of the vendor for the document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"content":"The identity of the vendor for the document language.","pos":[0,53]},{"content":"You can specify this parameter as <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[54,127],"source":" You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>."}]}],"pos":[4058,4186],"yaml":true},{"content":"The type of the document. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"pos":[0,99],"content":"The type of the document. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"content":"The type of the document.","pos":[0,25]},{"content":"You can specify this parameter as <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[26,99],"source":" You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>."}]}],"pos":[4252,4352],"yaml":true},{"content":"The specified document.","nodes":[{"pos":[0,23],"content":"The specified document.","nodes":[{"content":"The specified document.","pos":[0,23]}]}],"pos":[4442,4466],"yaml":true},{"content":"Gets an array of all documents defined in the symbol store.","nodes":[{"pos":[0,59],"content":"Gets an array of all documents defined in the symbol store.","nodes":[{"content":"Gets an array of all documents defined in the symbol store.","pos":[0,59]}]}],"pos":[5779,5839],"yaml":true},{"content":"An array of all documents defined in the symbol store.","nodes":[{"pos":[0,54],"content":"An array of all documents defined in the symbol store.","nodes":[{"content":"An array of all documents defined in the symbol store.","pos":[0,54]}]}],"pos":[6046,6101],"yaml":true},{"content":"Gets all global variables in the module.","nodes":[{"pos":[0,40],"content":"Gets all global variables in the module.","nodes":[{"content":"Gets all global variables in the module.","pos":[0,40]}]}],"pos":[7451,7492],"yaml":true},{"content":"An array of all variables in the module.","nodes":[{"pos":[0,40],"content":"An array of all variables in the module.","nodes":[{"content":"An array of all variables in the module.","pos":[0,40]}]}],"pos":[7705,7746],"yaml":true},{"content":"Gets a symbol reader method object when given the identifier of a method.","nodes":[{"pos":[0,73],"content":"Gets a symbol reader method object when given the identifier of a method.","nodes":[{"content":"Gets a symbol reader method object when given the identifier of a method.","pos":[0,73]}]}],"pos":[9213,9287],"yaml":true},{"content":"The metadata token of the method.","nodes":[{"pos":[0,33],"content":"The metadata token of the method.","nodes":[{"content":"The metadata token of the method.","pos":[0,33]}]}],"pos":[9532,9566],"yaml":true},{"content":"The symbol reader method object for the specified method identifier.","nodes":[{"pos":[0,68],"content":"The symbol reader method object for the specified method identifier.","nodes":[{"content":"The symbol reader method object for the specified method identifier.","pos":[0,68]}]}],"pos":[9654,9723],"yaml":true},{"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","nodes":[{"pos":[0,107],"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","nodes":[{"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","pos":[0,107]}]}],"pos":[11241,11349],"yaml":true},{"content":"The metadata token of the method.","nodes":[{"pos":[0,33],"content":"The metadata token of the method.","nodes":[{"content":"The metadata token of the method.","pos":[0,33]}]}],"pos":[11607,11641],"yaml":true},{"content":"The edit and continue version of the method.","nodes":[{"pos":[0,44],"content":"The edit and continue version of the method.","nodes":[{"content":"The edit and continue version of the method.","pos":[0,44]}]}],"pos":[11703,11748],"yaml":true},{"content":"The symbol reader method object for the specified method identifier.","nodes":[{"pos":[0,68],"content":"The symbol reader method object for the specified method identifier.","nodes":[{"content":"The symbol reader method object for the specified method identifier.","pos":[0,68]}]}],"pos":[11836,11905],"yaml":true},{"content":"Gets a symbol reader method object that contains a specified position in a document.","nodes":[{"pos":[0,84],"content":"Gets a symbol reader method object that contains a specified position in a document.","nodes":[{"content":"Gets a symbol reader method object that contains a specified position in a document.","pos":[0,84]}]}],"pos":[13627,13712],"yaml":true},{"content":"The document in which the method is located.","nodes":[{"pos":[0,44],"content":"The document in which the method is located.","nodes":[{"content":"The document in which the method is located.","pos":[0,44]}]}],"pos":[14011,14056],"yaml":true},{"content":"The position of the line within the document. The lines are numbered, beginning with 1.","nodes":[{"pos":[0,87],"content":"The position of the line within the document. The lines are numbered, beginning with 1.","nodes":[{"content":"The position of the line within the document. The lines are numbered, beginning with 1.","pos":[0,87],"nodes":[{"content":"The position of the line within the document.","pos":[0,45]},{"content":"The lines are numbered, beginning with 1.","pos":[46,87]}]}]}],"pos":[14115,14203],"yaml":true},{"content":"The position of column within the document. The columns are numbered, beginning with 1.","nodes":[{"pos":[0,87],"content":"The position of column within the document. The columns are numbered, beginning with 1.","nodes":[{"content":"The position of column within the document. The columns are numbered, beginning with 1.","pos":[0,87],"nodes":[{"content":"The position of column within the document.","pos":[0,43]},{"content":"The columns are numbered, beginning with 1.","pos":[44,87]}]}]}],"pos":[14264,14352],"yaml":true},{"content":"The reader method object for the specified position in the document.","nodes":[{"pos":[0,68],"content":"The reader method object for the specified position in the document.","nodes":[{"content":"The reader method object for the specified position in the document.","pos":[0,68]}]}],"pos":[14440,14509],"yaml":true},{"content":"Gets the namespaces that are defined in the global scope within the current symbol store.","nodes":[{"pos":[0,89],"content":"Gets the namespaces that are defined in the global scope within the current symbol store.","nodes":[{"content":"Gets the namespaces that are defined in the global scope within the current symbol store.","pos":[0,89]}]}],"pos":[15846,15936],"yaml":true},{"content":"The namespaces defined in the global scope within the current symbol store.","nodes":[{"pos":[0,75],"content":"The namespaces defined in the global scope within the current symbol store.","nodes":[{"content":"The namespaces defined in the global scope within the current symbol store.","pos":[0,75]}]}],"pos":[16146,16222],"yaml":true},{"content":"Gets an attribute value when given the attribute name.","nodes":[{"pos":[0,54],"content":"Gets an attribute value when given the attribute name.","nodes":[{"content":"Gets an attribute value when given the attribute name.","pos":[0,54]}]}],"pos":[17786,17841],"yaml":true},{"content":"This attribute is only associated with symbolic information and is not a metadata custom attribute.","nodes":[{"pos":[0,99],"content":"This attribute is only associated with symbolic information and is not a metadata custom attribute.","nodes":[{"content":"This attribute is only associated with symbolic information and is not a metadata custom attribute.","pos":[0,99]}]}],"pos":[17852,17952],"yaml":true,"extradata":"MT"},{"content":"The metadata token for the object for which the attribute is requested.","nodes":[{"pos":[0,71],"content":"The metadata token for the object for which the attribute is requested.","nodes":[{"content":"The metadata token for the object for which the attribute is requested.","pos":[0,71]}]}],"pos":[18178,18250],"yaml":true},{"content":"The attribute name.","nodes":[{"pos":[0,19],"content":"The attribute name.","nodes":[{"content":"The attribute name.","pos":[0,19]}]}],"pos":[18310,18330],"yaml":true},{"content":"The value of the attribute.","nodes":[{"pos":[0,27],"content":"The value of the attribute.","nodes":[{"content":"The value of the attribute.","pos":[0,27]}]}],"pos":[18387,18415],"yaml":true},{"content":"Gets the variables that are not local when given the parent.","nodes":[{"pos":[0,60],"content":"Gets the variables that are not local when given the parent.","nodes":[{"content":"Gets the variables that are not local when given the parent.","pos":[0,60]}]}],"pos":[19897,19958],"yaml":true},{"content":"The metadata token for the type for which the variables are requested.","nodes":[{"pos":[0,70],"content":"The metadata token for the type for which the variables are requested.","nodes":[{"content":"The metadata token for the type for which the variables are requested.","pos":[0,70]}]}],"pos":[20210,20281],"yaml":true},{"content":"An array of variables for the parent.","nodes":[{"pos":[0,37],"content":"An array of variables for the parent.","nodes":[{"content":"An array of variables for the parent.","pos":[0,37]}]}],"pos":[20373,20411],"yaml":true},{"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","nodes":[{"pos":[0,105],"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","nodes":[{"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","pos":[0,105]}]}],"pos":[21733,21839],"yaml":true},{"content":"This is normally your main method, rather than compiler-generated stubs before the main method.","nodes":[{"pos":[0,95],"content":"This is normally your main method, rather than compiler-generated stubs before the main method.","nodes":[{"content":"This is normally your main method, rather than compiler-generated stubs before the main method.","pos":[0,95]}]}],"pos":[21850,21946],"yaml":true,"extradata":"MT"},{"content":"The metadata token for the method that is the user entry point for the module.","nodes":[{"pos":[0,78],"content":"The metadata token for the method that is the user entry point for the module.","nodes":[{"content":"The metadata token for the method that is the user entry point for the module.","pos":[0,78]}]}],"pos":[22129,22208],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolReader\n  commentId: T:System.Diagnostics.SymbolStore.ISymbolReader\n  id: ISymbolReader\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  langs:\n  - csharp\n  name: ISymbolReader\n  nameWithType: ISymbolReader\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Represents a symbol reader for managed code.\n  remarks: \"The interface provides access to documents, methods, and variables.  \\n  \\n> [!NOTE]\\n>  This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolReader\n  derivedClasses:\n  - System.Diagnostics.SymbolStore.SymReader\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetDocument(String, Guid, Guid, Guid)\n  nameWithType: ISymbolReader.GetDocument(String, Guid, Guid, Guid)\n  fullName: ISymbolReader.GetDocument(String, Guid, Guid, Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a document specified by the language, vendor, and type.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL that identifies the document.\n    - id: language\n      type: System.Guid\n      description: The document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.\n    - id: languageVendor\n      type: System.Guid\n      description: The identity of the vendor for the document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.\n    - id: documentType\n      type: System.Guid\n      description: The type of the document. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The specified document.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  id: GetDocuments\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetDocuments()\n  nameWithType: ISymbolReader.GetDocuments()\n  fullName: ISymbolReader.GetDocuments()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets an array of all documents defined in the symbol store.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: An array of all documents defined in the symbol store.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  id: GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetGlobalVariables()\n  nameWithType: ISymbolReader.GetGlobalVariables()\n  fullName: ISymbolReader.GetGlobalVariables()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets all global variables in the module.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: An array of all variables in the module.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken)\n  fullName: ISymbolReader.GetMethod(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object when given the identifier of a method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token of the method.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified method identifier.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken, Int32)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken, Int32)\n  fullName: ISymbolReader.GetMethod(SymbolToken, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object when given the identifier of a method and its edit and continue version.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token of the method.\n    - id: version\n      type: System.Int32\n      description: The edit and continue version of the method.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified method identifier.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  nameWithType: ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  fullName: ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object that contains a specified position in a document.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The document in which the method is located.\n    - id: line\n      type: System.Int32\n      description: The position of the line within the document. The lines are numbered, beginning with 1.\n    - id: column\n      type: System.Int32\n      description: The position of column within the document. The columns are numbered, beginning with 1.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The reader method object for the specified position in the document.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  id: GetNamespaces\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetNamespaces()\n  nameWithType: ISymbolReader.GetNamespaces()\n  fullName: ISymbolReader.GetNamespaces()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the namespaces that are defined in the global scope within the current symbol store.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n      description: The namespaces defined in the global scope within the current symbol store.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetSymAttribute(SymbolToken, String)\n  nameWithType: ISymbolReader.GetSymAttribute(SymbolToken, String)\n  fullName: ISymbolReader.GetSymAttribute(SymbolToken, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets an attribute value when given the attribute name.\n  remarks: This attribute is only associated with symbolic information and is not a metadata custom attribute.\n  syntax:\n    content: public byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the object for which the attribute is requested.\n    - id: name\n      type: System.String\n      description: The attribute name.\n    return:\n      type: System.Byte[]\n      description: The value of the attribute.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetVariables(SymbolToken)\n  nameWithType: ISymbolReader.GetVariables(SymbolToken)\n  fullName: ISymbolReader.GetVariables(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the variables that are not local when given the parent.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the type for which the variables are requested.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: An array of variables for the parent.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  id: UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: UserEntryPoint\n  nameWithType: ISymbolReader.UserEntryPoint\n  fullName: ISymbolReader.UserEntryPoint\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the metadata token for the method that was specified as the user entry point for the module, if any.\n  remarks: This is normally your main method, rather than compiler-generated stubs before the main method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the method that is the user entry point for the module.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocument(String, Guid, Guid, Guid)\n  nameWithType: ISymbolReader.GetDocument(String, Guid, Guid, Guid)\n  fullName: ISymbolReader.GetDocument(String, Guid, Guid, Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocuments()\n  nameWithType: ISymbolReader.GetDocuments()\n  fullName: ISymbolReader.GetDocuments()\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument[]\n  nameWithType: ISymbolDocument[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolDocument\n    name: ISymbolDocument\n    nameWithType: ISymbolDocument\n    fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetGlobalVariables()\n  nameWithType: ISymbolReader.GetGlobalVariables()\n  fullName: ISymbolReader.GetGlobalVariables()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable[]\n  nameWithType: ISymbolVariable[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolVariable\n    name: ISymbolVariable\n    nameWithType: ISymbolVariable\n    fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethod(SymbolToken)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken)\n  fullName: ISymbolReader.GetMethod(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethod(SymbolToken, Int32)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken, Int32)\n  fullName: ISymbolReader.GetMethod(SymbolToken, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  nameWithType: ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  fullName: ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetNamespaces()\n  nameWithType: ISymbolReader.GetNamespaces()\n  fullName: ISymbolReader.GetNamespaces()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace[]\n  nameWithType: ISymbolNamespace[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n    name: ISymbolNamespace\n    nameWithType: ISymbolNamespace\n    fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetSymAttribute(SymbolToken, String)\n  nameWithType: ISymbolReader.GetSymAttribute(SymbolToken, String)\n  fullName: ISymbolReader.GetSymAttribute(SymbolToken, String)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetVariables(SymbolToken)\n  nameWithType: ISymbolReader.GetVariables(SymbolToken)\n  fullName: ISymbolReader.GetVariables(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: ISymbolReader.UserEntryPoint\n  fullName: ISymbolReader.UserEntryPoint\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocument\n  nameWithType: ISymbolReader.GetDocument\n  fullName: ISymbolReader.GetDocument\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocuments\n  nameWithType: ISymbolReader.GetDocuments\n  fullName: ISymbolReader.GetDocuments\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetGlobalVariables\n  nameWithType: ISymbolReader.GetGlobalVariables\n  fullName: ISymbolReader.GetGlobalVariables\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethod\n  nameWithType: ISymbolReader.GetMethod\n  fullName: ISymbolReader.GetMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition\n  nameWithType: ISymbolReader.GetMethodFromDocumentPosition\n  fullName: ISymbolReader.GetMethodFromDocumentPosition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetNamespaces\n  nameWithType: ISymbolReader.GetNamespaces\n  fullName: ISymbolReader.GetNamespaces\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetSymAttribute\n  nameWithType: ISymbolReader.GetSymAttribute\n  fullName: ISymbolReader.GetSymAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetVariables\n  nameWithType: ISymbolReader.GetVariables\n  fullName: ISymbolReader.GetVariables\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: ISymbolReader.UserEntryPoint\n  fullName: ISymbolReader.UserEntryPoint\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolReader.xml\n"}