{"nodes":[{"content":"Represents the wst:Renewing element in a WS-Trust renew request.","nodes":[{"pos":[0,64],"content":"Represents the wst:Renewing element in a WS-Trust renew request.","nodes":[{"content":"Represents the wst:Renewing element in a WS-Trust renew request.","pos":[0,64]}]}],"pos":[711,776],"yaml":true},{"content":"This optional element indicates to the token issuer that the requested token can be renewed if the Allow attribute is true and that the token can be renewed after it expires if the OK attribute is true. These attributes are represented by the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> and the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> properties respectively.  \n  \n For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","nodes":[{"pos":[0,432],"content":"This optional element indicates to the token issuer that the requested token can be renewed if the Allow attribute is true and that the token can be renewed after it expires if the OK attribute is true. These attributes are represented by the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> and the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> properties respectively.","nodes":[{"content":"This optional element indicates to the token issuer that the requested token can be renewed if the Allow attribute is true and that the token can be renewed after it expires if the OK attribute is true. These attributes are represented by the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> and the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> properties respectively.","pos":[0,432],"nodes":[{"content":"This optional element indicates to the token issuer that the requested token can be renewed if the Allow attribute is true and that the token can be renewed after it expires if the OK attribute is true.","pos":[0,202]},{"content":"These attributes are represented by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A&gt;</ph> properties respectively.","pos":[203,432],"source":" These attributes are represented by the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> and the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> properties respectively."}]}]},{"pos":[439,582],"content":"For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","nodes":[{"content":"For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","pos":[0,143]}]}],"pos":[787,1374],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref><xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref> class with default property values.","nodes":[{"pos":[0,206],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"&gt;&lt;/xref&gt;</ph> class with default property values.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref><xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref> class with default property values."}],"pos":[2723,2930],"yaml":true},{"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A>|`true`|  \n|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A>|`false`|","nodes":[{"pos":[0,130],"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance.","nodes":[{"content":"The following table shows the initial property values for the new <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.Renewing&gt;</ph> instance.","pos":[0,130],"source":"The following table shows the initial property values for the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance."}]},{"pos":[137,145],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[146,151],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[187,257],"content":"<xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A>","nodes":[]},{"pos":[269,354],"content":"<xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A>","nodes":[]}],"pos":[2941,3312],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref><xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref> class with the specified values.","nodes":[{"pos":[0,203],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref><xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref> class with the specified values."}],"pos":[4559,4763],"yaml":true},{"content":"The properties of the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance are set according to the value of the parameters.","nodes":[{"pos":[0,139],"content":"The properties of the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance are set according to the value of the parameters.","nodes":[{"content":"The properties of the new <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.Renewing&gt;</ph> instance are set according to the value of the parameters.","pos":[0,139],"source":"The properties of the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance are set according to the value of the parameters."}]}],"pos":[4774,4914],"yaml":true,"extradata":"MT"},{"content":"`true` if renewal is permitted; otherwise, `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> if renewal is permitted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if renewal is permitted; otherwise, `false`."}],"pos":[5093,5147],"yaml":true},{"content":"`true` if the requested token can be renewed after it has expired; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the requested token can be renewed after it has expired; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the requested token can be renewed after it has expired; otherwise, `false`."}],"pos":[5231,5320],"yaml":true},{"content":"Gets or sets a value that indicates whether the token can be renewed.","nodes":[{"pos":[0,69],"content":"Gets or sets a value that indicates whether the token can be renewed.","nodes":[{"content":"Gets or sets a value that indicates whether the token can be renewed.","pos":[0,69]}]}],"pos":[6386,6456],"yaml":true},{"content":"Represents the contents of the Allow attribute. This optional attribute is used to request a renewable token. The default value is `true`.","nodes":[{"pos":[0,138],"content":"Represents the contents of the Allow attribute. This optional attribute is used to request a renewable token. The default value is `true`.","nodes":[{"content":"Represents the contents of the Allow attribute.","pos":[0,47]},{"content":"This optional attribute is used to request a renewable token.","pos":[48,109]},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[110,138],"source":" The default value is `true`."}]}],"pos":[6467,6606],"yaml":true,"extradata":"MT"},{"content":"`true` if renewal is permitted; otherwise, `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> if renewal is permitted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if renewal is permitted; otherwise, `false`."}],"pos":[6726,6780],"yaml":true},{"content":"Gets or sets a value that indicates whether the token can be renewed after it has expired.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that indicates whether the token can be renewed after it has expired.","nodes":[{"content":"Gets or sets a value that indicates whether the token can be renewed after it has expired.","pos":[0,90]}]}],"pos":[7943,8034],"yaml":true},{"content":"Represents the contents of the OK attribute. This optional attribute is used to indicate that a renewable token is acceptable if the requested duration exceeds the limit of the issuance service. That is, if `true`, then the token can be renewed after its expiration. The default value is `false` for security reasons.","nodes":[{"pos":[0,317],"content":"Represents the contents of the OK attribute. This optional attribute is used to indicate that a renewable token is acceptable if the requested duration exceeds the limit of the issuance service. That is, if `true`, then the token can be renewed after its expiration. The default value is `false` for security reasons.","nodes":[{"content":"Represents the contents of the OK attribute.","pos":[0,44]},{"content":"This optional attribute is used to indicate that a renewable token is acceptable if the requested duration exceeds the limit of the issuance service.","pos":[45,194]},{"content":"That is, if <ph id=\"ph1\">`true`</ph>, then the token can be renewed after its expiration.","pos":[195,266],"source":" That is, if `true`, then the token can be renewed after its expiration."},{"content":"The default value is <ph id=\"ph1\">`false`</ph> for security reasons.","pos":[267,317],"source":" The default value is `false` for security reasons."}]}],"pos":[8045,8363],"yaml":true,"extradata":"MT"},{"content":"`true` if the requested token can be renewed after it has expired; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the requested token can be renewed after it has expired; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the requested token can be renewed after it has expired; otherwise, `false`."}],"pos":[8498,8587],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing\n  commentId: T:System.IdentityModel.Protocols.WSTrust.Renewing\n  id: Renewing\n  children:\n  - System.IdentityModel.Protocols.WSTrust.Renewing.#ctor\n  - System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)\n  - System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal\n  - System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration\n  langs:\n  - csharp\n  name: Renewing\n  nameWithType: Renewing\n  fullName: System.IdentityModel.Protocols.WSTrust.Renewing\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Represents the wst:Renewing element in a WS-Trust renew request.\n  remarks: \"This optional element indicates to the token issuer that the requested token can be renewed if the Allow attribute is true and that the token can be renewed after it expires if the OK attribute is true. These attributes are represented by the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> and the <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> properties respectively.  \\n  \\n For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.\"\n  syntax:\n    content: public class Renewing\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor\n  commentId: M:System.IdentityModel.Protocols.WSTrust.Renewing.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  langs:\n  - csharp\n  name: Renewing()\n  nameWithType: Renewing.Renewing()\n  fullName: Renewing.Renewing()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref><xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref> class with default property values.\n  remarks: \"The following table shows the initial property values for the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A>|`true`|  \\n|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A>|`false`|\"\n  syntax:\n    content: public Renewing ();\n    parameters: []\n  overload: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)\n  commentId: M:System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)\n  id: '#ctor(System.Boolean,System.Boolean)'\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  langs:\n  - csharp\n  name: Renewing(Boolean, Boolean)\n  nameWithType: Renewing.Renewing(Boolean, Boolean)\n  fullName: Renewing.Renewing(Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref><xref href=\"System.IdentityModel.Protocols.WSTrust.Renewing\"></xref> class with the specified values.\n  remarks: The properties of the new <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance are set according to the value of the parameters.\n  syntax:\n    content: public Renewing (bool allowRenewal, bool okForRenewalAfterExpiration);\n    parameters:\n    - id: allowRenewal\n      type: System.Boolean\n      description: '`true` if renewal is permitted; otherwise, `false`.'\n    - id: okForRenewalAfterExpiration\n      type: System.Boolean\n      description: '`true` if the requested token can be renewed after it has expired; otherwise, `false`.'\n  overload: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal\n  commentId: P:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal\n  id: AllowRenewal\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  langs:\n  - csharp\n  name: AllowRenewal\n  nameWithType: Renewing.AllowRenewal\n  fullName: Renewing.AllowRenewal\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets a value that indicates whether the token can be renewed.\n  remarks: Represents the contents of the Allow attribute. This optional attribute is used to request a renewable token. The default value is `true`.\n  syntax:\n    content: public bool AllowRenewal { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if renewal is permitted; otherwise, `false`.'\n  overload: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration\n  commentId: P:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration\n  id: OkForRenewalAfterExpiration\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  langs:\n  - csharp\n  name: OkForRenewalAfterExpiration\n  nameWithType: Renewing.OkForRenewalAfterExpiration\n  fullName: Renewing.OkForRenewalAfterExpiration\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets a value that indicates whether the token can be renewed after it has expired.\n  remarks: Represents the contents of the OK attribute. This optional attribute is used to indicate that a renewable token is acceptable if the requested duration exceeds the limit of the issuance service. That is, if `true`, then the token can be renewed after its expiration. The default value is `false` for security reasons.\n  syntax:\n    content: public bool OkForRenewalAfterExpiration { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the requested token can be renewed after it has expired; otherwise, `false`.'\n  overload: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: Renewing()\n  nameWithType: Renewing.Renewing()\n  fullName: Renewing.Renewing()\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: Renewing(Boolean, Boolean)\n  nameWithType: Renewing.Renewing(Boolean, Boolean)\n  fullName: Renewing.Renewing(Boolean, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: AllowRenewal\n  nameWithType: Renewing.AllowRenewal\n  fullName: Renewing.AllowRenewal\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: OkForRenewalAfterExpiration\n  nameWithType: Renewing.OkForRenewalAfterExpiration\n  fullName: Renewing.OkForRenewalAfterExpiration\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.#ctor*\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: Renewing\n  nameWithType: Renewing.Renewing\n  fullName: Renewing.Renewing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal*\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: AllowRenewal\n  nameWithType: Renewing.AllowRenewal\n  fullName: Renewing.AllowRenewal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n- uid: System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration*\n  parent: System.IdentityModel.Protocols.WSTrust.Renewing\n  isExternal: false\n  name: OkForRenewalAfterExpiration\n  nameWithType: Renewing.OkForRenewalAfterExpiration\n  fullName: Renewing.OkForRenewalAfterExpiration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Protocols.WSTrust/Renewing.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}