{"nodes":[{"content":"Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.","nodes":[{"pos":[0,123],"content":"Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.","nodes":[{"content":"Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.","pos":[0,123]}]}],"pos":[568,692],"yaml":true},{"content":"When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <xref:System.Web.Routing.IRouteConstraint> interface. If the constraint is a string, it is treated as a regular expression. You create a class that implements <xref:System.Web.Routing.IRouteConstraint> when you cannot represent the validation logic easily as a regular expression. You add the validation logic in the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method.","nodes":[{"pos":[0,536],"content":"When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <xref:System.Web.Routing.IRouteConstraint> interface. If the constraint is a string, it is treated as a regular expression. You create a class that implements <xref:System.Web.Routing.IRouteConstraint> when you cannot represent the validation logic easily as a regular expression. You add the validation logic in the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method.","nodes":[{"content":"When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <xref:System.Web.Routing.IRouteConstraint> interface. If the constraint is a string, it is treated as a regular expression. You create a class that implements <xref:System.Web.Routing.IRouteConstraint> when you cannot represent the validation logic easily as a regular expression. You add the validation logic in the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method.","pos":[0,536],"nodes":[{"content":"When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <ph id=\"ph1\">&lt;xref:System.Web.Routing.IRouteConstraint&gt;</ph> interface.","pos":[0,213],"source":"When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <xref:System.Web.Routing.IRouteConstraint> interface."},{"content":"If the constraint is a string, it is treated as a regular expression.","pos":[214,283]},{"content":"You create a class that implements <ph id=\"ph1\">&lt;xref:System.Web.Routing.IRouteConstraint&gt;</ph> when you cannot represent the validation logic easily as a regular expression.","pos":[284,440],"source":" You create a class that implements <xref:System.Web.Routing.IRouteConstraint> when you cannot represent the validation logic easily as a regular expression."},{"content":"You add the validation logic in the <ph id=\"ph1\">&lt;xref:System.Web.Routing.IRouteConstraint.Match%2A&gt;</ph> method.","pos":[441,536],"source":" You add the validation logic in the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method."}]}]}],"pos":[703,1240],"yaml":true,"extradata":"MT"},{"content":"Determines whether the URL parameter contains a valid value for this constraint.","nodes":[{"pos":[0,80],"content":"Determines whether the URL parameter contains a valid value for this constraint.","nodes":[{"content":"Determines whether the URL parameter contains a valid value for this constraint.","pos":[0,80]}]}],"pos":[2922,3003],"yaml":true},{"content":"You use the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method to add validation logic for the constraint. This method is called by the routing framework when an incoming request is processed and when a URL is constructed. You can determine the current scenario by examining the `routeDirection` parameter.  \n  \n When a request is processed, the routing framework determines whether the pattern and values of the incoming request match the pattern and constraints of the route. When a URL is constructed, the routing framework determines whether the values supplied when the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method is called match the pattern and constraints of the route.","nodes":[{"pos":[0,314],"content":"You use the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method to add validation logic for the constraint. This method is called by the routing framework when an incoming request is processed and when a URL is constructed. You can determine the current scenario by examining the `routeDirection` parameter.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.Routing.IRouteConstraint.Match%2A&gt;</ph> method to add validation logic for the constraint.","pos":[0,114],"source":"You use the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method to add validation logic for the constraint."},{"content":"This method is called by the routing framework when an incoming request is processed and when a URL is constructed.","pos":[115,230]},{"content":"You can determine the current scenario by examining the <ph id=\"ph1\">`routeDirection`</ph> parameter.","pos":[231,314],"source":" You can determine the current scenario by examining the `routeDirection` parameter."}]},{"pos":[321,707],"content":"When a request is processed, the routing framework determines whether the pattern and values of the incoming request match the pattern and constraints of the route. When a URL is constructed, the routing framework determines whether the values supplied when the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method is called match the pattern and constraints of the route.","nodes":[{"content":"When a request is processed, the routing framework determines whether the pattern and values of the incoming request match the pattern and constraints of the route. When a URL is constructed, the routing framework determines whether the values supplied when the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method is called match the pattern and constraints of the route.","pos":[0,386],"nodes":[{"content":"When a request is processed, the routing framework determines whether the pattern and values of the incoming request match the pattern and constraints of the route.","pos":[0,164]},{"content":"When a URL is constructed, the routing framework determines whether the values supplied when the <ph id=\"ph1\">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A&gt;</ph> method is called match the pattern and constraints of the route.","pos":[165,386],"source":" When a URL is constructed, the routing framework determines whether the values supplied when the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method is called match the pattern and constraints of the route."}]}]}],"pos":[3014,3726],"yaml":true,"extradata":"MT"},{"content":"An object that encapsulates information about the HTTP request.","nodes":[{"pos":[0,63],"content":"An object that encapsulates information about the HTTP request.","nodes":[{"content":"An object that encapsulates information about the HTTP request.","pos":[0,63]}]}],"pos":[4057,4121],"yaml":true},{"content":"The object that this constraint belongs to.","nodes":[{"pos":[0,43],"content":"The object that this constraint belongs to.","nodes":[{"content":"The object that this constraint belongs to.","pos":[0,43]}]}],"pos":[4193,4237],"yaml":true},{"content":"The name of the parameter that is being checked.","nodes":[{"pos":[0,48],"content":"The name of the parameter that is being checked.","nodes":[{"content":"The name of the parameter that is being checked.","pos":[0,48]}]}],"pos":[4306,4355],"yaml":true},{"content":"An object that contains the parameters for the URL.","nodes":[{"pos":[0,51],"content":"An object that contains the parameters for the URL.","nodes":[{"content":"An object that contains the parameters for the URL.","pos":[0,51]}]}],"pos":[4443,4495],"yaml":true},{"content":"An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.","nodes":[{"pos":[0,148],"content":"An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.","nodes":[{"content":"An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.","pos":[0,148]}]}],"pos":[4585,4734],"yaml":true},{"content":"`true` if the URL parameter contains a valid value; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the URL parameter contains a valid value; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the URL parameter contains a valid value; otherwise, `false`."}],"pos":[4792,4866],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Routing.IRouteConstraint\n  commentId: T:System.Web.Routing.IRouteConstraint\n  id: IRouteConstraint\n  children:\n  - System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)\n  langs:\n  - csharp\n  name: IRouteConstraint\n  nameWithType: IRouteConstraint\n  fullName: System.Web.Routing.IRouteConstraint\n  type: Interface\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.\n  remarks: When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <xref:System.Web.Routing.IRouteConstraint> interface. If the constraint is a string, it is treated as a regular expression. You create a class that implements <xref:System.Web.Routing.IRouteConstraint> when you cannot represent the validation logic easily as a regular expression. You add the validation logic in the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method.\n  syntax:\n    content: public interface IRouteConstraint\n  derivedClasses:\n  - System.Web.Routing.HttpMethodConstraint\n  implements: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/IRouteConstraint.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)\n  commentId: M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)\n  id: Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)\n  parent: System.Web.Routing.IRouteConstraint\n  langs:\n  - csharp\n  name: Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)\n  nameWithType: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)\n  fullName: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: Determines whether the URL parameter contains a valid value for this constraint.\n  remarks: \"You use the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method to add validation logic for the constraint. This method is called by the routing framework when an incoming request is processed and when a URL is constructed. You can determine the current scenario by examining the `routeDirection` parameter.  \\n  \\n When a request is processed, the routing framework determines whether the pattern and values of the incoming request match the pattern and constraints of the route. When a URL is constructed, the routing framework determines whether the values supplied when the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method is called match the pattern and constraints of the route.\"\n  syntax:\n    content: public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);\n    parameters:\n    - id: httpContext\n      type: System.Web.HttpContextBase\n      description: An object that encapsulates information about the HTTP request.\n    - id: route\n      type: System.Web.Routing.Route\n      description: The object that this constraint belongs to.\n    - id: parameterName\n      type: System.String\n      description: The name of the parameter that is being checked.\n    - id: values\n      type: System.Web.Routing.RouteValueDictionary\n      description: An object that contains the parameters for the URL.\n    - id: routeDirection\n      type: System.Web.Routing.RouteDirection\n      description: An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.\n    return:\n      type: System.Boolean\n      description: '`true` if the URL parameter contains a valid value; otherwise, `false`.'\n  overload: System.Web.Routing.IRouteConstraint.Match*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/IRouteConstraint.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)\n  parent: System.Web.Routing.IRouteConstraint\n  isExternal: false\n  name: Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)\n  nameWithType: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)\n  fullName: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpContextBase\n  parent: System.Web\n  isExternal: false\n  name: HttpContextBase\n  nameWithType: HttpContextBase\n  fullName: System.Web.HttpContextBase\n- uid: System.Web.Routing.Route\n  parent: System.Web.Routing\n  isExternal: false\n  name: Route\n  nameWithType: Route\n  fullName: System.Web.Routing.Route\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Routing.RouteValueDictionary\n  parent: System.Web.Routing\n  isExternal: false\n  name: RouteValueDictionary\n  nameWithType: RouteValueDictionary\n  fullName: System.Web.Routing.RouteValueDictionary\n- uid: System.Web.Routing.RouteDirection\n  parent: System.Web.Routing\n  isExternal: false\n  name: RouteDirection\n  nameWithType: RouteDirection\n  fullName: System.Web.Routing.RouteDirection\n- uid: System.Web.Routing.IRouteConstraint.Match*\n  parent: System.Web.Routing.IRouteConstraint\n  isExternal: false\n  name: Match\n  nameWithType: IRouteConstraint.Match\n  fullName: IRouteConstraint.Match\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/IRouteConstraint.xml\n"}