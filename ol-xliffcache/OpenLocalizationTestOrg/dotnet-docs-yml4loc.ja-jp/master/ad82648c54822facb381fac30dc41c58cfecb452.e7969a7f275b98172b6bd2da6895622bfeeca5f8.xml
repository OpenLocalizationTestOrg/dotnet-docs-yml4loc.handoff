{"nodes":[{"content":"Represents a text node.","nodes":[{"pos":[0,23],"content":"Represents a text node.","nodes":[{"content":"Represents a text node.","pos":[0,23]}]}],"pos":[666,690],"yaml":true},{"content":"XML elements can contain text content. Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements). In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node.  \n  \n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that they did not create. If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of <xref:System.Xml.Linq.XText> nodes.  \n  \n When processing the contents of an XML tree at the node level, you should be prepared for multiple <xref:System.Xml.Linq.XText> nodes to be adjacent to each other. Further, you should be prepared for <xref:System.Xml.Linq.XText> nodes that contain no text. It is possible through [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] methods to remove the content of a text node. However, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] does not automatically delete the node. The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree.  \n  \n For more information, see [Programming with Nodes](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f).","nodes":[{"pos":[0,307],"content":"XML elements can contain text content. Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements). In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node.","nodes":[{"content":"XML elements can contain text content. Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements). In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node.","pos":[0,307],"nodes":[{"content":"XML elements can contain text content.","pos":[0,38]},{"content":"Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements).","pos":[39,216]},{"content":"In either case, each chunk of text is represented as an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XText&gt;</ph> node.","pos":[217,307],"source":" In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node."}]}]},{"pos":[314,743],"content":"[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that they did not create. If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of <xref:System.Xml.Linq.XText> nodes.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> developers will often have to write code to work with arbitrary <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> trees that they did not create.","pos":[0,203],"source":"[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that they did not create."},{"content":"If you are writing code that has to work with <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> trees that you have no control over creating, you should be aware of certain behaviors of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes.","pos":[204,429],"source":" If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of <xref:System.Xml.Linq.XText> nodes."}]},{"pos":[750,1382],"content":"When processing the contents of an XML tree at the node level, you should be prepared for multiple <xref:System.Xml.Linq.XText> nodes to be adjacent to each other. Further, you should be prepared for <xref:System.Xml.Linq.XText> nodes that contain no text. It is possible through [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] methods to remove the content of a text node. However, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] does not automatically delete the node. The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree.","nodes":[{"content":"When processing the contents of an XML tree at the node level, you should be prepared for multiple <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes to be adjacent to each other.","pos":[0,163],"source":"When processing the contents of an XML tree at the node level, you should be prepared for multiple <xref:System.Xml.Linq.XText> nodes to be adjacent to each other."},{"content":"Further, you should be prepared for <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes that contain no text.","pos":[164,256],"source":" Further, you should be prepared for <xref:System.Xml.Linq.XText> nodes that contain no text."},{"content":"It is possible through <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> methods to remove the content of a text node.","pos":[257,379],"source":" It is possible through [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] methods to remove the content of a text node."},{"content":"However, <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> does not automatically delete the node.","pos":[380,482],"source":" However, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] does not automatically delete the node."},{"content":"The node has identity, and might have annotations, so <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> allows for zero-length nodes in the tree.","pos":[483,632],"source":" The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree."}]},{"pos":[1389,1512],"content":"For more information, see <bpt id=\"p1\">[</bpt>Programming with Nodes<ept id=\"p1\">](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)</ept>.","source":"For more information, see [Programming with Nodes](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)."}],"pos":[701,2222],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XText\"></xref> class.","nodes":[{"pos":[0,83],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XText\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XText\"></xref> class."}],"pos":[7334,7418],"yaml":true},{"content":"You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors. When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.","nodes":[{"pos":[0,213],"content":"You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors. When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.","nodes":[{"content":"You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors. When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.","pos":[0,213],"nodes":[{"content":"You typically do not create text nodes by using the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XText&gt;</ph> constructors.","pos":[0,94],"source":"You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors."},{"content":"When you pass text content when constructing an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, text nodes are automatically created.","pos":[95,213],"source":" When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created."}]}]}],"pos":[7429,7643],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> that contains the value of the <xref href=\"System.Xml.Linq.XText\"></xref> node.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the value of the <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XText\"&gt;&lt;/xref&gt;</ph> node.","source":"The <xref href=\"System.String\"></xref> that contains the value of the <xref href=\"System.Xml.Linq.XText\"></xref> node."}],"pos":[8206,8325],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XText\"></xref> class from another <xref href=\"System.Xml.Linq.XText\"></xref> object.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XText\"&gt;&lt;/xref&gt;</ph> class from another <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XText\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XText\"></xref> class from another <xref href=\"System.Xml.Linq.XText\"></xref> object."}],"pos":[9837,9984],"yaml":true},{"content":"This constructor is primarily used internally to make a deep copy of an XML tree.","nodes":[{"pos":[0,81],"content":"This constructor is primarily used internally to make a deep copy of an XML tree.","nodes":[{"content":"This constructor is primarily used internally to make a deep copy of an XML tree.","pos":[0,81]}]}],"pos":[9995,10077],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.Linq.XText\"></xref> node to copy from.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XText\"&gt;&lt;/xref&gt;</ph> node to copy from.","source":"The <xref href=\"System.Xml.Linq.XText\"></xref> node to copy from."}],"pos":[10229,10295],"yaml":true},{"content":"Gets the node type for this node.","nodes":[{"pos":[0,33],"content":"Gets the node type for this node.","nodes":[{"content":"Gets the node type for this node.","pos":[0,33]}]}],"pos":[11730,11764],"yaml":true},{"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","nodes":[{"pos":[0,308],"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","nodes":[{"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","pos":[0,308],"nodes":[{"content":"Because all classes that derive from <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","pos":[0,234],"source":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>."},{"content":"Your code can then test for the node type of each node in the collection.","pos":[235,308]}]}]}],"pos":[11775,12084],"yaml":true,"extradata":"MT"},{"content":"The node type. For <xref href=\"System.Xml.Linq.XText\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Text\"></xref>.","nodes":[{"pos":[0,134],"content":"The node type. For <xref href=\"System.Xml.Linq.XText\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Text\"></xref>.","nodes":[{"content":"The node type.","pos":[0,14]},{"content":"For <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XText\"&gt;&lt;/xref&gt;</ph> objects, this value is <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNodeType.Text\"&gt;&lt;/xref&gt;</ph>.","pos":[15,134],"source":" For <xref href=\"System.Xml.Linq.XText\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Text\"></xref>."}]}],"pos":[14291,14426],"yaml":true},{"content":"Gets or sets the value of this node.","nodes":[{"pos":[0,36],"content":"Gets or sets the value of this node.","nodes":[{"content":"Gets or sets the value of this node.","pos":[0,36]}]}],"pos":[15846,15883],"yaml":true},{"content":"Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.","nodes":[{"pos":[0,131],"content":"Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.","nodes":[{"content":"Setting this property will raise the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.","pos":[0,131],"source":"Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events."}]}],"pos":[15894,16026],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the value of this node.","nodes":[{"pos":[0,74],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the value of this node.","source":"A <xref href=\"System.String\"></xref> that contains the value of this node."}],"pos":[17098,17173],"yaml":true},{"content":"Writes this node to an <xref href=\"System.Xml.XmlWriter\"></xref>.","nodes":[{"pos":[0,65],"content":"Writes this node to an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Writes this node to an <xref href=\"System.Xml.XmlWriter\"></xref>."}],"pos":[18699,18765],"yaml":true},{"content":"This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.","nodes":[{"pos":[0,113],"content":"This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.","nodes":[{"content":"This method is primarily used internally by the methods that write an XML tree to an <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[0,113],"source":"This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>."}]}],"pos":[18776,18890],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlWriter\"></xref> into which this method will write.","nodes":[{"pos":[0,79],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> into which this method will write.","source":"An <xref href=\"System.Xml.XmlWriter\"></xref> into which this method will write."}],"pos":[19058,19138],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Linq.XText\n  commentId: T:System.Xml.Linq.XText\n  id: XText\n  children:\n  - System.Xml.Linq.XText.#ctor(System.String)\n  - System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)\n  - System.Xml.Linq.XText.NodeType\n  - System.Xml.Linq.XText.Value\n  - System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)\n  - System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: XText\n  nameWithType: XText\n  fullName: System.Xml.Linq.XText\n  type: Class\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Represents a text node.\n  remarks: \"XML elements can contain text content. Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements). In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node.  \\n  \\n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that they did not create. If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of <xref:System.Xml.Linq.XText> nodes.  \\n  \\n When processing the contents of an XML tree at the node level, you should be prepared for multiple <xref:System.Xml.Linq.XText> nodes to be adjacent to each other. Further, you should be prepared for <xref:System.Xml.Linq.XText> nodes that contain no text. It is possible through [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] methods to remove the content of a text node. However, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] does not automatically delete the node. The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree.  \\n  \\n For more information, see [Programming with Nodes](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f).\"\n  syntax:\n    content: 'public class XText : System.Xml.Linq.XNode'\n  inheritance:\n  - System.Object\n  - System.Xml.Linq.XObject\n  - System.Xml.Linq.XNode\n  derivedClasses:\n  - System.Xml.Linq.XCData\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  - System.Xml.Linq.XNode.Ancestors\n  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.CreateReader\n  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.DocumentOrderComparer\n  - System.Xml.Linq.XNode.ElementsAfterSelf\n  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.ElementsBeforeSelf\n  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.EqualityComparer\n  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.NextNode\n  - System.Xml.Linq.XNode.NodesAfterSelf\n  - System.Xml.Linq.XNode.NodesBeforeSelf\n  - System.Xml.Linq.XNode.PreviousNode\n  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  - System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)\n  - System.Xml.Linq.XNode.Remove\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  - System.Xml.Linq.XNode.ToString\n  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition\n  extensionMethods:\n  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)\n  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)\n  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)\n  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)\n  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)\n  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XText.#ctor(System.String)\n  commentId: M:System.Xml.Linq.XText.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Xml.Linq.XText\n  langs:\n  - csharp\n  name: XText(String)\n  nameWithType: XText.XText(String)\n  fullName: XText.XText(String)\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Linq.XText\"></xref> class.\n  remarks: You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors. When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.\n  example:\n  - \"The following example creates an element that contains a text node.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\", \\\"Some text\\\");  \\nConsole.WriteLine(root);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root>Some text</Root>  \\nConsole.WriteLine(root)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```xml  \\n  \\n<Root>Some text</Root>  \\n```\"\n  syntax:\n    content: public XText (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> that contains the value of the <xref href=\"System.Xml.Linq.XText\"></xref> node.\n  overload: System.Xml.Linq.XText.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)\n  commentId: M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)\n  id: '#ctor(System.Xml.Linq.XText)'\n  parent: System.Xml.Linq.XText\n  langs:\n  - csharp\n  name: XText(XText)\n  nameWithType: XText.XText(XText)\n  fullName: XText.XText(XText)\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Linq.XText\"></xref> class from another <xref href=\"System.Xml.Linq.XText\"></xref> object.\n  remarks: This constructor is primarily used internally to make a deep copy of an XML tree.\n  syntax:\n    content: public XText (System.Xml.Linq.XText other);\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XText\n      description: The <xref href=\"System.Xml.Linq.XText\"></xref> node to copy from.\n  overload: System.Xml.Linq.XText.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XText.NodeType\n  commentId: P:System.Xml.Linq.XText.NodeType\n  id: NodeType\n  parent: System.Xml.Linq.XText\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XText.NodeType\n  fullName: XText.NodeType\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets the node type for this node.\n  remarks: Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.\n  example:\n  - \"The following example creates an XML tree that contains a number of types of nodes. It then iterates through the tree, outputting the node type of each node.  \\n  \\n Note that `Child2` contains an <xref:System.Xml.Linq.XText> node, implicitly converted from the string content.  \\n  \\n```csharp  \\n  \\n                // Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  \\nXDocument xmlTree = new XDocument(  \\n    new XComment(\\\"a comment\\\"),  \\n    new XProcessingInstruction(\\\"xml-stylesheet\\\", \\\"type=\\\\\\\"text/xsl\\\\\\\" href=\\\\\\\"hello.xsl\\\\\\\"\\\"),  \\n    new XElement(\\\"Root\\\",  \\n        new XAttribute(\\\"Att\\\", \\\"attContent\\\"),  \\n        new XElement(\\\"Child1\\\",  \\n            new XCData(\\\"CDATA content\\\")  \\n        ),  \\n        new XElement(\\\"Child2\\\", \\\"Text content\\\")  \\n    )  \\n);  \\n  \\nforeach (XNode node in xmlTree.DescendantNodes())  \\n{  \\n    Console.WriteLine(node.NodeType);  \\n    if (node.NodeType == XmlNodeType.Element)  \\n    {  \\n        foreach (XAttribute att in ((XElement)node).Attributes())  \\n            Console.WriteLine(att.NodeType);  \\n    }  \\n}  \\n```  \\n  \\n```vb  \\n  \\n                ' Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  \\nDim xmlTree As XDocument = _  \\n    <?xml version='1.0'?>  \\n    <!-- a comment -->  \\n    <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  \\n    <Root Att=\\\"attContent\\\">  \\n        <Child1>  \\n            <![CDATA[CDATA content]]>  \\n        </Child1>  \\n        <Child2>Text content</Child2>  \\n    </Root>  \\n  \\nFor Each node As XNode In xmlTree.DescendantNodes  \\n    Console.WriteLine(node.NodeType.ToString())  \\n    If node.NodeType = XmlNodeType.Element Then  \\n        For Each att In DirectCast(node, XElement).Attributes  \\n            Console.WriteLine(att.NodeType.ToString())  \\n        Next  \\n    End If  \\nNext  \\n  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nComment  \\nProcessingInstruction  \\nElement  \\nAttribute  \\nElement  \\nCDATA  \\nElement  \\nText  \\n```\"\n  syntax:\n    content: public override System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: The node type. For <xref href=\"System.Xml.Linq.XText\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Text\"></xref>.\n  overload: System.Xml.Linq.XText.NodeType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XText.Value\n  commentId: P:System.Xml.Linq.XText.Value\n  id: Value\n  parent: System.Xml.Linq.XText\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XText.Value\n  fullName: XText.Value\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets or sets the value of this node.\n  remarks: Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.\n  example:\n  - \"The following example shows getting and setting this property.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\", \\\"Some text\\\");  \\nXText txtNode = root.Nodes().OfType<XText>().First();  \\nConsole.WriteLine(txtNode.Value);  \\ntxtNode.Value = \\\"New text\\\";  \\nConsole.WriteLine(txtNode.Value);  \\n  \\nroot.Value = \\\"Newer text\\\";  \\ntxtNode = root.Nodes().OfType<XText>().First();  \\nConsole.WriteLine(txtNode.Value);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root>Some text</Root>  \\nDim txtNode As XText = root.Nodes().OfType(Of XText).First()  \\nConsole.WriteLine(txtNode.Value)  \\ntxtNode.Value = \\\"New text\\\"  \\nConsole.WriteLine(txtNode.Value)  \\n  \\nroot.Value = \\\"Newer text\\\"  \\ntxtNode = root.Nodes().OfType(Of XText).First()  \\nConsole.WriteLine(txtNode.Value)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nSome text  \\nNew text  \\nNewer text  \\n```\"\n  syntax:\n    content: public string Value { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the value of this node.\n  overload: System.Xml.Linq.XText.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XText\n  langs:\n  - csharp\n  name: WriteTo(XmlWriter)\n  nameWithType: XText.WriteTo(XmlWriter)\n  fullName: XText.WriteTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Writes this node to an <xref href=\"System.Xml.XmlWriter\"></xref>.\n  remarks: This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.\n  syntax:\n    content: public override void WriteTo (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: An <xref href=\"System.Xml.XmlWriter\"></xref> into which this method will write.\n  overload: System.Xml.Linq.XText.WriteTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  commentId: M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  id: WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  parent: System.Xml.Linq.XText\n  langs:\n  - csharp\n  name: WriteToAsync(XmlWriter, CancellationToken)\n  nameWithType: XText.WriteToAsync(XmlWriter, CancellationToken)\n  fullName: XText.WriteToAsync(XmlWriter, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.Xml.Linq.XText.WriteToAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\nreferences:\n- uid: System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  nameWithType: XNode\n  fullName: System.Xml.Linq.XNode\n- uid: System.Xml.Linq.XText.#ctor(System.String)\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: XText(String)\n  nameWithType: XText.XText(String)\n  fullName: XText.XText(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: XText(XText)\n  nameWithType: XText.XText(XText)\n  fullName: XText.XText(XText)\n- uid: System.Xml.Linq.XText\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XText\n  nameWithType: XText\n  fullName: System.Xml.Linq.XText\n- uid: System.Xml.Linq.XText.NodeType\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: NodeType\n  nameWithType: XText.NodeType\n  fullName: XText.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.Linq.XText.Value\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: Value\n  nameWithType: XText.Value\n  fullName: XText.Value\n- uid: System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: WriteTo(XmlWriter)\n  nameWithType: XText.WriteTo(XmlWriter)\n  fullName: XText.WriteTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: WriteToAsync(XmlWriter, CancellationToken)\n  nameWithType: XText.WriteToAsync(XmlWriter, CancellationToken)\n  fullName: XText.WriteToAsync(XmlWriter, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Xml.Linq.XText.#ctor*\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: XText\n  nameWithType: XText.XText\n  fullName: XText.XText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n- uid: System.Xml.Linq.XText.NodeType*\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: NodeType\n  nameWithType: XText.NodeType\n  fullName: XText.NodeType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n- uid: System.Xml.Linq.XText.Value*\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: Value\n  nameWithType: XText.Value\n  fullName: XText.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n- uid: System.Xml.Linq.XText.WriteTo*\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: WriteTo\n  nameWithType: XText.WriteTo\n  fullName: XText.WriteTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n- uid: System.Xml.Linq.XText.WriteToAsync*\n  parent: System.Xml.Linq.XText\n  isExternal: false\n  name: WriteToAsync\n  nameWithType: XText.WriteToAsync\n  fullName: XText.WriteToAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XText.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Xml.Linq.XNode.ToString\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString()\n  nameWithType: XNode.ToString()\n  fullName: XNode.ToString()\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: AddAnnotation(Object)\n  nameWithType: XObject.AddAnnotation(Object)\n  fullName: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation(Type)\n  nameWithType: XObject.Annotation(Type)\n  fullName: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation<T>()\n  nameWithType: XObject.Annotation<T>()\n  fullName: XObject.Annotation<T>()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations(Type)\n  nameWithType: XObject.Annotations(Type)\n  fullName: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations<T>()\n  nameWithType: XObject.Annotations<T>()\n  fullName: XObject.Annotations<T>()\n- uid: System.Xml.Linq.XObject.BaseUri\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: BaseUri\n  nameWithType: XObject.BaseUri\n  fullName: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Changed\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changed\n  nameWithType: XObject.Changed\n  fullName: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changing\n  nameWithType: XObject.Changing\n  fullName: XObject.Changing\n- uid: System.Xml.Linq.XObject.Document\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Document\n  nameWithType: XObject.Document\n  fullName: XObject.Document\n- uid: System.Xml.Linq.XObject.Parent\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Parent\n  nameWithType: XObject.Parent\n  fullName: XObject.Parent\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations(Type)\n  nameWithType: XObject.RemoveAnnotations(Type)\n  fullName: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations<T>()\n  nameWithType: XObject.RemoveAnnotations<T>()\n  fullName: XObject.RemoveAnnotations<T>()\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.HasLineInfo()\n  nameWithType: XObject.IXmlLineInfo.HasLineInfo()\n  fullName: XObject.IXmlLineInfo.HasLineInfo()\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.LineNumber\n  nameWithType: XObject.IXmlLineInfo.LineNumber\n  fullName: XObject.IXmlLineInfo.LineNumber\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.LinePosition\n  nameWithType: XObject.IXmlLineInfo.LinePosition\n  fullName: XObject.IXmlLineInfo.LinePosition\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddAfterSelf(Object)\n  nameWithType: XNode.AddAfterSelf(Object)\n  fullName: XNode.AddAfterSelf(Object)\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddAfterSelf(Object[])\n  nameWithType: XNode.AddAfterSelf(Object[])\n  fullName: XNode.AddAfterSelf(Object[])\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddBeforeSelf(Object)\n  nameWithType: XNode.AddBeforeSelf(Object)\n  fullName: XNode.AddBeforeSelf(Object)\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddBeforeSelf(Object[])\n  nameWithType: XNode.AddBeforeSelf(Object[])\n  fullName: XNode.AddBeforeSelf(Object[])\n- uid: System.Xml.Linq.XNode.Ancestors\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors()\n  nameWithType: XNode.Ancestors()\n  fullName: XNode.Ancestors()\n- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors(XName)\n  nameWithType: XNode.Ancestors(XName)\n  fullName: XNode.Ancestors(XName)\n- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CompareDocumentOrder(XNode, XNode)\n  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)\n  fullName: XNode.CompareDocumentOrder(XNode, XNode)\n- uid: System.Xml.Linq.XNode.CreateReader\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader()\n  nameWithType: XNode.CreateReader()\n  fullName: XNode.CreateReader()\n- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader(ReaderOptions)\n  nameWithType: XNode.CreateReader(ReaderOptions)\n  fullName: XNode.CreateReader(ReaderOptions)\n- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DeepEquals(XNode, XNode)\n  nameWithType: XNode.DeepEquals(XNode, XNode)\n  fullName: XNode.DeepEquals(XNode, XNode)\n- uid: System.Xml.Linq.XNode.DocumentOrderComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DocumentOrderComparer\n  nameWithType: XNode.DocumentOrderComparer\n  fullName: XNode.DocumentOrderComparer\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf()\n  nameWithType: XNode.ElementsAfterSelf()\n  fullName: XNode.ElementsAfterSelf()\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf(XName)\n  nameWithType: XNode.ElementsAfterSelf(XName)\n  fullName: XNode.ElementsAfterSelf(XName)\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf()\n  nameWithType: XNode.ElementsBeforeSelf()\n  fullName: XNode.ElementsBeforeSelf()\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf(XName)\n  nameWithType: XNode.ElementsBeforeSelf(XName)\n  fullName: XNode.ElementsBeforeSelf(XName)\n- uid: System.Xml.Linq.XNode.EqualityComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: EqualityComparer\n  nameWithType: XNode.EqualityComparer\n  fullName: XNode.EqualityComparer\n- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsAfter(XNode)\n  nameWithType: XNode.IsAfter(XNode)\n  fullName: XNode.IsAfter(XNode)\n- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsBefore(XNode)\n  nameWithType: XNode.IsBefore(XNode)\n  fullName: XNode.IsBefore(XNode)\n- uid: System.Xml.Linq.XNode.NextNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NextNode\n  nameWithType: XNode.NextNode\n  fullName: XNode.NextNode\n- uid: System.Xml.Linq.XNode.NodesAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesAfterSelf()\n  nameWithType: XNode.NodesAfterSelf()\n  fullName: XNode.NodesAfterSelf()\n- uid: System.Xml.Linq.XNode.NodesBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesBeforeSelf()\n  nameWithType: XNode.NodesBeforeSelf()\n  fullName: XNode.NodesBeforeSelf()\n- uid: System.Xml.Linq.XNode.PreviousNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: PreviousNode\n  nameWithType: XNode.PreviousNode\n  fullName: XNode.PreviousNode\n- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReadFrom(XmlReader)\n  nameWithType: XNode.ReadFrom(XmlReader)\n  fullName: XNode.ReadFrom(XmlReader)\n- uid: System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReadFromAsync(XmlReader, CancellationToken)\n  nameWithType: XNode.ReadFromAsync(XmlReader, CancellationToken)\n  fullName: XNode.ReadFromAsync(XmlReader, CancellationToken)\n- uid: System.Xml.Linq.XNode.Remove\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Remove()\n  nameWithType: XNode.Remove()\n  fullName: XNode.Remove()\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReplaceWith(Object)\n  nameWithType: XNode.ReplaceWith(Object)\n  fullName: XNode.ReplaceWith(Object)\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReplaceWith(Object[])\n  nameWithType: XNode.ReplaceWith(Object[])\n  fullName: XNode.ReplaceWith(Object[])\n- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString(SaveOptions)\n  nameWithType: XNode.ToString(SaveOptions)\n  fullName: XNode.ToString(SaveOptions)\n- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: CreateNavigator(XNode)\n  nameWithType: Extensions.CreateNavigator(XNode)\n  fullName: Extensions.CreateNavigator(XNode)\n- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: CreateNavigator(XNode, XmlNameTable)\n  nameWithType: Extensions.CreateNavigator(XNode, XmlNameTable)\n  fullName: Extensions.CreateNavigator(XNode, XmlNameTable)\n- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathEvaluate(XNode, String)\n  nameWithType: Extensions.XPathEvaluate(XNode, String)\n  fullName: Extensions.XPathEvaluate(XNode, String)\n- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathEvaluate(XNode, String, IXmlNamespaceResolver)\n  nameWithType: Extensions.XPathEvaluate(XNode, String, IXmlNamespaceResolver)\n  fullName: Extensions.XPathEvaluate(XNode, String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElement(XNode, String)\n  nameWithType: Extensions.XPathSelectElement(XNode, String)\n  fullName: Extensions.XPathSelectElement(XNode, String)\n- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElement(XNode, String, IXmlNamespaceResolver)\n  nameWithType: Extensions.XPathSelectElement(XNode, String, IXmlNamespaceResolver)\n  fullName: Extensions.XPathSelectElement(XNode, String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElements(XNode, String)\n  nameWithType: Extensions.XPathSelectElements(XNode, String)\n  fullName: Extensions.XPathSelectElements(XNode, String)\n- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElements(XNode, String, IXmlNamespaceResolver)\n  nameWithType: Extensions.XPathSelectElements(XNode, String, IXmlNamespaceResolver)\n  fullName: Extensions.XPathSelectElements(XNode, String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  parent: System.Xml.XPath.XDocumentExtensions\n  isExternal: false\n  name: ToXPathNavigable(XNode)\n  nameWithType: XDocumentExtensions.ToXPathNavigable(XNode)\n  fullName: XDocumentExtensions.ToXPathNavigable(XNode)\n"}