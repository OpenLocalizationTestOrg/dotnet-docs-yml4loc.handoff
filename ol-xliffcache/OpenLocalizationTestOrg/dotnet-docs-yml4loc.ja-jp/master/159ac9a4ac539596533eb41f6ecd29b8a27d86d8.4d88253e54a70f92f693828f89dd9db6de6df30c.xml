{"nodes":[{"content":"Represents the enumerator for <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects in a <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"></xref>.","nodes":[{"pos":[0,219],"content":"Represents the enumerator for <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> objects in a <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Represents the enumerator for <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects in a <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"></xref>."}],"pos":[1053,1273],"yaml":true},{"content":"Enumerators allow only reading the data in the collection. Enumerators cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.  \n  \n <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called. <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.  \n  \n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,122],"content":"Enumerators allow only reading the data in the collection. Enumerators cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators allow only reading the data in the collection. Enumerators cannot be used to modify the underlying collection.","pos":[0,122],"nodes":[{"content":"Enumerators allow only reading the data in the collection.","pos":[0,58]},{"content":"Enumerators cannot be used to modify the underlying collection.","pos":[59,122]}]}]},{"pos":[129,835],"content":"Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.","pos":[0,706],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.","pos":[84,232],"source":" The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position."},{"content":"At this position, calling the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.","pos":[233,382],"source":" At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception."},{"content":"Therefore, you must call the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property.","pos":[383,706],"source":" Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property."}]}]},{"pos":[842,1368],"content":"<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called. <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called. <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.","pos":[0,526],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,319],"source":"<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the next element.","pos":[320,526],"source":" <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element."}]}]},{"pos":[1375,2202],"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.","nodes":[{"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[0,233],"source":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, calling <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[234,481],"source":" If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception."},{"content":"To reset <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.","pos":[482,827],"source":" To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>."}]},{"pos":[2209,3086],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.","pos":[0,877],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[73,458],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>."},{"content":"If the collection is modified between calling <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.","pos":[459,877],"source":" If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated."}]}]},{"pos":[3093,3567],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,474],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[155,292]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[293,474]}]}]}],"pos":[1284,4864],"yaml":true,"extradata":"MT"},{"content":"Gets the current entry in the collection.","nodes":[{"pos":[0,41],"content":"Gets the current entry in the collection.","nodes":[{"content":"Gets the current entry in the collection.","pos":[0,41]}]}],"pos":[7865,7907],"yaml":true},{"content":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.  \n  \n Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.","nodes":[{"pos":[0,413],"content":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.","nodes":[{"content":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.","pos":[0,413],"nodes":[{"content":"When the enumerator is created, it does not point to an object, so the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.","pos":[0,229],"source":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed."},{"content":"You must first call the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.","pos":[230,413],"source":" You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection."}]}]},{"pos":[420,773],"content":"Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.","nodes":[{"content":"Getting the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property multiple times with no intervening calls to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object each time.","pos":[0,353],"source":"Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time."}]}],"pos":[7918,8696],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object in the collection.","nodes":[{"pos":[0,120],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> object in the collection.","source":"The current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object in the collection."}],"pos":[8910,9031],"yaml":true},{"content":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"></xref> property is accessed before first calling the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"></xref> method. The cursor is located before the first object in the collection.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"></xref> property is accessed after a call to the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"></xref> method returns `false`, which indicates that the cursor is located after the last object in the collection.","nodes":[{"pos":[0,325],"content":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"></xref> property is accessed before first calling the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"></xref> method. The cursor is located before the first object in the collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"&gt;&lt;/xref&gt;</ph> property is accessed before first calling the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"&gt;&lt;/xref&gt;</ph> method.","pos":[0,260],"source":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"></xref> property is accessed before first calling the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"></xref> method."},{"content":"The cursor is located before the first object in the collection.","pos":[261,325]}]},{"pos":[332,336],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[343,698],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"&gt;&lt;/xref&gt;</ph> property is accessed after a call to the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"&gt;&lt;/xref&gt;</ph> method returns <ph id=\"ph3\">`false`</ph>, which indicates that the cursor is located after the last object in the collection.","source":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\"></xref> property is accessed after a call to the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\"></xref> method returns `false`, which indicates that the cursor is located after the last object in the collection."}],"pos":[9248,9961],"yaml":true},{"content":"Moves to the next element in the collection.","nodes":[{"pos":[0,44],"content":"Moves to the next element in the collection.","nodes":[{"content":"Moves to the next element in the collection.","pos":[0,44]}]}],"pos":[11270,11315],"yaml":true},{"content":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection.  \n  \n <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection. It then returns `false` for each successive call. However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.  \n  \n Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method returns <ph id=\"ph2\">`false`</ph> immediately if there are no objects in the collection.","source":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection."},{"pos":[179,643],"content":"<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection. It then returns `false` for each successive call. However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph> until it has reached the end of the collection.","pos":[0,153],"source":"<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection."},{"content":"It then returns <ph id=\"ph1\">`false`</ph> for each successive call.","pos":[154,203],"source":" It then returns `false` for each successive call."},{"content":"However, once <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> has returned <ph id=\"ph2\">`false`</ph>, accessing the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.","pos":[204,464],"source":" However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception."}]},{"pos":[650,981],"content":"Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.","nodes":[{"content":"Upon creation, an enumerator is positioned before the first <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object in the collection, and the first call to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> positions the enumerator to the first object in the collection.","pos":[0,331],"source":"Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection."}]}],"pos":[11326,12314],"yaml":true,"extradata":"MT"},{"content":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id=\"ph2\">`false`</ph> if the enumerator has passed the end of the collection.","source":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection."}],"pos":[12439,12577],"yaml":true},{"content":"Resets the enumerator to the beginning of the collection.","nodes":[{"pos":[0,57],"content":"Resets the enumerator to the beginning of the collection.","nodes":[{"content":"Resets the enumerator to the beginning of the collection.","pos":[0,57]}]}],"pos":[13979,14037],"yaml":true},{"content":"An enumerator moves in a forward-only direction. Use this method to return to the beginning of the collection.  \n  \n The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.","nodes":[{"pos":[0,110],"content":"An enumerator moves in a forward-only direction. Use this method to return to the beginning of the collection.","nodes":[{"content":"An enumerator moves in a forward-only direction. Use this method to return to the beginning of the collection.","pos":[0,110],"nodes":[{"content":"An enumerator moves in a forward-only direction.","pos":[0,48]},{"content":"Use this method to return to the beginning of the collection.","pos":[49,110]}]}]},{"pos":[117,541],"content":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.","nodes":[{"content":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.","pos":[0,424],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.","pos":[0,158],"source":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, you do not need to call <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> to move the cursor forward to the first object.","pos":[159,424],"source":" After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object."}]}]}],"pos":[14048,14594],"yaml":true,"extradata":"MT"},{"content":"Gets the current object in the collection.","nodes":[{"pos":[0,42],"content":"Gets the current object in the collection.","nodes":[{"content":"Gets the current object in the collection.","pos":[0,42]}]}],"pos":[16208,16251],"yaml":true},{"content":"Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.","nodes":[{"pos":[0,140],"content":"Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.","nodes":[{"content":"Do not call this method; use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property instead.","pos":[0,140],"source":"Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead."}]}],"pos":[16262,16403],"yaml":true,"extradata":"MT"},{"content":"The current object in the collection.","nodes":[{"pos":[0,37],"content":"The current object in the collection.","nodes":[{"content":"The current object in the collection.","pos":[0,37]}]}],"pos":[16538,16576],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  commentId: T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  id: KeyContainerPermissionAccessEntryEnumerator\n  children:\n  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor\n  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\n  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\n  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset\n  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntryEnumerator\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Represents the enumerator for <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> objects in a <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\"></xref>.\n  remarks: \"Enumerators allow only reading the data in the collection. Enumerators cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.  \\n  \\n <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called. <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.  \\n  \\n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntryEnumerator()\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.KeyContainerPermissionAccessEntryEnumerator()\n  fullName: KeyContainerPermissionAccessEntryEnumerator.KeyContainerPermissionAccessEntryEnumerator()\n  type: Constructor\n  assemblies:\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermissionAccessEntryEnumerator ();\n    parameters: []\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\n  id: Current\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current\n  fullName: KeyContainerPermissionAccessEntryEnumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets the current entry in the collection.\n  remarks: \"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.  \\n  \\n Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.\"\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionAccessEntry\n      description: The current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object in the collection.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\\\"></xref> property is accessed before first calling the <xref href=\\\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\\\"></xref> method. The cursor is located before the first object in the collection.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\\\"></xref> property is accessed after a call to the <xref href=\\\"System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\\\"></xref> method returns `false`, which indicates that the cursor is located after the last object in the collection.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()\n  fullName: KeyContainerPermissionAccessEntryEnumerator.MoveNext()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Moves to the next element in the collection.\n  remarks: \"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection.  \\n  \\n <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection. It then returns `false` for each successive call. However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.  \\n  \\n Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.\"\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset\n  id: Reset\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()\n  fullName: KeyContainerPermissionAccessEntryEnumerator.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Resets the enumerator to the beginning of the collection.\n  remarks: \"An enumerator moves in a forward-only direction. Use this method to return to the beginning of the collection.  \\n  \\n The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.\"\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  langs:\n  - csharp\n  name: IEnumerator.Current\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.IEnumerator.Current\n  fullName: KeyContainerPermissionAccessEntryEnumerator.IEnumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets the current object in the collection.\n  remarks: Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: The current object in the collection.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: KeyContainerPermissionAccessEntryEnumerator()\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.KeyContainerPermissionAccessEntryEnumerator()\n  fullName: KeyContainerPermissionAccessEntryEnumerator.KeyContainerPermissionAccessEntryEnumerator()\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current\n  fullName: KeyContainerPermissionAccessEntryEnumerator.Current\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()\n  fullName: KeyContainerPermissionAccessEntryEnumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()\n  fullName: KeyContainerPermissionAccessEntryEnumerator.Reset()\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: IEnumerator.Current\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.IEnumerator.Current\n  fullName: KeyContainerPermissionAccessEntryEnumerator.IEnumerator.Current\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: KeyContainerPermissionAccessEntryEnumerator\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.KeyContainerPermissionAccessEntryEnumerator\n  fullName: KeyContainerPermissionAccessEntryEnumerator.KeyContainerPermissionAccessEntryEnumerator\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current\n  fullName: KeyContainerPermissionAccessEntryEnumerator.Current\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext\n  fullName: KeyContainerPermissionAccessEntryEnumerator.MoveNext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: Reset\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset\n  fullName: KeyContainerPermissionAccessEntryEnumerator.Reset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current\n  fullName: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntryEnumerator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n"}