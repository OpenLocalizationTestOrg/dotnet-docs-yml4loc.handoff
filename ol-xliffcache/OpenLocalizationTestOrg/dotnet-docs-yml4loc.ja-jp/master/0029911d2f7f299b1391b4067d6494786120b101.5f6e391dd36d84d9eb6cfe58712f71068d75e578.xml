{"nodes":[{"content":"Specifies how the interior of a closed path is filled.","nodes":[{"pos":[0,54],"content":"Specifies how the interior of a closed path is filled.","nodes":[{"content":"Specifies how the interior of a closed path is filled.","pos":[0,54]}]}],"pos":[450,505],"yaml":true},{"content":"An application fills the interior of a path using one of two fill modes: alternate or winding. The mode determines how to fill and clip the interior of a closed figure.  \n  \n The default mode is Alternate. To determine the interiors of closed figures in the alternate mode, draw a line from any arbitrary start point in the path to some point obviously outside the path. If the line crosses an odd number of path segments, the starting point is inside the closed region and is therefore part of the fill or clipping area. An even number of crossings means that the point is not in an area to be filled or clipped. An open figure is filled or clipped by using a line to connect the last point to the first point of the figure.  \n  \n The Winding mode considers the direction of the path segments at each intersection. It adds one for every clockwise intersection, and subtracts one for every counterclockwise intersection. If the result is nonzero, the point is considered inside the fill or clip area. A zero count means that the point lies outside the fill or clip area.  \n  \n A figure is considered clockwise or counterclockwise based on the order in which the segments of the figure are drawn.","nodes":[{"pos":[0,168],"content":"An application fills the interior of a path using one of two fill modes: alternate or winding. The mode determines how to fill and clip the interior of a closed figure.","nodes":[{"content":"An application fills the interior of a path using one of two fill modes: alternate or winding. The mode determines how to fill and clip the interior of a closed figure.","pos":[0,168],"nodes":[{"content":"An application fills the interior of a path using one of two fill modes: alternate or winding.","pos":[0,94]},{"content":"The mode determines how to fill and clip the interior of a closed figure.","pos":[95,168]}]}]},{"pos":[175,725],"content":"The default mode is Alternate. To determine the interiors of closed figures in the alternate mode, draw a line from any arbitrary start point in the path to some point obviously outside the path. If the line crosses an odd number of path segments, the starting point is inside the closed region and is therefore part of the fill or clipping area. An even number of crossings means that the point is not in an area to be filled or clipped. An open figure is filled or clipped by using a line to connect the last point to the first point of the figure.","nodes":[{"content":"The default mode is Alternate. To determine the interiors of closed figures in the alternate mode, draw a line from any arbitrary start point in the path to some point obviously outside the path. If the line crosses an odd number of path segments, the starting point is inside the closed region and is therefore part of the fill or clipping area. An even number of crossings means that the point is not in an area to be filled or clipped. An open figure is filled or clipped by using a line to connect the last point to the first point of the figure.","pos":[0,550],"nodes":[{"content":"The default mode is Alternate.","pos":[0,30]},{"content":"To determine the interiors of closed figures in the alternate mode, draw a line from any arbitrary start point in the path to some point obviously outside the path.","pos":[31,195]},{"content":"If the line crosses an odd number of path segments, the starting point is inside the closed region and is therefore part of the fill or clipping area.","pos":[196,346]},{"content":"An even number of crossings means that the point is not in an area to be filled or clipped.","pos":[347,438]},{"content":"An open figure is filled or clipped by using a line to connect the last point to the first point of the figure.","pos":[439,550]}]}]},{"pos":[732,1070],"content":"The Winding mode considers the direction of the path segments at each intersection. It adds one for every clockwise intersection, and subtracts one for every counterclockwise intersection. If the result is nonzero, the point is considered inside the fill or clip area. A zero count means that the point lies outside the fill or clip area.","nodes":[{"content":"The Winding mode considers the direction of the path segments at each intersection. It adds one for every clockwise intersection, and subtracts one for every counterclockwise intersection. If the result is nonzero, the point is considered inside the fill or clip area. A zero count means that the point lies outside the fill or clip area.","pos":[0,338],"nodes":[{"content":"The Winding mode considers the direction of the path segments at each intersection.","pos":[0,83]},{"content":"It adds one for every clockwise intersection, and subtracts one for every counterclockwise intersection.","pos":[84,188]},{"content":"If the result is nonzero, the point is considered inside the fill or clip area.","pos":[189,268]},{"content":"A zero count means that the point lies outside the fill or clip area.","pos":[269,338]}]}]},{"pos":[1077,1195],"content":"A figure is considered clockwise or counterclockwise based on the order in which the segments of the figure are drawn.","nodes":[{"content":"A figure is considered clockwise or counterclockwise based on the order in which the segments of the figure are drawn.","pos":[0,118]}]}],"pos":[516,1720],"yaml":true,"extradata":"MT"},{"content":"Specifies the alternate fill mode.","nodes":[{"pos":[0,34],"content":"Specifies the alternate fill mode.","nodes":[{"content":"Specifies the alternate fill mode.","pos":[0,34]}]}],"pos":[3799,3834],"yaml":true},{"content":"Specifies the winding fill mode.","nodes":[{"pos":[0,32],"content":"Specifies the winding fill mode.","nodes":[{"content":"Specifies the winding fill mode.","pos":[0,32]}]}],"pos":[4759,4792],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Drawing2D.FillMode\n  commentId: T:System.Drawing.Drawing2D.FillMode\n  id: FillMode\n  children:\n  - System.Drawing.Drawing2D.FillMode.Alternate\n  - System.Drawing.Drawing2D.FillMode.Winding\n  langs:\n  - csharp\n  name: FillMode\n  nameWithType: FillMode\n  fullName: System.Drawing.Drawing2D.FillMode\n  type: Enum\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies how the interior of a closed path is filled.\n  remarks: \"An application fills the interior of a path using one of two fill modes: alternate or winding. The mode determines how to fill and clip the interior of a closed figure.  \\n  \\n The default mode is Alternate. To determine the interiors of closed figures in the alternate mode, draw a line from any arbitrary start point in the path to some point obviously outside the path. If the line crosses an odd number of path segments, the starting point is inside the closed region and is therefore part of the fill or clipping area. An even number of crossings means that the point is not in an area to be filled or clipped. An open figure is filled or clipped by using a line to connect the last point to the first point of the figure.  \\n  \\n The Winding mode considers the direction of the path segments at each intersection. It adds one for every clockwise intersection, and subtracts one for every counterclockwise intersection. If the result is nonzero, the point is considered inside the fill or clip area. A zero count means that the point lies outside the fill or clip area.  \\n  \\n A figure is considered clockwise or counterclockwise based on the order in which the segments of the figure are drawn.\"\n  example:\n  - \"The following example creates a path that has one open figure (an arc) and one closed figure (an ellipse). The FillPath method fills the path according to the default fill mode, which is Alternate.The following illustration shows the output of the example code. Note that the path is filled (according to Alternate) as if the open figure were closed by a straight line from its ending point to its starting point.  \\n  \\n ![Fill Open Path](~/add/media/fillopenpath.png \\\"Fill Open Path\\\")  \\n  \\n The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.  \\n  \\n [!code-csharp[System.Drawing.ConstructingDrawingPaths#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ConstructingDrawingPaths/CS/Class1.cs#11)]\\n [!code-vb[System.Drawing.ConstructingDrawingPaths#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ConstructingDrawingPaths/VB/Class1.vb#11)]\"\n  syntax:\n    content: public enum FillMode\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/FillMode.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Drawing2D.FillMode.Alternate\n  commentId: F:System.Drawing.Drawing2D.FillMode.Alternate\n  id: Alternate\n  parent: System.Drawing.Drawing2D.FillMode\n  langs:\n  - csharp\n  name: Alternate\n  nameWithType: FillMode.Alternate\n  fullName: FillMode.Alternate\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies the alternate fill mode.\n  syntax:\n    content: Alternate\n    return:\n      type: System.Drawing.Drawing2D.FillMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/FillMode.xml\n- uid: System.Drawing.Drawing2D.FillMode.Winding\n  commentId: F:System.Drawing.Drawing2D.FillMode.Winding\n  id: Winding\n  parent: System.Drawing.Drawing2D.FillMode\n  langs:\n  - csharp\n  name: Winding\n  nameWithType: FillMode.Winding\n  fullName: FillMode.Winding\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies the winding fill mode.\n  syntax:\n    content: Winding\n    return:\n      type: System.Drawing.Drawing2D.FillMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Drawing2D/FillMode.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Drawing.Drawing2D.FillMode.Alternate\n  parent: System.Drawing.Drawing2D.FillMode\n  isExternal: false\n  name: Alternate\n  nameWithType: FillMode.Alternate\n  fullName: FillMode.Alternate\n- uid: System.Drawing.Drawing2D.FillMode\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: FillMode\n  nameWithType: FillMode\n  fullName: System.Drawing.Drawing2D.FillMode\n- uid: System.Drawing.Drawing2D.FillMode.Winding\n  parent: System.Drawing.Drawing2D.FillMode\n  isExternal: false\n  name: Winding\n  nameWithType: FillMode.Winding\n  fullName: FillMode.Winding\n"}