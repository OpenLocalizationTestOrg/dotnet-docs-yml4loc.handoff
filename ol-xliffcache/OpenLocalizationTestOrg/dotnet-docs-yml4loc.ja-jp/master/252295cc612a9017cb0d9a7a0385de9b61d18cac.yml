### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  commentId: T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  id: ClaimTypeRequirement
  children:
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  langs:
  - csharp
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Specifies the types of required and optional claims expected to appear in the federated credential.
  remarks: In a federated scenario, services state the requirements on incoming credentials. For example, the incoming credentials must possess a certain set of claim types. This requirement is manifested in a security policy. When a client requests a security token from a security token service (for example, [!INCLUDE[infocard](~/includes/infocard-md.md)]), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  \n  \n The following config file is used with the preceding code.  \n  \n [!code-xml[S_UEClaimTypeRequirement#101](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/common/app.config#101)]"
  syntax:
    content: public class ClaimTypeRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  commentId: M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: ClaimTypeRequirement.ClaimTypeRequirement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Security.Tokens.ClaimTypeRequirement"></xref> class for a required claim of the specified type.
  remarks: The predefined claim types can be found at   <xref:System.IdentityModel.Claims.ClaimTypes>.
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType);
    parameters:
    - id: claimType
      type: System.String
      description: The claim type.
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  commentId: M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String, Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String, Boolean)
  fullName: ClaimTypeRequirement.ClaimTypeRequirement(String, Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Security.Tokens.ClaimTypeRequirement"></xref> class for a claim of the specified type.
  remarks: ''
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType, bool isOptional);
    parameters:
    - id: claimType
      type: System.String
      description: The claim type.
    - id: isOptional
      type: System.Boolean
      description: If `false`, the claim is required; otherwise, it is optional.
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  commentId: P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  id: ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: ClaimTypeRequirement.ClaimType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the claim type that was specified in the constructor.
  remarks: This property is a URI that defines the type of a claim.  For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit. The claim type would be the credit card URI.
  example:
  - "The following code shows how to get this property.  \n  \n [!code-csharp[S_UEClaimTypeRequirement#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#2)]"
  syntax:
    content: public string ClaimType { get; }
    return:
      type: System.String
      description: The claim type.
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  commentId: P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  id: IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: ClaimTypeRequirement.IsOptional
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets a value that indicates whether the claim is optional.
  remarks: An example of how to use this property is the scenario in which the service asks for some information but does not require it. For instance, you are required to enter your first name, last name, and address, but your phone number is optional.
  example:
  - "The following code shows how to get this property.  \n  \n [!code-csharp[S_UEClaimTypeRequirement#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#2)]"
  syntax:
    content: public bool IsOptional { get; }
    return:
      type: System.Boolean
      description: '`true` if this instance of the class is for an optional claim; `false` if it specifies a required claim.'
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: ClaimTypeRequirement.ClaimTypeRequirement(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String, Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String, Boolean)
  fullName: ClaimTypeRequirement.ClaimTypeRequirement(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: ClaimTypeRequirement.IsOptional
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement
  fullName: ClaimTypeRequirement.ClaimTypeRequirement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: ClaimTypeRequirement.ClaimType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: ClaimTypeRequirement.IsOptional
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/ClaimTypeRequirement.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
