### YamlMime:ManagedReference
items:
- uid: System.Lazy`2
  commentId: T:System.Lazy`2
  id: Lazy`2
  children:
  - System.Lazy`2.#ctor(`1)
  - System.Lazy`2.#ctor(System.Func{`0},`1)
  - System.Lazy`2.#ctor(`1,System.Boolean)
  - System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  - System.Lazy`2.Metadata
  langs:
  - csharp
  name: Lazy<T,TMetadata>
  nameWithType: Lazy<T,TMetadata>
  fullName: System.Lazy<T,TMetadata>
  type: Class
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Provides a lazy indirect reference to an object and its associated metadata for use by the Managed Extensibility Framework.
  syntax:
    content: 'public class Lazy<T,TMetadata> : Lazy<T>'
    typeParameters:
    - id: T
      description: The type of the object referenced.
    - id: TMetadata
      description: The type of the metadata.
  inheritance:
  - System.Object
  - System.Lazy`1
  implements: []
  inheritedMembers:
  - System.Lazy`1.IsValueCreated
  - System.Lazy`1.ToString
  - System.Lazy`1.Value
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.#ctor(`1)
  commentId: M:System.Lazy`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
  type: Constructor
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Lazy`2"></xref> class with the specified metadata.
  syntax:
    content: public Lazy (TMetadata metadata);
    parameters:
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.#ctor(System.Func{`0},`1)
  commentId: M:System.Lazy`2.#ctor(System.Func{`0},`1)
  id: '#ctor(System.Func{`0},`1)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(Func<T>, TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)
  type: Constructor
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Lazy`2"></xref> class with the specified metadata that uses the specified function to get the referenced object.
  syntax:
    content: public Lazy (Func<T> valueFactory, TMetadata metadata);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: A function that returns the referenced object.
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.#ctor(`1,System.Boolean)
  commentId: M:System.Lazy`2.#ctor(`1,System.Boolean)
  id: '#ctor(`1,System.Boolean)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(TMetadata, Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)
  type: Constructor
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Lazy`2"></xref> class with the specified metadata and thread safety value.
  syntax:
    content: public Lazy (TMetadata metadata, bool isThreadSafe);
    parameters:
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: isThreadSafe
      type: System.Boolean
      description: Indicates whether the <xref href="System.Lazy`2"></xref> object that is created will be thread-safe.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  commentId: M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  id: '#ctor(`1,System.Threading.LazyThreadSafetyMode)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)
  type: Constructor
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Lazy`2"></xref> class with the specified metadata and thread synchronization mode.
  remarks: See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.
  syntax:
    content: public Lazy (TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);
    parameters:
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
      description: The thread synchronization mode.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  commentId: M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  id: '#ctor(System.Func{`0},`1,System.Boolean)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)
  type: Constructor
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Lazy`2"></xref> class with the specified metadata and thread safety value that uses the specified function to get the referenced object.
  syntax:
    content: public Lazy (Func<T> valueFactory, TMetadata metadata, bool isThreadSafe);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: A function that returns the referenced object.
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: isThreadSafe
      type: System.Boolean
      description: Indicates whether the <xref href="System.Lazy`2"></xref> object that is created will be thread-safe.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  commentId: M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  id: '#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)
  type: Constructor
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Lazy`2"></xref> class with the specified metadata and thread synchronization mode that uses the specified function to get the referenced object.
  remarks: See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.
  syntax:
    content: public Lazy (Func<T> valueFactory, TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: A function that returns the referenced object
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
      description: The thread synchronization mode
  overload: System.Lazy`2.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Lazy`2.Metadata
  commentId: P:System.Lazy`2.Metadata
  id: Metadata
  parent: System.Lazy`2
  langs:
  - csharp
  name: Metadata
  nameWithType: Lazy<T,TMetadata>.Metadata
  fullName: Lazy<T,TMetadata>.Metadata
  type: Property
  assemblies:
  - System.Runtime
  - System.ComponentModel.Composition
  - netstandard
  namespace: System
  summary: Gets the metadata associated with the referenced object.
  syntax:
    content: public TMetadata Metadata { get; }
    return:
      type: TMetadata
      description: The metadata associated with the referenced object.
  overload: System.Lazy`2.Metadata*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Lazy`1
  parent: System
  isExternal: false
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
- uid: System.Lazy`2.#ctor(`1)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
- uid: TMetadata
  isExternal: true
  name: TMetadata
  nameWithType: TMetadata
  fullName: TMetadata
- uid: System.Lazy`2.#ctor(System.Func{`0},`1)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(Func<T>, TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)
- uid: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{T}
  parent: System
  isExternal: false
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Lazy`2.#ctor(`1,System.Boolean)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(TMetadata, Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)
- uid: System.Threading.LazyThreadSafetyMode
  parent: System.Threading
  isExternal: false
  name: LazyThreadSafetyMode
  nameWithType: LazyThreadSafetyMode
  fullName: System.Threading.LazyThreadSafetyMode
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)
- uid: System.Lazy`2.Metadata
  parent: System.Lazy`2
  isExternal: false
  name: Metadata
  nameWithType: Lazy<T,TMetadata>.Metadata
  fullName: Lazy<T,TMetadata>.Metadata
- uid: System.Lazy`2.#ctor*
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>
  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
- uid: System.Lazy`2.Metadata*
  parent: System.Lazy`2
  isExternal: false
  name: Metadata
  nameWithType: Lazy<T,TMetadata>.Metadata
  fullName: Lazy<T,TMetadata>.Metadata
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Lazy`1.ToString
  parent: System.Lazy`1
  isExternal: false
  name: ToString()
  nameWithType: Lazy<T>.ToString()
  fullName: Lazy<T>.ToString()
- uid: System.Lazy`1.IsValueCreated
  parent: System.Lazy`1
  isExternal: false
  name: IsValueCreated
  nameWithType: Lazy<T>.IsValueCreated
  fullName: Lazy<T>.IsValueCreated
- uid: System.Lazy`1.Value
  parent: System.Lazy`1
  isExternal: false
  name: Value
  nameWithType: Lazy<T>.Value
  fullName: Lazy<T>.Value
