{"nodes":[{"content":"Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.","nodes":[{"pos":[0,130],"content":"Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.","nodes":[{"content":"Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.","pos":[0,130]}]}],"pos":[682,813],"yaml":true},{"content":"You can control when the \"back up\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value on an animation. The following graph demonstrate the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \n  \n ![BackEase EasingMode graphs.](~/add/media/backease-graph.png \"BackEase EasingMode graphs.\")  \n  \n The formula used for this function is the following.  \n  \n ![BackEase formula.](~/add/media/backease-formula.png \"BackEase formula.\")  \n  \n> [!NOTE]\n>  Because this animation causes values to retract before progressing, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.  \n  \n There are several other easing functions besides <xref:System.Windows.Media.Animation.BackEase> which you can explore using the following Silverlight sample.  \n  \n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \n  \n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \n  \n<a name=\"xamlObjectElementUsage_BackEase\"></a>   \n## XAML Object Element Usage  \n  \n```  \n<BackEase .../>  \n```","nodes":[{"pos":[0,389],"content":"You can control when the \"back up\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value on an animation. The following graph demonstrate the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.","nodes":[{"content":"You can control when the \"back up\" behavior occurs in an animation by specifying the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph> property value on an animation.","pos":[0,187],"source":"You can control when the \"back up\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value on an animation."},{"content":"The following graph demonstrate the different values of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>, where <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) represents the animation progress and <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept> represents time.","pos":[188,389],"source":" The following graph demonstrate the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time."}]},{"pos":[396,488],"content":"<bpt id=\"p1\">![</bpt>BackEase EasingMode graphs.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/backease-graph.png \"</bpt>BackEase EasingMode graphs.<ept id=\"p2\">\")</ept>","source":"![BackEase EasingMode graphs.](~/add/media/backease-graph.png \"BackEase EasingMode graphs.\")"},{"pos":[495,547],"content":"The formula used for this function is the following.","nodes":[{"content":"The formula used for this function is the following.","pos":[0,52]}]},{"pos":[554,628],"content":"<bpt id=\"p1\">![</bpt>BackEase formula.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/backease-formula.png \"</bpt>BackEase formula.<ept id=\"p2\">\")</ept>","source":"![BackEase formula.](~/add/media/backease-formula.png \"BackEase formula.\")"},{"pos":[636,1283],"content":"[!NOTE]\n Because this animation causes values to retract before progressing, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.","leadings":["","> "],"nodes":[{"content":" Because this animation causes values to retract before progressing, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.","pos":[8,645],"nodes":[{"content":"Because this animation causes values to retract before progressing, the animation might interpolate into negative numbers unexpectedly.","pos":[1,136]},{"content":"This can cause errors when animating properties that do not allow negative numbers.","pos":[137,220]},{"content":"For example, if you apply this animation to the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> of an object (e.g. from 0 to 200 with an <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph>), the animation will attempt to interpolate through negative numbers for <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> which will throw an error.","pos":[221,637],"source":" For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error."}]}]},{"pos":[1290,1447],"content":"There are several other easing functions besides <xref:System.Windows.Media.Animation.BackEase> which you can explore using the following Silverlight sample.","nodes":[{"content":"There are several other easing functions besides <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BackEase&gt;</ph> which you can explore using the following Silverlight sample.","pos":[0,157],"source":"There are several other easing functions besides <xref:System.Windows.Media.Animation.BackEase> which you can explore using the following Silverlight sample."}]},{"pos":[1454,1548],"content":"<bpt id=\"p1\">[</bpt>Run this sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=139798&amp;sref=easing_functions_gallery)</ept>","source":"[Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)"},{"pos":[1555,1747],"content":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.","nodes":[{"content":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase&gt;</ph>.","pos":[0,192],"source":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>."}]},{"pos":[1806,1831],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]}],"pos":[824,2721],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.BackEase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> class."}],"pos":[7477,7579],"yaml":true},{"content":"Gets or sets the amplitude of retraction associated with a <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> animation.","nodes":[{"pos":[0,130],"content":"Gets or sets the amplitude of retraction associated with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.BackEase\"&gt;&lt;/xref&gt;</ph> animation.","source":"Gets or sets the amplitude of retraction associated with a <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> animation."}],"pos":[8628,8759],"yaml":true},{"content":"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>  \n  \n The larger the amplitude, the larger the retraction before and/or after the animation.  \n  \n ![Demonstrates different aplitude values.](~/add/media/backease-amplitude.png \"Demonstrates different aplitude values.\")  \n  \n<a name=\"xamlAttributeUsage_Opacity\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object Amplitude=\"double\" .../>  \n```","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty&gt;</ph>","source":"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>"},{"pos":[137,223],"content":"The larger the amplitude, the larger the retraction before and/or after the animation.","nodes":[{"content":"The larger the amplitude, the larger the retraction before and/or after the animation.","pos":[0,86]}]},{"pos":[230,350],"content":"<bpt id=\"p1\">![</bpt>Demonstrates different aplitude values.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/backease-amplitude.png \"</bpt>Demonstrates different aplitude values.<ept id=\"p2\">\")</ept>","source":"![Demonstrates different aplitude values.](~/add/media/backease-amplitude.png \"Demonstrates different aplitude values.\")"},{"pos":[404,424],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]}],"pos":[8770,9264],"yaml":true,"extradata":"MT"},{"content":"The amplitude of retraction associated with a <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> animation. This value must be greater than or equal to 0.  \n  \n The default value is 1.","nodes":[{"pos":[0,164],"content":"The amplitude of retraction associated with a <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> animation. This value must be greater than or equal to 0.","nodes":[{"content":"The amplitude of retraction associated with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.BackEase\"&gt;&lt;/xref&gt;</ph> animation.","pos":[0,117],"source":"The amplitude of retraction associated with a <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> animation."},{"content":"This value must be greater than or equal to 0.","pos":[118,164]}]},{"pos":[171,194],"content":"The default value is 1.","nodes":[{"content":"The default value is 1.","pos":[0,23]}]}],"pos":[9782,9983],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.BackEase.Amplitude\"></xref> dependency property.","nodes":[{"pos":[0,106],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.BackEase.Amplitude\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.BackEase.Amplitude\"></xref> dependency property."}],"pos":[11019,11126],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","nodes":[{"pos":[0,152],"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","nodes":[{"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph> derived class.","pos":[0,90],"source":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"content":"When creating a derived class, you must override this method.","pos":[91,152]}]}],"pos":[12291,12444],"yaml":true},{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","nodes":[{"pos":[0,232],"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","nodes":[{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","pos":[0,232],"nodes":[{"content":"Animation classes inherit indirectly from <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph>.","pos":[0,74],"source":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>."},{"content":"Because of this, you need to override the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A&gt;</ph> method to construct a custom animation object.","pos":[75,232],"source":" Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object."}]}]}],"pos":[12455,12688],"yaml":true,"extradata":"MT"},{"content":"The new instance.","nodes":[{"pos":[0,17],"content":"The new instance.","nodes":[{"content":"The new instance.","pos":[0,17]}]}],"pos":[13391,13409],"yaml":true},{"content":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function.","nodes":[{"pos":[0,192],"content":"Provides the logic portion of the easing function that you can override to produce the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"&gt;&lt;/xref&gt;</ph> mode of the custom easing function.","source":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function."}],"pos":[14482,14675],"yaml":true},{"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \n  \n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.","nodes":[{"pos":[0,218],"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.","nodes":[{"content":"This method transforms normalized time to control the pace of an animation for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph> case of <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>.","pos":[0,218],"source":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."}]},{"pos":[225,608],"content":"You only have to specify your easing function for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph> case because the implementation of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A&gt;</ph> method transforms <ph id=\"ph3\">`normalizedTime`</ph> for the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseOut&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseInOut&gt;</ph> cases.","source":"You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases."}],"pos":[14686,15299],"yaml":true,"extradata":"MT"},{"content":"Normalized time (progress) of the animation.","nodes":[{"pos":[0,44],"content":"Normalized time (progress) of the animation.","nodes":[{"content":"Normalized time (progress) of the animation.","pos":[0,44]}]}],"pos":[15470,15515],"yaml":true},{"content":"A double that represents the transformed progress.","nodes":[{"pos":[0,50],"content":"A double that represents the transformed progress.","nodes":[{"content":"A double that represents the transformed progress.","pos":[0,50]}]}],"pos":[15572,15623],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.BackEase\n  commentId: T:System.Windows.Media.Animation.BackEase\n  id: BackEase\n  children:\n  - System.Windows.Media.Animation.BackEase.#ctor\n  - System.Windows.Media.Animation.BackEase.Amplitude\n  - System.Windows.Media.Animation.BackEase.AmplitudeProperty\n  - System.Windows.Media.Animation.BackEase.CreateInstanceCore\n  - System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)\n  langs:\n  - csharp\n  name: BackEase\n  nameWithType: BackEase\n  fullName: System.Windows.Media.Animation.BackEase\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.\n  remarks: \"You can control when the \\\"back up\\\" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value on an animation. The following graph demonstrate the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \\n  \\n ![BackEase EasingMode graphs.](~/add/media/backease-graph.png \\\"BackEase EasingMode graphs.\\\")  \\n  \\n The formula used for this function is the following.  \\n  \\n ![BackEase formula.](~/add/media/backease-formula.png \\\"BackEase formula.\\\")  \\n  \\n> [!NOTE]\\n>  Because this animation causes values to retract before progressing, the animation might interpolate into negative numbers unexpectedly. This can cause errors when animating properties that do not allow negative numbers. For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.  \\n  \\n There are several other easing functions besides <xref:System.Windows.Media.Animation.BackEase> which you can explore using the following Silverlight sample.  \\n  \\n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \\n  \\n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \\n  \\n<a name=\\\"xamlObjectElementUsage_BackEase\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<BackEase .../>  \\n```\"\n  example:\n  - \"The following example applies a <xref:System.Windows.Media.Animation.BackEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that retracts slightly at the beginning and end of the animation.  \\n  \\n [!code-xml[BackEase_scale#BackEase_scale](~/samples/snippets/csharp/VS_Snippets_Wpf/backease_scale/CS/window1.xaml#backease_scale)]\"\n  syntax:\n    content: 'public class BackEase : System.Windows.Media.Animation.EasingFunctionBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.EasingFunctionBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.BackEase.#ctor\n  commentId: M:System.Windows.Media.Animation.BackEase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.BackEase\n  langs:\n  - csharp\n  name: BackEase()\n  nameWithType: BackEase.BackEase()\n  fullName: BackEase.BackEase()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> class.\n  syntax:\n    content: public BackEase ();\n    parameters: []\n  overload: System.Windows.Media.Animation.BackEase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.BackEase.Amplitude\n  commentId: P:System.Windows.Media.Animation.BackEase.Amplitude\n  id: Amplitude\n  parent: System.Windows.Media.Animation.BackEase\n  langs:\n  - csharp\n  name: Amplitude\n  nameWithType: BackEase.Amplitude\n  fullName: BackEase.Amplitude\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the amplitude of retraction associated with a <xref href=\"System.Windows.Media.Animation.BackEase\"></xref> animation.\n  remarks: \"[!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>  \\n  \\n The larger the amplitude, the larger the retraction before and/or after the animation.  \\n  \\n ![Demonstrates different aplitude values.](~/add/media/backease-amplitude.png \\\"Demonstrates different aplitude values.\\\")  \\n  \\n<a name=\\\"xamlAttributeUsage_Opacity\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Amplitude=\\\"double\\\" .../>  \\n```\"\n  example:\n  - \"The following example applies a <xref:System.Windows.Media.Animation.BackEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that retracts slightly at the beginning and end of the animation.  \\n  \\n [!code-xml[BackEase_scale#BackEase_scale](~/samples/snippets/csharp/VS_Snippets_Wpf/backease_scale/CS/window1.xaml#backease_scale)]\"\n  syntax:\n    content: public double Amplitude { get; set; }\n    return:\n      type: System.Double\n      description: \"The amplitude of retraction associated with a <xref href=\\\"System.Windows.Media.Animation.BackEase\\\"></xref> animation. This value must be greater than or equal to 0.  \\n  \\n The default value is 1.\"\n  overload: System.Windows.Media.Animation.BackEase.Amplitude*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.BackEase.AmplitudeProperty\n  commentId: F:System.Windows.Media.Animation.BackEase.AmplitudeProperty\n  id: AmplitudeProperty\n  parent: System.Windows.Media.Animation.BackEase\n  langs:\n  - csharp\n  name: AmplitudeProperty\n  nameWithType: BackEase.AmplitudeProperty\n  fullName: BackEase.AmplitudeProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.BackEase.Amplitude\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AmplitudeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore\n  commentId: M:System.Windows.Media.Animation.BackEase.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.BackEase\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BackEase.CreateInstanceCore()\n  fullName: BackEase.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.\n  remarks: Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]\\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Animation.BackEase.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)\n  commentId: M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)\n  id: EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.BackEase\n  langs:\n  - csharp\n  name: EaseInCore(Double)\n  nameWithType: BackEase.EaseInCore(Double)\n  fullName: BackEase.EaseInCore(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function.\n  remarks: \"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \\n  \\n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.\"\n  syntax:\n    content: protected override double EaseInCore (double normalizedTime);\n    parameters:\n    - id: normalizedTime\n      type: System.Double\n      description: Normalized time (progress) of the animation.\n    return:\n      type: System.Double\n      description: A double that represents the transformed progress.\n  overload: System.Windows.Media.Animation.BackEase.EaseInCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.EasingFunctionBase\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: EasingFunctionBase\n  nameWithType: EasingFunctionBase\n  fullName: System.Windows.Media.Animation.EasingFunctionBase\n- uid: System.Windows.Media.Animation.BackEase.#ctor\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: BackEase()\n  nameWithType: BackEase.BackEase()\n  fullName: BackEase.BackEase()\n- uid: System.Windows.Media.Animation.BackEase.Amplitude\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: Amplitude\n  nameWithType: BackEase.Amplitude\n  fullName: BackEase.Amplitude\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Animation.BackEase.AmplitudeProperty\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: AmplitudeProperty\n  nameWithType: BackEase.AmplitudeProperty\n  fullName: BackEase.AmplitudeProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BackEase.CreateInstanceCore()\n  fullName: BackEase.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: EaseInCore(Double)\n  nameWithType: BackEase.EaseInCore(Double)\n  fullName: BackEase.EaseInCore(Double)\n- uid: System.Windows.Media.Animation.BackEase.#ctor*\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: BackEase\n  nameWithType: BackEase.BackEase\n  fullName: BackEase.BackEase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n- uid: System.Windows.Media.Animation.BackEase.Amplitude*\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: Amplitude\n  nameWithType: BackEase.Amplitude\n  fullName: BackEase.Amplitude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n- uid: System.Windows.Media.Animation.BackEase.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: BackEase.CreateInstanceCore\n  fullName: BackEase.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n- uid: System.Windows.Media.Animation.BackEase.EaseInCore*\n  parent: System.Windows.Media.Animation.BackEase\n  isExternal: false\n  name: EaseInCore\n  nameWithType: BackEase.EaseInCore\n  fullName: BackEase.EaseInCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/BackEase.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.Clone\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Clone()\n  nameWithType: Freezable.Clone()\n  fullName: Freezable.Clone()\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValue\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: Freezable.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Freezable.FreezeCore(System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Freezable.FreezeCore(Boolean)\n  fullName: Freezable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: Ease(Double)\n  nameWithType: EasingFunctionBase.Ease(Double)\n  fullName: EasingFunctionBase.Ease(Double)\n- uid: System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: EasingMode\n  nameWithType: EasingFunctionBase.EasingMode\n  fullName: EasingFunctionBase.EasingMode\n- uid: System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: EasingModeProperty\n  nameWithType: EasingFunctionBase.EasingModeProperty\n  fullName: EasingFunctionBase.EasingModeProperty\n"}