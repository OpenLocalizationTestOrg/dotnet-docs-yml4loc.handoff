{"nodes":[{"content":"Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.","nodes":[{"pos":[0,112],"content":"Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.","nodes":[{"content":"Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.","pos":[0,112]}]}],"pos":[1292,1405],"yaml":true},{"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.  \n  \n The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor. It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.  \n  \n The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures. The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=fullName> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=fullName> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=fullName> property.  \n  \n If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects. Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.  \n  \n To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.","nodes":[{"pos":[0,500],"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.","nodes":[{"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.","pos":[0,500],"nodes":[{"content":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph>, and so on.","pos":[0,391],"source":"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on."},{"content":"If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.","pos":[392,500]}]}]},{"pos":[507,946],"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor. It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.","nodes":[{"content":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor. It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.","pos":[0,439],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.","pos":[0,286],"source":"The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor."},{"content":"It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.","pos":[287,439]}]}]},{"pos":[953,1791],"content":"The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures. The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=fullName> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=fullName> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=fullName> property.","nodes":[{"content":"The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures. The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=fullName> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=fullName> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=fullName> property.","pos":[0,838],"nodes":[{"content":"The types and values of all the positional and named arguments of an attribute instance are provided by <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures.","pos":[0,169],"source":"The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures."},{"content":"The positional attributes returned by the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=fullName&gt;</ph> property are directly represented by <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures, but the named arguments returned by the <ph id=\"ph3\">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=fullName&gt;</ph> property are represented by <ph id=\"ph4\">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structures; to get the <ph id=\"ph5\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure for a named argument, use the <ph id=\"ph6\">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=fullName&gt;</ph> property.","pos":[170,838],"source":" The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=fullName> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=fullName> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=fullName> property."}]}]},{"pos":[1798,2281],"content":"If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects. Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.","nodes":[{"content":"If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects. Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.","pos":[0,483],"nodes":[{"content":"If an argument is an array of values, the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> that represents the argument returns a generic <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of <ph id=\"ph4\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> objects.","pos":[0,348],"source":"If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> object in the collection represents the corresponding element of the array.","pos":[349,483],"source":" Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array."}]}]},{"pos":[2288,2466],"content":"To create instances of the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id=\"ph2\">`static`</ph><ph id=\"ph3\">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.","source":"To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method."}],"pos":[1416,3893],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> class with the specified value.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> class with the specified value.","source":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> class with the specified value."}],"pos":[7033,7167],"yaml":true},{"content":"The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`. To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.  \n  \n This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.","nodes":[{"pos":[0,267],"content":"The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`. To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter cannot be <ph id=\"ph2\">`null`</ph> for this constructor, because the argument type is inferred from the type of <ph id=\"ph3\">`value`</ph>.","pos":[0,124],"source":"The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`."},{"content":"To specify a <ph id=\"ph1\">`null`</ph> value, use the <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph> constructor.","pos":[125,267],"source":" To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor."}]},{"pos":[274,431],"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.","nodes":[{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.","pos":[0,157],"nodes":[{"content":"This constructor is for use by inheritors of the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.","pos":[0,109],"source":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class."},{"content":"It is not intended for use in application code.","pos":[110,157]}]}]}],"pos":[7178,7614],"yaml":true,"extradata":"MT"},{"content":"The value of the custom attribute argument.","nodes":[{"pos":[0,43],"content":"The value of the custom attribute argument.","nodes":[{"content":"The value of the custom attribute argument.","pos":[0,43]}]}],"pos":[7766,7810],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[7992,8022],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> class with the specified type and value.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> class with the specified type and value.","source":"Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> class with the specified type and value."}],"pos":[9412,9555],"yaml":true},{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.","nodes":[{"pos":[0,157],"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.","nodes":[{"content":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.","pos":[0,157],"nodes":[{"content":"This constructor is for use by inheritors of the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.","pos":[0,109],"source":"This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class."},{"content":"It is not intended for use in application code.","pos":[110,157]}]}]}],"pos":[9566,9724],"yaml":true,"extradata":"MT"},{"content":"The type of the custom attribute argument.","nodes":[{"pos":[0,42],"content":"The type of the custom attribute argument.","nodes":[{"content":"The type of the custom attribute argument.","pos":[0,42]}]}],"pos":[9900,9943],"yaml":true},{"content":"The value of the custom attribute argument.","nodes":[{"pos":[0,43],"content":"The value of the custom attribute argument.","nodes":[{"content":"The value of the custom attribute argument.","pos":[0,43]}]}],"pos":[10004,10048],"yaml":true},{"content":"<code>argumentType</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;argumentType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>argumentType</code> is `null`."}],"pos":[10230,10267],"yaml":true},{"content":"Gets the type of the argument or of the array argument element.","nodes":[{"pos":[0,63],"content":"Gets the type of the argument or of the array argument element.","nodes":[{"content":"Gets the type of the argument or of the array argument element.","pos":[0,63]}]}],"pos":[11524,11588],"yaml":true},{"content":"For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property. For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.","nodes":[{"pos":[0,571],"content":"For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property. For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.","nodes":[{"content":"For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property.","pos":[0,199],"source":"For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property."},{"content":"For array arguments, this property returns the array type, but the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property returns a <ph id=\"ph2\">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id=\"ph3\">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.","pos":[200,571],"source":" For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument."}]}],"pos":[11599,12171],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object representing the type of the argument or of the array element.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the type of the argument or of the array element.","source":"A <xref href=\"System.Type\"></xref> object representing the type of the argument or of the array element."}],"pos":[13670,13775],"yaml":true},{"content":"Indicates whether this instance and a specified object are equal.","nodes":[{"pos":[0,65],"content":"Indicates whether this instance and a specified object are equal.","nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]}],"pos":[15497,15563],"yaml":true},{"content":"Another object to compare to.","nodes":[{"pos":[0,29],"content":"Another object to compare to.","nodes":[{"content":"Another object to compare to.","pos":[0,29]}]}],"pos":[15703,15733],"yaml":true},{"content":"`true` if <code>obj</code> and this instance are the same type and represent the same value; otherwise, `false`.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> and this instance are the same type and represent the same value; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> and this instance are the same type and represent the same value; otherwise, `false`."}],"pos":[15791,15906],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[17389,17430],"yaml":true},{"content":"A 32-bit signed integer that is the hash code for this instance.","nodes":[{"pos":[0,64],"content":"A 32-bit signed integer that is the hash code for this instance.","nodes":[{"content":"A 32-bit signed integer that is the hash code for this instance.","pos":[0,64]}]}],"pos":[17564,17629],"yaml":true},{"content":"Tests whether two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are equivalent.","nodes":[{"pos":[0,112],"content":"Tests whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structures are equivalent.","source":"Tests whether two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are equivalent."}],"pos":[19578,19691],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>","nodes":[{"pos":[0,229],"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName&gt;</ph>","pos":[0,229],"source":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>"}]}],"pos":[19702,19932],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the left of the equality operator.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structure to the left of the equality operator.","source":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the left of the equality operator."}],"pos":[20204,20324],"yaml":true},{"content":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the right of the equality operator.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structure to the right of the equality operator.","source":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the right of the equality operator."}],"pos":[20418,20539],"yaml":true},{"content":"`true` if the two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are equal; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structures are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are equal; otherwise, `false`."}],"pos":[20597,20727],"yaml":true},{"content":"Tests whether two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are different.","nodes":[{"pos":[0,111],"content":"Tests whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structures are different.","source":"Tests whether two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are different."}],"pos":[22688,22800],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Compare%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>","nodes":[{"pos":[0,230],"content":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Compare%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Compare%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName&gt;</ph>","pos":[0,230],"source":"The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Compare%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>"}]}],"pos":[22811,23042],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the left of the inequality operator.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structure to the left of the inequality operator.","source":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the left of the inequality operator."}],"pos":[23316,23438],"yaml":true},{"content":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the right of the inequality operator.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structure to the right of the inequality operator.","source":"The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the right of the inequality operator."}],"pos":[23532,23655],"yaml":true},{"content":"`true` if the two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are different; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> structures are different; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are different; otherwise, `false`."}],"pos":[23713,23847],"yaml":true},{"content":"Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"pos":[0,116],"content":"Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"content":"Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.","pos":[0,116]}]}],"pos":[25319,25436],"yaml":true},{"content":"A string consisting of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"pos":[0,108],"content":"A string consisting of the argument name, the equal sign, and a string representation of the argument value.","nodes":[{"content":"A string consisting of the argument name, the equal sign, and a string representation of the argument value.","pos":[0,108]}]}],"pos":[25571,25680],"yaml":true},{"content":"Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.","nodes":[{"pos":[0,143],"content":"Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.","nodes":[{"content":"Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.","pos":[0,143]}]}],"pos":[27125,27269],"yaml":true},{"content":"If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic). Each element of the collection represents the corresponding element of the array argument.  \n  \n The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property. <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments. It returns the array type for array arguments.","nodes":[{"pos":[0,329],"content":"If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic). Each element of the collection represents the corresponding element of the array argument.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> represents an array argument, this property returns a <ph id=\"ph2\">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id=\"ph3\">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic).","pos":[0,238],"source":"If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic)."},{"content":"Each element of the collection represents the corresponding element of the array argument.","pos":[239,329]}]},{"pos":[336,762],"content":"The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property. <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments. It returns the array type for array arguments.","nodes":[{"content":"The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property. <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments. It returns the array type for array arguments.","pos":[0,426],"nodes":[{"content":"The type of the value can be obtained by using the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property.","pos":[0,130],"source":"The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property."},{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> gets the actual type of the value returned by the <ph id=\"ph2\">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property for simple arguments or for elements of array arguments.","pos":[131,379],"source":" <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments."},{"content":"It returns the array type for array arguments.","pos":[380,426]}]}]}],"pos":[27280,28047],"yaml":true,"extradata":"MT"},{"content":"An object that represents the value of the argument or element, or a generic <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> objects that represent the values of an array-type argument.","nodes":[{"pos":[0,281],"content":"An object that represents the value of the argument or element, or a generic <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeTypedArgument\"&gt;&lt;/xref&gt;</ph> objects that represent the values of an array-type argument.","source":"An object that represents the value of the argument or element, or a generic <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> objects that represent the values of an array-type argument."}],"pos":[29678,29960],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.CustomAttributeTypedArgument\n  commentId: T:System.Reflection.CustomAttributeTypedArgument\n  id: CustomAttributeTypedArgument\n  children:\n  - System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)\n  - System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)\n  - System.Reflection.CustomAttributeTypedArgument.ArgumentType\n  - System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)\n  - System.Reflection.CustomAttributeTypedArgument.GetHashCode\n  - System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  - System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  - System.Reflection.CustomAttributeTypedArgument.ToString\n  - System.Reflection.CustomAttributeTypedArgument.Value\n  langs:\n  - csharp\n  name: CustomAttributeTypedArgument\n  nameWithType: CustomAttributeTypedArgument\n  fullName: System.Reflection.CustomAttributeTypedArgument\n  type: Struct\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.\n  remarks: \"Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>, and so on. If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.  \\n  \\n The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor. It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.  \\n  \\n The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures. The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=fullName> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=fullName> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=fullName> property.  \\n  \\n If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects. Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.  \\n  \\n To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.\"\n  example:\n  - \"The following example defines a custom attribute with four constructors and four properties. Two of the properties are read-only, and are set by using the positional parameters of the constructors. The other two properties are read/write, and can be set only by using named arguments. One positional property is an array of strings, and one named property is an array of integers.  \\n  \\n The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method. Different constructors are used for these cases. When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.  \\n  \\n The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.  \\n  \\n [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]\\n [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]\\n [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct CustomAttributeTypedArgument\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: CustomAttributeTypedArgument(Object)\n  nameWithType: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Object)\n  fullName: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Object)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> class with the specified value.\n  remarks: \"The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`. To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.  \\n  \\n This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.\"\n  syntax:\n    content: public CustomAttributeTypedArgument (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value of the custom attribute argument.\n  overload: System.Reflection.CustomAttributeTypedArgument.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)\n  id: '#ctor(System.Type,System.Object)'\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: CustomAttributeTypedArgument(Type, Object)\n  nameWithType: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Type, Object)\n  fullName: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Type, Object)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> class with the specified type and value.\n  remarks: This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class. It is not intended for use in application code.\n  syntax:\n    content: public CustomAttributeTypedArgument (Type argumentType, object value);\n    parameters:\n    - id: argumentType\n      type: System.Type\n      description: The type of the custom attribute argument.\n    - id: value\n      type: System.Object\n      description: The value of the custom attribute argument.\n  overload: System.Reflection.CustomAttributeTypedArgument.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argumentType</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.ArgumentType\n  commentId: P:System.Reflection.CustomAttributeTypedArgument.ArgumentType\n  id: ArgumentType\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: ArgumentType\n  nameWithType: CustomAttributeTypedArgument.ArgumentType\n  fullName: CustomAttributeTypedArgument.ArgumentType\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the type of the argument or of the array argument element.\n  remarks: For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property. For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.\n  example:\n  - \"The following example defines a custom attribute with four constructors and four properties. Two of the properties are read-only, and are set by using the positional parameters of the constructors. The other two properties are read/write, and can be set only by using named arguments. One positional property is an array of strings, and one named property is an array of integers.  \\n  \\n The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method. Different constructors are used for these cases. When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.  \\n  \\n The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.  \\n  \\n The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.  \\n  \\n [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]\\n [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]\\n [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]\"\n  syntax:\n    content: public Type ArgumentType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the type of the argument or of the array element.\n  overload: System.Reflection.CustomAttributeTypedArgument.ArgumentType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CustomAttributeTypedArgument.Equals(Object)\n  fullName: CustomAttributeTypedArgument.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> and this instance are the same type and represent the same value; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeTypedArgument.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.GetHashCode\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CustomAttributeTypedArgument.GetHashCode()\n  fullName: CustomAttributeTypedArgument.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer that is the hash code for this instance.\n  overload: System.Reflection.CustomAttributeTypedArgument.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  id: op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: op_Equality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  nameWithType: CustomAttributeTypedArgument.op_Equality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  fullName: CustomAttributeTypedArgument.op_Equality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  type: Operator\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Tests whether two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are equivalent.\n  remarks: The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);\n    parameters:\n    - id: left\n      type: System.Reflection.CustomAttributeTypedArgument\n      description: The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the left of the equality operator.\n    - id: right\n      type: System.Reflection.CustomAttributeTypedArgument\n      description: The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are equal; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeTypedArgument.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  id: op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: op_Inequality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  nameWithType: CustomAttributeTypedArgument.op_Inequality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  fullName: CustomAttributeTypedArgument.op_Inequality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  type: Operator\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Tests whether two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are different.\n  remarks: The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Compare%28System.Reflection.CustomAttributeTypedArgument%2CSystem.Reflection.CustomAttributeTypedArgument%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);\n    parameters:\n    - id: left\n      type: System.Reflection.CustomAttributeTypedArgument\n      description: The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the left of the inequality operator.\n    - id: right\n      type: System.Reflection.CustomAttributeTypedArgument\n      description: The <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structure to the right of the inequality operator.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> structures are different; otherwise, `false`.'\n  overload: System.Reflection.CustomAttributeTypedArgument.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.ToString\n  commentId: M:System.Reflection.CustomAttributeTypedArgument.ToString\n  id: ToString\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CustomAttributeTypedArgument.ToString()\n  fullName: CustomAttributeTypedArgument.ToString()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string consisting of the argument name, the equal sign, and a string representation of the argument value.\n  overload: System.Reflection.CustomAttributeTypedArgument.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.CustomAttributeTypedArgument.Value\n  commentId: P:System.Reflection.CustomAttributeTypedArgument.Value\n  id: Value\n  parent: System.Reflection.CustomAttributeTypedArgument\n  langs:\n  - csharp\n  name: Value\n  nameWithType: CustomAttributeTypedArgument.Value\n  fullName: CustomAttributeTypedArgument.Value\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.\n  remarks: \"If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic). Each element of the collection represents the corresponding element of the array argument.  \\n  \\n The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property. <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments. It returns the array type for array arguments.\"\n  example:\n  - \"The following example defines a custom attribute with four constructors and four properties. Two of the properties are read-only, and are set by using the positional parameters of the constructors. The other two properties are read/write, and can be set only by using named arguments. One positional property is an array of strings, and one named property is an array of integers.  \\n  \\n The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method. Different constructors are used for these cases. When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.  \\n  \\n The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.  \\n  \\n The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.  \\n  \\n [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]\\n [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]\\n [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  \\n  \\n <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>\"\n  syntax:\n    content: public object Value { get; }\n    return:\n      type: System.Object\n      description: An object that represents the value of the argument or element, or a generic <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of <xref href=\"System.Reflection.CustomAttributeTypedArgument\"></xref> objects that represent the values of an array-type argument.\n  overload: System.Reflection.CustomAttributeTypedArgument.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: CustomAttributeTypedArgument(Object)\n  nameWithType: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Object)\n  fullName: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: CustomAttributeTypedArgument(Type, Object)\n  nameWithType: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Type, Object)\n  fullName: CustomAttributeTypedArgument.CustomAttributeTypedArgument(Type, Object)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.CustomAttributeTypedArgument.ArgumentType\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: ArgumentType\n  nameWithType: CustomAttributeTypedArgument.ArgumentType\n  fullName: CustomAttributeTypedArgument.ArgumentType\n- uid: System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CustomAttributeTypedArgument.Equals(Object)\n  fullName: CustomAttributeTypedArgument.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.CustomAttributeTypedArgument.GetHashCode\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CustomAttributeTypedArgument.GetHashCode()\n  fullName: CustomAttributeTypedArgument.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: op_Equality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  nameWithType: CustomAttributeTypedArgument.op_Equality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  fullName: CustomAttributeTypedArgument.op_Equality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n- uid: System.Reflection.CustomAttributeTypedArgument\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeTypedArgument\n  nameWithType: CustomAttributeTypedArgument\n  fullName: System.Reflection.CustomAttributeTypedArgument\n- uid: System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: op_Inequality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  nameWithType: CustomAttributeTypedArgument.op_Inequality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n  fullName: CustomAttributeTypedArgument.op_Inequality(CustomAttributeTypedArgument, CustomAttributeTypedArgument)\n- uid: System.Reflection.CustomAttributeTypedArgument.ToString\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: ToString()\n  nameWithType: CustomAttributeTypedArgument.ToString()\n  fullName: CustomAttributeTypedArgument.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.CustomAttributeTypedArgument.Value\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: Value\n  nameWithType: CustomAttributeTypedArgument.Value\n  fullName: CustomAttributeTypedArgument.Value\n- uid: System.Reflection.CustomAttributeTypedArgument.#ctor*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: CustomAttributeTypedArgument\n  nameWithType: CustomAttributeTypedArgument.CustomAttributeTypedArgument\n  fullName: CustomAttributeTypedArgument.CustomAttributeTypedArgument\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.ArgumentType*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: ArgumentType\n  nameWithType: CustomAttributeTypedArgument.ArgumentType\n  fullName: CustomAttributeTypedArgument.ArgumentType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.Equals*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: Equals\n  nameWithType: CustomAttributeTypedArgument.Equals\n  fullName: CustomAttributeTypedArgument.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.GetHashCode*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CustomAttributeTypedArgument.GetHashCode\n  fullName: CustomAttributeTypedArgument.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.op_Equality*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: op_Equality\n  nameWithType: CustomAttributeTypedArgument.op_Equality\n  fullName: CustomAttributeTypedArgument.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.op_Inequality*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CustomAttributeTypedArgument.op_Inequality\n  fullName: CustomAttributeTypedArgument.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.ToString*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: ToString\n  nameWithType: CustomAttributeTypedArgument.ToString\n  fullName: CustomAttributeTypedArgument.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n- uid: System.Reflection.CustomAttributeTypedArgument.Value*\n  parent: System.Reflection.CustomAttributeTypedArgument\n  isExternal: false\n  name: Value\n  nameWithType: CustomAttributeTypedArgument.Value\n  fullName: CustomAttributeTypedArgument.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeTypedArgument.xml\n"}