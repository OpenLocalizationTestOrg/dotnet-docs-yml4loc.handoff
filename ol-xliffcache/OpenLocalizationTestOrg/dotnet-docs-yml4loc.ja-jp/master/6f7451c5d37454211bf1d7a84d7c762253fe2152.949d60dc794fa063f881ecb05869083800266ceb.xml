{"nodes":[{"content":"The exception that is thrown when an optimistic concurrency violation occurs.","nodes":[{"pos":[0,77],"content":"The exception that is thrown when an optimistic concurrency violation occurs.","nodes":[{"content":"The exception that is thrown when an optimistic concurrency violation occurs.","pos":[0,77]}]}],"pos":[809,887],"yaml":true},{"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"pos":[0,94],"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"content":"For more information about how to handle exceptions in your code, see <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph>.","pos":[0,94],"source":"For more information about how to handle exceptions in your code, see <xref:System.Exception>."}]}],"pos":[898,993],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref>.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Data.OptimisticConcurrencyException\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref>."}],"pos":[3096,3191],"yaml":true},{"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"pos":[0,94],"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"content":"For more information about how to handle exceptions in your code, see <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph>.","pos":[0,94],"source":"For more information about how to handle exceptions in your code, see <xref:System.Exception>."}]}],"pos":[3202,3297],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> with a specialized error message.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Data.OptimisticConcurrencyException\"&gt;&lt;/xref&gt;</ph> with a specialized error message.","source":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> with a specialized error message."}],"pos":[4564,4692],"yaml":true},{"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"pos":[0,94],"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"content":"For more information about how to handle exceptions in your code, see <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph>.","pos":[0,94],"source":"For more information about how to handle exceptions in your code, see <xref:System.Exception>."}]}],"pos":[4703,4798],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[4956,4994],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> that uses a specified error message and a reference to the inner exception.","nodes":[{"pos":[0,169],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Data.OptimisticConcurrencyException\"&gt;&lt;/xref&gt;</ph> that uses a specified error message and a reference to the inner exception.","source":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> that uses a specified error message and a reference to the inner exception."}],"pos":[6261,6431],"yaml":true},{"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"pos":[0,94],"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"content":"For more information about how to handle exceptions in your code, see <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph>.","pos":[0,94],"source":"For more information about how to handle exceptions in your code, see <xref:System.Exception>."}]}],"pos":[6442,6537],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[6721,6759],"yaml":true},{"content":"The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.","nodes":[{"pos":[0,141],"content":"The exception that is the cause of the current exception, or a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if no inner exception is specified.","source":"The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified."}],"pos":[6832,6974],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> that uses a specified error message, a reference to the inner exception, and an enumerable collection of <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> objects.","nodes":[{"pos":[0,265],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Data.OptimisticConcurrencyException\"&gt;&lt;/xref&gt;</ph> that uses a specified error message, a reference to the inner exception, and an enumerable collection of <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectStateEntry\"&gt;&lt;/xref&gt;</ph> objects.","source":"Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> that uses a specified error message, a reference to the inner exception, and an enumerable collection of <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> objects."}],"pos":[8565,8831],"yaml":true},{"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"pos":[0,94],"content":"For more information about how to handle exceptions in your code, see <xref:System.Exception>.","nodes":[{"content":"For more information about how to handle exceptions in your code, see <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph>.","pos":[0,94],"source":"For more information about how to handle exceptions in your code, see <xref:System.Exception>."}]}],"pos":[8842,8937],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[9212,9250],"yaml":true},{"content":"The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.","nodes":[{"pos":[0,141],"content":"The exception that is the cause of the current exception, or a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if no inner exception is specified.","source":"The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified."}],"pos":[9323,9465],"yaml":true},{"content":"The enumerable collection of <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> objects.","nodes":[{"pos":[0,95],"content":"The enumerable collection of <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectStateEntry\"&gt;&lt;/xref&gt;</ph> objects.","source":"The enumerable collection of <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> objects."}],"pos":[9596,9692],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OptimisticConcurrencyException\n  commentId: T:System.Data.OptimisticConcurrencyException\n  id: OptimisticConcurrencyException\n  children:\n  - System.Data.OptimisticConcurrencyException.#ctor\n  - System.Data.OptimisticConcurrencyException.#ctor(System.String)\n  - System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)\n  - System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})\n  langs:\n  - csharp\n  name: OptimisticConcurrencyException\n  nameWithType: OptimisticConcurrencyException\n  fullName: System.Data.OptimisticConcurrencyException\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data\n  summary: The exception that is thrown when an optimistic concurrency violation occurs.\n  remarks: For more information about how to handle exceptions in your code, see <xref:System.Exception>.\n  syntax:\n    content: 'public sealed class OptimisticConcurrencyException : System.Data.UpdateException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.Data.DataException\n  - System.Data.UpdateException\n  implements: []\n  inheritedMembers:\n  - System.Data.UpdateException.StateEntries\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/OptimisticConcurrencyException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OptimisticConcurrencyException.#ctor\n  commentId: M:System.Data.OptimisticConcurrencyException.#ctor\n  id: '#ctor'\n  parent: System.Data.OptimisticConcurrencyException\n  langs:\n  - csharp\n  name: OptimisticConcurrencyException()\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException()\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data\n  summary: Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref>.\n  remarks: For more information about how to handle exceptions in your code, see <xref:System.Exception>.\n  syntax:\n    content: public OptimisticConcurrencyException ();\n    parameters: []\n  overload: System.Data.OptimisticConcurrencyException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/OptimisticConcurrencyException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OptimisticConcurrencyException.#ctor(System.String)\n  commentId: M:System.Data.OptimisticConcurrencyException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.OptimisticConcurrencyException\n  langs:\n  - csharp\n  name: OptimisticConcurrencyException(String)\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException(String)\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException(String)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data\n  summary: Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> with a specialized error message.\n  remarks: For more information about how to handle exceptions in your code, see <xref:System.Exception>.\n  syntax:\n    content: public OptimisticConcurrencyException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n  overload: System.Data.OptimisticConcurrencyException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/OptimisticConcurrencyException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)\n  commentId: M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Data.OptimisticConcurrencyException\n  langs:\n  - csharp\n  name: OptimisticConcurrencyException(String, Exception)\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception)\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data\n  summary: Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> that uses a specified error message and a reference to the inner exception.\n  remarks: For more information about how to handle exceptions in your code, see <xref:System.Exception>.\n  syntax:\n    content: public OptimisticConcurrencyException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.\n  overload: System.Data.OptimisticConcurrencyException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/OptimisticConcurrencyException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})\n  commentId: M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})\n  id: '#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})'\n  parent: System.Data.OptimisticConcurrencyException\n  langs:\n  - csharp\n  name: OptimisticConcurrencyException(String, Exception, IEnumerable<ObjectStateEntry>)\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception, IEnumerable<ObjectStateEntry>)\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception, IEnumerable<ObjectStateEntry>)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data\n  summary: Initializes a new instance of <xref href=\"System.Data.OptimisticConcurrencyException\"></xref> that uses a specified error message, a reference to the inner exception, and an enumerable collection of <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> objects.\n  remarks: For more information about how to handle exceptions in your code, see <xref:System.Exception>.\n  syntax:\n    content: public OptimisticConcurrencyException (string message, Exception innerException, System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry> stateEntries);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.\n    - id: stateEntries\n      type: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}\n      description: The enumerable collection of <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> objects.\n  overload: System.Data.OptimisticConcurrencyException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/OptimisticConcurrencyException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.UpdateException\n  parent: System.Data\n  isExternal: false\n  name: UpdateException\n  nameWithType: UpdateException\n  fullName: System.Data.UpdateException\n- uid: System.Data.OptimisticConcurrencyException.#ctor\n  parent: System.Data.OptimisticConcurrencyException\n  isExternal: false\n  name: OptimisticConcurrencyException()\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException()\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException()\n- uid: System.Data.OptimisticConcurrencyException.#ctor(System.String)\n  parent: System.Data.OptimisticConcurrencyException\n  isExternal: false\n  name: OptimisticConcurrencyException(String)\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException(String)\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)\n  parent: System.Data.OptimisticConcurrencyException\n  isExternal: false\n  name: OptimisticConcurrencyException(String, Exception)\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception)\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})\n  parent: System.Data.OptimisticConcurrencyException\n  isExternal: false\n  name: OptimisticConcurrencyException(String, Exception, IEnumerable<ObjectStateEntry>)\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception, IEnumerable<ObjectStateEntry>)\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException(String, Exception, IEnumerable<ObjectStateEntry>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Data.Objects.ObjectStateEntry\n  name: ObjectStateEntry\n  nameWithType: ObjectStateEntry\n  fullName: System.Data.Objects.ObjectStateEntry\n- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ObjectStateEntry>\n  nameWithType: IEnumerable<ObjectStateEntry>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Objects.ObjectStateEntry\n    name: ObjectStateEntry\n    nameWithType: ObjectStateEntry\n    fullName: System.Data.Objects.ObjectStateEntry\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.OptimisticConcurrencyException.#ctor*\n  parent: System.Data.OptimisticConcurrencyException\n  isExternal: false\n  name: OptimisticConcurrencyException\n  nameWithType: OptimisticConcurrencyException.OptimisticConcurrencyException\n  fullName: OptimisticConcurrencyException.OptimisticConcurrencyException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/OptimisticConcurrencyException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n- uid: System.Data.UpdateException.StateEntries\n  parent: System.Data.UpdateException\n  isExternal: false\n  name: StateEntries\n  nameWithType: UpdateException.StateEntries\n  fullName: UpdateException.StateEntries\n"}