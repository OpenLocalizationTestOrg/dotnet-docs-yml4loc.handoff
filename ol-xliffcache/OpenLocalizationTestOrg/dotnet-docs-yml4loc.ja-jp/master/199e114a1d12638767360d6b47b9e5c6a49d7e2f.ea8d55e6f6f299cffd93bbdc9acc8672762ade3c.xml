{"nodes":[{"content":"Provides type conversion analogous behavior for <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> and <xref href=\"System.Windows.Condition\"></xref> types that deal with <xref href=\"System.Windows.DependencyProperty\"></xref> values. This converter only supports `ConvertFrom`.","nodes":[{"pos":[0,313],"content":"Provides type conversion analogous behavior for <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> and <xref href=\"System.Windows.Condition\"></xref> types that deal with <xref href=\"System.Windows.DependencyProperty\"></xref> values. This converter only supports `ConvertFrom`.","nodes":[{"content":"Provides type conversion analogous behavior for <ph id=\"ph1\">&lt;xref href=\"System.Windows.Setter\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Trigger\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Condition\"&gt;&lt;/xref&gt;</ph> types that deal with <ph id=\"ph4\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,269],"source":"Provides type conversion analogous behavior for <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> and <xref href=\"System.Windows.Condition\"></xref> types that deal with <xref href=\"System.Windows.DependencyProperty\"></xref> values."},{"content":"This converter only supports <ph id=\"ph1\">`ConvertFrom`</ph>.","pos":[270,313],"source":" This converter only supports `ConvertFrom`."}]}],"pos":[1205,1519],"yaml":true},{"content":"<xref:System.Windows.Markup.SetterTriggerConditionValueConverter> is not intended for use by user code, it supports WPF feature areas such as processing <xref:System.Windows.Setter>, <xref:System.Windows.Trigger> and <xref:System.Windows.Condition> in templates.","nodes":[{"pos":[0,262],"content":"<xref:System.Windows.Markup.SetterTriggerConditionValueConverter> is not intended for use by user code, it supports WPF feature areas such as processing <xref:System.Windows.Setter>, <xref:System.Windows.Trigger> and <xref:System.Windows.Condition> in templates.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.SetterTriggerConditionValueConverter&gt;</ph> is not intended for use by user code, it supports WPF feature areas such as processing <ph id=\"ph2\">&lt;xref:System.Windows.Setter&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Trigger&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Condition&gt;</ph> in templates.","pos":[0,262],"source":"<xref:System.Windows.Markup.SetterTriggerConditionValueConverter> is not intended for use by user code, it supports WPF feature areas such as processing <xref:System.Windows.Setter>, <xref:System.Windows.Trigger> and <xref:System.Windows.Condition> in templates."}]}],"pos":[1530,1793],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.SetterTriggerConditionValueConverter\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.SetterTriggerConditionValueConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.SetterTriggerConditionValueConverter\"></xref> class."}],"pos":[6640,6761],"yaml":true},{"content":"Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> or <xref href=\"System.Windows.Condition\"></xref> .","nodes":[{"pos":[0,250],"content":"Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <ph id=\"ph1\">&lt;xref href=\"System.Windows.Setter\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Trigger\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Condition\"&gt;&lt;/xref&gt;</ph> .","source":"Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> or <xref href=\"System.Windows.Condition\"></xref> ."}],"pos":[8260,8511],"yaml":true},{"content":"This implementation only returns `true` for `sourceType` of <xref:System.String> or a byte array.","nodes":[{"pos":[0,97],"content":"This implementation only returns <ph id=\"ph1\">`true`</ph> for <ph id=\"ph2\">`sourceType`</ph> of <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> or a byte array.","source":"This implementation only returns `true` for `sourceType` of <xref:System.String> or a byte array."}],"pos":[8522,8620],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[8862,8963],"yaml":true},{"content":"The type to convert from.","nodes":[{"pos":[0,25],"content":"The type to convert from.","nodes":[{"content":"The type to convert from.","pos":[0,25]}]}],"pos":[9027,9053],"yaml":true},{"content":"`true` if the converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the converter can perform the conversion; otherwise, `false`."}],"pos":[9111,9185],"yaml":true},{"content":"Returns a value that indicates whether the converter can convert to the specified destination type. Always returns `false`.","nodes":[{"pos":[0,123],"content":"Returns a value that indicates whether the converter can convert to the specified destination type. Always returns `false`.","nodes":[{"content":"Returns a value that indicates whether the converter can convert to the specified destination type.","pos":[0,99]},{"content":"Always returns <ph id=\"ph1\">`false`</ph>.","pos":[100,123],"source":" Always returns `false`."}]}],"pos":[10591,10715],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[10960,11061],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[11130,11154],"yaml":true},{"content":"Always returns `false`.","nodes":[{"pos":[0,23],"content":"Always returns <ph id=\"ph1\">`false`</ph>.","source":"Always returns `false`."}],"pos":[11212,11236],"yaml":true},{"content":"Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source.","nodes":[{"pos":[0,138],"content":"Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source.","nodes":[{"content":"Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source.","pos":[0,138],"nodes":[{"content":"Converts the converted source value if an underlying type converter can be obtained from context.","pos":[0,97]},{"content":"Otherwise returns an unconverted source.","pos":[98,138]}]}]}],"pos":[12784,12923],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[13204,13305],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[13387,13476],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[13538,13561],"yaml":true},{"content":"The converter object, or possibly an unconverted source.","nodes":[{"pos":[0,56],"content":"The converter object, or possibly an unconverted source.","nodes":[{"content":"The converter object, or possibly an unconverted source.","pos":[0,56]}]}],"pos":[13618,13675],"yaml":true},{"content":"<code>context</code> or <code>source</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>context</code> or <code>source</code> is `null`."}],"pos":[13875,13930],"yaml":true},{"content":"No <xref href=\"System.Xaml.IXamlSchemaContextProvider\"></xref> service available.","nodes":[{"pos":[0,81],"content":"No <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IXamlSchemaContextProvider\"&gt;&lt;/xref&gt;</ph> service available.","source":"No <xref href=\"System.Xaml.IXamlSchemaContextProvider\"></xref> service available."}],"pos":[14032,14114],"yaml":true},{"content":"Converts the specified object to the specified type. Always throws an exception.","nodes":[{"pos":[0,80],"content":"Converts the specified object to the specified type. Always throws an exception.","nodes":[{"content":"Converts the specified object to the specified type. Always throws an exception.","pos":[0,80],"nodes":[{"content":"Converts the specified object to the specified type.","pos":[0,52]},{"content":"Always throws an exception.","pos":[53,80]}]}]}],"pos":[15602,15683],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[15983,16084],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[16166,16255],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[16316,16339],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[16408,16432],"yaml":true},{"content":"Always throws an exception.","nodes":[{"pos":[0,27],"content":"Always throws an exception.","nodes":[{"content":"Always throws an exception.","pos":[0,27]}]}],"pos":[16489,16517],"yaml":true},{"content":"Thrown in all cases.","nodes":[{"pos":[0,20],"content":"Thrown in all cases.","nodes":[{"content":"Thrown in all cases.","pos":[0,20]}]}],"pos":[16723,16744],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter\n  commentId: T:System.Windows.Markup.SetterTriggerConditionValueConverter\n  id: SetterTriggerConditionValueConverter\n  children:\n  - System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor\n  - System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: SetterTriggerConditionValueConverter\n  nameWithType: SetterTriggerConditionValueConverter\n  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Provides type conversion analogous behavior for <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> and <xref href=\"System.Windows.Condition\"></xref> types that deal with <xref href=\"System.Windows.DependencyProperty\"></xref> values. This converter only supports `ConvertFrom`.\n  remarks: <xref:System.Windows.Markup.SetterTriggerConditionValueConverter> is not intended for use by user code, it supports WPF feature areas such as processing <xref:System.Windows.Setter>, <xref:System.Windows.Trigger> and <xref:System.Windows.Condition> in templates.\n  syntax:\n    content: 'public sealed class SetterTriggerConditionValueConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor\n  commentId: M:System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  langs:\n  - csharp\n  name: SetterTriggerConditionValueConverter()\n  nameWithType: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()\n  fullName: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.SetterTriggerConditionValueConverter\"></xref> class.\n  syntax:\n    content: public SetterTriggerConditionValueConverter ();\n    parameters: []\n  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <xref href=\"System.Windows.Setter\"></xref>, <xref href=\"System.Windows.Trigger\"></xref> or <xref href=\"System.Windows.Condition\"></xref> .\n  remarks: This implementation only returns `true` for `sourceType` of <xref:System.String> or a byte array.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if the converter can perform the conversion; otherwise, `false`.'\n  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Returns a value that indicates whether the converter can convert to the specified destination type. Always returns `false`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Boolean\n      description: Always returns `false`.\n  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: source\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converter object, or possibly an unconverted source.\n  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> or <code>source</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: No <xref href=\"System.Xaml.IXamlSchemaContextProvider\"></xref> service available.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Converts the specified object to the specified type. Always throws an exception.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Object\n      description: Always throws an exception.\n  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Thrown in all cases.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: SetterTriggerConditionValueConverter()\n  nameWithType: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()\n  fullName: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor*\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: SetterTriggerConditionValueConverter\n  nameWithType: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter\n  fullName: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom*\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: SetterTriggerConditionValueConverter.CanConvertFrom\n  fullName: SetterTriggerConditionValueConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo*\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: SetterTriggerConditionValueConverter.CanConvertTo\n  fullName: SetterTriggerConditionValueConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom*\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: SetterTriggerConditionValueConverter.ConvertFrom\n  fullName: SetterTriggerConditionValueConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo*\n  parent: System.Windows.Markup.SetterTriggerConditionValueConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: SetterTriggerConditionValueConverter.ConvertTo\n  fullName: SetterTriggerConditionValueConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/SetterTriggerConditionValueConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}