### YamlMime:ManagedReference
items:
- uid: System.Net.WebSockets.WebSocket
  commentId: T:System.Net.WebSockets.WebSocket
  id: WebSocket
  children:
  - System.Net.WebSockets.WebSocket.#ctor
  - System.Net.WebSockets.WebSocket.Abort
  - System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Net.WebSockets.WebSocket.CloseStatus
  - System.Net.WebSockets.WebSocket.CloseStatusDescription
  - System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  - System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  - System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  - System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  - System.Net.WebSockets.WebSocket.Dispose
  - System.Net.WebSockets.WebSocket.IsApplicationTargeting45
  - System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  - System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  - System.Net.WebSockets.WebSocket.RegisterPrefixes
  - System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  - System.Net.WebSockets.WebSocket.State
  - System.Net.WebSockets.WebSocket.SubProtocol
  - System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  langs:
  - csharp
  name: WebSocket
  nameWithType: WebSocket
  fullName: System.Net.WebSockets.WebSocket
  type: Class
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.
  remarks: Some of the classes in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008. However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012. The classes and class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract classes. This allows an application developer to inherit and extend these abstract classes with an actual implementation of client WebSockets.
  syntax:
    content: 'public abstract class WebSocket : IDisposable'
  inheritance:
  - System.Object
  derivedClasses:
  - System.Net.WebSockets.ClientWebSocket
  - System.Web.WebSockets.AspNetWebSocket
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.#ctor
  commentId: M:System.Net.WebSockets.WebSocket.#ctor
  id: '#ctor'
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: WebSocket()
  nameWithType: WebSocket.WebSocket()
  fullName: WebSocket.WebSocket()
  type: Constructor
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Creates an instance of the <xref href="System.Net.WebSockets.WebSocket"></xref> class.
  syntax:
    content: protected WebSocket ();
    parameters: []
  overload: System.Net.WebSockets.WebSocket.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.Abort
  commentId: M:System.Net.WebSockets.WebSocket.Abort
  id: Abort
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: Abort()
  nameWithType: WebSocket.Abort()
  fullName: WebSocket.Abort()
  type: Method
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Aborts the WebSocket connection and cancels any pending IO operations.
  syntax:
    content: public abstract void Abort ();
    parameters: []
  overload: System.Net.WebSockets.WebSocket.Abort*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: WebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: WebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  type: Method
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the [WebSocket protocol specification](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) section 7.
  remarks: "This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after the WebSocket has been closed.  \n  \n This method closes the WebSocket connection using the close handshake defined in the [WebSocket protocol specification](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) section 7."
  syntax:
    content: public abstract System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
      description: Indicates the reason for closing the WebSocket connection.
    - id: statusDescription
      type: System.String
      description: Specifies a human readable explanation as to why the connection is closed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token that can be used to propagate notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: "Returns <xref href=\"System.Threading.Tasks.Task\"></xref>.  \n  \n The task object representing the asynchronous operation."
  overload: System.Net.WebSockets.WebSocket.CloseAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: WebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: WebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  type: Method
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Initiates or completes the close handshake defined in the [WebSocket protocol specification section 7](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06).
  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the WebSocket has been closed.
  syntax:
    content: public abstract System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
      description: Indicates the reason for closing the WebSocket connection.
    - id: statusDescription
      type: System.String
      description: Allows applications to specify a human readable explanation as to why the connection is closed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token that can be used to propagate notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: "Returns <xref href=\"System.Threading.Tasks.Task\"></xref>.  \n  \n The task object representing the asynchronous operation."
  overload: System.Net.WebSockets.WebSocket.CloseOutputAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CloseStatus
  commentId: P:System.Net.WebSockets.WebSocket.CloseStatus
  id: CloseStatus
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CloseStatus
  nameWithType: WebSocket.CloseStatus
  fullName: WebSocket.CloseStatus
  type: Property
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Indicates the reason why the remote endpoint initiated the close handshake.
  remarks: If the close handshake has not been initiated yet, WebSocketCloseStatus.None is returned.
  syntax:
    content: public abstract Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get; }
    return:
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: Returns <xref href="System.Net.WebSockets.WebSocketCloseStatus"></xref>.
  overload: System.Net.WebSockets.WebSocket.CloseStatus*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CloseStatusDescription
  commentId: P:System.Net.WebSockets.WebSocket.CloseStatusDescription
  id: CloseStatusDescription
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CloseStatusDescription
  nameWithType: WebSocket.CloseStatusDescription
  fullName: WebSocket.CloseStatusDescription
  type: Property
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Allows the remote endpoint to describe the reason why the connection was closed.
  syntax:
    content: public abstract string CloseStatusDescription { get; }
    return:
      type: System.String
      description: Returns <xref href="System.String"></xref>.
  overload: System.Net.WebSockets.WebSocket.CloseStatusDescription*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  commentId: M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  id: CreateClientBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CreateClientBuffer(Int32, Int32)
  nameWithType: WebSocket.CreateClientBuffer(Int32, Int32)
  fullName: WebSocket.CreateClientBuffer(Int32, Int32)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: Create client buffers to use with this <xref href="System.Net.WebSockets.WebSocket"></xref> instance.
  syntax:
    content: >-
      [System.MonoTODO]

      public static ArraySegment<byte> CreateClientBuffer (int receiveBufferSize, int sendBufferSize);
    parameters:
    - id: receiveBufferSize
      type: System.Int32
      description: The size, in bytes, of the client receive buffer.
    - id: sendBufferSize
      type: System.Int32
      description: The size, in bytes, of the send buffer.
    return:
      type: System.ArraySegment{System.Byte}
      description: "Returns <xref href=\"System.ArraySegment`1\"></xref>.  \n  \n An array with the client buffers."
  overload: System.Net.WebSockets.WebSocket.CreateClientBuffer*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  commentId: M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  id: CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)
  nameWithType: WebSocket.CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)
  fullName: WebSocket.CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.  \n  \n Allows callers to create a client side WebSocket class which will use the WSPC for framing purposes."
  syntax:
    content: >-
      [System.MonoTODO]

      public static System.Net.WebSockets.WebSocket CreateClientWebSocket (System.IO.Stream innerStream, string subProtocol, int receiveBufferSize, int sendBufferSize, TimeSpan keepAliveInterval, bool useZeroMaskingKey, ArraySegment<byte> internalBuffer);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: The connection to be used for IO operations.
    - id: subProtocol
      type: System.String
      description: The subprotocol accepted by the client.
    - id: receiveBufferSize
      type: System.Int32
      description: The size in bytes of the client WebSocket receive buffer.
    - id: sendBufferSize
      type: System.Int32
      description: The size in bytes of the client WebSocket send buffer.
    - id: keepAliveInterval
      type: System.TimeSpan
      description: Determines how regularly a frame is sent over the connection as a keep-alive. Applies only when the connection is idle.
    - id: useZeroMaskingKey
      type: System.Boolean
      description: Indicates whether a random key or a static key (just zeros) should be used for the WebSocket masking.
    - id: internalBuffer
      type: System.ArraySegment{System.Byte}
      description: Will be used as the internal buffer in the WPC. The size has to be at least <code>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 on 32-bit)</code>.
    return:
      type: System.Net.WebSockets.WebSocket
      description: Returns <xref href="System.Net.WebSockets.WebSocket"></xref>.
  overload: System.Net.WebSockets.WebSocket.CreateClientWebSocket*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  commentId: M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  id: CreateServerBuffer(System.Int32)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: CreateServerBuffer(Int32)
  nameWithType: WebSocket.CreateServerBuffer(Int32)
  fullName: WebSocket.CreateServerBuffer(Int32)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: Creates a WebSocket server buffer.
  syntax:
    content: >-
      [System.MonoTODO]

      public static ArraySegment<byte> CreateServerBuffer (int receiveBufferSize);
    parameters:
    - id: receiveBufferSize
      type: System.Int32
      description: The size, in bytes, of the desired buffer.
    return:
      type: System.ArraySegment{System.Byte}
      description: Returns <xref href="System.ArraySegment`1"></xref>.
  overload: System.Net.WebSockets.WebSocket.CreateServerBuffer*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  commentId: P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  id: DefaultKeepAliveInterval
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: DefaultKeepAliveInterval
  nameWithType: WebSocket.DefaultKeepAliveInterval
  fullName: WebSocket.DefaultKeepAliveInterval
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: Gets the default WebSocket protocol keep-alive interval in milliseconds.
  syntax:
    content: >-
      [System.MonoTODO]

      public static TimeSpan DefaultKeepAliveInterval { get; }
    return:
      type: System.TimeSpan
      description: "Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The default WebSocket protocol keep-alive interval in milliseconds. The typical value for this interval is 30 seconds."
  overload: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.Dispose
  commentId: M:System.Net.WebSockets.WebSocket.Dispose
  id: Dispose
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: Dispose()
  nameWithType: WebSocket.Dispose()
  fullName: WebSocket.Dispose()
  type: Method
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Net.WebSockets.WebSocket.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.IsApplicationTargeting45
  commentId: M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45
  id: IsApplicationTargeting45
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: IsApplicationTargeting45()
  nameWithType: WebSocket.IsApplicationTargeting45()
  fullName: WebSocket.IsApplicationTargeting45()
  type: Method
  assemblies:
  - System
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: Returns a value that indicates if the WebSocket instance is targeting [!INCLUDE[net_v45](~/includes/net-v45-md.md)].
  syntax:
    content: >-
      [System.MonoTODO]

      [System.Obsolete]

      public static bool IsApplicationTargeting45 ();
    parameters: []
    return:
      type: System.Boolean
      description: "Returns <xref href=\"System.Boolean\"></xref>.  \n  \n `true` if the <xref href=\"System.Net.WebSockets.WebSocket\"></xref> is targeting [!INCLUDE[net_v45](~/includes/net-v45-md.md)]; otherwise `false`."
  overload: System.Net.WebSockets.WebSocket.IsApplicationTargeting45*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  commentId: M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  id: IsStateTerminal(System.Net.WebSockets.WebSocketState)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: IsStateTerminal(WebSocketState)
  nameWithType: WebSocket.IsStateTerminal(WebSocketState)
  fullName: WebSocket.IsStateTerminal(WebSocketState)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: Returns a value that indicates if the state of the WebSocket instance is closed or aborted.
  syntax:
    content: protected static bool IsStateTerminal (System.Net.WebSockets.WebSocketState state);
    parameters:
    - id: state
      type: System.Net.WebSockets.WebSocketState
      description: The current state of the WebSocket.
    return:
      type: System.Boolean
      description: "Returns <xref href=\"System.Boolean\"></xref>.  \n  \n `true` if the <xref href=\"System.Net.WebSockets.WebSocket\"></xref> is closed or aborted; otherwise `false`."
  overload: System.Net.WebSockets.WebSocket.IsStateTerminal*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  nameWithType: WebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  fullName: WebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  type: Method
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Receives data from the <xref href="System.Net.WebSockets.WebSocket"></xref> connection asynchronously.
  remarks: "This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the data has been received on the <xref:System.Net.WebSockets.WebSocket>.  \n  \n Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.WebSocket> object in parallel."
  syntax:
    content: public abstract System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync (ArraySegment<byte> buffer, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: References the application buffer that is the storage location for the received data.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates the notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
      description: "Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns a <xref href=\"System.Byte\"></xref> array containing the received data."
  overload: System.Net.WebSockets.WebSocket.ReceiveAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.RegisterPrefixes
  commentId: M:System.Net.WebSockets.WebSocket.RegisterPrefixes
  id: RegisterPrefixes
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: RegisterPrefixes()
  nameWithType: WebSocket.RegisterPrefixes()
  fullName: WebSocket.RegisterPrefixes()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: This API supports the .NET Framework infrastructure and is not intended to be used directly from your code. Allows callers to register prefixes for WebSocket requests (ws and wss).
  syntax:
    content: >-
      [System.MonoTODO]

      public static void RegisterPrefixes ();
    parameters: []
  overload: System.Net.WebSockets.WebSocket.RegisterPrefixes*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  nameWithType: WebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  fullName: WebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  type: Method
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Sends data over the <xref href="System.Net.WebSockets.WebSocket"></xref> connection asynchronously.
  remarks: "This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after the data has been sent on the <xref:System.Net.WebSockets.WebSocket>.  \n  \n Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.WebSocket> object in parallel."
  syntax:
    content: public abstract System.Threading.Tasks.Task SendAsync (ArraySegment<byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: The buffer to be sent over the connection.
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: Indicates whether the application is sending a binary or text message.
    - id: endOfMessage
      type: System.Boolean
      description: Indicates whether the data in "buffer" is the last part of a message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token that propagates the notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: System.Net.WebSockets.WebSocket.SendAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.State
  commentId: P:System.Net.WebSockets.WebSocket.State
  id: State
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: State
  nameWithType: WebSocket.State
  fullName: WebSocket.State
  type: Property
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: Returns the current state of the WebSocket connection.
  syntax:
    content: public abstract System.Net.WebSockets.WebSocketState State { get; }
    return:
      type: System.Net.WebSockets.WebSocketState
      description: Returns <xref href="System.Net.WebSockets.WebSocketState"></xref>.
  overload: System.Net.WebSockets.WebSocket.State*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.SubProtocol
  commentId: P:System.Net.WebSockets.WebSocket.SubProtocol
  id: SubProtocol
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: SubProtocol
  nameWithType: WebSocket.SubProtocol
  fullName: WebSocket.SubProtocol
  type: Property
  assemblies:
  - System.Net.WebSockets
  - System
  - netstandard
  namespace: System.Net.WebSockets
  summary: The subprotocol that was negotiated during the opening handshake.
  syntax:
    content: public abstract string SubProtocol { get; }
    return:
      type: System.String
      description: Returns <xref href="System.String"></xref>.
  overload: System.Net.WebSockets.WebSocket.SubProtocol*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  commentId: M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  id: ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  parent: System.Net.WebSockets.WebSocket
  langs:
  - csharp
  name: ThrowOnInvalidState(WebSocketState, WebSocketState[])
  nameWithType: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])
  fullName: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: Verifies that the connection is in an expected state.
  syntax:
    content: >-
      [System.MonoTODO]

      protected static void ThrowOnInvalidState (System.Net.WebSockets.WebSocketState state, System.Net.WebSockets.WebSocketState[] validStates);
    parameters:
    - id: state
      type: System.Net.WebSockets.WebSocketState
      description: The current state of the WebSocket to be tested against the list of valid states.
    - id: validStates
      type: System.Net.WebSockets.WebSocketState[]
      description: List of valid connection states.
  overload: System.Net.WebSockets.WebSocket.ThrowOnInvalidState*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.WebSockets.WebSocket.#ctor
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: WebSocket()
  nameWithType: WebSocket.WebSocket()
  fullName: WebSocket.WebSocket()
- uid: System.Net.WebSockets.WebSocket.Abort
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: Abort()
  nameWithType: WebSocket.Abort()
  fullName: WebSocket.Abort()
- uid: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: WebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: WebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.WebSockets.WebSocketCloseStatus
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketCloseStatus
  nameWithType: WebSocketCloseStatus
  fullName: System.Net.WebSockets.WebSocketCloseStatus
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: WebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: WebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
- uid: System.Net.WebSockets.WebSocket.CloseStatus
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseStatus
  nameWithType: WebSocket.CloseStatus
  fullName: WebSocket.CloseStatus
- uid: System.Nullable`1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  parent: System
  isExternal: false
  name: Nullable<WebSocketCloseStatus>
  nameWithType: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.WebSockets.WebSocket.CloseStatusDescription
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseStatusDescription
  nameWithType: WebSocket.CloseStatusDescription
  fullName: WebSocket.CloseStatusDescription
- uid: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CreateClientBuffer(Int32, Int32)
  nameWithType: WebSocket.CreateClientBuffer(Int32, Int32)
  fullName: WebSocket.CreateClientBuffer(Int32, Int32)
- uid: System.ArraySegment`1
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: false
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)
  nameWithType: WebSocket.CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)
  fullName: WebSocket.CreateClientWebSocket(Stream, String, Int32, Int32, TimeSpan, Boolean, ArraySegment<Byte>)
- uid: System.Net.WebSockets.WebSocket
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocket
  nameWithType: WebSocket
  fullName: System.Net.WebSockets.WebSocket
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CreateServerBuffer(Int32)
  nameWithType: WebSocket.CreateServerBuffer(Int32)
  fullName: WebSocket.CreateServerBuffer(Int32)
- uid: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: DefaultKeepAliveInterval
  nameWithType: WebSocket.DefaultKeepAliveInterval
  fullName: WebSocket.DefaultKeepAliveInterval
- uid: System.Net.WebSockets.WebSocket.Dispose
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: Dispose()
  nameWithType: WebSocket.Dispose()
  fullName: WebSocket.Dispose()
- uid: System.Net.WebSockets.WebSocket.IsApplicationTargeting45
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: IsApplicationTargeting45()
  nameWithType: WebSocket.IsApplicationTargeting45()
  fullName: WebSocket.IsApplicationTargeting45()
- uid: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: IsStateTerminal(WebSocketState)
  nameWithType: WebSocket.IsStateTerminal(WebSocketState)
  fullName: WebSocket.IsStateTerminal(WebSocketState)
- uid: System.Net.WebSockets.WebSocketState
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketState
  nameWithType: WebSocketState
  fullName: System.Net.WebSockets.WebSocketState
- uid: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  nameWithType: WebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  fullName: WebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Net.WebSockets.WebSocketReceiveResult
  name: WebSocketReceiveResult
  nameWithType: WebSocketReceiveResult
  fullName: System.Net.WebSockets.WebSocketReceiveResult
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<WebSocketReceiveResult>
  nameWithType: Task<WebSocketReceiveResult>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketReceiveResult
    name: WebSocketReceiveResult
    nameWithType: WebSocketReceiveResult
    fullName: System.Net.WebSockets.WebSocketReceiveResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.WebSockets.WebSocket.RegisterPrefixes
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: RegisterPrefixes()
  nameWithType: WebSocket.RegisterPrefixes()
  fullName: WebSocket.RegisterPrefixes()
- uid: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  nameWithType: WebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  fullName: WebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
- uid: System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Net.WebSockets.WebSocket.State
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: State
  nameWithType: WebSocket.State
  fullName: WebSocket.State
- uid: System.Net.WebSockets.WebSocket.SubProtocol
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: SubProtocol
  nameWithType: WebSocket.SubProtocol
  fullName: WebSocket.SubProtocol
- uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: ThrowOnInvalidState(WebSocketState, WebSocketState[])
  nameWithType: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])
  fullName: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])
- uid: System.Net.WebSockets.WebSocketState[]
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketState[]
  nameWithType: WebSocketState[]
  fullName: System.Net.WebSockets.WebSocketState[]
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.WebSockets.WebSocket.#ctor*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: WebSocket
  nameWithType: WebSocket.WebSocket
  fullName: WebSocket.WebSocket
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.Abort*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: Abort
  nameWithType: WebSocket.Abort
  fullName: WebSocket.Abort
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CloseAsync*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseAsync
  nameWithType: WebSocket.CloseAsync
  fullName: WebSocket.CloseAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CloseOutputAsync*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseOutputAsync
  nameWithType: WebSocket.CloseOutputAsync
  fullName: WebSocket.CloseOutputAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CloseStatus*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseStatus
  nameWithType: WebSocket.CloseStatus
  fullName: WebSocket.CloseStatus
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CloseStatusDescription*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CloseStatusDescription
  nameWithType: WebSocket.CloseStatusDescription
  fullName: WebSocket.CloseStatusDescription
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CreateClientBuffer*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CreateClientBuffer
  nameWithType: WebSocket.CreateClientBuffer
  fullName: WebSocket.CreateClientBuffer
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CreateClientWebSocket*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CreateClientWebSocket
  nameWithType: WebSocket.CreateClientWebSocket
  fullName: WebSocket.CreateClientWebSocket
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.CreateServerBuffer*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: CreateServerBuffer
  nameWithType: WebSocket.CreateServerBuffer
  fullName: WebSocket.CreateServerBuffer
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: DefaultKeepAliveInterval
  nameWithType: WebSocket.DefaultKeepAliveInterval
  fullName: WebSocket.DefaultKeepAliveInterval
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.Dispose*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: Dispose
  nameWithType: WebSocket.Dispose
  fullName: WebSocket.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.IsApplicationTargeting45*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: IsApplicationTargeting45
  nameWithType: WebSocket.IsApplicationTargeting45
  fullName: WebSocket.IsApplicationTargeting45
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.IsStateTerminal*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: IsStateTerminal
  nameWithType: WebSocket.IsStateTerminal
  fullName: WebSocket.IsStateTerminal
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.ReceiveAsync*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: ReceiveAsync
  nameWithType: WebSocket.ReceiveAsync
  fullName: WebSocket.ReceiveAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.RegisterPrefixes*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: RegisterPrefixes
  nameWithType: WebSocket.RegisterPrefixes
  fullName: WebSocket.RegisterPrefixes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.SendAsync*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: SendAsync
  nameWithType: WebSocket.SendAsync
  fullName: WebSocket.SendAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.State*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: State
  nameWithType: WebSocket.State
  fullName: WebSocket.State
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.SubProtocol*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: SubProtocol
  nameWithType: WebSocket.SubProtocol
  fullName: WebSocket.SubProtocol
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState*
  parent: System.Net.WebSockets.WebSocket
  isExternal: false
  name: ThrowOnInvalidState
  nameWithType: WebSocket.ThrowOnInvalidState
  fullName: WebSocket.ThrowOnInvalidState
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/WebSocket.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
