{"nodes":[{"content":"Represents a secure client session for user activation, license binding, and other rights management operations.","nodes":[{"pos":[0,112],"content":"Represents a secure client session for user activation, license binding, and other rights management operations.","nodes":[{"content":"Represents a secure client session for user activation, license binding, and other rights management operations.","pos":[0,112]}]}],"pos":[1331,1444],"yaml":true},{"content":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.SecureEnvironment> is only usable in full trust applications.","nodes":[{"pos":[0,161],"content":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.SecureEnvironment> is only usable in full trust applications.","nodes":[{"content":"As with other <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement&gt;</ph> types, <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph> is only usable in full trust applications.","pos":[0,161],"source":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.SecureEnvironment> is only usable in full trust applications."}]}],"pos":[1455,1617],"yaml":true,"extradata":"MT"},{"content":"Gets the <xref href=\"System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\"></xref> specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.","nodes":[{"pos":[0,204],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\"&gt;&lt;/xref&gt;</ph> specified when the <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph> was created.","source":"Gets the <xref href=\"System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\"></xref> specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created."}],"pos":[3745,3950],"yaml":true},{"content":"The application manifest specified to the <xref href=\"System.Security.RightsManagement.SecureEnvironment.Create*\"></xref> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> is created.","nodes":[{"pos":[0,221],"content":"The application manifest specified to the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment.Create*\"&gt;&lt;/xref&gt;</ph> method when the <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph> is created.","source":"The application manifest specified to the <xref href=\"System.Security.RightsManagement.SecureEnvironment.Create*\"></xref> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> is created."}],"pos":[4584,4806],"yaml":true},{"content":"Creates a secure client session for a specified user with a given rights manifest.","nodes":[{"pos":[0,82],"content":"Creates a secure client session for a specified user with a given rights manifest.","nodes":[{"content":"Creates a secure client session for a specified user with a given rights manifest.","pos":[0,82]}]}],"pos":[6127,6210],"yaml":true},{"content":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.","nodes":[{"pos":[0,393],"content":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.","nodes":[{"content":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.","pos":[0,393],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Create%2A&gt;</ph> method is intended for use with users that are already activated, such as provided in the list returned from <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A&gt;</ph>.","pos":[0,261],"source":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>."},{"content":"Use the alternate <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Create%2A&gt;</ph> method for users that are not yet activated.","pos":[263,393],"source":"  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated."}]}]}],"pos":[6221,6615],"yaml":true,"extradata":"MT"},{"content":"The application rights manifest.","nodes":[{"pos":[0,32],"content":"The application rights manifest.","nodes":[{"content":"The application rights manifest.","pos":[0,32]}]}],"pos":[7334,7367],"yaml":true},{"content":"The user or user-group for granting access to rights managed content.","nodes":[{"pos":[0,69],"content":"The user or user-group for granting access to rights managed content.","nodes":[{"content":"The user or user-group for granting access to rights managed content.","pos":[0,69]}]}],"pos":[7458,7528],"yaml":true},{"content":"A secure client session for activation, license binding, and other rights management operations.","nodes":[{"pos":[0,96],"content":"A secure client session for activation, license binding, and other rights management operations.","nodes":[{"content":"A secure client session for activation, license binding, and other rights management operations.","pos":[0,96]}]}],"pos":[7622,7719],"yaml":true},{"content":"Creates a secure client session given an application rights manifest, <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref>, and <xref href=\"System.Security.RightsManagement.UserActivationMode\"></xref>.","nodes":[{"pos":[0,221],"content":"Creates a secure client session given an application rights manifest, <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.AuthenticationType\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.UserActivationMode\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a secure client session given an application rights manifest, <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref>, and <xref href=\"System.Security.RightsManagement.UserActivationMode\"></xref>."}],"pos":[9285,9507],"yaml":true},{"content":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for new users that are not yet activated.  \n  \n Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.  \n  \n The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.","nodes":[{"pos":[0,133],"content":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for new users that are not yet activated.","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Create%2A&gt;</ph> method is intended for new users that are not yet activated.","pos":[0,133],"source":"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for new users that are not yet activated."}]},{"pos":[140,264],"content":"Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.","nodes":[{"content":"Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.","pos":[0,124]}]},{"pos":[271,526],"content":"The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.","nodes":[{"content":"The alternate <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Create%2A&gt;</ph> method can be used if a user is already activated, such as provided in the list returned from <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A&gt;</ph>.","pos":[0,255],"source":"The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>."}]}],"pos":[9518,10051],"yaml":true,"extradata":"MT"},{"content":"The application rights manifest.","nodes":[{"pos":[0,32],"content":"The application rights manifest.","nodes":[{"content":"The application rights manifest.","pos":[0,32]}]}],"pos":[10859,10892],"yaml":true},{"content":"The method of authentication.","nodes":[{"pos":[0,29],"content":"The method of authentication.","nodes":[{"content":"The method of authentication.","pos":[0,29]}]}],"pos":[11000,11030],"yaml":true},{"content":"The type of the user rights account certificate.","nodes":[{"pos":[0,48],"content":"The type of the user rights account certificate.","nodes":[{"content":"The type of the user rights account certificate.","pos":[0,48]}]}],"pos":[11142,11191],"yaml":true},{"content":"A secure client session for activation, license binding, and other rights management operations.","nodes":[{"pos":[0,96],"content":"A secure client session for activation, license binding, and other rights management operations.","nodes":[{"content":"A secure client session for activation, license binding, and other rights management operations.","pos":[0,96]}]}],"pos":[11285,11382],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.","nodes":[{"pos":[0,107],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."}],"pos":[12459,12567],"yaml":true},{"content":"The application should call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>.  After <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector.  For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method.","nodes":[{"pos":[0,591],"content":"The application should call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>.  After <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector.  For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"The application should call <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt;</ph> when finished with the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph>.","pos":[0,175],"source":"The application should call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>."},{"content":"After <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt;</ph> is called, resources allocated to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph> are reclaimed by the garbage collector.","pos":[177,384],"source":"  After <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[386,591],"source":"  For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[599,1069],"content":"[!NOTE]\n Always call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method.","pos":[8,468],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt;</ph> before the last reference to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph> is released.","pos":[1,182],"source":" Always call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt;</ph> is not called, resources allocated to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph> will not be freed until the garbage collector calls the instance's <ph id=\"ph3\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[184,460],"source":"  If <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method."}]}]}],"pos":[12578,13653],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,163],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> and optionally releases the managed resources."}],"pos":[14866,15030],"yaml":true},{"content":"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,468],"content":"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,157],"source":"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt;</ph> invokes the protected <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[158,384],"source":" <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[385,468],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[475,729],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph> references.","pos":[0,184],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[185,254],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[15041,15775],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[15929,16032],"yaml":true},{"content":"Returns a list of the activated users.","nodes":[{"pos":[0,38],"content":"Returns a list of the activated users.","nodes":[{"content":"Returns a list of the activated users.","pos":[0,38]}]}],"pos":[17170,17209],"yaml":true},{"content":"A list of the currently activated users.","nodes":[{"pos":[0,40],"content":"A list of the currently activated users.","nodes":[{"content":"A list of the currently activated users.","pos":[0,40]}]}],"pos":[17522,17563],"yaml":true},{"content":"Indicates whether a given user has been activated for accessing rights managed content.","nodes":[{"pos":[0,87],"content":"Indicates whether a given user has been activated for accessing rights managed content.","nodes":[{"content":"Indicates whether a given user has been activated for accessing rights managed content.","pos":[0,87]}]}],"pos":[18870,18958],"yaml":true},{"content":"The user or user-group for granting access to rights managed content.","nodes":[{"pos":[0,69],"content":"The user or user-group for granting access to rights managed content.","nodes":[{"content":"The user or user-group for granting access to rights managed content.","pos":[0,69]}]}],"pos":[19763,19833],"yaml":true},{"content":"`true` if the given <code>user</code> has been activated for accessing rights managed content; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">user</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been activated for accessing rights managed content; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the given <code>user</code> has been activated for accessing rights managed content; otherwise, `false`."}],"pos":[19891,20008],"yaml":true},{"content":"Removes the license activation for a specified user.","nodes":[{"pos":[0,52],"content":"Removes the license activation for a specified user.","nodes":[{"content":"Removes the license activation for a specified user.","pos":[0,52]}]}],"pos":[21337,21390],"yaml":true},{"content":"The user authentication must be performed either with Windows authentication or Passport authentication.","nodes":[{"pos":[0,104],"content":"The user authentication must be performed either with Windows authentication or Passport authentication.","nodes":[{"content":"The user authentication must be performed either with Windows authentication or Passport authentication.","pos":[0,104]}]}],"pos":[21401,21506],"yaml":true,"extradata":"MT"},{"content":"The user to remove the license activation for.","nodes":[{"pos":[0,46],"content":"The user to remove the license activation for.","nodes":[{"content":"The user to remove the license activation for.","pos":[0,46]}]}],"pos":[21728,21775],"yaml":true},{"content":"The <code>user</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">user</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>user</code> parameter is `null`."}],"pos":[21975,22018],"yaml":true},{"content":"The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication.","nodes":[{"pos":[0,111],"content":"The given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">user</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not authenticated with either Windows authentication or Passport authentication.","source":"The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication."}],"pos":[22132,22244],"yaml":true},{"content":"Gets the user or user-group specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.","nodes":[{"pos":[0,131],"content":"Gets the user or user-group specified when the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph> was created.","source":"Gets the user or user-group specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created."}],"pos":[23211,23343],"yaml":true},{"content":"The user or user-group specified to the <xref href=\"System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\"></xref> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.","nodes":[{"pos":[0,279],"content":"The user or user-group specified to the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\"&gt;&lt;/xref&gt;</ph> method when the <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph> was created.","source":"The user or user-group specified to the <xref href=\"System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\"></xref> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created."}],"pos":[24017,24297],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.SecureEnvironment\n  commentId: T:System.Security.RightsManagement.SecureEnvironment\n  id: SecureEnvironment\n  children:\n  - System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  - System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  - System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  - System.Security.RightsManagement.SecureEnvironment.Dispose\n  - System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  - System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  - System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  - System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  - System.Security.RightsManagement.SecureEnvironment.User\n  langs:\n  - csharp\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Represents a secure client session for user activation, license binding, and other rights management operations.\n  remarks: As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.SecureEnvironment> is only usable in full trust applications.\n  example:\n  - \"The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment> class  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class SecureEnvironment : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  commentId: P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  id: ApplicationManifest\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: ApplicationManifest\n  nameWithType: SecureEnvironment.ApplicationManifest\n  fullName: SecureEnvironment.ApplicationManifest\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the <xref href=\"System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\"></xref> specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.\n  remarks: ''\n  example:\n  - \"The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest%2A> method.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]\"\n  syntax:\n    content: public string ApplicationManifest { get; }\n    return:\n      type: System.String\n      description: The application manifest specified to the <xref href=\"System.Security.RightsManagement.SecureEnvironment.Create*\"></xref> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> is created.\n  overload: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  id: Create(System.String,System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Create(String, ContentUser)\n  nameWithType: SecureEnvironment.Create(String, ContentUser)\n  fullName: SecureEnvironment.Create(String, ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Creates a secure client session for a specified user with a given rights manifest.\n  remarks: This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.\n  example:\n  - \"The following example shows how to use this method to create a secure environment.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]\"\n  syntax:\n    content: public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);\n    parameters:\n    - id: applicationManifest\n      type: System.String\n      description: The application rights manifest.\n    - id: user\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user-group for granting access to rights managed content.\n    return:\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: A secure client session for activation, license binding, and other rights management operations.\n  overload: System.Security.RightsManagement.SecureEnvironment.Create*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  id: Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Create(String, AuthenticationType, UserActivationMode)\n  nameWithType: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)\n  fullName: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Creates a secure client session given an application rights manifest, <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref>, and <xref href=\"System.Security.RightsManagement.UserActivationMode\"></xref>.\n  remarks: \"This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for new users that are not yet activated.  \\n  \\n Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.  \\n  \\n The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.\"\n  example:\n  - \"The following example shows how to use this method to create a secure environment.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]\"\n  syntax:\n    content: public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);\n    parameters:\n    - id: applicationManifest\n      type: System.String\n      description: The application rights manifest.\n    - id: authentication\n      type: System.Security.RightsManagement.AuthenticationType\n      description: The method of authentication.\n    - id: userActivationMode\n      type: System.Security.RightsManagement.UserActivationMode\n      description: The type of the user rights account certificate.\n    return:\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: A secure client session for activation, license binding, and other rights management operations.\n  overload: System.Security.RightsManagement.SecureEnvironment.Create*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.Dispose\n  id: Dispose\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SecureEnvironment.Dispose()\n  fullName: SecureEnvironment.Dispose()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Releases all resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  remarks: \"The application should call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>.  After <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector.  For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.RightsManagement.SecureEnvironment.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SecureEnvironment.Dispose(Boolean)\n  fullName: SecureEnvironment.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.RightsManagement.SecureEnvironment.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  id: GetActivatedUsers\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: GetActivatedUsers()\n  nameWithType: SecureEnvironment.GetActivatedUsers()\n  fullName: SecureEnvironment.GetActivatedUsers()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a list of the activated users.\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentUser> GetActivatedUsers ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentUser}\n      description: A list of the currently activated users.\n  overload: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  id: IsUserActivated(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: IsUserActivated(ContentUser)\n  nameWithType: SecureEnvironment.IsUserActivated(ContentUser)\n  fullName: SecureEnvironment.IsUserActivated(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Indicates whether a given user has been activated for accessing rights managed content.\n  remarks: ''\n  example:\n  - \"The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment.IsUserActivated%2A> method to determine if given user has been authorized to access rights managed content.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]\"\n  syntax:\n    content: public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);\n    parameters:\n    - id: user\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user-group for granting access to rights managed content.\n    return:\n      type: System.Boolean\n      description: '`true` if the given <code>user</code> has been activated for accessing rights managed content; otherwise, `false`.'\n  overload: System.Security.RightsManagement.SecureEnvironment.IsUserActivated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  commentId: M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  id: RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: RemoveActivatedUser(ContentUser)\n  nameWithType: SecureEnvironment.RemoveActivatedUser(ContentUser)\n  fullName: SecureEnvironment.RemoveActivatedUser(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Removes the license activation for a specified user.\n  remarks: The user authentication must be performed either with Windows authentication or Passport authentication.\n  syntax:\n    content: public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);\n    parameters:\n    - id: user\n      type: System.Security.RightsManagement.ContentUser\n      description: The user to remove the license activation for.\n  overload: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>user</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.SecureEnvironment.User\n  commentId: P:System.Security.RightsManagement.SecureEnvironment.User\n  id: User\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: User\n  nameWithType: SecureEnvironment.User\n  fullName: SecureEnvironment.User\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the user or user-group specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.\n  remarks: ''\n  example:\n  - \"The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment.User%2A> property  \\n  \\n [!code-csharp[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewsecenv)]\\n [!code-vb[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewsecenv)]\"\n  syntax:\n    content: public System.Security.RightsManagement.ContentUser User { get; }\n    return:\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user-group specified to the <xref href=\"System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\"></xref> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.\n  overload: System.Security.RightsManagement.SecureEnvironment.User*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: ApplicationManifest\n  nameWithType: SecureEnvironment.ApplicationManifest\n  fullName: SecureEnvironment.ApplicationManifest\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Create(String, ContentUser)\n  nameWithType: SecureEnvironment.Create(String, ContentUser)\n  fullName: SecureEnvironment.Create(String, ContentUser)\n- uid: System.Security.RightsManagement.SecureEnvironment\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Create(String, AuthenticationType, UserActivationMode)\n  nameWithType: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)\n  fullName: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)\n- uid: System.Security.RightsManagement.AuthenticationType\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: AuthenticationType\n  fullName: System.Security.RightsManagement.AuthenticationType\n- uid: System.Security.RightsManagement.UserActivationMode\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UserActivationMode\n  nameWithType: UserActivationMode\n  fullName: System.Security.RightsManagement.UserActivationMode\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Dispose()\n  nameWithType: SecureEnvironment.Dispose()\n  fullName: SecureEnvironment.Dispose()\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SecureEnvironment.Dispose(Boolean)\n  fullName: SecureEnvironment.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: GetActivatedUsers()\n  nameWithType: SecureEnvironment.GetActivatedUsers()\n  fullName: SecureEnvironment.GetActivatedUsers()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentUser}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<ContentUser>\n  nameWithType: ReadOnlyCollection<ContentUser>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentUser>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.RightsManagement.ContentUser\n    name: ContentUser\n    nameWithType: ContentUser\n    fullName: System.Security.RightsManagement.ContentUser\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: IsUserActivated(ContentUser)\n  nameWithType: SecureEnvironment.IsUserActivated(ContentUser)\n  fullName: SecureEnvironment.IsUserActivated(ContentUser)\n- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: RemoveActivatedUser(ContentUser)\n  nameWithType: SecureEnvironment.RemoveActivatedUser(ContentUser)\n  fullName: SecureEnvironment.RemoveActivatedUser(ContentUser)\n- uid: System.Security.RightsManagement.SecureEnvironment.User\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: User\n  nameWithType: SecureEnvironment.User\n  fullName: SecureEnvironment.User\n- uid: System.Security.RightsManagement.SecureEnvironment.Create*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Create\n  nameWithType: SecureEnvironment.Create\n  fullName: SecureEnvironment.Create\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: ApplicationManifest\n  nameWithType: SecureEnvironment.ApplicationManifest\n  fullName: SecureEnvironment.ApplicationManifest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Dispose\n  nameWithType: SecureEnvironment.Dispose\n  fullName: SecureEnvironment.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: GetActivatedUsers\n  nameWithType: SecureEnvironment.GetActivatedUsers\n  fullName: SecureEnvironment.GetActivatedUsers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: IsUserActivated\n  nameWithType: SecureEnvironment.IsUserActivated\n  fullName: SecureEnvironment.IsUserActivated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: RemoveActivatedUser\n  nameWithType: SecureEnvironment.RemoveActivatedUser\n  fullName: SecureEnvironment.RemoveActivatedUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Security.RightsManagement.SecureEnvironment.User*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: User\n  nameWithType: SecureEnvironment.User\n  fullName: SecureEnvironment.User\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}