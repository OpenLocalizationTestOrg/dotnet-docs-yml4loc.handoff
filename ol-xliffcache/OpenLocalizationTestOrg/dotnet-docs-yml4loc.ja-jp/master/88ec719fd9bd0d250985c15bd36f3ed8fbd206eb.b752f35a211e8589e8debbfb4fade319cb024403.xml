{"nodes":[{"content":"Specifies the default value for an application settings property.","nodes":[{"pos":[0,65],"content":"Specifies the default value for an application settings property.","nodes":[{"content":"Specifies the default value for an application settings property.","pos":[0,65]}]}],"pos":[634,700],"yaml":true},{"content":"> [!IMPORTANT]\n>  <xref:System.Configuration.DefaultSettingValueAttribute> can only be applied to individual settings properties; it is invalid to apply this attribute to an entire application settings class.  \n  \n Different settings providers may have different requirements or limitations on the use of the <xref:System.Configuration.DefaultSettingValueAttribute>. For example, the <xref:System.Configuration.LocalFileSettingsProvider> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store.  \n  \n <xref:System.Configuration.DefaultSettingValueAttribute> requires that the default value can be represented as a string. As a result, settings using XML serialization cannot have a default value specified by means of this attribute. Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <xref:System.Configuration.SettingsSerializeAsAttribute>.  \n  \n> [!CAUTION]\n>  The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.","nodes":[{"pos":[2,208],"content":"[!IMPORTANT]\n <xref:System.Configuration.DefaultSettingValueAttribute> can only be applied to individual settings properties; it is invalid to apply this attribute to an entire application settings class.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph> can only be applied to individual settings properties; it is invalid to apply this attribute to an entire application settings class.","pos":[14,204],"source":" <xref:System.Configuration.DefaultSettingValueAttribute> can only be applied to individual settings properties; it is invalid to apply this attribute to an entire application settings class."}]},{"pos":[215,610],"content":"Different settings providers may have different requirements or limitations on the use of the <xref:System.Configuration.DefaultSettingValueAttribute>. For example, the <xref:System.Configuration.LocalFileSettingsProvider> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store.","nodes":[{"content":"Different settings providers may have different requirements or limitations on the use of the <xref:System.Configuration.DefaultSettingValueAttribute>. For example, the <xref:System.Configuration.LocalFileSettingsProvider> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store.","pos":[0,395],"nodes":[{"content":"Different settings providers may have different requirements or limitations on the use of the <ph id=\"ph1\">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>.","pos":[0,151],"source":"Different settings providers may have different requirements or limitations on the use of the <xref:System.Configuration.DefaultSettingValueAttribute>."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store.","pos":[152,395],"source":" For example, the <xref:System.Configuration.LocalFileSettingsProvider> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store."}]}]},{"pos":[617,1024],"content":"<xref:System.Configuration.DefaultSettingValueAttribute> requires that the default value can be represented as a string. As a result, settings using XML serialization cannot have a default value specified by means of this attribute. Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <xref:System.Configuration.SettingsSerializeAsAttribute>.","nodes":[{"content":"<xref:System.Configuration.DefaultSettingValueAttribute> requires that the default value can be represented as a string. As a result, settings using XML serialization cannot have a default value specified by means of this attribute. Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <xref:System.Configuration.SettingsSerializeAsAttribute>.","pos":[0,407],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph> requires that the default value can be represented as a string.","pos":[0,120],"source":"<xref:System.Configuration.DefaultSettingValueAttribute> requires that the default value can be represented as a string."},{"content":"As a result, settings using XML serialization cannot have a default value specified by means of this attribute.","pos":[121,232]},{"content":"Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>.","pos":[233,407],"source":" Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <xref:System.Configuration.SettingsSerializeAsAttribute>."}]}]},{"pos":[1032,1218],"content":"[!CAUTION]\n The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.","leadings":["","> "],"nodes":[{"content":" The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.","pos":[11,184],"nodes":[{"content":"The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file.","pos":[1,117]},{"content":"Therefore these default values are inherently insecure.","pos":[118,173]}]}]}],"pos":[711,1940],"yaml":true,"extradata":"MT"},{"content":"Initializes an instance of the <xref href=\"System.Configuration.DefaultSettingValueAttribute\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.DefaultSettingValueAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes an instance of the <xref href=\"System.Configuration.DefaultSettingValueAttribute\"></xref> class."}],"pos":[8053,8162],"yaml":true},{"content":"The supplied string must be a value that is compatible with the available serialization mechanism associated with the property type. For example, if the property is of type <xref:System.Drawing.Color>, then a `value` of `\"Azure\"` would be valid.  \n  \n> [!CAUTION]\n>  The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.","nodes":[{"pos":[0,245],"content":"The supplied string must be a value that is compatible with the available serialization mechanism associated with the property type. For example, if the property is of type <xref:System.Drawing.Color>, then a `value` of `\"Azure\"` would be valid.","nodes":[{"content":"The supplied string must be a value that is compatible with the available serialization mechanism associated with the property type.","pos":[0,132]},{"content":"For example, if the property is of type <ph id=\"ph1\">&lt;xref:System.Drawing.Color&gt;</ph>, then a <ph id=\"ph2\">`value`</ph> of <ph id=\"ph3\">`\"Azure\"`</ph> would be valid.","pos":[133,245],"source":" For example, if the property is of type <xref:System.Drawing.Color>, then a `value` of `\"Azure\"` would be valid."}]},{"pos":[253,439],"content":"[!CAUTION]\n The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.","leadings":["","> "],"nodes":[{"content":" The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.","pos":[11,184],"nodes":[{"content":"The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file.","pos":[1,117]},{"content":"Therefore these default values are inherently insecure.","pos":[118,173]}]}]}],"pos":[8173,8620],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the default value for the property.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the default value for the property.","source":"A <xref href=\"System.String\"></xref> that represents the default value for the property."}],"pos":[8772,8861],"yaml":true},{"content":"Gets the default value for the application settings property.","nodes":[{"pos":[0,61],"content":"Gets the default value for the application settings property.","nodes":[{"content":"Gets the default value for the application settings property.","pos":[0,61]}]}],"pos":[10037,10099],"yaml":true},{"content":"The <xref:System.Configuration.DefaultSettingValueAttribute.Value%2A> property is set in the <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A> constructor.  \n  \n Setting providers may support multiple serialization schemes that can be specified with the <xref:System.Configuration.SettingsSerializeAsAttribute>.","nodes":[{"pos":[0,173],"content":"The <xref:System.Configuration.DefaultSettingValueAttribute.Value%2A> property is set in the <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A> constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.DefaultSettingValueAttribute.Value%2A&gt;</ph> property is set in the <ph id=\"ph2\">&lt;xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A&gt;</ph> constructor.","pos":[0,173],"source":"The <xref:System.Configuration.DefaultSettingValueAttribute.Value%2A> property is set in the <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A> constructor."}]},{"pos":[180,329],"content":"Setting providers may support multiple serialization schemes that can be specified with the <xref:System.Configuration.SettingsSerializeAsAttribute>.","nodes":[{"content":"Setting providers may support multiple serialization schemes that can be specified with the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>.","pos":[0,149],"source":"Setting providers may support multiple serialization schemes that can be specified with the <xref:System.Configuration.SettingsSerializeAsAttribute>."}]}],"pos":[10110,10444],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the default value for the property.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the default value for the property.","source":"A <xref href=\"System.String\"></xref> that represents the default value for the property."}],"pos":[10553,10642],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.DefaultSettingValueAttribute\n  commentId: T:System.Configuration.DefaultSettingValueAttribute\n  id: DefaultSettingValueAttribute\n  children:\n  - System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)\n  - System.Configuration.DefaultSettingValueAttribute.Value\n  langs:\n  - csharp\n  name: DefaultSettingValueAttribute\n  nameWithType: DefaultSettingValueAttribute\n  fullName: System.Configuration.DefaultSettingValueAttribute\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Specifies the default value for an application settings property.\n  remarks: \"> [!IMPORTANT]\\n>  <xref:System.Configuration.DefaultSettingValueAttribute> can only be applied to individual settings properties; it is invalid to apply this attribute to an entire application settings class.  \\n  \\n Different settings providers may have different requirements or limitations on the use of the <xref:System.Configuration.DefaultSettingValueAttribute>. For example, the <xref:System.Configuration.LocalFileSettingsProvider> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store.  \\n  \\n <xref:System.Configuration.DefaultSettingValueAttribute> requires that the default value can be represented as a string. As a result, settings using XML serialization cannot have a default value specified by means of this attribute. Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <xref:System.Configuration.SettingsSerializeAsAttribute>.  \\n  \\n> [!CAUTION]\\n>  The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Configuration.DefaultSettingValueAttribute> applied to three of the four properties of the `FormSettings` wrapper class, which is derived from the <xref:System.Configuration.ApplicationSettingsBase> class. This class is used to persist the location, size, background color, and text of form. The first three of these form properties have default values associated with them.  \\n  \\n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \\n  \\n [!code-cpp[AppSettingsSample#9](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#9)]\\n [!code-csharp[AppSettingsSample#9](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#9)]\\n [!code-vb[AppSettingsSample#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#9)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class DefaultSettingValueAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/DefaultSettingValueAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)\n  commentId: M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.DefaultSettingValueAttribute\n  langs:\n  - csharp\n  name: DefaultSettingValueAttribute(String)\n  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)\n  fullName: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes an instance of the <xref href=\"System.Configuration.DefaultSettingValueAttribute\"></xref> class.\n  remarks: \"The supplied string must be a value that is compatible with the available serialization mechanism associated with the property type. For example, if the property is of type <xref:System.Drawing.Color>, then a `value` of `\\\"Azure\\\"` would be valid.  \\n  \\n> [!CAUTION]\\n>  The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure.\"\n  syntax:\n    content: public DefaultSettingValueAttribute (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the default value for the property.\n  overload: System.Configuration.DefaultSettingValueAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/DefaultSettingValueAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.DefaultSettingValueAttribute.Value\n  commentId: P:System.Configuration.DefaultSettingValueAttribute.Value\n  id: Value\n  parent: System.Configuration.DefaultSettingValueAttribute\n  langs:\n  - csharp\n  name: Value\n  nameWithType: DefaultSettingValueAttribute.Value\n  fullName: DefaultSettingValueAttribute.Value\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the default value for the application settings property.\n  remarks: \"The <xref:System.Configuration.DefaultSettingValueAttribute.Value%2A> property is set in the <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A> constructor.  \\n  \\n Setting providers may support multiple serialization schemes that can be specified with the <xref:System.Configuration.SettingsSerializeAsAttribute>.\"\n  syntax:\n    content: public string Value { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the default value for the property.\n  overload: System.Configuration.DefaultSettingValueAttribute.Value*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/DefaultSettingValueAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)\n  parent: System.Configuration.DefaultSettingValueAttribute\n  isExternal: false\n  name: DefaultSettingValueAttribute(String)\n  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)\n  fullName: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.DefaultSettingValueAttribute.Value\n  parent: System.Configuration.DefaultSettingValueAttribute\n  isExternal: false\n  name: Value\n  nameWithType: DefaultSettingValueAttribute.Value\n  fullName: DefaultSettingValueAttribute.Value\n- uid: System.Configuration.DefaultSettingValueAttribute.#ctor*\n  parent: System.Configuration.DefaultSettingValueAttribute\n  isExternal: false\n  name: DefaultSettingValueAttribute\n  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute\n  fullName: DefaultSettingValueAttribute.DefaultSettingValueAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/DefaultSettingValueAttribute.xml\n- uid: System.Configuration.DefaultSettingValueAttribute.Value*\n  parent: System.Configuration.DefaultSettingValueAttribute\n  isExternal: false\n  name: Value\n  nameWithType: DefaultSettingValueAttribute.Value\n  fullName: DefaultSettingValueAttribute.Value\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/DefaultSettingValueAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}