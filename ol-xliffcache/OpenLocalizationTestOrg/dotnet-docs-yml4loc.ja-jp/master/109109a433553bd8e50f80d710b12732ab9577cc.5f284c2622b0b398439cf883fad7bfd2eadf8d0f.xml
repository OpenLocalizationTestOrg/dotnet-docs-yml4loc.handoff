{"nodes":[{"content":"Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.","nodes":[{"pos":[0,108],"content":"Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.","nodes":[{"content":"Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.","pos":[0,108],"nodes":[{"content":"Defines an array of colors that make up a color palette.","pos":[0,56]},{"content":"The colors are 32-bit ARGB colors.","pos":[57,91]},{"content":"Not inheritable.","pos":[92,108]}]}]}],"pos":[467,576],"yaml":true},{"content":"You are not allowed to construct a <xref:System.Drawing.Imaging.ColorPalette> object directly. If you created a <xref:System.Drawing.Imaging.ColorPalette> object, you could then manipulate the palette size for a particular image, which is not allowed. Use the <xref:System.Drawing.Image.Palette%2A?displayProperty=fullName> property to obtain a <xref:System.Drawing.Imaging.ColorPalette> object.  \n  \n The colors in the palette are limited to 32-bit ARGB colors. A 32-bit ARGB color has 8 bits each for alpha, red, green, and blue values. The lowest 8 bits make up the blue bit, the next 8 bits are green, the next 8 bits are red, and the most significant 8 bits are alpha. This means each component can vary from 0 to 255. Fully on is 255 and fully off is 0. Alpha is used to make the color value transparent (alpha = 0) or opaque (alpha = 255). The number of intensity levels in the image can be increased without increasing the number of colors used. This process creates what is called a halftone, and it offers increased contrast at a cost of decreased resolution.","nodes":[{"pos":[0,395],"content":"You are not allowed to construct a <xref:System.Drawing.Imaging.ColorPalette> object directly. If you created a <xref:System.Drawing.Imaging.ColorPalette> object, you could then manipulate the palette size for a particular image, which is not allowed. Use the <xref:System.Drawing.Image.Palette%2A?displayProperty=fullName> property to obtain a <xref:System.Drawing.Imaging.ColorPalette> object.","nodes":[{"content":"You are not allowed to construct a <xref:System.Drawing.Imaging.ColorPalette> object directly. If you created a <xref:System.Drawing.Imaging.ColorPalette> object, you could then manipulate the palette size for a particular image, which is not allowed. Use the <xref:System.Drawing.Image.Palette%2A?displayProperty=fullName> property to obtain a <xref:System.Drawing.Imaging.ColorPalette> object.","pos":[0,395],"nodes":[{"content":"You are not allowed to construct a <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.ColorPalette&gt;</ph> object directly.","pos":[0,94],"source":"You are not allowed to construct a <xref:System.Drawing.Imaging.ColorPalette> object directly."},{"content":"If you created a <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.ColorPalette&gt;</ph> object, you could then manipulate the palette size for a particular image, which is not allowed.","pos":[95,251],"source":" If you created a <xref:System.Drawing.Imaging.ColorPalette> object, you could then manipulate the palette size for a particular image, which is not allowed."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Palette%2A?displayProperty=fullName&gt;</ph> property to obtain a <ph id=\"ph2\">&lt;xref:System.Drawing.Imaging.ColorPalette&gt;</ph> object.","pos":[252,395],"source":" Use the <xref:System.Drawing.Image.Palette%2A?displayProperty=fullName> property to obtain a <xref:System.Drawing.Imaging.ColorPalette> object."}]}]},{"pos":[402,1069],"content":"The colors in the palette are limited to 32-bit ARGB colors. A 32-bit ARGB color has 8 bits each for alpha, red, green, and blue values. The lowest 8 bits make up the blue bit, the next 8 bits are green, the next 8 bits are red, and the most significant 8 bits are alpha. This means each component can vary from 0 to 255. Fully on is 255 and fully off is 0. Alpha is used to make the color value transparent (alpha = 0) or opaque (alpha = 255). The number of intensity levels in the image can be increased without increasing the number of colors used. This process creates what is called a halftone, and it offers increased contrast at a cost of decreased resolution.","nodes":[{"content":"The colors in the palette are limited to 32-bit ARGB colors. A 32-bit ARGB color has 8 bits each for alpha, red, green, and blue values. The lowest 8 bits make up the blue bit, the next 8 bits are green, the next 8 bits are red, and the most significant 8 bits are alpha. This means each component can vary from 0 to 255. Fully on is 255 and fully off is 0. Alpha is used to make the color value transparent (alpha = 0) or opaque (alpha = 255). The number of intensity levels in the image can be increased without increasing the number of colors used. This process creates what is called a halftone, and it offers increased contrast at a cost of decreased resolution.","pos":[0,667],"nodes":[{"content":"The colors in the palette are limited to 32-bit ARGB colors.","pos":[0,60]},{"content":"A 32-bit ARGB color has 8 bits each for alpha, red, green, and blue values.","pos":[61,136]},{"content":"The lowest 8 bits make up the blue bit, the next 8 bits are green, the next 8 bits are red, and the most significant 8 bits are alpha.","pos":[137,271]},{"content":"This means each component can vary from 0 to 255.","pos":[272,321]},{"content":"Fully on is 255 and fully off is 0.","pos":[322,357]},{"content":"Alpha is used to make the color value transparent (alpha = 0) or opaque (alpha = 255).","pos":[358,444]},{"content":"The number of intensity levels in the image can be increased without increasing the number of colors used.","pos":[445,551]},{"content":"This process creates what is called a halftone, and it offers increased contrast at a cost of decreased resolution.","pos":[552,667]}]}]}],"pos":[587,1661],"yaml":true,"extradata":"MT"},{"content":"Gets an array of <xref href=\"System.Drawing.Color\"></xref> structures.","nodes":[{"pos":[0,70],"content":"Gets an array of <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structures.","source":"Gets an array of <xref href=\"System.Drawing.Color\"></xref> structures."}],"pos":[2969,3040],"yaml":true},{"content":"The array of <xref href=\"System.Drawing.Color\"></xref> structure that make up this <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref>.","nodes":[{"pos":[0,140],"content":"The array of <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> structure that make up this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Imaging.ColorPalette\"&gt;&lt;/xref&gt;</ph>.","source":"The array of <xref href=\"System.Drawing.Color\"></xref> structure that make up this <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref>."}],"pos":[3176,3317],"yaml":true},{"content":"Gets a value that specifies how to interpret the color information in the array of colors.","nodes":[{"pos":[0,90],"content":"Gets a value that specifies how to interpret the color information in the array of colors.","nodes":[{"content":"Gets a value that specifies how to interpret the color information in the array of colors.","pos":[0,90]}]}],"pos":[4287,4378],"yaml":true},{"content":"The following flag values are valid:  \n  \n 0x00000001  \n The color values in the array contain alpha information.  \n  \n 0x00000002  \n The colors in the array are grayscale values.  \n  \n 0x00000004  \n The colors in the array are halftone values.","nodes":[{"pos":[0,36],"content":"The following flag values are valid:","nodes":[{"content":"The following flag values are valid:","pos":[0,36]}]},{"pos":[43,113],"content":"0x00000001  \n The color values in the array contain alpha information.","nodes":[{"content":"0x00000001","pos":[0,10]},{"content":"The color values in the array contain alpha information.","pos":[14,70]}]},{"pos":[120,179],"content":"0x00000002  \n The colors in the array are grayscale values.","nodes":[{"content":"0x00000002","pos":[0,10]},{"content":"The colors in the array are grayscale values.","pos":[14,59]}]},{"pos":[186,244],"content":"0x00000004  \n The colors in the array are halftone values.","nodes":[{"content":"0x00000004","pos":[0,10]},{"content":"The colors in the array are halftone values.","pos":[14,58]}]}],"pos":[4483,4739],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Imaging.ColorPalette\n  commentId: T:System.Drawing.Imaging.ColorPalette\n  id: ColorPalette\n  children:\n  - System.Drawing.Imaging.ColorPalette.Entries\n  - System.Drawing.Imaging.ColorPalette.Flags\n  langs:\n  - csharp\n  name: ColorPalette\n  nameWithType: ColorPalette\n  fullName: System.Drawing.Imaging.ColorPalette\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.\n  remarks: \"You are not allowed to construct a <xref:System.Drawing.Imaging.ColorPalette> object directly. If you created a <xref:System.Drawing.Imaging.ColorPalette> object, you could then manipulate the palette size for a particular image, which is not allowed. Use the <xref:System.Drawing.Image.Palette%2A?displayProperty=fullName> property to obtain a <xref:System.Drawing.Imaging.ColorPalette> object.  \\n  \\n The colors in the palette are limited to 32-bit ARGB colors. A 32-bit ARGB color has 8 bits each for alpha, red, green, and blue values. The lowest 8 bits make up the blue bit, the next 8 bits are green, the next 8 bits are red, and the most significant 8 bits are alpha. This means each component can vary from 0 to 255. Fully on is 255 and fully off is 0. Alpha is used to make the color value transparent (alpha = 0) or opaque (alpha = 255). The number of intensity levels in the image can be increased without increasing the number of colors used. This process creates what is called a halftone, and it offers increased contrast at a cost of decreased resolution.\"\n  syntax:\n    content: public sealed class ColorPalette\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Imaging/ColorPalette.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Imaging.ColorPalette.Entries\n  commentId: P:System.Drawing.Imaging.ColorPalette.Entries\n  id: Entries\n  parent: System.Drawing.Imaging.ColorPalette\n  langs:\n  - csharp\n  name: Entries\n  nameWithType: ColorPalette.Entries\n  fullName: ColorPalette.Entries\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets an array of <xref href=\"System.Drawing.Color\"></xref> structures.\n  syntax:\n    content: public System.Drawing.Color[] Entries { get; }\n    return:\n      type: System.Drawing.Color[]\n      description: The array of <xref href=\"System.Drawing.Color\"></xref> structure that make up this <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref>.\n  overload: System.Drawing.Imaging.ColorPalette.Entries*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Imaging/ColorPalette.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Imaging.ColorPalette.Flags\n  commentId: P:System.Drawing.Imaging.ColorPalette.Flags\n  id: Flags\n  parent: System.Drawing.Imaging.ColorPalette\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: ColorPalette.Flags\n  fullName: ColorPalette.Flags\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets a value that specifies how to interpret the color information in the array of colors.\n  syntax:\n    content: public int Flags { get; }\n    return:\n      type: System.Int32\n      description: \"The following flag values are valid:  \\n  \\n 0x00000001  \\n The color values in the array contain alpha information.  \\n  \\n 0x00000002  \\n The colors in the array are grayscale values.  \\n  \\n 0x00000004  \\n The colors in the array are halftone values.\"\n  overload: System.Drawing.Imaging.ColorPalette.Flags*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Imaging/ColorPalette.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Imaging.ColorPalette.Entries\n  parent: System.Drawing.Imaging.ColorPalette\n  isExternal: false\n  name: Entries\n  nameWithType: ColorPalette.Entries\n  fullName: ColorPalette.Entries\n- uid: System.Drawing.Color\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Drawing.Color[]\n  parent: System.Drawing\n  isExternal: false\n  name: Color[]\n  nameWithType: Color[]\n  fullName: System.Drawing.Color[]\n  spec.csharp:\n  - uid: System.Drawing.Color\n    name: Color\n    nameWithType: Color\n    fullName: System.Drawing.Color\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Imaging.ColorPalette.Flags\n  parent: System.Drawing.Imaging.ColorPalette\n  isExternal: false\n  name: Flags\n  nameWithType: ColorPalette.Flags\n  fullName: ColorPalette.Flags\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.Imaging.ColorPalette.Entries*\n  parent: System.Drawing.Imaging.ColorPalette\n  isExternal: false\n  name: Entries\n  nameWithType: ColorPalette.Entries\n  fullName: ColorPalette.Entries\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Imaging/ColorPalette.xml\n- uid: System.Drawing.Imaging.ColorPalette.Flags*\n  parent: System.Drawing.Imaging.ColorPalette\n  isExternal: false\n  name: Flags\n  nameWithType: ColorPalette.Flags\n  fullName: ColorPalette.Flags\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Imaging/ColorPalette.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}