{"nodes":[{"content":"Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.","nodes":[{"pos":[0,146],"content":"Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.","nodes":[{"content":"Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.","pos":[0,146]}]}],"pos":[1406,1553],"yaml":true},{"content":"The channels created by channel factories on the client are accepted on the server by channel listeners. Once the channel connection is established between client and service, they can communicate by exchanging messages.  \n  \n The <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> uses the specified address as the destination for outgoing messages. The ServiceAddress.Uri property is used as the To header in the message. The ServiceReference.Via property is used as the physical destination to send messages to. This is typically the same as the ServiceAddress.Uri value.","nodes":[{"pos":[0,220],"content":"The channels created by channel factories on the client are accepted on the server by channel listeners. Once the channel connection is established between client and service, they can communicate by exchanging messages.","nodes":[{"content":"The channels created by channel factories on the client are accepted on the server by channel listeners. Once the channel connection is established between client and service, they can communicate by exchanging messages.","pos":[0,220],"nodes":[{"content":"The channels created by channel factories on the client are accepted on the server by channel listeners.","pos":[0,104]},{"content":"Once the channel connection is established between client and service, they can communicate by exchanging messages.","pos":[105,220]}]}]},{"pos":[227,599],"content":"The <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> uses the specified address as the destination for outgoing messages. The ServiceAddress.Uri property is used as the To header in the message. The ServiceReference.Via property is used as the physical destination to send messages to. This is typically the same as the ServiceAddress.Uri value.","nodes":[{"content":"The <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> uses the specified address as the destination for outgoing messages. The ServiceAddress.Uri property is used as the To header in the message. The ServiceReference.Via property is used as the physical destination to send messages to. This is typically the same as the ServiceAddress.Uri value.","pos":[0,372],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A&gt;</ph> uses the specified address as the destination for outgoing messages.","pos":[0,148],"source":"The <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> uses the specified address as the destination for outgoing messages."},{"content":"The ServiceAddress.Uri property is used as the To header in the message.","pos":[149,221]},{"content":"The ServiceReference.Via property is used as the physical destination to send messages to.","pos":[222,312]},{"content":"This is typically the same as the ServiceAddress.Uri value.","pos":[313,372]}]}]}],"pos":[1564,2168],"yaml":true,"extradata":"MT"},{"content":"The type of channel the factory produces.","nodes":[{"pos":[0,41],"content":"The type of channel the factory produces.","nodes":[{"content":"The type of channel the factory produces.","pos":[0,41]}]}],"pos":[2408,2450],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"></xref> class."}],"pos":[7384,7496],"yaml":true},{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","nodes":[{"pos":[0,419],"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","pos":[0,419],"nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages.","pos":[0,118]},{"content":"The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.","pos":[119,227]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify other values for these operation timeouts.","pos":[228,419],"source":" Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts."}]}]}],"pos":[7507,7927],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"></xref> class with the default communication timeouts specified.","nodes":[{"pos":[0,161],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"&gt;&lt;/xref&gt;</ph> class with the default communication timeouts specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"></xref> class with the default communication timeouts specified."}],"pos":[9523,9685],"yaml":true},{"content":"Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","nodes":[{"pos":[0,306],"content":"Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","pos":[0,306],"source":"Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values."}]}],"pos":[9696,10003],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"&gt;&lt;/xref&gt;</ph> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.","source":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages."}],"pos":[10233,10416],"yaml":true},{"content":"Creates a particular type of channel with a specified endpoint address.","nodes":[{"pos":[0,71],"content":"Creates a particular type of channel with a specified endpoint address.","nodes":[{"content":"Creates a particular type of channel with a specified endpoint address.","pos":[0,71]}]}],"pos":[11825,11897],"yaml":true},{"content":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked. This method cannot be overridden by a derived class.  \n  \n This uses <xref:System.ServiceModel.EndpointAddress.Uri%2A> as the transport address to which messages are sent on the output channel.","nodes":[{"pos":[0,213],"content":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked. This method cannot be overridden by a derived class.","nodes":[{"content":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked. This method cannot be overridden by a derived class.","pos":[0,213],"nodes":[{"content":"This method calls <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> when invoked.","pos":[0,160],"source":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked."},{"content":"This method cannot be overridden by a derived class.","pos":[161,213]}]}]},{"pos":[220,354],"content":"This uses <xref:System.ServiceModel.EndpointAddress.Uri%2A> as the transport address to which messages are sent on the output channel.","nodes":[{"content":"This uses <ph id=\"ph1\">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> as the transport address to which messages are sent on the output channel.","pos":[0,134],"source":"This uses <xref:System.ServiceModel.EndpointAddress.Uri%2A> as the transport address to which messages are sent on the output channel."}]}],"pos":[11908,12267],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> of the remote endpoint to which the channel sends messages.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages."}],"pos":[12468,12589],"yaml":true},{"content":"A channel of type <code>TChannel</code> with the specified <code>address</code>.","nodes":[{"pos":[0,80],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">address</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A channel of type <code>TChannel</code> with the specified <code>address</code>."}],"pos":[12641,12722],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[12915,12947],"yaml":true},{"content":"Creates a particular type of channel with specified transport and endpoint addresses.","nodes":[{"pos":[0,85],"content":"Creates a particular type of channel with specified transport and endpoint addresses.","nodes":[{"content":"Creates a particular type of channel with specified transport and endpoint addresses.","pos":[0,85]}]}],"pos":[14318,14404],"yaml":true},{"content":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked.","nodes":[{"pos":[0,160],"content":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked.","nodes":[{"content":"This method calls <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> when invoked.","pos":[0,160],"source":"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked."}]}],"pos":[14415,14576],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> of the remote endpoint to which the channel sends messages.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages."}],"pos":[14786,14907],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the output channel.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which messages are sent on the output channel.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the output channel."}],"pos":[14963,15085],"yaml":true},{"content":"A channel of type <code>TChannel</code> with the specified remote and transport addresses.","nodes":[{"pos":[0,90],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the specified remote and transport addresses.","source":"A channel of type <code>TChannel</code> with the specified remote and transport addresses."}],"pos":[15137,15228],"yaml":true},{"content":"Aborts each channel managed by the channel factory.","nodes":[{"pos":[0,51],"content":"Aborts each channel managed by the channel factory.","nodes":[{"content":"Aborts each channel managed by the channel factory.","pos":[0,51]}]}],"pos":[16453,16505],"yaml":true},{"content":"This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A>.","nodes":[{"pos":[0,90],"content":"This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A>.","nodes":[{"content":"This method is called by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph>.","pos":[0,90],"source":"This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A>."}]}],"pos":[16516,16607],"yaml":true,"extradata":"MT"},{"content":"Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.","nodes":[{"pos":[0,131],"content":"Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.","nodes":[{"content":"Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.","pos":[0,131]}]}],"pos":[18183,18315],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on-close operation has to complete before timing out.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the on-close operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on-close operation has to complete before timing out."}],"pos":[18522,18645],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the on-close operation.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the on-close operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the on-close operation."}],"pos":[18716,18860],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous on-close operation.","nodes":[{"pos":[0,125],"content":"An object, specified by the application, that contains state information associated with the asynchronous on-close operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous on-close operation.","pos":[0,125]}]}],"pos":[18921,19047],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous on-close operation.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous on-close operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous on-close operation."}],"pos":[19110,19208],"yaml":true},{"content":"Closes all the channels associated with the channel factory within a specified interval of time.","nodes":[{"pos":[0,96],"content":"Closes all the channels associated with the channel factory within a specified interval of time.","nodes":[{"content":"Closes all the channels associated with the channel factory within a specified interval of time.","pos":[0,96]}]}],"pos":[20507,20604],"yaml":true},{"content":"This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order. The timeout parameter is the cumulative amount of time available for closing all of the channels. If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels. Failure in this method causes the factory and any remaining channels to be aborted rather than closed.  \n  \n This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A>.","nodes":[{"pos":[0,534],"content":"This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order. The timeout parameter is the cumulative amount of time available for closing all of the channels. If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels. Failure in this method causes the factory and any remaining channels to be aborted rather than closed.","nodes":[{"content":"This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order. The timeout parameter is the cumulative amount of time available for closing all of the channels. If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels. Failure in this method causes the factory and any remaining channels to be aborted rather than closed.","pos":[0,534],"nodes":[{"content":"This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order.","pos":[0,129]},{"content":"The timeout parameter is the cumulative amount of time available for closing all of the channels.","pos":[130,227]},{"content":"If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels.","pos":[228,431]},{"content":"Failure in this method causes the factory and any remaining channels to be aborted rather than closed.","pos":[432,534]}]}]},{"pos":[541,631],"content":"This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A>.","nodes":[{"content":"This method is called by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.","pos":[0,90],"source":"This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A>."}]}],"pos":[20615,21251],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on-close operation has to complete before timing out.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the on-close operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on-close operation has to complete before timing out."}],"pos":[21407,21530],"yaml":true},{"content":"When implemented in a derived class, provides an extensibility point when creating channels.","nodes":[{"pos":[0,92],"content":"When implemented in a derived class, provides an extensibility point when creating channels.","nodes":[{"content":"When implemented in a derived class, provides an extensibility point when creating channels.","pos":[0,92]}]}],"pos":[23001,23094],"yaml":true},{"content":"This method is called by <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> when invoked.","nodes":[{"pos":[0,114],"content":"This method is called by <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> when invoked.","nodes":[{"content":"This method is called by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A&gt;</ph> when invoked.","pos":[0,114],"source":"This method is called by <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> when invoked."}]}],"pos":[23105,23220],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> of the remote endpoint to which the channel sends messages.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages."}],"pos":[23444,23565],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the output channel.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which messages are sent on the output channel.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the output channel."}],"pos":[23621,23743],"yaml":true},{"content":"A channel of type <code>TChannel</code> with the specified addresses.","nodes":[{"pos":[0,69],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the specified addresses.","source":"A channel of type <code>TChannel</code> with the specified addresses."}],"pos":[23795,23865],"yaml":true},{"content":"Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.","nodes":[{"pos":[0,134],"content":"Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.","nodes":[{"content":"Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.","pos":[0,134]}]}],"pos":[25209,25344],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,214],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[25509,25724],"yaml":true},{"content":"Confirms that the channel factory is opened and ready to create channels.","nodes":[{"pos":[0,73],"content":"Confirms that the channel factory is opened and ready to create channels.","nodes":[{"content":"Confirms that the channel factory is opened and ready to create channels.","pos":[0,73]}]}],"pos":[27030,27104],"yaml":true},{"content":"The method throws one of the exceptions listed and checks for the conditions in the order they are listed in the table.","nodes":[{"pos":[0,119],"content":"The method throws one of the exceptions listed and checks for the conditions in the order they are listed in the table.","nodes":[{"content":"The method throws one of the exceptions listed and checks for the conditions in the order they are listed in the table.","pos":[0,119]}]}],"pos":[27115,27235],"yaml":true,"extradata":"MT"},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[27523,27701],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[27857,27965],"yaml":true},{"content":"The current channel factory is not in the <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,115],"content":"The current channel factory is not in the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The current channel factory is not in the <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[28075,28191],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1\n  commentId: T:System.ServiceModel.Channels.ChannelFactoryBase`1\n  id: ChannelFactoryBase`1\n  children:\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel\n  langs:\n  - csharp\n  name: ChannelFactoryBase<TChannel>\n  nameWithType: ChannelFactoryBase<TChannel>\n  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.\n  remarks: \"The channels created by channel factories on the client are accepted on the server by channel listeners. Once the channel connection is established between client and service, they can communicate by exchanging messages.  \\n  \\n The <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> uses the specified address as the destination for outgoing messages. The ServiceAddress.Uri property is used as the To header in the message. The ServiceReference.Via property is used as the physical destination to send messages to. This is typically the same as the ServiceAddress.Uri value.\"\n  syntax:\n    content: 'public abstract class ChannelFactoryBase<TChannel> : System.ServiceModel.Channels.ChannelFactoryBase, System.ServiceModel.Channels.IChannelFactory<TChannel>'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the factory produces.\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Channels.ChannelManagerBase\n  - System.ServiceModel.Channels.ChannelFactoryBase\n  implements:\n  - System.ServiceModel.Channels.IChannelFactory{TChannel}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout\n  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout\n  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: ChannelFactoryBase<TChannel>()\n  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()\n  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"></xref> class.\n  remarks: The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.\n  syntax:\n    content: protected ChannelFactoryBase ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)\n  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\"></xref> class with the default communication timeouts specified.\n  remarks: Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.\n  syntax:\n    content: protected ChannelFactoryBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a particular type of channel with a specified endpoint address.\n  remarks: \"This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked. This method cannot be overridden by a derived class.  \\n  \\n This uses <xref:System.ServiceModel.EndpointAddress.Uri%2A> as the transport address to which messages are sent on the output channel.\"\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> with the specified <code>address</code>.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a particular type of channel with specified transport and endpoint addresses.\n  remarks: This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked.\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the output channel.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> with the specified remote and transport addresses.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort\n  id: OnAbort\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: OnAbort()\n  nameWithType: ChannelFactoryBase<TChannel>.OnAbort()\n  fullName: ChannelFactoryBase<TChannel>.OnAbort()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Aborts each channel managed by the channel factory.\n  remarks: This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A>.\n  syntax:\n    content: protected override void OnAbort ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.\n  syntax:\n    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on-close operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the on-close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous on-close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous on-close operation.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)\n  id: OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)\n  fullName: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Closes all the channels associated with the channel factory within a specified interval of time.\n  remarks: \"This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order. The timeout parameter is the cumulative amount of time available for closing all of the channels. If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels. Failure in this method causes the factory and any remaining channels to be aborted rather than closed.  \\n  \\n This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A>.\"\n  syntax:\n    content: protected override void OnClose (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on-close operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  id: OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: OnCreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides an extensibility point when creating channels.\n  remarks: This method is called by <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> when invoked.\n  syntax:\n    content: protected abstract TChannel OnCreateChannel (System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> of the remote endpoint to which the channel sends messages.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the output channel.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> with the specified addresses.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)\n  id: OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)\n  fullName: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.\n  syntax:\n    content: protected override void OnEndClose (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel\n  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel\n  id: ValidateCreateChannel\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  langs:\n  - csharp\n  name: ValidateCreateChannel()\n  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel()\n  fullName: ChannelFactoryBase<TChannel>.ValidateCreateChannel()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Confirms that the channel factory is opened and ready to create channels.\n  remarks: The method throws one of the exceptions listed and checks for the conditions in the order they are listed in the table.\n  syntax:\n    content: protected void ValidateCreateChannel ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The current channel factory is not in the <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.ChannelFactoryBase\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ChannelFactoryBase\n  nameWithType: ChannelFactoryBase\n  fullName: System.ServiceModel.Channels.ChannelFactoryBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ServiceModel.CommunicationObjectFaultedException\n  parent: System.ServiceModel\n  isExternal: false\n  name: CommunicationObjectFaultedException\n  nameWithType: CommunicationObjectFaultedException\n  fullName: System.ServiceModel.CommunicationObjectFaultedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: ChannelFactoryBase<TChannel>()\n  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()\n  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)\n  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ChannelFactoryBase<TChannel>.OnAbort()\n  fullName: ChannelFactoryBase<TChannel>.OnAbort()\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)\n  fullName: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnCreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)\n  fullName: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: ValidateCreateChannel()\n  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel()\n  fullName: ChannelFactoryBase<TChannel>.ValidateCreateChannel()\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: ChannelFactoryBase<TChannel>\n  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>\n  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: CreateChannel\n  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel\n  fullName: ChannelFactoryBase<TChannel>.CreateChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnAbort\n  nameWithType: ChannelFactoryBase<TChannel>.OnAbort\n  fullName: ChannelFactoryBase<TChannel>.OnAbort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnBeginClose\n  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose\n  fullName: ChannelFactoryBase<TChannel>.OnBeginClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnClose\n  nameWithType: ChannelFactoryBase<TChannel>.OnClose\n  fullName: ChannelFactoryBase<TChannel>.OnClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnCreateChannel\n  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel\n  fullName: ChannelFactoryBase<TChannel>.OnCreateChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: OnEndClose\n  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose\n  fullName: ChannelFactoryBase<TChannel>.OnEndClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel*\n  parent: System.ServiceModel.Channels.ChannelFactoryBase`1\n  isExternal: false\n  name: ValidateCreateChannel\n  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel\n  fullName: ChannelFactoryBase<TChannel>.ValidateCreateChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelFactoryBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelFactoryBase.DefaultCloseTimeout\n  fullName: ChannelFactoryBase.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelFactoryBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelFactoryBase.DefaultOpenTimeout\n  fullName: ChannelFactoryBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelFactoryBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelFactoryBase.DefaultReceiveTimeout\n  fullName: ChannelFactoryBase.DefaultReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelFactoryBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelFactoryBase.DefaultSendTimeout\n  fullName: ChannelFactoryBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n- uid: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelFactoryBase\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelFactoryBase.GetProperty<T>()\n  fullName: ChannelFactoryBase.GetProperty<T>()\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n"}