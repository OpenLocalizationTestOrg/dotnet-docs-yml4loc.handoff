<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d980a11991629c9676deab6e13dbc670596c6cf0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.SqlClient.SqlTransaction.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">649f4c30b5cb9dfbb11147fcb6db1d551477132a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aac2a04a36894e03b9a2b4de8ec3ad7363cc31b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Transact-SQL transaction to be made in a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object by calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when committing or rolling back a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generate an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> transactions, see <bpt id="p1">[</bpt>Explicit Transactions<ept id="p1">](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)</ept> and <bpt id="p2">[</bpt>Coding Efficient Transactions<ept id="p2">](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Commits the database transaction.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when committing or rolling back a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both <ph id="ph1">`Commit`</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generates an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An error occurred while trying to commit the transaction.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The transaction has already been committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The connection is broken.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> object associated with the transaction, or <ph id="ph2">`null`</ph> if the transaction is no longer valid.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single application may have multiple database connections, each with zero or more transactions.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property lets you determine the connection object associated with a particular transaction created by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;&lt;/xref&gt;</ph> object associated with the transaction.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specifies the <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> for this transaction.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> applies to the whole transaction.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> for this transaction.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`ReadCommitted`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Rolls back a transaction from a pending state.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> is called).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction is rolled back in the event it is disposed before <ph id="ph1">`Commit`</ph> or <ph id="ph2">`Rollback`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when rolling back a transaction.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`Rollback`</ph> generates an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An error occurred while trying to commit the transaction.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The transaction has already been committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The connection is broken.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> is called).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction is rolled back if it is disposed before <ph id="ph1">`Commit`</ph> or <ph id="ph2">`Rollback`</ph> is called.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when rolling back a transaction.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`Rollback`</ph> generates an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The name of the transaction to roll back, or the savepoint to which to roll back.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>No transaction name was specified.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The transaction has already been committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The connection is broken.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value used in the <ph id="ph1">`savePoint`</ph> parameter can be the same value used in the <ph id="ph2">`transactionName`</ph> parameter of some implementations of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Savepoints offer a mechanism to roll back parts of transactions.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You create a savepoint using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method, and then later call the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method to roll back to the savepoint instead of rolling back to the start of the transaction.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The name of the savepoint.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An error occurred while trying to commit the transaction.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The transaction has already been committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The connection is broken.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>