{"nodes":[{"content":"Represents an expression activity that returns a literal value of the specified type.","nodes":[{"pos":[0,85],"content":"Represents an expression activity that returns a literal value of the specified type.","nodes":[{"content":"Represents an expression activity that returns a literal value of the specified type.","pos":[0,85]}]}],"pos":[1067,1153],"yaml":true},{"content":"The type of the value.","nodes":[{"pos":[0,22],"content":"The type of the value.","nodes":[{"content":"The type of the value.","pos":[0,22]}]}],"pos":[1423,1446],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.Literal`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> class."}],"pos":[4152,4254],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> class using the specified value.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.Literal`1\"&gt;&lt;/xref&gt;</ph> class using the specified value.","source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> class using the specified value."}],"pos":[5346,5474],"yaml":true},{"content":"The literal value of the expression.","nodes":[{"pos":[0,36],"content":"The literal value of the expression.","nodes":[{"content":"The literal value of the expression.","pos":[0,36]}]}],"pos":[5588,5625],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> can be converted into a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,160],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.Literal`1\"&gt;&lt;/xref&gt;</ph> can be converted into a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> can be converted into a <xref href=\"System.String\"></xref>."}],"pos":[8254,8415],"yaml":true},{"content":"The context information that is used for conversion.","nodes":[{"pos":[0,52],"content":"The context information that is used for conversion.","nodes":[{"content":"The context information that is used for conversion.","pos":[0,52]}]}],"pos":[8637,8690],"yaml":true},{"content":"`true` if the value can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`true`</ph> if the value can be converted into a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the value can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false`."}],"pos":[8748,8850],"yaml":true},{"content":"Converts the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,114],"content":"Converts the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.Literal`1\"&gt;&lt;/xref&gt;</ph> to a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Converts the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> to a <xref href=\"System.String\"></xref>."}],"pos":[10127,10242],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[10463,10512],"yaml":true},{"content":"The literal expression.","nodes":[{"pos":[0,23],"content":"The literal expression.","nodes":[{"content":"The literal expression.","pos":[0,23]}]}],"pos":[10569,10593],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.Activities.Expressions.Literal`1.Value\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,179],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.Literal`1.Value\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.Activities.Expressions.Literal`1.Value\"></xref> property has changed from its default value and should be serialized."}],"pos":[13021,13201],"yaml":true},{"content":"`true` if the <xref href=\"System.Activities.Expressions.Literal`1.Value\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Expressions.Literal`1.Value\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Activities.Expressions.Literal`1.Value\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[13338,13478],"yaml":true},{"content":"Returns a <xref href=\"System.String\"></xref> that represents the literal’s value.","nodes":[{"pos":[0,81],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the literal’s value.","source":"Returns a <xref href=\"System.String\"></xref> that represents the literal’s value."}],"pos":[14522,14604],"yaml":true},{"content":"The string representation of the literal’s value.","nodes":[{"pos":[0,49],"content":"The string representation of the literal’s value.","nodes":[{"content":"The string representation of the literal’s value.","pos":[0,49]}]}],"pos":[14739,14789],"yaml":true},{"content":"Gets or sets the value of the literal expression.","nodes":[{"pos":[0,49],"content":"Gets or sets the value of the literal expression.","nodes":[{"content":"Gets or sets the value of the literal expression.","pos":[0,49]}]}],"pos":[15782,15832],"yaml":true},{"content":"The value of the literal expression.","nodes":[{"pos":[0,36],"content":"The value of the literal expression.","nodes":[{"content":"The value of the literal expression.","pos":[0,36]}]}],"pos":[15929,15966],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.Literal`1\n  commentId: T:System.Activities.Expressions.Literal`1\n  id: Literal`1\n  children:\n  - System.Activities.Expressions.Literal`1.#ctor\n  - System.Activities.Expressions.Literal`1.#ctor(`0)\n  - System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  - System.Activities.Expressions.Literal`1.ToString\n  - System.Activities.Expressions.Literal`1.Value\n  langs:\n  - csharp\n  name: Literal<T>\n  nameWithType: Literal<T>\n  fullName: System.Activities.Expressions.Literal<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Represents an expression activity that returns a literal value of the specified type.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Value\")]\n\n      public sealed class Literal<T> : System.Activities.CodeActivity<T>, System.Activities.XamlIntegration.IValueSerializableExpression\n    typeParameters:\n    - id: T\n      description: The type of the value.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.XamlIntegration.IValueSerializableExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.#ctor\n  commentId: M:System.Activities.Expressions.Literal`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Literal<T>()\n  nameWithType: Literal<T>.Literal<T>()\n  fullName: Literal<T>.Literal<T>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> class.\n  syntax:\n    content: public Literal ();\n    parameters: []\n  overload: System.Activities.Expressions.Literal`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.#ctor(`0)\n  commentId: M:System.Activities.Expressions.Literal`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Literal<T>(T)\n  nameWithType: Literal<T>.Literal<T>(T)\n  fullName: Literal<T>.Literal<T>(T)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> class using the specified value.\n  syntax:\n    content: public Literal (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The literal value of the expression.\n  overload: System.Activities.Expressions.Literal`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  commentId: M:System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: ''\n  overload: System.Activities.Expressions.Literal`1.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.CanConvertToString(IValueSerializerContext)\n  fullName: Literal<T>.CanConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets a value that indicates whether the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> can be converted into a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: The context information that is used for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if the value can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false`.'\n  overload: System.Activities.Expressions.Literal`1.CanConvertToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.ConvertToString(IValueSerializerContext)\n  fullName: Literal<T>.ConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Converts the <xref href=\"System.Activities.Expressions.Literal`1\"></xref> to a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.String\n      description: The literal expression.\n  overload: System.Activities.Expressions.Literal`1.ConvertToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  commentId: M:System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: Literal<T>.Execute(CodeActivityContext)\n  fullName: Literal<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override T Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: ''\n    return:\n      type: T\n      description: ''\n  overload: System.Activities.Expressions.Literal`1.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  commentId: M:System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  id: ShouldSerializeValue\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ShouldSerializeValue()\n  nameWithType: Literal<T>.ShouldSerializeValue()\n  fullName: Literal<T>.ShouldSerializeValue()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Returns a value that indicates whether the <xref href=\"System.Activities.Expressions.Literal`1.Value\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeValue ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Activities.Expressions.Literal`1.Value\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.Activities.Expressions.Literal`1.ShouldSerializeValue*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.ToString\n  commentId: M:System.Activities.Expressions.Literal`1.ToString\n  id: ToString\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Literal<T>.ToString()\n  fullName: Literal<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Returns a <xref href=\"System.String\"></xref> that represents the literal’s value.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the literal’s value.\n  overload: System.Activities.Expressions.Literal`1.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.Literal`1.Value\n  commentId: P:System.Activities.Expressions.Literal`1.Value\n  id: Value\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: Literal<T>.Value\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets the value of the literal expression.\n  syntax:\n    content: public T Value { get; set; }\n    return:\n      type: T\n      description: The value of the literal expression.\n  overload: System.Activities.Expressions.Literal`1.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.CodeActivity`1\n  name: CodeActivity<TResult>\n  nameWithType: CodeActivity<TResult>\n  fullName: System.Activities.CodeActivity<TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.CodeActivity{T}\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivity<T>\n  nameWithType: CodeActivity<T>\n  fullName: System.Activities.CodeActivity<T>\n  spec.csharp:\n  - uid: System.Activities.CodeActivity`1\n    name: CodeActivity\n    nameWithType: CodeActivity\n    fullName: System.Activities.CodeActivity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.Literal`1.#ctor\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal<T>()\n  nameWithType: Literal<T>.Literal<T>()\n  fullName: Literal<T>.Literal<T>()\n- uid: System.Activities.Expressions.Literal`1.#ctor(`0)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal<T>(T)\n  nameWithType: Literal<T>.Literal<T>(T)\n  fullName: Literal<T>.Literal<T>(T)\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: Literal<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.CanConvertToString(IValueSerializerContext)\n  fullName: Literal<T>.CanConvertToString(IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.ConvertToString(IValueSerializerContext)\n  fullName: Literal<T>.ConvertToString(IValueSerializerContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: Literal<T>.Execute(CodeActivityContext)\n  fullName: Literal<T>.Execute(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ShouldSerializeValue()\n  nameWithType: Literal<T>.ShouldSerializeValue()\n  fullName: Literal<T>.ShouldSerializeValue()\n- uid: System.Activities.Expressions.Literal`1.ToString\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ToString()\n  nameWithType: Literal<T>.ToString()\n  fullName: Literal<T>.ToString()\n- uid: System.Activities.Expressions.Literal`1.Value\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: Literal<T>.Value\n- uid: System.Activities.Expressions.Literal`1.#ctor*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal<T>\n  nameWithType: Literal<T>.Literal<T>\n  fullName: Literal<T>.Literal<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Literal<T>.CacheMetadata\n  fullName: Literal<T>.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CanConvertToString\n  nameWithType: Literal<T>.CanConvertToString\n  fullName: Literal<T>.CanConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.ConvertToString*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ConvertToString\n  nameWithType: Literal<T>.ConvertToString\n  fullName: Literal<T>.ConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.Execute*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Execute\n  nameWithType: Literal<T>.Execute\n  fullName: Literal<T>.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ShouldSerializeValue\n  nameWithType: Literal<T>.ShouldSerializeValue\n  fullName: Literal<T>.ShouldSerializeValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.ToString*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ToString\n  nameWithType: Literal<T>.ToString\n  fullName: Literal<T>.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Activities.Expressions.Literal`1.Value*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: Literal<T>.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/Literal`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n  fullName: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.CodeActivity`1.Implementation\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: Implementation\n  nameWithType: CodeActivity<TResult>.Implementation\n  fullName: CodeActivity<TResult>.Implementation\n- uid: System.Activities.CodeActivity`1.ImplementationVersion\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: CodeActivity<TResult>.ImplementationVersion\n  fullName: CodeActivity<TResult>.ImplementationVersion\n- uid: System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n- uid: System.Activities.XamlIntegration.IValueSerializableExpression\n  parent: System.Activities.XamlIntegration\n  isExternal: false\n  name: IValueSerializableExpression\n  nameWithType: IValueSerializableExpression\n  fullName: System.Activities.XamlIntegration.IValueSerializableExpression\n"}