{"nodes":[{"content":"A token handler for encrypted security tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"pos":[0,142],"content":"A token handler for encrypted security tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"content":"A token handler for encrypted security tokens.","pos":[0,46]},{"content":"Handles tokens of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[47,142],"source":" Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}]}],"pos":[1430,1573],"yaml":true},{"content":"A token handler that serializes and deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> objects from `<xenc:EncryptedData>` elements and <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> objects from `<xenc:EncryptedKey>` elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).","nodes":[{"pos":[0,386],"content":"A token handler that serializes and deserializes <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken&gt;</ph> objects from <ph id=\"ph2\">`&lt;xenc:EncryptedData&gt;`</ph> elements and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> objects from <ph id=\"ph4\">`&lt;xenc:EncryptedKey&gt;`</ph> elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).","source":"A token handler that serializes and deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> objects from `<xenc:EncryptedData>` elements and <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> objects from `<xenc:EncryptedKey>` elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210)."}],"pos":[1584,1971],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"></xref> class.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"></xref> class."}],"pos":[5337,5457],"yaml":true},{"content":"Returns a value that indicates whether the current XML element is pointing to an `<xenc:EncryptedKey>` element that can be deserialized to a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> by this instance.","nodes":[{"pos":[0,235],"content":"Returns a value that indicates whether the current XML element is pointing to an <ph id=\"ph1\">`&lt;xenc:EncryptedKey&gt;`</ph> element that can be deserialized to a <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> by this instance.","source":"Returns a value that indicates whether the current XML element is pointing to an `<xenc:EncryptedKey>` element that can be deserialized to a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> by this instance."}],"pos":[6868,7104],"yaml":true},{"content":"An XML reader positioned at the start element. The reader should not be advanced.","nodes":[{"pos":[0,81],"content":"An XML reader positioned at the start element. The reader should not be advanced.","nodes":[{"content":"An XML reader positioned at the start element. The reader should not be advanced.","pos":[0,81],"nodes":[{"content":"An XML reader positioned at the start element.","pos":[0,46]},{"content":"The reader should not be advanced.","pos":[47,81]}]}]}],"pos":[7291,7373],"yaml":true},{"content":"`true` if the XML reader is positioned at an `<xenc:EncryptedKey>` element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, `false`.","nodes":[{"pos":[0,234],"content":"<ph id=\"ph1\">`true`</ph> if the XML reader is positioned at an <ph id=\"ph2\">`&lt;xenc:EncryptedKey&gt;`</ph> element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the XML reader is positioned at an `<xenc:EncryptedKey>` element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, `false`."}],"pos":[7431,7668],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[7882,7913],"yaml":true},{"content":"Returns a value that indicates whether the reader is pointing to an `<xenc:EncryptedData>` element.","nodes":[{"pos":[0,99],"content":"Returns a value that indicates whether the reader is pointing to an <ph id=\"ph1\">`&lt;xenc:EncryptedData&gt;`</ph> element.","source":"Returns a value that indicates whether the reader is pointing to an `<xenc:EncryptedData>` element."}],"pos":[9063,9163],"yaml":true},{"content":"Does not move the reader when it returns `false`.","nodes":[{"pos":[0,49],"content":"Does not move the reader when it returns <ph id=\"ph1\">`false`</ph>.","source":"Does not move the reader when it returns `false`."}],"pos":[9174,9224],"yaml":true,"extradata":"MT"},{"content":"The reader positioned at a security token (`<xenc:EncryptedData>` element.)","nodes":[{"pos":[0,75],"content":"The reader positioned at a security token (<ph id=\"ph1\">`&lt;xenc:EncryptedData&gt;`</ph> element.)","source":"The reader positioned at a security token (`<xenc:EncryptedData>` element.)"}],"pos":[9397,9473],"yaml":true},{"content":"`true` if the reader is positioned at an `<xenc:EncryptedData>` element; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the reader is positioned at an <ph id=\"ph2\">`&lt;xenc:EncryptedData&gt;`</ph> element; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the reader is positioned at an `<xenc:EncryptedData>` element; otherwise, `false`."}],"pos":[9531,9626],"yaml":true},{"content":"Gets a value that indicates whether the handler provides serialization functionality for tokens.","nodes":[{"pos":[0,96],"content":"Gets a value that indicates whether the handler provides serialization functionality for tokens.","nodes":[{"content":"Gets a value that indicates whether the handler provides serialization functionality for tokens.","pos":[0,96]}]}],"pos":[10786,10883],"yaml":true},{"content":"`true` if the handler can serialize tokens; otherwise, `false`. Always `true`.","nodes":[{"pos":[0,78],"content":"`true` if the handler can serialize tokens; otherwise, `false`. Always `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the handler can serialize tokens; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` if the handler can serialize tokens; otherwise, `false`."},{"content":"Always <ph id=\"ph1\">`true`</ph>.","pos":[64,78],"source":" Always `true`."}]}],"pos":[11008,11089],"yaml":true},{"content":"Gets the type identifier URIs for tokens handled by the current instance.","nodes":[{"pos":[0,73],"content":"Gets the type identifier URIs for tokens handled by the current instance.","nodes":[{"content":"Gets the type identifier URIs for tokens handled by the current instance.","pos":[0,73]}]}],"pos":[12314,12388],"yaml":true},{"content":"By default, returns an array with a single `null` string because there is not a specific token type identifier that is associated with the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> type.","nodes":[{"pos":[0,216],"content":"By default, returns an array with a single <ph id=\"ph1\">`null`</ph> string because there is not a specific token type identifier that is associated with the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;&lt;/xref&gt;</ph> type.","source":"By default, returns an array with a single `null` string because there is not a specific token type identifier that is associated with the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> type."}],"pos":[12542,12759],"yaml":true},{"content":"Gets or sets the <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that will be used to serialize and deserialize key identifiers from the `<xenc:EncryptedData>` element.","nodes":[{"pos":[0,196],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;&lt;/xref&gt;</ph> that will be used to serialize and deserialize key identifiers from the <ph id=\"ph2\">`&lt;xenc:EncryptedData&gt;`</ph> element.","source":"Gets or sets the <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that will be used to serialize and deserialize key identifiers from the `<xenc:EncryptedData>` element."}],"pos":[13954,14151],"yaml":true},{"content":"The token serializer that will be used to read and write key the key identifiers.","nodes":[{"pos":[0,81],"content":"The token serializer that will be used to read and write key the key identifiers.","nodes":[{"content":"The token serializer that will be used to read and write key the key identifiers.","pos":[0,81]}]}],"pos":[14366,14448],"yaml":true},{"content":"An attempt to set the property to `null` occurs.","nodes":[{"pos":[0,48],"content":"An attempt to set the property to <ph id=\"ph1\">`null`</ph> occurs.","source":"An attempt to set the property to `null` occurs."}],"pos":[14653,14702],"yaml":true},{"content":"Reads an <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> from an XML stream.","nodes":[{"pos":[0,106],"content":"Reads an <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> from an XML stream.","source":"Reads an <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> from an XML stream."}],"pos":[15918,16025],"yaml":true},{"content":"An XML reader positioned at an `<xenc:EncryptedKey>` element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, `false`.","nodes":[{"pos":[0,148],"content":"An XML reader positioned at an <ph id=\"ph1\">`&lt;xenc:EncryptedKey&gt;`</ph> element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"An XML reader positioned at an `<xenc:EncryptedKey>` element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, `false`."}],"pos":[16260,16409],"yaml":true},{"content":"A key identifier clause of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref>.","nodes":[{"pos":[0,110],"content":"A key identifier clause of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph>.","source":"A key identifier clause of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref>."}],"pos":[16508,16619],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[16830,16861],"yaml":true},{"content":"<code>reader</code> is not positioned at an `<xenc:EncryptedKey>` element.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is not positioned at an `<ph id=\"ph2\">&lt;xenc:EncryptedKey&gt;</ph>` element.","source":"<code>reader</code> is not positioned at an `<xenc:EncryptedKey>` element."}],"pos":[16971,17046],"yaml":true},{"content":"Reads an encrypted security token.","nodes":[{"pos":[0,34],"content":"Reads an encrypted security token.","nodes":[{"content":"Reads an encrypted security token.","pos":[0,34]}]}],"pos":[18178,18213],"yaml":true},{"content":"The reader from which to read the token.","nodes":[{"pos":[0,40],"content":"The reader from which to read the token.","nodes":[{"content":"The reader from which to read the token.","pos":[0,40]}]}],"pos":[18420,18461],"yaml":true},{"content":"A security token of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"pos":[0,97],"content":"A security token of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"A security token of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}],"pos":[18546,18644],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[18841,18872],"yaml":true},{"content":"There is no configured service token resolver. (Either the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property or the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver\"></xref> property of the referenced token handler configuration is `null`. A service token resolver is required to obtain keys for decryption.  \n  \n -or-  \n  \n The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> referenced through the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\"></xref> property is unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can read the decrypted XML and return a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>.","nodes":[{"pos":[0,396],"content":"There is no configured service token resolver. (Either the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property or the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver\"></xref> property of the referenced token handler configuration is `null`. A service token resolver is required to obtain keys for decryption.","nodes":[{"content":"There is no configured service token resolver.","pos":[0,46]},{"content":"(Either the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"&gt;&lt;/xref&gt;</ph> property or the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver\"&gt;&lt;/xref&gt;</ph> property of the referenced token handler configuration is <ph id=\"ph3\">`null`</ph>.","pos":[47,328],"source":" (Either the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property or the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver\"></xref> property of the referenced token handler configuration is `null`."},{"content":"A service token resolver is required to obtain keys for decryption.","pos":[329,396]}]},{"pos":[403,407],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[414,819],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;&lt;/xref&gt;</ph> referenced through the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\"&gt;&lt;/xref&gt;</ph> property is unable to find a <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> that can read the decrypted XML and return a <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> referenced through the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\"></xref> property is unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can read the decrypted XML and return a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."}],"pos":[18982,19820],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not found inside the XML pointed to by the reader.  \n  \n -or-  \n  \n The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not a <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>.","nodes":[{"pos":[0,126],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> is not found inside the XML pointed to by the reader.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not found inside the XML pointed to by the reader."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,298],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not a <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>."}],"pos":[19966,20277],"yaml":true},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> found inside the XML cannot be resolved by the configured service token resolver to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.","nodes":[{"pos":[0,222],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> found inside the XML cannot be resolved by the configured service token resolver to a <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> found inside the XML cannot be resolved by the configured service token resolver to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."}],"pos":[20457,20680],"yaml":true},{"content":"Gets the type of the token handled by the current instance.","nodes":[{"pos":[0,59],"content":"Gets the type of the token handled by the current instance.","nodes":[{"content":"Gets the type of the token handled by the current instance.","pos":[0,59]}]}],"pos":[21715,21775],"yaml":true},{"content":"The token type handled by the current instance. The default is `typeof`<xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"pos":[0,143],"content":"The token type handled by the current instance. The default is `typeof`<xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"content":"The token type handled by the current instance.","pos":[0,47]},{"content":"The default is <ph id=\"ph1\">`typeof`</ph><ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[48,143],"source":" The default is `typeof`<xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}]}],"pos":[21893,22037],"yaml":true},{"content":"Writes an encrypted security token using the XML writer.","nodes":[{"pos":[0,56],"content":"Writes an encrypted security token using the XML writer.","nodes":[{"content":"Writes an encrypted security token using the XML writer.","pos":[0,56]}]}],"pos":[23444,23501],"yaml":true},{"content":"The XML writer to which to write the encrypted token.","nodes":[{"pos":[0,53],"content":"The XML writer to which to write the encrypted token.","nodes":[{"content":"The XML writer to which to write the encrypted token.","pos":[0,53]}]}],"pos":[23721,23775],"yaml":true},{"content":"The encrypted security token, must be an instance of <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"pos":[0,125],"content":"The encrypted security token, must be an instance of <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"The encrypted security token, must be an instance of <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}],"pos":[23864,23990],"yaml":true},{"content":"<code>writer</code> is `null`.  \n  \n -or-  \n  \n <code>token</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."},{"pos":[37,41],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[48,77],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>token</code> is `null`."}],"pos":[24188,24272],"yaml":true},{"content":"<code>token</code> is not assignable as <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable as <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"<code>token</code> is not assignable as <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}],"pos":[24366,24479],"yaml":true},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`. This property is required for obtaining keys for encryption.  \n  \n -or-  \n  \n The token handler collection returned by the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\"></xref> property was unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can write the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> returned by the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken.Token\"></xref> property.","nodes":[{"pos":[0,168],"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`. This property is required for obtaining keys for encryption.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","pos":[0,107],"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`."},{"content":"This property is required for obtaining keys for encryption.","pos":[108,168]}]},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,607],"content":"The token handler collection returned by the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\"&gt;&lt;/xref&gt;</ph> property was unable to find a <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> that can write the <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> returned by the <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken.Token\"&gt;&lt;/xref&gt;</ph> property.","source":"The token handler collection returned by the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\"></xref> property was unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can write the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> returned by the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken.Token\"></xref> property."}],"pos":[24589,25213],"yaml":true},{"content":"The <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\"></xref> property is not assignable as <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>.","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\"&gt;&lt;/xref&gt;</ph> property is not assignable as <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\"></xref> property is not assignable as <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>."}],"pos":[25359,25547],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  commentId: T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  id: EncryptedSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: EncryptedSecurityTokenHandler\n  nameWithType: EncryptedSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: A token handler for encrypted security tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  remarks: A token handler that serializes and deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> objects from `<xenc:EncryptedData>` elements and <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> objects from `<xenc:EncryptedKey>` elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).\n  syntax:\n    content: 'public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: EncryptedSecurityTokenHandler()\n  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n  fullName: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: public EncryptedSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the current XML element is pointing to an `<xenc:EncryptedKey>` element that can be deserialized to a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> by this instance.\n  syntax:\n    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: '`true` if the XML reader is positioned at an `<xenc:EncryptedKey>` element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the reader is pointing to an `<xenc:EncryptedData>` element.\n  remarks: Does not move the reader when it returns `false`.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The reader positioned at a security token (`<xenc:EncryptedData>` element.)\n    return:\n      type: System.Boolean\n      description: '`true` if the reader is positioned at an `<xenc:EncryptedData>` element; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  commentId: P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken\n  fullName: EncryptedSecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the handler provides serialization functionality for tokens.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler can serialize tokens; otherwise, `false`. Always `true`.'\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the type identifier URIs for tokens handled by the current instance.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: By default, returns an array with a single `null` string because there is not a specific token type identifier that is associated with the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> type.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  commentId: P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  id: KeyInfoSerializer\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: KeyInfoSerializer\n  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  fullName: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that will be used to serialize and deserialize key identifiers from the `<xenc:EncryptedData>` element.\n  syntax:\n    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The token serializer that will be used to read and write key the key identifiers.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to `null` occurs.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads an <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> from an XML stream.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at an `<xenc:EncryptedKey>` element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, `false`.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A key identifier clause of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>reader</code> is not positioned at an `<xenc:EncryptedKey>` element.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads an encrypted security token.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The reader from which to read the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A security token of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"There is no configured service token resolver. (Either the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\\\"></xref> property or the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver\\\"></xref> property of the referenced token handler configuration is `null`. A service token resolver is required to obtain keys for decryption.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\\\"></xref> referenced through the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\\\"></xref> property is unable to find a <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler\\\"></xref> that can read the decrypted XML and return a <xref href=\\\"System.IdentityModel.Tokens.SecurityToken\\\"></xref>.\"\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: \"A <xref href=\\\"System.IdentityModel.Tokens.SecurityKeyIdentifier\\\"></xref> is not found inside the XML pointed to by the reader.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.IdentityModel.Tokens.SecurityKeyIdentifier\\\"></xref> is not a <xref href=\\\"System.IdentityModel.Tokens.SymmetricSecurityKey\\\"></xref>.\"\n  - type: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n    commentId: T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n    description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> found inside the XML cannot be resolved by the configured service token resolver to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  commentId: P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: EncryptedSecurityTokenHandler.TokenType\n  fullName: EncryptedSecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the type of the token handled by the current instance.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: The token type handled by the current instance. The default is `typeof`<xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: EncryptedSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Writes an encrypted security token using the XML writer.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to which to write the encrypted token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The encrypted security token, must be an instance of <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>writer</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>token</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable as <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\\\"></xref> property is `null`. This property is required for obtaining keys for encryption.  \\n  \\n -or-  \\n  \\n The token handler collection returned by the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\\\"></xref> property was unable to find a <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler\\\"></xref> that can write the <xref href=\\\"System.IdentityModel.Tokens.SecurityToken\\\"></xref> returned by the <xref href=\\\"System.IdentityModel.Tokens.EncryptedSecurityToken.Token\\\"></xref> property.\"\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\"></xref> property is not assignable as <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandler\n  nameWithType: SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptedTokenDecryptionFailedException\n  nameWithType: EncryptedTokenDecryptionFailedException\n  fullName: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: EncryptedSecurityTokenHandler()\n  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n  fullName: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken\n  fullName: EncryptedSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: KeyInfoSerializer\n  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  fullName: EncryptedSecurityTokenHandler.KeyInfoSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: EncryptedSecurityTokenHandler.TokenType\n  fullName: EncryptedSecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: EncryptedSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: EncryptedSecurityTokenHandler\n  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler\n  fullName: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause\n  fullName: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: EncryptedSecurityTokenHandler.CanReadToken\n  fullName: EncryptedSecurityTokenHandler.CanReadToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken\n  fullName: EncryptedSecurityTokenHandler.CanWriteToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  fullName: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: KeyInfoSerializer\n  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  fullName: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause\n  fullName: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: EncryptedSecurityTokenHandler.ReadToken\n  fullName: EncryptedSecurityTokenHandler.ReadToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: EncryptedSecurityTokenHandler.TokenType\n  fullName: EncryptedSecurityTokenHandler.TokenType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: EncryptedSecurityTokenHandler.WriteToken\n  fullName: EncryptedSecurityTokenHandler.WriteToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedSecurityTokenHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(String)\n  nameWithType: SecurityTokenHandler.CanReadToken(String)\n  fullName: SecurityTokenHandler.CanReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SecurityTokenHandler.CanValidateToken\n  fullName: SecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: Configuration\n  nameWithType: SecurityTokenHandler.Configuration\n  fullName: SecurityTokenHandler.Configuration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ContainingCollection\n  nameWithType: SecurityTokenHandler.ContainingCollection\n  fullName: SecurityTokenHandler.ContainingCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateSecurityTokenReference(SecurityToken, Boolean)\n  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n  fullName: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  fullName: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: DetectReplayedToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n  fullName: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(String)\n  nameWithType: SecurityTokenHandler.ReadToken(String)\n  fullName: SecurityTokenHandler.ReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader, SecurityTokenResolver)\n  nameWithType: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n  fullName: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationFailure(SecurityToken, String)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n  fullName: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationSuccess(SecurityToken)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n  fullName: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: SecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  fullName: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)\n  fullName: SecurityTokenHandler.WriteToken(SecurityToken)\n"}