{"nodes":[{"content":"Represents a time zone.","nodes":[{"pos":[0,23],"content":"Represents a time zone.","nodes":[{"content":"Represents a time zone.","pos":[0,23]}]}],"pos":[797,821],"yaml":true},{"content":"A time zone is a geographical region in which the same standard time is used.  \n  \n> [!IMPORTANT]\n>  Whenever possible, use the <xref:System.TimeZoneInfo> class instead of the <xref:System.TimeZone> class.  \n  \n You can use the <xref:System.TimeZone> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa. However, you cannot use the <xref:System.TimeZone> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another. For this purpose, use the <xref:System.TimeZoneInfo> class. You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.  \n  \n The <xref:System.TimeZone> class supports only a single daylight saving time adjustment rule for the local time zone. As a result, the <xref:System.TimeZone> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect. In contrast, the <xref:System.TimeZoneInfo> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.","nodes":[{"pos":[0,77],"content":"A time zone is a geographical region in which the same standard time is used.","nodes":[{"content":"A time zone is a geographical region in which the same standard time is used.","pos":[0,77]}]},{"pos":[85,205],"content":"[!IMPORTANT]\n Whenever possible, use the <xref:System.TimeZoneInfo> class instead of the <xref:System.TimeZone> class.","leadings":["","> "],"nodes":[{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class instead of the <ph id=\"ph2\">&lt;xref:System.TimeZone&gt;</ph> class.","pos":[14,118],"source":" Whenever possible, use the <xref:System.TimeZoneInfo> class instead of the <xref:System.TimeZone> class."}]},{"pos":[212,808],"content":"You can use the <xref:System.TimeZone> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa. However, you cannot use the <xref:System.TimeZone> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another. For this purpose, use the <xref:System.TimeZoneInfo> class. You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.","nodes":[{"content":"You can use the <xref:System.TimeZone> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa. However, you cannot use the <xref:System.TimeZone> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another. For this purpose, use the <xref:System.TimeZoneInfo> class. You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.","pos":[0,596],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.TimeZone&gt;</ph> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa.","pos":[0,185],"source":"You can use the <xref:System.TimeZone> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa."},{"content":"However, you cannot use the <ph id=\"ph1\">&lt;xref:System.TimeZone&gt;</ph> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another.","pos":[186,362],"source":" However, you cannot use the <xref:System.TimeZone> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another."},{"content":"For this purpose, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class.","pos":[363,422],"source":" For this purpose, use the <xref:System.TimeZoneInfo> class."},{"content":"You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.","pos":[423,596]}]}]},{"pos":[815,1289],"content":"The <xref:System.TimeZone> class supports only a single daylight saving time adjustment rule for the local time zone. As a result, the <xref:System.TimeZone> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect. In contrast, the <xref:System.TimeZoneInfo> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.","nodes":[{"content":"The <xref:System.TimeZone> class supports only a single daylight saving time adjustment rule for the local time zone. As a result, the <xref:System.TimeZone> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect. In contrast, the <xref:System.TimeZoneInfo> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.","pos":[0,474],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone&gt;</ph> class supports only a single daylight saving time adjustment rule for the local time zone.","pos":[0,117],"source":"The <xref:System.TimeZone> class supports only a single daylight saving time adjustment rule for the local time zone."},{"content":"As a result, the <ph id=\"ph1\">&lt;xref:System.TimeZone&gt;</ph> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect.","pos":[118,326],"source":" As a result, the <xref:System.TimeZone> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.","pos":[327,474],"source":" In contrast, the <xref:System.TimeZoneInfo> class supports multiple adjustment rules, which makes it possible to work with historic time zone data."}]}]}],"pos":[832,2131],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.TimeZone\"></xref> class.","nodes":[{"pos":[0,77],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.TimeZone\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.TimeZone\"></xref> class."}],"pos":[4200,4278],"yaml":true},{"content":"Gets the time zone of the current computer.","nodes":[{"pos":[0,43],"content":"Gets the time zone of the current computer.","nodes":[{"content":"Gets the time zone of the current computer.","pos":[0,43]}]}],"pos":[5473,5517],"yaml":true},{"content":"The <xref:System.TimeZone.CurrentTimeZone%2A> property corresponds to the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,242],"content":"The <xref:System.TimeZone.CurrentTimeZone%2A> property corresponds to the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property.","nodes":[{"content":"The <xref:System.TimeZone.CurrentTimeZone%2A> property corresponds to the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property.","pos":[0,242],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.CurrentTimeZone%2A&gt;</ph> property corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,144],"source":"The <xref:System.TimeZone.CurrentTimeZone%2A> property corresponds to the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property.","pos":[145,242],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property."}]}]}],"pos":[5528,5771],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeZone\"></xref> object that represents the current local time zone.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeZone\"&gt;&lt;/xref&gt;</ph> object that represents the current local time zone.","source":"A <xref href=\"System.TimeZone\"></xref> object that represents the current local time zone."}],"pos":[6466,6557],"yaml":true},{"content":"Gets the daylight saving time zone name.","nodes":[{"pos":[0,40],"content":"Gets the daylight saving time zone name.","nodes":[{"content":"Gets the daylight saving time zone name.","pos":[0,40]}]}],"pos":[7679,7720],"yaml":true},{"content":"If daylight saving time is not used in the time zone, an empty string (\"\") is returned.  \n  \n The <xref:System.TimeZone.DaylightName%2A> property corresponds to the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,87],"content":"If daylight saving time is not used in the time zone, an empty string (\"\") is returned.","nodes":[{"content":"If daylight saving time is not used in the time zone, an empty string (\"\") is returned.","pos":[0,87]}]},{"pos":[94,347],"content":"The <xref:System.TimeZone.DaylightName%2A> property corresponds to the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property.","nodes":[{"content":"The <xref:System.TimeZone.DaylightName%2A> property corresponds to the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property.","pos":[0,253],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.DaylightName%2A&gt;</ph> property corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,148],"source":"The <xref:System.TimeZone.DaylightName%2A> property corresponds to the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName&gt;</ph> property.","pos":[149,253],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property."}]}]}],"pos":[7731,8085],"yaml":true,"extradata":"MT"},{"content":"The daylight saving time zone name.","nodes":[{"pos":[0,35],"content":"The daylight saving time zone name.","nodes":[{"content":"The daylight saving time zone name.","pos":[0,35]}]}],"pos":[8720,8756],"yaml":true},{"content":"Returns the daylight saving time period for a particular year.","nodes":[{"pos":[0,62],"content":"Returns the daylight saving time period for a particular year.","nodes":[{"content":"Returns the daylight saving time period for a particular year.","pos":[0,62]}]}],"pos":[9972,10035],"yaml":true},{"content":"Only one daylight saving time period per year is supported.  \n  \n If daylight saving time is not used in the current time zone, the return value is a <xref:System.Globalization.DaylightTime> object, where the value of <xref:System.Globalization.DaylightTime.Start%2A> and <xref:System.Globalization.DaylightTime.End%2A> is <xref:System.DateTime.MinValue?displayProperty=fullName>, and the value of <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> is a <xref:System.TimeSpan> initialized to 0 ticks.","nodes":[{"pos":[0,59],"content":"Only one daylight saving time period per year is supported.","nodes":[{"content":"Only one daylight saving time period per year is supported.","pos":[0,59]}]},{"pos":[66,524],"content":"If daylight saving time is not used in the current time zone, the return value is a <xref:System.Globalization.DaylightTime> object, where the value of <xref:System.Globalization.DaylightTime.Start%2A> and <xref:System.Globalization.DaylightTime.End%2A> is <xref:System.DateTime.MinValue?displayProperty=fullName>, and the value of <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> is a <xref:System.TimeSpan> initialized to 0 ticks.","nodes":[{"content":"If daylight saving time is not used in the current time zone, the return value is a <ph id=\"ph1\">&lt;xref:System.Globalization.DaylightTime&gt;</ph> object, where the value of <ph id=\"ph2\">&lt;xref:System.Globalization.DaylightTime.Start%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.DaylightTime.End%2A&gt;</ph> is <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph>, and the value of <ph id=\"ph5\">&lt;xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName&gt;</ph> is a <ph id=\"ph6\">&lt;xref:System.TimeSpan&gt;</ph> initialized to 0 ticks.","pos":[0,458],"source":"If daylight saving time is not used in the current time zone, the return value is a <xref:System.Globalization.DaylightTime> object, where the value of <xref:System.Globalization.DaylightTime.Start%2A> and <xref:System.Globalization.DaylightTime.End%2A> is <xref:System.DateTime.MinValue?displayProperty=fullName>, and the value of <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> is a <xref:System.TimeSpan> initialized to 0 ticks."}]}],"pos":[10046,10575],"yaml":true,"extradata":"MT"},{"content":"The year that the daylight saving time period applies to.","nodes":[{"pos":[0,57],"content":"The year that the daylight saving time period applies to.","nodes":[{"content":"The year that the daylight saving time period applies to.","pos":[0,57]}]}],"pos":[10754,10812],"yaml":true},{"content":"A <xref href=\"System.Globalization.DaylightTime\"></xref> object that contains the start and end date for daylight saving time in <code>year</code>.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DaylightTime\"&gt;&lt;/xref&gt;</ph> object that contains the start and end date for daylight saving time in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Globalization.DaylightTime\"></xref> object that contains the start and end date for daylight saving time in <code>year</code>."}],"pos":[10889,11037],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."}],"pos":[11213,11268],"yaml":true},{"content":"Returns the Coordinated Universal Time (UTC) offset for the specified local time.","nodes":[{"pos":[0,81],"content":"Returns the Coordinated Universal Time (UTC) offset for the specified local time.","nodes":[{"content":"Returns the Coordinated Universal Time (UTC) offset for the specified local time.","pos":[0,81]}]}],"pos":[12407,12489],"yaml":true},{"content":"This method returns the offset, or difference, between the `time` parameter and Coordinated Universal Time (UTC). That is:  \n  \n `time` = UTC + offset  \n  \n The method interprets the time zone of `time` based on its <xref:System.DateTime.Kind%2A> property. If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the method returns the offset of the local time zone. If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, the method returns an offset equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \n  \n If the local time zone observes daylight saving time, <xref:System.TimeZone.GetUtcOffset%2A> applies the current adjustment rule to `time` when determining the offset of the local time zone. That is, the offset returned by <xref:System.TimeZone.GetUtcOffset%2A> reflects whether `time` falls in the time zone's standard time or its daylight saving time.  \n  \n> [!NOTE]\n>  The <xref:System.TimeZone.GetUtcOffset%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.  \n  \n The <xref:System.TimeZone.GetUtcOffset%2A> method corresponds to the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method.  \n  \n Because the date and time value represented by `time` and this value's offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones. If this behavior is undesirable, use a <xref:System.DateTimeOffset> value instead. The <xref:System.DateTimeOffset> data type tightly couples a date and time value with its offset from UTC.","nodes":[{"pos":[0,122],"content":"This method returns the offset, or difference, between the `time` parameter and Coordinated Universal Time (UTC). That is:","nodes":[{"content":"This method returns the offset, or difference, between the <ph id=\"ph1\">`time`</ph> parameter and Coordinated Universal Time (UTC).","pos":[0,113],"source":"This method returns the offset, or difference, between the `time` parameter and Coordinated Universal Time (UTC)."},{"content":"That is:","pos":[114,122]}]},{"pos":[129,150],"content":"<ph id=\"ph1\">`time`</ph> = UTC + offset","source":"`time` = UTC + offset"},{"pos":[157,689],"content":"The method interprets the time zone of `time` based on its <xref:System.DateTime.Kind%2A> property. If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the method returns the offset of the local time zone. If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, the method returns an offset equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>.","nodes":[{"content":"The method interprets the time zone of <ph id=\"ph1\">`time`</ph> based on its <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[0,99],"source":"The method interprets the time zone of `time` based on its <xref:System.DateTime.Kind%2A> property."},{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the method returns the offset of the local time zone.","pos":[100,324],"source":" If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the method returns the offset of the local time zone."},{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the method returns an offset equal to <ph id=\"ph3\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>.","pos":[325,532],"source":" If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, the method returns an offset equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>."}]},{"pos":[696,1049],"content":"If the local time zone observes daylight saving time, <xref:System.TimeZone.GetUtcOffset%2A> applies the current adjustment rule to `time` when determining the offset of the local time zone. That is, the offset returned by <xref:System.TimeZone.GetUtcOffset%2A> reflects whether `time` falls in the time zone's standard time or its daylight saving time.","nodes":[{"content":"If the local time zone observes daylight saving time, <ph id=\"ph1\">&lt;xref:System.TimeZone.GetUtcOffset%2A&gt;</ph> applies the current adjustment rule to <ph id=\"ph2\">`time`</ph> when determining the offset of the local time zone.","pos":[0,190],"source":"If the local time zone observes daylight saving time, <xref:System.TimeZone.GetUtcOffset%2A> applies the current adjustment rule to `time` when determining the offset of the local time zone."},{"content":"That is, the offset returned by <ph id=\"ph1\">&lt;xref:System.TimeZone.GetUtcOffset%2A&gt;</ph> reflects whether <ph id=\"ph2\">`time`</ph> falls in the time zone's standard time or its daylight saving time.","pos":[191,353],"source":" That is, the offset returned by <xref:System.TimeZone.GetUtcOffset%2A> reflects whether `time` falls in the time zone's standard time or its daylight saving time."}]},{"pos":[1057,1487],"content":"[!NOTE]\n The <xref:System.TimeZone.GetUtcOffset%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.","leadings":["","> "],"nodes":[{"content":" The <xref:System.TimeZone.GetUtcOffset%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.","pos":[8,428],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.GetUtcOffset%2A&gt;</ph> method recognizes only the current daylight saving time adjustment rule for the local time zone.","pos":[1,140],"source":" The <xref:System.TimeZone.GetUtcOffset%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone."},{"content":"As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect.","pos":[141,295]},{"content":"It may return inaccurate results if <ph id=\"ph1\">`time`</ph> is a historic date and time value that was subject to a previous adjustment rule.","pos":[296,420],"source":" It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule."}]}]},{"pos":[1494,1741],"content":"The <xref:System.TimeZone.GetUtcOffset%2A> method corresponds to the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method.","nodes":[{"content":"The <xref:System.TimeZone.GetUtcOffset%2A> method corresponds to the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method.","pos":[0,247],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.GetUtcOffset%2A&gt;</ph> method corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,144],"source":"The <xref:System.TimeZone.GetUtcOffset%2A> method corresponds to the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName&gt;</ph> method.","pos":[145,247],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method."}]}]},{"pos":[1748,2221],"content":"Because the date and time value represented by `time` and this value's offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones. If this behavior is undesirable, use a <xref:System.DateTimeOffset> value instead. The <xref:System.DateTimeOffset> data type tightly couples a date and time value with its offset from UTC.","nodes":[{"content":"Because the date and time value represented by <ph id=\"ph1\">`time`</ph> and this value's offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones.","pos":[0,283],"source":"Because the date and time value represented by `time` and this value's offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones."},{"content":"If this behavior is undesirable, use a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value instead.","pos":[284,366],"source":" If this behavior is undesirable, use a <xref:System.DateTimeOffset> value instead."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> data type tightly couples a date and time value with its offset from UTC.","pos":[367,473],"source":" The <xref:System.DateTimeOffset> data type tightly couples a date and time value with its offset from UTC."}]}],"pos":[12500,14737],"yaml":true,"extradata":"MT"},{"content":"A date and time value.","nodes":[{"pos":[0,22],"content":"A date and time value.","nodes":[{"content":"A date and time value.","pos":[0,22]}]}],"pos":[14893,14916],"yaml":true},{"content":"The Coordinated Universal Time (UTC) offset from <code>time</code>.","nodes":[{"pos":[0,67],"content":"The Coordinated Universal Time (UTC) offset from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The Coordinated Universal Time (UTC) offset from <code>time</code>."}],"pos":[14975,15043],"yaml":true},{"content":"Returns a value indicating whether the specified date and time is within a daylight saving time period.","nodes":[{"pos":[0,103],"content":"Returns a value indicating whether the specified date and time is within a daylight saving time period.","nodes":[{"content":"Returns a value indicating whether the specified date and time is within a daylight saving time period.","pos":[0,103]}]}],"pos":[16289,16393],"yaml":true},{"content":"The year to which the daylight saving time period applies is derived from the `time` parameter.  \n  \n Because the <xref:System.TimeZone> class supports a single daylight saving time adjustment rule, the <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date. Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,95],"content":"The year to which the daylight saving time period applies is derived from the <ph id=\"ph1\">`time`</ph> parameter.","source":"The year to which the daylight saving time period applies is derived from the `time` parameter."},{"pos":[102,728],"content":"Because the <xref:System.TimeZone> class supports a single daylight saving time adjustment rule, the <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date. Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.","nodes":[{"content":"Because the <xref:System.TimeZone> class supports a single daylight saving time adjustment rule, the <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date. Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.","pos":[0,626],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.TimeZone&gt;</ph> class supports a single daylight saving time adjustment rule, the <ph id=\"ph2\">&lt;xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29&gt;</ph> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date.","pos":[0,291],"source":"Because the <xref:System.TimeZone> class supports a single daylight saving time adjustment rule, the <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date."},{"content":"Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> method.","pos":[292,515],"source":" Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> method.","pos":[516,626],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method."}]}]}],"pos":[16404,17137],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[17296,17313],"yaml":true},{"content":"`true` if <code>time</code> is in a daylight saving time period; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in a daylight saving time period; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>time</code> is in a daylight saving time period; otherwise, `false`."}],"pos":[17371,17458],"yaml":true},{"content":"Returns a value indicating whether the specified date and time is within the specified daylight saving time period.","nodes":[{"pos":[0,115],"content":"Returns a value indicating whether the specified date and time is within the specified daylight saving time period.","nodes":[{"content":"Returns a value indicating whether the specified date and time is within the specified daylight saving time period.","pos":[0,115]}]}],"pos":[18856,18972],"yaml":true},{"content":"The <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method provides the same functionality as this overload of the <xref:System.TimeZone.IsDaylightSavingTime%2A> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,308],"content":"The <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method provides the same functionality as this overload of the <xref:System.TimeZone.IsDaylightSavingTime%2A> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.","nodes":[{"content":"The <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method provides the same functionality as this overload of the <xref:System.TimeZone.IsDaylightSavingTime%2A> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.","pos":[0,308],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> method provides the same functionality as this overload of the <ph id=\"ph2\">&lt;xref:System.TimeZone.IsDaylightSavingTime%2A&gt;</ph> method.","pos":[0,197],"source":"The <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method provides the same functionality as this overload of the <xref:System.TimeZone.IsDaylightSavingTime%2A> method."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> method.","pos":[198,308],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method."}]}]}],"pos":[18983,19292],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[19499,19516],"yaml":true},{"content":"`true` if <code>time</code> is in <code>daylightTimes</code>; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">daylightTimes</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>time</code> is in <code>daylightTimes</code>; otherwise, `false`."}],"pos":[19666,19750],"yaml":true},{"content":"<code>daylightTimes</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;daylightTimes&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>daylightTimes</code> is `null`."}],"pos":[19916,19954],"yaml":true},{"content":"Gets the standard time zone name.","nodes":[{"pos":[0,33],"content":"Gets the standard time zone name.","nodes":[{"content":"Gets the standard time zone name.","pos":[0,33]}]}],"pos":[21014,21048],"yaml":true},{"content":"The <xref:System.TimeZone.StandardName%2A> property corresponds to the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,253],"content":"The <xref:System.TimeZone.StandardName%2A> property corresponds to the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property.","nodes":[{"content":"The <xref:System.TimeZone.StandardName%2A> property corresponds to the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property.","pos":[0,253],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.StandardName%2A&gt;</ph> property corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,148],"source":"The <xref:System.TimeZone.StandardName%2A> property corresponds to the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName&gt;</ph> property.","pos":[149,253],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property."}]}]}],"pos":[21059,21313],"yaml":true,"extradata":"MT"},{"content":"The standard time zone name.","nodes":[{"pos":[0,28],"content":"The standard time zone name.","nodes":[{"content":"The standard time zone name.","pos":[0,28]}]}],"pos":[21948,21977],"yaml":true},{"content":"An attempt was made to set this property to `null`.","nodes":[{"pos":[0,51],"content":"An attempt was made to set this property to <ph id=\"ph1\">`null`</ph>.","source":"An attempt was made to set this property to `null`."}],"pos":[22135,22187],"yaml":true},{"content":"Returns the local time that corresponds to a specified date and time value.","nodes":[{"pos":[0,75],"content":"Returns the local time that corresponds to a specified date and time value.","nodes":[{"content":"Returns the local time that corresponds to a specified date and time value.","pos":[0,75]}]}],"pos":[23320,23396],"yaml":true},{"content":"The following table shows the relationship between the `time` parameter and the <xref:System.DateTime> value returned by this method.  \n  \n|`time` parameter|Behavior|Return value|  \n|----------------------|--------------|------------------|  \n|A Coordinated Universal Time (UTC) time (<xref:System.DateTimeKind?displayProperty=fullName>).|Converts the time from UTC to the local time.|A <xref:System.DateTime> object whose value is the local time that corresponds to `time`.|  \n|A local time (<xref:System.DateTimeKind?displayProperty=fullName>).|No conversion necessary.|The same <xref:System.DateTime> value represented by the `time` parameter.|  \n|An unspecified time (<xref:System.DateTimeKind?displayProperty=fullName>).|Assumes that the time is UTC and converts it from UTC to the local time.|A <xref:System.DateTime> object whose value is the local time that corresponds to `time`.|  \n  \n If the local time zone observes daylight saving time, <xref:System.TimeZone.ToLocalTime%2A> applies the current adjustment rule to `time` when performing the conversion.  \n  \n> [!NOTE]\n>  The <xref:System.TimeZone.ToLocalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.  \n  \n The <xref:System.TimeZone.ToLocalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method with its `destinationTimeZone` parameter set to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,133],"content":"The following table shows the relationship between the <ph id=\"ph1\">`time`</ph> parameter and the <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value returned by this method.","source":"The following table shows the relationship between the `time` parameter and the <xref:System.DateTime> value returned by this method."},{"pos":[140,156],"content":"<ph id=\"ph1\">`time`</ph> parameter","source":"`time` parameter"},{"pos":[157,165],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[166,178],"content":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[244,338],"content":"A Coordinated Universal Time (UTC) time (<xref:System.DateTimeKind?displayProperty=fullName>).","nodes":[{"content":"A Coordinated Universal Time (UTC) time (<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>).","pos":[0,94],"source":"A Coordinated Universal Time (UTC) time (<xref:System.DateTimeKind?displayProperty=fullName>)."}]},{"pos":[339,384],"content":"Converts the time from UTC to the local time.","nodes":[{"content":"Converts the time from UTC to the local time.","pos":[0,45]}]},{"pos":[385,474],"content":"A <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object whose value is the local time that corresponds to <ph id=\"ph2\">`time`</ph>.","source":"A <xref:System.DateTime> object whose value is the local time that corresponds to `time`."},{"pos":[479,546],"content":"A local time (<xref:System.DateTimeKind?displayProperty=fullName>).","nodes":[{"content":"A local time (<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>).","pos":[0,67],"source":"A local time (<xref:System.DateTimeKind?displayProperty=fullName>)."}]},{"pos":[547,571],"content":"No conversion necessary.","nodes":[{"content":"No conversion necessary.","pos":[0,24]}]},{"pos":[572,646],"content":"The same <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represented by the <ph id=\"ph2\">`time`</ph> parameter.","source":"The same <xref:System.DateTime> value represented by the `time` parameter."},{"pos":[651,725],"content":"An unspecified time (<xref:System.DateTimeKind?displayProperty=fullName>).","nodes":[{"content":"An unspecified time (<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>).","pos":[0,74],"source":"An unspecified time (<xref:System.DateTimeKind?displayProperty=fullName>)."}]},{"pos":[726,798],"content":"Assumes that the time is UTC and converts it from UTC to the local time.","nodes":[{"content":"Assumes that the time is UTC and converts it from UTC to the local time.","pos":[0,72]}]},{"pos":[799,888],"content":"A <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object whose value is the local time that corresponds to <ph id=\"ph2\">`time`</ph>.","source":"A <xref:System.DateTime> object whose value is the local time that corresponds to `time`."},{"pos":[896,1065],"content":"If the local time zone observes daylight saving time, <ph id=\"ph1\">&lt;xref:System.TimeZone.ToLocalTime%2A&gt;</ph> applies the current adjustment rule to <ph id=\"ph2\">`time`</ph> when performing the conversion.","source":"If the local time zone observes daylight saving time, <xref:System.TimeZone.ToLocalTime%2A> applies the current adjustment rule to `time` when performing the conversion."},{"pos":[1073,1525],"content":"[!NOTE]\n The <xref:System.TimeZone.ToLocalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.","leadings":["","> "],"nodes":[{"content":" The <xref:System.TimeZone.ToLocalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.","pos":[8,450],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.ToLocalTime%2A&gt;</ph> method recognizes only the current daylight saving time adjustment rule for the local time zone.","pos":[1,139],"source":" The <xref:System.TimeZone.ToLocalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone."},{"content":"As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect.","pos":[140,317]},{"content":"It may return inaccurate results if <ph id=\"ph1\">`time`</ph> is a historic date and time value that was subject to a previous adjustment rule.","pos":[318,442],"source":" It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule."}]}]},{"pos":[1532,1899],"content":"The <xref:System.TimeZone.ToLocalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method with its `destinationTimeZone` parameter set to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.ToLocalTime%2A&gt;</ph> method corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName&gt;</ph> method with its <ph id=\"ph3\">`destinationTimeZone`</ph> parameter set to <ph id=\"ph4\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","pos":[0,258],"source":"The <xref:System.TimeZone.ToLocalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method with its `destinationTimeZone` parameter set to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName&gt;</ph> method.","pos":[259,367],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method."}]}],"pos":[23407,25322],"yaml":true,"extradata":"MT"},{"content":"A Coordinated Universal Time (UTC) time.","nodes":[{"pos":[0,40],"content":"A Coordinated Universal Time (UTC) time.","nodes":[{"content":"A Coordinated Universal Time (UTC) time.","pos":[0,40]}]}],"pos":[25476,25517],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> object whose value is the local time that corresponds to <code>time</code>.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object whose value is the local time that corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.DateTime\"></xref> object whose value is the local time that corresponds to <code>time</code>."}],"pos":[25576,25691],"yaml":true},{"content":"Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.","nodes":[{"pos":[0,82],"content":"Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.","nodes":[{"content":"Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.","pos":[0,82]}]}],"pos":[26906,26989],"yaml":true},{"content":"If the local time zone observes daylight saving time, <xref:System.TimeZone.ToUniversalTime%2A> applies the current adjustment rule to the `time` parameter when performing the conversion.  \n  \n> [!NOTE]\n>  The <xref:System.TimeZone.ToUniversalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.  \n  \n If the `time` parameter is an ambiguous time, the method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If `time` is an invalid time, the method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)  \n  \n Because `time` is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones. For cases in which a date and time value must represent a single, unambiguous point in time, use a <xref:System.DateTimeOffset> value to represent the local time.  \n  \n The <xref:System.TimeZone.ToUniversalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload with a <xref:System.DateTime> parameter whose <xref:System.DateTime.Kind%2A> property does not equal <xref:System.DateTimeKind?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload.","nodes":[{"pos":[0,187],"content":"If the local time zone observes daylight saving time, <ph id=\"ph1\">&lt;xref:System.TimeZone.ToUniversalTime%2A&gt;</ph> applies the current adjustment rule to the <ph id=\"ph2\">`time`</ph> parameter when performing the conversion.","source":"If the local time zone observes daylight saving time, <xref:System.TimeZone.ToUniversalTime%2A> applies the current adjustment rule to the `time` parameter when performing the conversion."},{"pos":[195,675],"content":"[!NOTE]\n The <xref:System.TimeZone.ToUniversalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.","leadings":["","> "],"nodes":[{"content":" The <xref:System.TimeZone.ToUniversalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.","pos":[8,478],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.ToUniversalTime%2A&gt;</ph> method recognizes only the current daylight saving time adjustment rule for the local time zone.","pos":[1,143],"source":" The <xref:System.TimeZone.ToUniversalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone."},{"content":"As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect.","pos":[144,345]},{"content":"It may return inaccurate results if <ph id=\"ph1\">`time`</ph> is a historic date and time value that was subject to a previous adjustment rule.","pos":[346,470],"source":" It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule."}]}]},{"pos":[682,1133],"content":"If the `time` parameter is an ambiguous time, the method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If `time` is an invalid time, the method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)","nodes":[{"content":"If the <ph id=\"ph1\">`time`</ph> parameter is an ambiguous time, the method assumes that it is a standard time.","pos":[0,92],"source":"If the `time` parameter is an ambiguous time, the method assumes that it is a standard time."},{"content":"(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If <ph id=\"ph1\">`time`</ph> is an invalid time, the method simply subtracts the local time from the local time zone's UTC offset to return UTC.","pos":[93,337],"source":" (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If `time` is an invalid time, the method simply subtracts the local time from the local time zone's UTC offset to return UTC."},{"content":"(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)","pos":[338,451]}]},{"pos":[1140,1544],"content":"Because `time` is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones. For cases in which a date and time value must represent a single, unambiguous point in time, use a <xref:System.DateTimeOffset> value to represent the local time.","nodes":[{"content":"Because <ph id=\"ph1\">`time`</ph> is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones.","pos":[0,241],"source":"Because `time` is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones."},{"content":"For cases in which a date and time value must represent a single, unambiguous point in time, use a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value to represent the local time.","pos":[242,404],"source":" For cases in which a date and time value must represent a single, unambiguous point in time, use a <xref:System.DateTimeOffset> value to represent the local time."}]},{"pos":[1551,2016],"content":"The <xref:System.TimeZone.ToUniversalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload with a <xref:System.DateTime> parameter whose <xref:System.DateTime.Kind%2A> property does not equal <xref:System.DateTimeKind?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload.","nodes":[{"content":"The <xref:System.TimeZone.ToUniversalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload with a <xref:System.DateTime> parameter whose <xref:System.DateTime.Kind%2A> property does not equal <xref:System.DateTimeKind?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload.","pos":[0,465],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone.ToUniversalTime%2A&gt;</ph> method corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName&gt;</ph> method overload with a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> parameter whose <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property does not equal <ph id=\"ph5\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,331],"source":"The <xref:System.TimeZone.ToUniversalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload with a <xref:System.DateTime> parameter whose <xref:System.DateTime.Kind%2A> property does not equal <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"Whenever possible, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName&gt;</ph> method overload.","pos":[332,465],"source":" Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload."}]}]}],"pos":[27000,29028],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[29186,29203],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> object whose value is the Coordinated Universal Time (UTC) that corresponds to <code>time</code>.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object whose value is the Coordinated Universal Time (UTC) that corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.DateTime\"></xref> object whose value is the Coordinated Universal Time (UTC) that corresponds to <code>time</code>."}],"pos":[29262,29399],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.TimeZone\n  commentId: T:System.TimeZone\n  id: TimeZone\n  children:\n  - System.TimeZone.#ctor\n  - System.TimeZone.CurrentTimeZone\n  - System.TimeZone.DaylightName\n  - System.TimeZone.GetDaylightChanges(System.Int32)\n  - System.TimeZone.GetUtcOffset(System.DateTime)\n  - System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  - System.TimeZone.StandardName\n  - System.TimeZone.ToLocalTime(System.DateTime)\n  - System.TimeZone.ToUniversalTime(System.DateTime)\n  langs:\n  - csharp\n  name: TimeZone\n  nameWithType: TimeZone\n  fullName: System.TimeZone\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Represents a time zone.\n  remarks: \"A time zone is a geographical region in which the same standard time is used.  \\n  \\n> [!IMPORTANT]\\n>  Whenever possible, use the <xref:System.TimeZoneInfo> class instead of the <xref:System.TimeZone> class.  \\n  \\n You can use the <xref:System.TimeZone> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa. However, you cannot use the <xref:System.TimeZone> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another. For this purpose, use the <xref:System.TimeZoneInfo> class. You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.  \\n  \\n The <xref:System.TimeZone> class supports only a single daylight saving time adjustment rule for the local time zone. As a result, the <xref:System.TimeZone> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect. In contrast, the <xref:System.TimeZoneInfo> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.\"\n  example:\n  - \"The following example references and displays selected `TimeZone` class elements.  \\n  \\n [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]\\n [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]\\n [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class TimeZone\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.#ctor\n  commentId: M:System.TimeZone.#ctor\n  id: '#ctor'\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: TimeZone()\n  nameWithType: TimeZone.TimeZone()\n  fullName: TimeZone.TimeZone()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.TimeZone\"></xref> class.\n  syntax:\n    content: protected TimeZone ();\n    parameters: []\n  overload: System.TimeZone.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.CurrentTimeZone\n  commentId: P:System.TimeZone.CurrentTimeZone\n  id: CurrentTimeZone\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: CurrentTimeZone\n  nameWithType: TimeZone.CurrentTimeZone\n  fullName: TimeZone.CurrentTimeZone\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the time zone of the current computer.\n  remarks: The <xref:System.TimeZone.CurrentTimeZone%2A> property corresponds to the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.  \\n  \\n [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]\\n [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]\\n [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]\"\n  syntax:\n    content: public static TimeZone CurrentTimeZone { get; }\n    return:\n      type: System.TimeZone\n      description: A <xref href=\"System.TimeZone\"></xref> object that represents the current local time zone.\n  overload: System.TimeZone.CurrentTimeZone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.DaylightName\n  commentId: P:System.TimeZone.DaylightName\n  id: DaylightName\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: DaylightName\n  nameWithType: TimeZone.DaylightName\n  fullName: TimeZone.DaylightName\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the daylight saving time zone name.\n  remarks: \"If daylight saving time is not used in the time zone, an empty string (\\\"\\\") is returned.  \\n  \\n The <xref:System.TimeZone.DaylightName%2A> property corresponds to the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following example references and displays the `DaylightName` property of the current time zone.  \\n  \\n [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]\\n [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]\\n [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]\"\n  syntax:\n    content: public abstract string DaylightName { get; }\n    return:\n      type: System.String\n      description: The daylight saving time zone name.\n  overload: System.TimeZone.DaylightName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.GetDaylightChanges(System.Int32)\n  commentId: M:System.TimeZone.GetDaylightChanges(System.Int32)\n  id: GetDaylightChanges(System.Int32)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: GetDaylightChanges(Int32)\n  nameWithType: TimeZone.GetDaylightChanges(Int32)\n  fullName: TimeZone.GetDaylightChanges(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the daylight saving time period for a particular year.\n  remarks: \"Only one daylight saving time period per year is supported.  \\n  \\n If daylight saving time is not used in the current time zone, the return value is a <xref:System.Globalization.DaylightTime> object, where the value of <xref:System.Globalization.DaylightTime.Start%2A> and <xref:System.Globalization.DaylightTime.End%2A> is <xref:System.DateTime.MinValue?displayProperty=fullName>, and the value of <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> is a <xref:System.TimeSpan> initialized to 0 ticks.\"\n  syntax:\n    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year that the daylight saving time period applies to.\n    return:\n      type: System.Globalization.DaylightTime\n      description: A <xref href=\"System.Globalization.DaylightTime\"></xref> object that contains the start and end date for daylight saving time in <code>year</code>.\n  overload: System.TimeZone.GetDaylightChanges*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is less than 1 or greater than 9999.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.GetUtcOffset(System.DateTime)\n  commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)\n  id: GetUtcOffset(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: GetUtcOffset(DateTime)\n  nameWithType: TimeZone.GetUtcOffset(DateTime)\n  fullName: TimeZone.GetUtcOffset(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the Coordinated Universal Time (UTC) offset for the specified local time.\n  remarks: \"This method returns the offset, or difference, between the `time` parameter and Coordinated Universal Time (UTC). That is:  \\n  \\n `time` = UTC + offset  \\n  \\n The method interprets the time zone of `time` based on its <xref:System.DateTime.Kind%2A> property. If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the method returns the offset of the local time zone. If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, the method returns an offset equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \\n  \\n If the local time zone observes daylight saving time, <xref:System.TimeZone.GetUtcOffset%2A> applies the current adjustment rule to `time` when determining the offset of the local time zone. That is, the offset returned by <xref:System.TimeZone.GetUtcOffset%2A> reflects whether `time` falls in the time zone's standard time or its daylight saving time.  \\n  \\n> [!NOTE]\\n>  The <xref:System.TimeZone.GetUtcOffset%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.  \\n  \\n The <xref:System.TimeZone.GetUtcOffset%2A> method corresponds to the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> method.  \\n  \\n Because the date and time value represented by `time` and this value's offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones. If this behavior is undesirable, use a <xref:System.DateTimeOffset> value instead. The <xref:System.DateTimeOffset> data type tightly couples a date and time value with its offset from UTC.\"\n  syntax:\n    content: public abstract TimeSpan GetUtcOffset (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: A date and time value.\n    return:\n      type: System.TimeSpan\n      description: The Coordinated Universal Time (UTC) offset from <code>time</code>.\n  overload: System.TimeZone.GetUtcOffset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  commentId: M:System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  id: IsDaylightSavingTime(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: IsDaylightSavingTime(DateTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)\n  fullName: TimeZone.IsDaylightSavingTime(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value indicating whether the specified date and time is within a daylight saving time period.\n  remarks: \"The year to which the daylight saving time period applies is derived from the `time` parameter.  \\n  \\n Because the <xref:System.TimeZone> class supports a single daylight saving time adjustment rule, the <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date. Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public virtual bool IsDaylightSavingTime (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: A date and time.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>time</code> is in a daylight saving time period; otherwise, `false`.'\n  overload: System.TimeZone.IsDaylightSavingTime*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  commentId: M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: IsDaylightSavingTime(DateTime, DaylightTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime, DaylightTime)\n  fullName: TimeZone.IsDaylightSavingTime(DateTime, DaylightTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value indicating whether the specified date and time is within the specified daylight saving time period.\n  remarks: The <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method provides the same functionality as this overload of the <xref:System.TimeZone.IsDaylightSavingTime%2A> method. Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method.\n  syntax:\n    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: A date and time.\n    - id: daylightTimes\n      type: System.Globalization.DaylightTime\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>time</code> is in <code>daylightTimes</code>; otherwise, `false`.'\n  overload: System.TimeZone.IsDaylightSavingTime*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>daylightTimes</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.StandardName\n  commentId: P:System.TimeZone.StandardName\n  id: StandardName\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: StandardName\n  nameWithType: TimeZone.StandardName\n  fullName: TimeZone.StandardName\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the standard time zone name.\n  remarks: The <xref:System.TimeZone.StandardName%2A> property corresponds to the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property. Whenever possible, use the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example references and displays the `StandardName` property of the current time zone.  \\n  \\n [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]\\n [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]\\n [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]\"\n  syntax:\n    content: public abstract string StandardName { get; }\n    return:\n      type: System.String\n      description: The standard time zone name.\n  overload: System.TimeZone.StandardName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt was made to set this property to `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.ToLocalTime(System.DateTime)\n  commentId: M:System.TimeZone.ToLocalTime(System.DateTime)\n  id: ToLocalTime(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: ToLocalTime(DateTime)\n  nameWithType: TimeZone.ToLocalTime(DateTime)\n  fullName: TimeZone.ToLocalTime(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the local time that corresponds to a specified date and time value.\n  remarks: \"The following table shows the relationship between the `time` parameter and the <xref:System.DateTime> value returned by this method.  \\n  \\n|`time` parameter|Behavior|Return value|  \\n|----------------------|--------------|------------------|  \\n|A Coordinated Universal Time (UTC) time (<xref:System.DateTimeKind?displayProperty=fullName>).|Converts the time from UTC to the local time.|A <xref:System.DateTime> object whose value is the local time that corresponds to `time`.|  \\n|A local time (<xref:System.DateTimeKind?displayProperty=fullName>).|No conversion necessary.|The same <xref:System.DateTime> value represented by the `time` parameter.|  \\n|An unspecified time (<xref:System.DateTimeKind?displayProperty=fullName>).|Assumes that the time is UTC and converts it from UTC to the local time.|A <xref:System.DateTime> object whose value is the local time that corresponds to `time`.|  \\n  \\n If the local time zone observes daylight saving time, <xref:System.TimeZone.ToLocalTime%2A> applies the current adjustment rule to `time` when performing the conversion.  \\n  \\n> [!NOTE]\\n>  The <xref:System.TimeZone.ToLocalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.  \\n  \\n The <xref:System.TimeZone.ToLocalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method with its `destinationTimeZone` parameter set to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public virtual DateTime ToLocalTime (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: A Coordinated Universal Time (UTC) time.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> object whose value is the local time that corresponds to <code>time</code>.\n  overload: System.TimeZone.ToLocalTime*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZone.ToUniversalTime(System.DateTime)\n  commentId: M:System.TimeZone.ToUniversalTime(System.DateTime)\n  id: ToUniversalTime(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: ToUniversalTime(DateTime)\n  nameWithType: TimeZone.ToUniversalTime(DateTime)\n  fullName: TimeZone.ToUniversalTime(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.\n  remarks: \"If the local time zone observes daylight saving time, <xref:System.TimeZone.ToUniversalTime%2A> applies the current adjustment rule to the `time` parameter when performing the conversion.  \\n  \\n> [!NOTE]\\n>  The <xref:System.TimeZone.ToUniversalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.  \\n  \\n If the `time` parameter is an ambiguous time, the method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If `time` is an invalid time, the method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)  \\n  \\n Because `time` is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones. For cases in which a date and time value must represent a single, unambiguous point in time, use a <xref:System.DateTimeOffset> value to represent the local time.  \\n  \\n The <xref:System.TimeZone.ToUniversalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload with a <xref:System.DateTime> parameter whose <xref:System.DateTime.Kind%2A> property does not equal <xref:System.DateTimeKind?displayProperty=fullName>. Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> method overload.\"\n  syntax:\n    content: public virtual DateTime ToUniversalTime (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: A date and time.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> object whose value is the Coordinated Universal Time (UTC) that corresponds to <code>time</code>.\n  overload: System.TimeZone.ToUniversalTime*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.TimeZone.#ctor\n  parent: System.TimeZone\n  isExternal: false\n  name: TimeZone()\n  nameWithType: TimeZone.TimeZone()\n  fullName: TimeZone.TimeZone()\n- uid: System.TimeZone.CurrentTimeZone\n  parent: System.TimeZone\n  isExternal: false\n  name: CurrentTimeZone\n  nameWithType: TimeZone.CurrentTimeZone\n  fullName: TimeZone.CurrentTimeZone\n- uid: System.TimeZone\n  parent: System\n  isExternal: false\n  name: TimeZone\n  nameWithType: TimeZone\n  fullName: System.TimeZone\n- uid: System.TimeZone.DaylightName\n  parent: System.TimeZone\n  isExternal: false\n  name: DaylightName\n  nameWithType: TimeZone.DaylightName\n  fullName: TimeZone.DaylightName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.TimeZone.GetDaylightChanges(System.Int32)\n  parent: System.TimeZone\n  isExternal: false\n  name: GetDaylightChanges(Int32)\n  nameWithType: TimeZone.GetDaylightChanges(Int32)\n  fullName: TimeZone.GetDaylightChanges(Int32)\n- uid: System.Globalization.DaylightTime\n  parent: System.Globalization\n  isExternal: false\n  name: DaylightTime\n  nameWithType: DaylightTime\n  fullName: System.Globalization.DaylightTime\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TimeZone.GetUtcOffset(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: GetUtcOffset(DateTime)\n  nameWithType: TimeZone.GetUtcOffset(DateTime)\n  fullName: TimeZone.GetUtcOffset(DateTime)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: IsDaylightSavingTime(DateTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)\n  fullName: TimeZone.IsDaylightSavingTime(DateTime)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: IsDaylightSavingTime(DateTime, DaylightTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime, DaylightTime)\n  fullName: TimeZone.IsDaylightSavingTime(DateTime, DaylightTime)\n- uid: System.TimeZone.StandardName\n  parent: System.TimeZone\n  isExternal: false\n  name: StandardName\n  nameWithType: TimeZone.StandardName\n  fullName: TimeZone.StandardName\n- uid: System.TimeZone.ToLocalTime(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: ToLocalTime(DateTime)\n  nameWithType: TimeZone.ToLocalTime(DateTime)\n  fullName: TimeZone.ToLocalTime(DateTime)\n- uid: System.TimeZone.ToUniversalTime(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: ToUniversalTime(DateTime)\n  nameWithType: TimeZone.ToUniversalTime(DateTime)\n  fullName: TimeZone.ToUniversalTime(DateTime)\n- uid: System.TimeZone.#ctor*\n  parent: System.TimeZone\n  isExternal: false\n  name: TimeZone\n  nameWithType: TimeZone.TimeZone\n  fullName: TimeZone.TimeZone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.CurrentTimeZone*\n  parent: System.TimeZone\n  isExternal: false\n  name: CurrentTimeZone\n  nameWithType: TimeZone.CurrentTimeZone\n  fullName: TimeZone.CurrentTimeZone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.DaylightName*\n  parent: System.TimeZone\n  isExternal: false\n  name: DaylightName\n  nameWithType: TimeZone.DaylightName\n  fullName: TimeZone.DaylightName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.GetDaylightChanges*\n  parent: System.TimeZone\n  isExternal: false\n  name: GetDaylightChanges\n  nameWithType: TimeZone.GetDaylightChanges\n  fullName: TimeZone.GetDaylightChanges\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.GetUtcOffset*\n  parent: System.TimeZone\n  isExternal: false\n  name: GetUtcOffset\n  nameWithType: TimeZone.GetUtcOffset\n  fullName: TimeZone.GetUtcOffset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.IsDaylightSavingTime*\n  parent: System.TimeZone\n  isExternal: false\n  name: IsDaylightSavingTime\n  nameWithType: TimeZone.IsDaylightSavingTime\n  fullName: TimeZone.IsDaylightSavingTime\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.StandardName*\n  parent: System.TimeZone\n  isExternal: false\n  name: StandardName\n  nameWithType: TimeZone.StandardName\n  fullName: TimeZone.StandardName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.ToLocalTime*\n  parent: System.TimeZone\n  isExternal: false\n  name: ToLocalTime\n  nameWithType: TimeZone.ToLocalTime\n  fullName: TimeZone.ToLocalTime\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.TimeZone.ToUniversalTime*\n  parent: System.TimeZone\n  isExternal: false\n  name: ToUniversalTime\n  nameWithType: TimeZone.ToUniversalTime\n  fullName: TimeZone.ToUniversalTime\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZone.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}