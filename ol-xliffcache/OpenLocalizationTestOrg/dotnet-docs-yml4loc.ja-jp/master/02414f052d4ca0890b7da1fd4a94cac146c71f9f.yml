### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeader
  commentId: T:System.Web.Services.Protocols.SoapHeader
  id: SoapHeader
  children:
  - System.Web.Services.Protocols.SoapHeader.#ctor
  - System.Web.Services.Protocols.SoapHeader.Actor
  - System.Web.Services.Protocols.SoapHeader.DidUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  - System.Web.Services.Protocols.SoapHeader.EncodedRelay
  - System.Web.Services.Protocols.SoapHeader.MustUnderstand
  - System.Web.Services.Protocols.SoapHeader.Relay
  - System.Web.Services.Protocols.SoapHeader.Role
  langs:
  - csharp
  name: SoapHeader
  nameWithType: SoapHeader
  fullName: System.Web.Services.Protocols.SoapHeader
  type: Class
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: When overridden in a derived class, represents the content of a SOAP header.
  remarks: "SOAP headers offer a method for passing data to and from an XML Web service method if the data is not directly related to the XML Web service method's primary functionality. For instance, an XML Web service might contain several XML Web service methods that each require a custom authentication scheme. Instead of adding parameters to each XML Web service method for the custom authentication scheme, a <xref:System.Web.Services.Protocols.SoapHeaderAttribute>, referring to a class deriving from <xref:System.Web.Services.Protocols.SoapHeader>, can be applied to each XML Web service method. The implementation for the class deriving from <xref:System.Web.Services.Protocols.SoapHeader> handles the custom authentication scheme. In this manner, the XML Web service method implements only the functionality specific to it and adds additional functionality using a SOAP header.  \n  \n The following list outlines the basic steps to receiving and processing a SOAP header:  \n  \n1.  Create a class that derives from <xref:System.Web.Services.Protocols.SoapHeader> representing the data passed into the SOAP header.  \n  \n2.  Add a member to the class implementing an XML Web service or an XML Web service client proxy class, of the type created in the first step.  \n  \n3.  Apply a <xref:System.Web.Services.Protocols.SoapHeaderAttribute> to the XML Web service method or the corresponding method in the proxy class, specifying the member created in the second step in the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property.  \n  \n4.  Within the XML Web service method or XML Web service client code, access the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property to process the data sent in the SOAP header."
  example:
  - The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header.
  syntax:
    content: public abstract class SoapHeader
  inheritance:
  - System.Object
  derivedClasses:
  - System.Web.Services.Protocols.SoapUnknownHeader
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  commentId: M:System.Web.Services.Protocols.SoapHeader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: SoapHeader.SoapHeader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Initializes a new instance of the <xref href="System.Web.Services.Protocols.SoapHeader"></xref> class.
  syntax:
    content: protected SoapHeader ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHeader.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  commentId: P:System.Web.Services.Protocols.SoapHeader.Actor
  id: Actor
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: SoapHeader.Actor
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the recipient of the SOAP header.
  remarks: "To set the recipient of a SOAP header, set the <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> property. Regardless of the version of the SOAP protocol used to communicate with an XML Web service, the .NET Framework automatically generates the SOAP message specific to the version of the SOAP protocol. Specifically, the XML element and XML namespace representing the recipient differ for the two versions.  \n  \n XML Web services receiving the SOAP header can get the intended recipient by getting either the <xref:System.Web.Services.Protocols.SoapHeader.Role%2A> or <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> properties.  \n  \n The recipient(s) for the `Body` element and each of the SOAP headers within the `Header` element of a SOAP message need not be the same. If a `Header` element exists in the SOAP message, it represents additional data that can be sent to and from the XML Web service method or an intermediary. The recipient of that data, known as the SOAP `Actor` in version 1.1, can be a different URI than the URI for the XML Web service method.  \n  \n For more information on the SOAP `actor` attribute, see the SOAP specification at http://www.w3.org/TR/SOAP/."
  example:
  - "The following XML Web service client calls the `MyWebMethod` XML Web service method after creating a custom SOAP header of type `MyHeader` and setting the <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> property to `http://www.contoso.com/MySoapHeaderHandler`.  \n  \n [!code-cpp[Classic SoapHeader.Actor Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SoapHeader.Actor Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CS/source.cs#1)]\n [!code-vb[Classic SoapHeader.Actor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/VB/source.vb#1)]"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: The recipient of the SOAP header. The default is an empty string ("").
  overload: System.Web.Services.Protocols.SoapHeader.Actor*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  commentId: P:System.Web.Services.Protocols.SoapHeader.DidUnderstand
  id: DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: SoapHeader.DidUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets a value indicating whether an XML Web service method properly processed a SOAP header.
  remarks: For SOAP headers defined by an XML Web service, ASP.NET assumes the XML Web service method properly processed the SOAP header by setting the initial value of <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> to `true`. For SOAP headers not defined by the XML Web service, the initial value is `false`. If ASP.NET detects SOAP headers passed to an XML Web service method with <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> set to `false` after the method returns, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown back to the XML Web service client instead of the results from the XML Web service method.
  example:
  - The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, the `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header. For SOAP headers that `MyWebMethod` can process, <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> is set to `true`.
  syntax:
    content: public bool DidUnderstand { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the SOAP header was properly processed; otherwise `false`.'
  overload: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  commentId: P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  id: EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: SoapHeader.EncodedMustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the value of the `mustUnderstand` XML attribute for the SOAP header when communicating with SOAP protocol version 1.1.
  remarks: Do not use this property. Instead use the <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> property.
  example:
  - >-
    [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CPP/soapheader_encodedmustunderstand.cpp#1)]
     [!code-csharp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CS/soapheader_encodedmustunderstand.cs#1)]
     [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/VB/soapheader_encodedmustunderstand.vb#1)]
  syntax:
    content: public string EncodedMustUnderstand { get; set; }
    return:
      type: System.String
      description: The value of the `mustUnderstand` attribute. The default is "0".
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The property is set to a value other than: "0", "1", "true", or "false".'
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  commentId: P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  id: EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: SoapHeader.EncodedMustUnderstand12
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the value of the `mustUnderstand` XML attribute for the SOAP header when communicating with SOAP protocol version 1.2.
  remarks: Do not use this property. Instead use the <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> property.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public string EncodedMustUnderstand12 { get; set; }
    return:
      type: System.String
      description: The value of the `mustUnderstand` XML attribute of a SOAP header. The default is "0".
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The property is set to a value other than: "0", "1", "true", or "false".'
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  commentId: P:System.Web.Services.Protocols.SoapHeader.EncodedRelay
  id: EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: SoapHeader.EncodedRelay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the relay attribute of the SOAP 1.2 header.
  remarks: The <xref:System.Web.Services.Protocols.SoapHeader.EncodedRelay%2A> property applies only to SOAP 1.2 and indicates whether the recipient of the message forwards this header when it forwards the message to the next node downstream. Because the .NET Framework does not support SOAP intermediaries, this property is serialized and deserialized but ignored.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public string EncodedRelay { get; set; }
    return:
      type: System.String
      description: Either "0", "false", "1", or "true".
  overload: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  commentId: P:System.Web.Services.Protocols.SoapHeader.MustUnderstand
  id: MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: SoapHeader.MustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets a value indicating whether the <xref href="System.Web.Services.Protocols.SoapHeader"></xref> must be understood.
  remarks: "When an XML Web service client adds a SOAP header to an XML Web service method call with the <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> property set to `true`, the XML Web service method must set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property to `true`; otherwise, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown back to the XML Web service client by ASP.NET.  \n  \n Although both the <xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A> and <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> properties can be used to set the value of the `mustUnderstand` attribute within the SOAP header, the <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> property allows you to set the attribute using a Boolean value.  \n  \n For details on adding SOAP headers to clients, see [&#91;\\<topic://cpconusingsoapheaders>&#93;](http://msdn.microsoft.com/en-us/7bd961f2-b492-48d0-bafe-09d5d5fec3ba)."
  example:
  - "The following XML Web service client defines a custom SOAP header of type `MyHeader`, sets the <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> property to `true`, and invokes the `MyWebMethod` XML Web service method. If the XML Web service method does not set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property of the `MyHeader` SOAP header to `true`, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown.  \n  \n [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CS/source.cs#1)]\n [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/VB/source.vb#1)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the XML Web service must properly interpret and process the <xref href="System.Web.Services.Protocols.SoapHeader"></xref>; otherwise, `false`. The default is `false`.'
  overload: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  commentId: P:System.Web.Services.Protocols.SoapHeader.Relay
  id: Relay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: SoapHeader.Relay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets a value that indicates whether the SOAP header is to be relayed to the next SOAP node if the current node does not understand the header.
  remarks: The default SOAP 1.2 processing rules require SOAP nodes to remove headers that are not understood by the SOAP processing node before passing the message on to the next node.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the SOAP header has a "relay" attribute set to "true"; otherwise, `false`.'
  overload: System.Web.Services.Protocols.SoapHeader.Relay*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHeader.Role
  commentId: P:System.Web.Services.Protocols.SoapHeader.Role
  id: Role
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Role
  nameWithType: SoapHeader.Role
  fullName: SoapHeader.Role
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the recipient of the SOAP header.
  remarks: "To set the recipient of a SOAP header, set the <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> property. Regardless of the version of the SOAP protocol used to communicate with an XML Web service, the .NET Framework automatically generates the SOAP message specific to the version of the SOAP protocol. Specifically, the XML element and XML namespace representing the recipient differ for the two versions.  \n  \n XML Web services receiving the SOAP header can get the intended recipient by getting either the <xref:System.Web.Services.Protocols.SoapHeader.Role%2A> or <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> properties.  \n  \n The recipient(s) for the `Body` element and each of the SOAP headers within the `Header` element of a SOAP message need not be the same. If a `Header` element exists in the SOAP message, it represents additional data that can be sent to and from the XML Web service method or an intermediary. The recipient of that data, known as the SOAP `Role` in version 1.2 of the SOAP specification and the SOAP `Actor` in version 1.1, can be a different URI than the URI for the XML Web service method.  \n  \n For more information on the SOAP `actor` attribute, see the SOAP specification at http://www.w3.org/TR/SOAP/."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public string Role { get; set; }
    return:
      type: System.String
      description: A URI that represents the recipient of the SOAP header. The default is an empty string ("").
  overload: System.Web.Services.Protocols.SoapHeader.Role*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: SoapHeader.SoapHeader()
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: SoapHeader.Actor
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: SoapHeader.DidUnderstand
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
  fullName: SoapHeader.Role
- uid: System.Web.Services.Protocols.SoapHeader.#ctor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader
  nameWithType: SoapHeader.SoapHeader
  fullName: SoapHeader.SoapHeader
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.Actor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: SoapHeader.Actor
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: SoapHeader.DidUnderstand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: SoapHeader.EncodedMustUnderstand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: SoapHeader.EncodedMustUnderstand12
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: SoapHeader.EncodedRelay
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: SoapHeader.MustUnderstand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.Relay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: SoapHeader.Relay
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Web.Services.Protocols.SoapHeader.Role*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
  fullName: SoapHeader.Role
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHeader.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
