{"nodes":[{"content":"Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.","nodes":[{"pos":[0,103],"content":"Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.","nodes":[{"content":"Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.","pos":[0,103]}]}],"pos":[788,892],"yaml":true},{"content":"Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.","nodes":[{"pos":[0,147],"content":"Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.","nodes":[{"content":"Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.","pos":[0,147],"nodes":[{"content":"Kerberos authentication, using service principal names (SPNs), required.","pos":[0,72]},{"content":"If Kerberos authentication fails, the AD LDS instances will not replicate.","pos":[73,147]}]}]}],"pos":[2179,2327],"yaml":true},{"content":"Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.","nodes":[{"pos":[0,165],"content":"Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.","nodes":[{"content":"Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.","pos":[0,165],"nodes":[{"content":"Kerberos authentication (using SPNs) is attempted first.","pos":[0,56]},{"content":"If Kerberos fails, NTLM authentication is attempted.","pos":[57,109]},{"content":"If NTLM fails, the AD LDS instances will not replicate.","pos":[110,165]}]}]}],"pos":[3525,3691],"yaml":true},{"content":"All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.","nodes":[{"pos":[0,119],"content":"All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.","nodes":[{"content":"All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.","pos":[0,119]}]}],"pos":[4944,5064],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  commentId: T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  id: ReplicationSecurityLevel\n  children:\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  langs:\n  - csharp\n  name: ReplicationSecurityLevel\n  nameWithType: ReplicationSecurityLevel\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  type: Enum\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.\n  syntax:\n    content: public enum ReplicationSecurityLevel\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ReplicationSecurityLevel.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  commentId: F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  id: MutualAuthentication\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  langs:\n  - csharp\n  name: MutualAuthentication\n  nameWithType: ReplicationSecurityLevel.MutualAuthentication\n  fullName: ReplicationSecurityLevel.MutualAuthentication\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.\n  syntax:\n    content: MutualAuthentication\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ReplicationSecurityLevel.xml\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  commentId: F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  id: Negotiate\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  langs:\n  - csharp\n  name: Negotiate\n  nameWithType: ReplicationSecurityLevel.Negotiate\n  fullName: ReplicationSecurityLevel.Negotiate\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.\n  syntax:\n    content: Negotiate\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ReplicationSecurityLevel.xml\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  commentId: F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  id: NegotiatePassThrough\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  langs:\n  - csharp\n  name: NegotiatePassThrough\n  nameWithType: ReplicationSecurityLevel.NegotiatePassThrough\n  fullName: ReplicationSecurityLevel.NegotiatePassThrough\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.\n  syntax:\n    content: NegotiatePassThrough\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ReplicationSecurityLevel.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  isExternal: false\n  name: MutualAuthentication\n  nameWithType: ReplicationSecurityLevel.MutualAuthentication\n  fullName: ReplicationSecurityLevel.MutualAuthentication\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationSecurityLevel\n  nameWithType: ReplicationSecurityLevel\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  isExternal: false\n  name: Negotiate\n  nameWithType: ReplicationSecurityLevel.Negotiate\n  fullName: ReplicationSecurityLevel.Negotiate\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  isExternal: false\n  name: NegotiatePassThrough\n  nameWithType: ReplicationSecurityLevel.NegotiatePassThrough\n  fullName: ReplicationSecurityLevel.NegotiatePassThrough\n"}