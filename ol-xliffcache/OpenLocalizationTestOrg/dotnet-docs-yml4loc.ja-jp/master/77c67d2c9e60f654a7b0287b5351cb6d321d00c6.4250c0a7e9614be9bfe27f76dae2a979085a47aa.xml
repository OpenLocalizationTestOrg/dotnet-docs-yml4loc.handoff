{"nodes":[{"content":"Provides access to instances of the C# code generator and code compiler.","nodes":[{"pos":[0,72],"content":"Provides access to instances of the C# code generator and code compiler.","nodes":[{"content":"Provides access to instances of the C# code generator and code compiler.","pos":[0,72]}]}],"pos":[948,1021],"yaml":true},{"content":"This class provides methods that can be used to retrieve instances of the C# <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.  \n  \n> [!NOTE]\n>  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.","nodes":[{"pos":[0,188],"content":"This class provides methods that can be used to retrieve instances of the C# <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.","nodes":[{"content":"This class provides methods that can be used to retrieve instances of the C# <ph id=\"ph1\">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementations.","pos":[0,188],"source":"This class provides methods that can be used to retrieve instances of the C# <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations."}]},{"pos":[196,458],"content":"[!NOTE]\n This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.","leadings":["","> "],"nodes":[{"content":" This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.","pos":[8,260],"nodes":[{"content":"This class contains a link demand and an inheritance demand at the class level that applies to all members.","pos":[1,108]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.","pos":[109,252],"source":" A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission."}]}]}],"pos":[1032,1496],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.CSharp.CSharpCodeProvider\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.CSharp.CSharpCodeProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.CSharp.CSharpCodeProvider\"></xref> class."}],"pos":[6981,7079],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"Microsoft.CSharp.CSharpCodeProvider\"></xref> class by using the specified provider options.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.CSharp.CSharpCodeProvider\"&gt;&lt;/xref&gt;</ph> class by using the specified provider options.","source":"Initializes a new instance of the <xref href=\"Microsoft.CSharp.CSharpCodeProvider\"></xref> class by using the specified provider options."}],"pos":[8504,8642],"yaml":true},{"content":"The value for `providerOptions` is obtained from the  element in the configuration file. You can identify the version of the <xref:Microsoft.CSharp.CSharpCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value.  You must precede the version number with a lower case \"v\".","nodes":[{"pos":[0,413],"content":"The value for `providerOptions` is obtained from the  element in the configuration file. You can identify the version of the <xref:Microsoft.CSharp.CSharpCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value.  You must precede the version number with a lower case \"v\".","nodes":[{"content":"The value for <ph id=\"ph1\">`providerOptions`</ph> is obtained from the  element in the configuration file.","pos":[0,88],"source":"The value for `providerOptions` is obtained from the  element in the configuration file."},{"content":"You can identify the version of the <ph id=\"ph1\">&lt;xref:Microsoft.CSharp.CSharpCodeProvider&gt;</ph> you want to use by specifying the <ph id=\"ph2\">`&lt;providerOption&gt;`</ph> element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value.","pos":[89,353],"source":" You can identify the version of the <xref:Microsoft.CSharp.CSharpCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value."},{"content":"You must precede the version number with a lower case \"v\".","pos":[355,413]}]}],"pos":[8653,9067],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> object that contains the provider options from the configuration file.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IDictionary`2\"&gt;&lt;/xref&gt;</ph> object that contains the provider options from the configuration file.","source":"A <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> object that contains the provider options from the configuration file."}],"pos":[10405,10540],"yaml":true},{"content":"<code>providerOptions</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;providerOptions&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>providerOptions</code> is `null`."}],"pos":[10711,10751],"yaml":true},{"content":"Gets an instance of the C# code compiler.","nodes":[{"pos":[0,41],"content":"Gets an instance of the C# code compiler.","nodes":[{"content":"Gets an instance of the C# code compiler.","pos":[0,41]}]}],"pos":[11755,11797],"yaml":true},{"content":"An instance of the C# <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> implementation.","nodes":[{"pos":[0,96],"content":"An instance of the C# <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeCompiler\"&gt;&lt;/xref&gt;</ph> implementation.","source":"An instance of the C# <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> implementation."}],"pos":[12056,12153],"yaml":true},{"content":"Gets an instance of the C# code generator.","nodes":[{"pos":[0,42],"content":"Gets an instance of the C# code generator.","nodes":[{"content":"Gets an instance of the C# code generator.","pos":[0,42]}]}],"pos":[13293,13336],"yaml":true},{"content":"An instance of the C# <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> implementation.","nodes":[{"pos":[0,97],"content":"An instance of the C# <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeGenerator\"&gt;&lt;/xref&gt;</ph> implementation.","source":"An instance of the C# <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> implementation."}],"pos":[13598,13696],"yaml":true},{"content":"Gets the file name extension to use when creating source code files.","nodes":[{"pos":[0,68],"content":"Gets the file name extension to use when creating source code files.","nodes":[{"content":"Gets the file name extension to use when creating source code files.","pos":[0,68]}]}],"pos":[14821,14890],"yaml":true},{"content":"This file name extension is usually the extension used by the language's source code files.","nodes":[{"pos":[0,91],"content":"This file name extension is usually the extension used by the language's source code files.","nodes":[{"content":"This file name extension is usually the extension used by the language's source code files.","pos":[0,91]}]}],"pos":[14901,14993],"yaml":true,"extradata":"MT"},{"content":"The file name extension to use for generated source code files.","nodes":[{"pos":[0,63],"content":"The file name extension to use for generated source code files.","nodes":[{"content":"The file name extension to use for generated source code files.","pos":[0,63]}]}],"pos":[15119,15183],"yaml":true},{"content":"Generates code for the specified class member using the specified text writer and code generator options.","nodes":[{"pos":[0,105],"content":"Generates code for the specified class member using the specified text writer and code generator options.","nodes":[{"content":"Generates code for the specified class member using the specified text writer and code generator options.","pos":[0,105]}]}],"pos":[16750,16856],"yaml":true},{"content":"Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.","nodes":[{"pos":[0,259],"content":"Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.","nodes":[{"content":"Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.","pos":[0,259],"nodes":[{"content":"Members are generated differently depending on their context.","pos":[0,61]},{"content":"For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.","pos":[62,188]},{"content":"This implementation generates code for a member in the class context.","pos":[190,259]}]}]}],"pos":[16867,17127],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeTypeMember\"></xref> to generate code for.","nodes":[{"pos":[0,74],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeMember\"&gt;&lt;/xref&gt;</ph> to generate code for.","source":"A <xref href=\"System.CodeDom.CodeTypeMember\"></xref> to generate code for."}],"pos":[18136,18211],"yaml":true},{"content":"The <xref href=\"System.IO.TextWriter\"></xref> to write to.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> to write to.","source":"The <xref href=\"System.IO.TextWriter\"></xref> to write to."}],"pos":[18280,18339],"yaml":true},{"content":"The <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> to use when generating the code.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"&gt;&lt;/xref&gt;</ph> to use when generating the code.","source":"The <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> to use when generating the code."}],"pos":[18433,18536],"yaml":true},{"content":"Gets a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type of object.","nodes":[{"pos":[0,97],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> for the specified type of object.","source":"Gets a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type of object."}],"pos":[19708,19806],"yaml":true},{"content":"A derived class can override this method to provide specific types of type converters for specific data types.","nodes":[{"pos":[0,110],"content":"A derived class can override this method to provide specific types of type converters for specific data types.","nodes":[{"content":"A derived class can override this method to provide specific types of type converters for specific data types.","pos":[0,110]}]}],"pos":[19817,19928],"yaml":true,"extradata":"MT"},{"content":"The type of object to retrieve a type converter for.","nodes":[{"pos":[0,52],"content":"The type of object to retrieve a type converter for.","nodes":[{"content":"The type of object to retrieve a type converter for.","pos":[0,52]}]}],"pos":[20137,20190],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> for the specified type.","source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type."}],"pos":[20269,20352],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.CSharp.CSharpCodeProvider\n  commentId: T:Microsoft.CSharp.CSharpCodeProvider\n  id: CSharpCodeProvider\n  children:\n  - Microsoft.CSharp.CSharpCodeProvider.#ctor\n  - Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  - Microsoft.CSharp.CSharpCodeProvider.CreateCompiler\n  - Microsoft.CSharp.CSharpCodeProvider.CreateGenerator\n  - Microsoft.CSharp.CSharpCodeProvider.FileExtension\n  - Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)\n  langs:\n  - csharp\n  name: CSharpCodeProvider\n  nameWithType: CSharpCodeProvider\n  fullName: Microsoft.CSharp.CSharpCodeProvider\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Provides access to instances of the C# code generator and code compiler.\n  remarks: \"This class provides methods that can be used to retrieve instances of the C# <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.  \\n  \\n> [!NOTE]\\n>  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.\"\n  example:\n  - \"The following example uses either the C# or Visual Basic code provider to compile a source file. The example checks the input file extension and uses the corresponding <xref:Microsoft.CSharp.CSharpCodeProvider> or <xref:Microsoft.VisualBasic.VBCodeProvider> for compilation. The input file is compiled into an executable file, and any compilation errors are displayed to the console.  \\n  \\n [!code-csharp[CodeDom_CodeProviders#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CodeProviders/CS/source.cs#1)]\\n [!code-vb[CodeDom_CodeProviders#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CodeProviders/VB/source.vb#1)]\"\n  syntax:\n    content: 'public class CSharpCodeProvider : System.CodeDom.Compiler.CodeDomProvider'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.CodeDom.Compiler.CodeDomProvider\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  - System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateParser\n  - System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo\n  - System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)\n  - System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n  - System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)\n  - System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.#ctor\n  commentId: M:Microsoft.CSharp.CSharpCodeProvider.#ctor\n  id: '#ctor'\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: CSharpCodeProvider()\n  nameWithType: CSharpCodeProvider.CSharpCodeProvider()\n  fullName: CSharpCodeProvider.CSharpCodeProvider()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Initializes a new instance of the <xref href=\"Microsoft.CSharp.CSharpCodeProvider\"></xref> class.\n  syntax:\n    content: public CSharpCodeProvider ();\n    parameters: []\n  overload: Microsoft.CSharp.CSharpCodeProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  commentId: M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: CSharpCodeProvider(IDictionary<String,String>)\n  nameWithType: CSharpCodeProvider.CSharpCodeProvider(IDictionary<String,String>)\n  fullName: CSharpCodeProvider.CSharpCodeProvider(IDictionary<String,String>)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Initializes a new instance of the <xref href=\"Microsoft.CSharp.CSharpCodeProvider\"></xref> class by using the specified provider options.\n  remarks: The value for `providerOptions` is obtained from the  element in the configuration file. You can identify the version of the <xref:Microsoft.CSharp.CSharpCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value.  You must precede the version number with a lower case \"v\".\n  example:\n  - \"The following configuration file example demonstrates how to specify that version 3.5 of the C# code provider should be used.  \\n  \\n```  \\n<configuration>  \\n  <system.codedom>  \\n    <compilers>  \\n      <!-- zero or more compiler elements -->  \\n      <compiler  \\n        language=\\\"c#;cs;csharp\\\"  \\n        extension=\\\".cs\\\"  \\n        type=\\\"Microsoft.CSharp.CSharpCodeProvider, System,   \\n          Version=2.0.3600.0, Culture=neutral,   \\n          PublicKeyToken=b77a5c561934e089\\\"  \\n        compilerOptions=\\\"/optimize\\\"  \\n        warningLevel=\\\"1\\\" >  \\n          <providerOption  \\n            name=\\\"CompilerVersion\\\"  \\n            value=\\\"v3.5\\\" />  \\n      </compiler>  \\n    </compilers>  \\n  </system.codedom>  \\n</configuration>  \\n```  \\n  \\n The following example shows how to specify the compiler version when you create a new instance of the <xref:Microsoft.CSharp.CSharpCodeProvider> class.  \\n  \\n [!code-csharp[CSProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/csprovider.provideroptions/cs/program.cs#1)]\"\n  syntax:\n    content: public CSharpCodeProvider (System.Collections.Generic.IDictionary<string,string> providerOptions);\n    parameters:\n    - id: providerOptions\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> object that contains the provider options from the configuration file.\n  overload: Microsoft.CSharp.CSharpCodeProvider.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>providerOptions</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.CreateCompiler\n  commentId: M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler\n  id: CreateCompiler\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: CreateCompiler()\n  nameWithType: CSharpCodeProvider.CreateCompiler()\n  fullName: CSharpCodeProvider.CreateCompiler()\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Gets an instance of the C# code compiler.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use CodeDomProvider class\")]\n\n      public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeCompiler\n      description: An instance of the C# <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> implementation.\n  overload: Microsoft.CSharp.CSharpCodeProvider.CreateCompiler*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.CreateGenerator\n  commentId: M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator\n  id: CreateGenerator\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: CreateGenerator()\n  nameWithType: CSharpCodeProvider.CreateGenerator()\n  fullName: CSharpCodeProvider.CreateGenerator()\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Gets an instance of the C# code generator.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use CodeDomProvider class\")]\n\n      public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeGenerator\n      description: An instance of the C# <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> implementation.\n  overload: Microsoft.CSharp.CSharpCodeProvider.CreateGenerator*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.FileExtension\n  commentId: P:Microsoft.CSharp.CSharpCodeProvider.FileExtension\n  id: FileExtension\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: FileExtension\n  nameWithType: CSharpCodeProvider.FileExtension\n  fullName: CSharpCodeProvider.FileExtension\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Gets the file name extension to use when creating source code files.\n  remarks: This file name extension is usually the extension used by the language's source code files.\n  syntax:\n    content: public override string FileExtension { get; }\n    return:\n      type: System.String\n      description: The file name extension to use for generated source code files.\n  overload: Microsoft.CSharp.CSharpCodeProvider.FileExtension*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  commentId: M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromMember(CodeTypeMember, TextWriter, CodeGeneratorOptions)\n  nameWithType: CSharpCodeProvider.GenerateCodeFromMember(CodeTypeMember, TextWriter, CodeGeneratorOptions)\n  fullName: CSharpCodeProvider.GenerateCodeFromMember(CodeTypeMember, TextWriter, CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Generates code for the specified class member using the specified text writer and code generator options.\n  remarks: Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.\n  example:\n  - \"The following code example shows the use of the <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A> method to create a code fragment to be used in a CodeDOM graph. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method of the <xref:System.CodeDom.Compiler.CodeDomProvider> class.  \\n  \\n [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]\\n [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: member\n      type: System.CodeDom.CodeTypeMember\n      description: A <xref href=\"System.CodeDom.CodeTypeMember\"></xref> to generate code for.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref href=\"System.IO.TextWriter\"></xref> to write to.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: The <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> to use when generating the code.\n  overload: Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)\n  commentId: M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)\n  id: GetConverter(System.Type)\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  langs:\n  - csharp\n  name: GetConverter(Type)\n  nameWithType: CSharpCodeProvider.GetConverter(Type)\n  fullName: CSharpCodeProvider.GetConverter(Type)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: Microsoft.CSharp\n  summary: Gets a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type of object.\n  remarks: A derived class can override this method to provide specific types of type converters for specific data types.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override System.ComponentModel.TypeConverter GetConverter (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object to retrieve a type converter for.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type.\n  overload: Microsoft.CSharp.CSharpCodeProvider.GetConverter*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.CodeDom.Compiler.CodeDomProvider\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CodeDomProvider\n  nameWithType: CodeDomProvider\n  fullName: System.CodeDom.Compiler.CodeDomProvider\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: Microsoft.CSharp.CSharpCodeProvider.#ctor\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CSharpCodeProvider()\n  nameWithType: CSharpCodeProvider.CSharpCodeProvider()\n  fullName: CSharpCodeProvider.CSharpCodeProvider()\n- uid: Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CSharpCodeProvider(IDictionary<String,String>)\n  nameWithType: CSharpCodeProvider.CSharpCodeProvider(IDictionary<String,String>)\n  fullName: CSharpCodeProvider.CSharpCodeProvider(IDictionary<String,String>)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.CSharp.CSharpCodeProvider.CreateCompiler\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CreateCompiler()\n  nameWithType: CSharpCodeProvider.CreateCompiler()\n  fullName: CSharpCodeProvider.CreateCompiler()\n- uid: System.CodeDom.Compiler.ICodeCompiler\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeCompiler\n  nameWithType: ICodeCompiler\n  fullName: System.CodeDom.Compiler.ICodeCompiler\n- uid: Microsoft.CSharp.CSharpCodeProvider.CreateGenerator\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CreateGenerator()\n  nameWithType: CSharpCodeProvider.CreateGenerator()\n  fullName: CSharpCodeProvider.CreateGenerator()\n- uid: System.CodeDom.Compiler.ICodeGenerator\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeGenerator\n  nameWithType: ICodeGenerator\n  fullName: System.CodeDom.Compiler.ICodeGenerator\n- uid: Microsoft.CSharp.CSharpCodeProvider.FileExtension\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: FileExtension\n  nameWithType: CSharpCodeProvider.FileExtension\n  fullName: CSharpCodeProvider.FileExtension\n- uid: Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: GenerateCodeFromMember(CodeTypeMember, TextWriter, CodeGeneratorOptions)\n  nameWithType: CSharpCodeProvider.GenerateCodeFromMember(CodeTypeMember, TextWriter, CodeGeneratorOptions)\n  fullName: CSharpCodeProvider.GenerateCodeFromMember(CodeTypeMember, TextWriter, CodeGeneratorOptions)\n- uid: System.CodeDom.CodeTypeMember\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeMember\n  nameWithType: CodeTypeMember\n  fullName: System.CodeDom.CodeTypeMember\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.CodeDom.Compiler.CodeGeneratorOptions\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CodeGeneratorOptions\n  nameWithType: CodeGeneratorOptions\n  fullName: System.CodeDom.Compiler.CodeGeneratorOptions\n- uid: Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: GetConverter(Type)\n  nameWithType: CSharpCodeProvider.GetConverter(Type)\n  fullName: CSharpCodeProvider.GetConverter(Type)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: Microsoft.CSharp.CSharpCodeProvider.#ctor*\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CSharpCodeProvider\n  nameWithType: CSharpCodeProvider.CSharpCodeProvider\n  fullName: CSharpCodeProvider.CSharpCodeProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n- uid: Microsoft.CSharp.CSharpCodeProvider.CreateCompiler*\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CreateCompiler\n  nameWithType: CSharpCodeProvider.CreateCompiler\n  fullName: CSharpCodeProvider.CreateCompiler\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n- uid: Microsoft.CSharp.CSharpCodeProvider.CreateGenerator*\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: CreateGenerator\n  nameWithType: CSharpCodeProvider.CreateGenerator\n  fullName: CSharpCodeProvider.CreateGenerator\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n- uid: Microsoft.CSharp.CSharpCodeProvider.FileExtension*\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: FileExtension\n  nameWithType: CSharpCodeProvider.FileExtension\n  fullName: CSharpCodeProvider.FileExtension\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n- uid: Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember*\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: GenerateCodeFromMember\n  nameWithType: CSharpCodeProvider.GenerateCodeFromMember\n  fullName: CSharpCodeProvider.GenerateCodeFromMember\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n- uid: Microsoft.CSharp.CSharpCodeProvider.GetConverter*\n  parent: Microsoft.CSharp.CSharpCodeProvider\n  isExternal: false\n  name: GetConverter\n  nameWithType: CSharpCodeProvider.GetConverter\n  fullName: CSharpCodeProvider.GetConverter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.CSharp/CSharpCodeProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromDom(CompilerParameters, CodeCompileUnit[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromDom(CompilerParameters, CodeCompileUnit[])\n  fullName: CodeDomProvider.CompileAssemblyFromDom(CompilerParameters, CodeCompileUnit[])\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromFile(CompilerParameters, String[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromFile(CompilerParameters, String[])\n  fullName: CodeDomProvider.CompileAssemblyFromFile(CompilerParameters, String[])\n- uid: System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CompileAssemblyFromSource(CompilerParameters, String[])\n  nameWithType: CodeDomProvider.CompileAssemblyFromSource(CompilerParameters, String[])\n  fullName: CodeDomProvider.CompileAssemblyFromSource(CompilerParameters, String[])\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateEscapedIdentifier(String)\n  nameWithType: CodeDomProvider.CreateEscapedIdentifier(String)\n  fullName: CodeDomProvider.CreateEscapedIdentifier(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateGenerator(TextWriter)\n  nameWithType: CodeDomProvider.CreateGenerator(TextWriter)\n  fullName: CodeDomProvider.CreateGenerator(TextWriter)\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateGenerator(String)\n  nameWithType: CodeDomProvider.CreateGenerator(String)\n  fullName: CodeDomProvider.CreateGenerator(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateParser\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateParser()\n  nameWithType: CodeDomProvider.CreateParser()\n  fullName: CodeDomProvider.CreateParser()\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateProvider(String)\n  nameWithType: CodeDomProvider.CreateProvider(String)\n  fullName: CodeDomProvider.CreateProvider(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateProvider(String, IDictionary<String,String>)\n  nameWithType: CodeDomProvider.CreateProvider(String, IDictionary<String,String>)\n  fullName: CodeDomProvider.CreateProvider(String, IDictionary<String,String>)\n- uid: System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: CreateValidIdentifier(String)\n  nameWithType: CodeDomProvider.CreateValidIdentifier(String)\n  fullName: CodeDomProvider.CreateValidIdentifier(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromCompileUnit(CodeCompileUnit, TextWriter, CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit, TextWriter, CodeGeneratorOptions)\n  fullName: CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit, TextWriter, CodeGeneratorOptions)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromExpression(CodeExpression, TextWriter, CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromExpression(CodeExpression, TextWriter, CodeGeneratorOptions)\n  fullName: CodeDomProvider.GenerateCodeFromExpression(CodeExpression, TextWriter, CodeGeneratorOptions)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromNamespace(CodeNamespace, TextWriter, CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace, TextWriter, CodeGeneratorOptions)\n  fullName: CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace, TextWriter, CodeGeneratorOptions)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromStatement(CodeStatement, TextWriter, CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromStatement(CodeStatement, TextWriter, CodeGeneratorOptions)\n  fullName: CodeDomProvider.GenerateCodeFromStatement(CodeStatement, TextWriter, CodeGeneratorOptions)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GenerateCodeFromType(CodeTypeDeclaration, TextWriter, CodeGeneratorOptions)\n  nameWithType: CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration, TextWriter, CodeGeneratorOptions)\n  fullName: CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration, TextWriter, CodeGeneratorOptions)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetAllCompilerInfo()\n  nameWithType: CodeDomProvider.GetAllCompilerInfo()\n  fullName: CodeDomProvider.GetAllCompilerInfo()\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetCompilerInfo(String)\n  nameWithType: CodeDomProvider.GetCompilerInfo(String)\n  fullName: CodeDomProvider.GetCompilerInfo(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetLanguageFromExtension(String)\n  nameWithType: CodeDomProvider.GetLanguageFromExtension(String)\n  fullName: CodeDomProvider.GetLanguageFromExtension(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: GetTypeOutput(CodeTypeReference)\n  nameWithType: CodeDomProvider.GetTypeOutput(CodeTypeReference)\n  fullName: CodeDomProvider.GetTypeOutput(CodeTypeReference)\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsDefinedExtension(String)\n  nameWithType: CodeDomProvider.IsDefinedExtension(String)\n  fullName: CodeDomProvider.IsDefinedExtension(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsDefinedLanguage(String)\n  nameWithType: CodeDomProvider.IsDefinedLanguage(String)\n  fullName: CodeDomProvider.IsDefinedLanguage(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: IsValidIdentifier(String)\n  nameWithType: CodeDomProvider.IsValidIdentifier(String)\n  fullName: CodeDomProvider.IsValidIdentifier(String)\n- uid: System.CodeDom.Compiler.CodeDomProvider.LanguageOptions\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: CodeDomProvider.LanguageOptions\n  fullName: CodeDomProvider.LanguageOptions\n- uid: System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: Parse(TextReader)\n  nameWithType: CodeDomProvider.Parse(TextReader)\n  fullName: CodeDomProvider.Parse(TextReader)\n- uid: System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)\n  parent: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: Supports(GeneratorSupport)\n  nameWithType: CodeDomProvider.Supports(GeneratorSupport)\n  fullName: CodeDomProvider.Supports(GeneratorSupport)\n"}