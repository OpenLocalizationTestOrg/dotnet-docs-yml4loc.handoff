### YamlMime:ManagedReference
items:
- uid: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
  id: ParallelEnumerable
  children:
  - System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  - System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  - System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  - System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})
  - System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})
  - System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)
  - System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})
  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})
  - System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  - System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)
  - System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)
  - System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)
  - System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)
  - System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)
  - System.Linq.ParallelEnumerable.Empty``1
  - System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})
  - System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  - System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  - System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})
  - System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  - System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})
  - System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})
  - System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  - System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)
  - System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)
  - System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)
  - System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})
  - System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)
  - System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})
  - System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)
  - System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  - System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  - System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  - System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)
  - System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)
  - System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)
  - System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)
  - System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  - System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})
  langs:
  - csharp
  name: ParallelEnumerable
  nameWithType: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
  type: Class
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of <xref href="System.Linq.Enumerable"></xref>.
  syntax:
    content: public static class ParallelEnumerable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  id: Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.
  syntax:
    content: public static TResult Aggregate<TSource,TAccumulate,TResult> (this System.Linq.ParallelQuery<TSource> source, TAccumulate seed, Func<TAccumulate,TSource,TAccumulate> func, Func<TAccumulate,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to aggregate over.
    - id: seed
      type: TAccumulate
      description: The initial accumulator value.
    - id: func
      type: System.Func{TAccumulate,TSource,TAccumulate}
      description: An accumulator function to be invoked on each element.
    - id: resultSelector
      type: System.Func{TAccumulate,TResult}
      description: A function to transform the final accumulator value into the result value.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TAccumulate
      description: The type of the accumulator value.
    - id: TResult
      description: The type of the resulting value.
    return:
      type: TResult
      description: The transformed final accumulator value.
  overload: System.Linq.ParallelEnumerable.Aggregate``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>func</code> or <code>resultSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  id: Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, Func<TAccumulate>, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, Func<TAccumulate>, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, Func<TAccumulate>, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.
  remarks: This overload is specific to parallelized queries. A parallelized query may partition the data source sequence into several sub-sequences (partitions). The `updateAccumulatorFunc` is invoked on each element within partitions. Each partition then yields a single accumulated result. The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element. This element is then transformed by the `resultSelector` function.
  syntax:
    content: public static TResult Aggregate<TSource,TAccumulate,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TAccumulate> seedFactory, Func<TAccumulate,TSource,TAccumulate> updateAccumulatorFunc, Func<TAccumulate,TAccumulate,TAccumulate> combineAccumulatorsFunc, Func<TAccumulate,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to aggregate over.
    - id: seedFactory
      type: System.Func{TAccumulate}
      description: A function that returns the initial accumulator value.
    - id: updateAccumulatorFunc
      type: System.Func{TAccumulate,TSource,TAccumulate}
      description: An accumulator function to be invoked on each element in a partition.
    - id: combineAccumulatorsFunc
      type: System.Func{TAccumulate,TAccumulate,TAccumulate}
      description: An accumulator function to be invoked on the yielded accumulator result from each partition.
    - id: resultSelector
      type: System.Func{TAccumulate,TResult}
      description: A function to transform the final accumulator value into the result value.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TAccumulate
      description: The type of the accumulator value.
    - id: TResult
      description: The type of the resulting value.
    return:
      type: TResult
      description: The transformed final accumulator value.
  overload: System.Linq.ParallelEnumerable.Aggregate``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>seedFactory</code> or <code>updateAccumulatorFunc</code> or <code>combineAccumulatorsFunc</code> or <code>resultSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  id: Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.
  remarks: This overload is specific to processing a parallelized query. A parallelized query may partition the data source sequence into several sub-sequences (partitions). The `updateAccumulatorFunc` is invoked on each element within partitions. Each partition then yields a single accumulated result. The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element. This element is then transformed by the `resultSelector` function.
  syntax:
    content: public static TResult Aggregate<TSource,TAccumulate,TResult> (this System.Linq.ParallelQuery<TSource> source, TAccumulate seed, Func<TAccumulate,TSource,TAccumulate> updateAccumulatorFunc, Func<TAccumulate,TAccumulate,TAccumulate> combineAccumulatorsFunc, Func<TAccumulate,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to aggregate over.
    - id: seed
      type: TAccumulate
      description: The initial accumulator value.
    - id: updateAccumulatorFunc
      type: System.Func{TAccumulate,TSource,TAccumulate}
      description: An accumulator function to be invoked on each element in a partition.
    - id: combineAccumulatorsFunc
      type: System.Func{TAccumulate,TAccumulate,TAccumulate}
      description: An accumulator function to be invoked on the yielded accumulator result from each partition.
    - id: resultSelector
      type: System.Func{TAccumulate,TResult}
      description: A function to transform the final accumulator value into the result value.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TAccumulate
      description: The type of the accumulator value.
    - id: TResult
      description: The type of the resulting value.
    return:
      type: TResult
      description: The transformed final accumulator value.
  overload: System.Linq.ParallelEnumerable.Aggregate``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>updateAccumulatorFunc</code> or <code>combineAccumulatorsFunc</code> or <code>resultSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})
  id: Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Aggregate<TSource,TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.
  syntax:
    content: public static TAccumulate Aggregate<TSource,TAccumulate> (this System.Linq.ParallelQuery<TSource> source, TAccumulate seed, Func<TAccumulate,TSource,TAccumulate> func);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to aggregate over.
    - id: seed
      type: TAccumulate
      description: The initial accumulator value.
    - id: func
      type: System.Func{TAccumulate,TSource,TAccumulate}
      description: An accumulator function to be invoked on each element.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TAccumulate
      description: The type of the accumulator value.
    return:
      type: TAccumulate
      description: The final accumulator value.
  overload: System.Linq.ParallelEnumerable.Aggregate``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>func</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})
  commentId: M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})
  id: Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource,TSource,TSource>)
  nameWithType: ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource,TSource,TSource>)
  fullName: ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource,TSource,TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Applies in parallel an accumulator function over a sequence.
  syntax:
    content: public static TSource Aggregate<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TSource,TSource> func);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to aggregate over.
    - id: func
      type: System.Func{TSource,TSource,TSource}
      description: An accumulator function to be invoked on each element.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The final accumulator value.
  overload: System.Linq.ParallelEnumerable.Aggregate``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>func</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: All<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.All<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.All<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines in parallel whether all elements of a sequence satisfy a condition.
  syntax:
    content: public static bool All<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements to apply the predicate to.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Boolean
      description: true if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, false..
  overload: System.Linq.ParallelEnumerable.All``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})
  id: Any``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Any<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines whether a parallel sequence contains any elements.
  remarks: This overload of the Any method causes a fully-buffered merge to be performed before the result is returned. The merge behavior can impact performance or cause an out of memory exception in large enumerables. To avoid the merge behavior, use the overload of Any that takes a Func parameter, or else use an alternative method such as FirstOrDefault.
  syntax:
    content: public static bool Any<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to check for emptiness.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Boolean
      description: true if the source sequence contains any elements; otherwise, false.
  overload: System.Linq.ParallelEnumerable.Any``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Any<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines in parallel whether any element of a sequence satisfies a condition.
  syntax:
    content: public static bool Any<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to whose elements the predicate will be applied.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Boolean
      description: true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.
  overload: System.Linq.ParallelEnumerable.Any``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})
  id: AsEnumerable``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsEnumerable<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsEnumerable<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsEnumerable<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Converts a <xref href="System.Linq.ParallelQuery`1"></xref> into an <xref href="System.Collections.Generic.IEnumerable`1"></xref> to force sequential evaluation of the query.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> AsEnumerable<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to cast as <xref href="System.Collections.Generic.IEnumerable`1"></xref>.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: The input sequence typed as <xref href="System.Collections.Generic.IEnumerable`1"></xref>.
  overload: System.Linq.ParallelEnumerable.AsEnumerable``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)
  commentId: M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)
  id: AsOrdered(System.Linq.ParallelQuery)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsOrdered(ParallelQuery)
  nameWithType: ParallelEnumerable.AsOrdered(ParallelQuery)
  fullName: ParallelEnumerable.AsOrdered(ParallelQuery)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.
  remarks: A natural tension exists between performance and preserving order in parallel processing. By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static System.Linq.ParallelQuery AsOrdered (this System.Linq.ParallelQuery source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery
      description: The input sequence.
    return:
      type: System.Linq.ParallelQuery
      description: The source sequence which will maintain the original ordering in the subsequent query operators.
  overload: System.Linq.ParallelEnumerable.AsOrdered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "thrown if <code>source</code> contains no elements  \n  \n -or-  \n  \n if AsOrdered is called midway through a query. It is allowed to be called immediately after <xref href=\"System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\"></xref>, <xref href=\"System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)\"></xref> or <xref href=\"System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)\"></xref>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})
  id: AsOrdered``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsOrdered<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsOrdered<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsOrdered<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.
  remarks: A natural tension exists between performance and preserving order in parallel processing. By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> AsOrdered<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The input sequence.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: The source sequence which will maintain the original ordering in the subsequent query operators.
  overload: System.Linq.ParallelEnumerable.AsOrdered``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown if <code>source</code> contains no elements  \n  \n -or-  \n  \n if <code>source</code> is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  id: AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Enables parallelization of a query.
  remarks: The <xref:System.Linq.ParallelEnumerable.Cast%2A> operator can be used to convert a ParallelQuery to a ParallelQuery(T).
  syntax:
    content: public static System.Linq.ParallelQuery AsParallel (this System.Collections.IEnumerable source);
    parameters:
    - id: source
      type: System.Collections.IEnumerable
      description: An <xref href="System.Collections.Generic.IEnumerable`1"></xref> to convert to a <xref href="System.Linq.ParallelQuery"></xref>.
    return:
      type: System.Linq.ParallelQuery
      description: The source as a ParallelQuery to bind to ParallelEnumerable extension methods.
  overload: System.Linq.ParallelEnumerable.AsParallel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})
  id: AsParallel``1(System.Collections.Concurrent.Partitioner{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsParallel<TSource>(Partitioner<TSource>)
  nameWithType: ParallelEnumerable.AsParallel<TSource>(Partitioner<TSource>)
  fullName: ParallelEnumerable.AsParallel<TSource>(Partitioner<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.
  remarks: The source partitioner's GetOrderedPartitions method is used when ordering is enabled, whereas the partitioner's GetPartitions is used if ordering is not enabled (the default). The source partitioner's GetDynamicPartitions and GetDynamicOrderedPartitions are not used. For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> AsParallel<TSource> (this System.Collections.Concurrent.Partitioner<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Concurrent.Partitioner`1
      description: A partitioner over the input sequence.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: The <code>source</code> as a ParallelQuery to bind to ParallelEnumerable extension methods.
  overload: System.Linq.ParallelEnumerable.AsParallel``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  id: AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Enables parallelization of a query.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> AsParallel<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: An <xref href="System.Collections.Generic.IEnumerable`1"></xref> to convert to a <xref href="System.Linq.ParallelQuery`1"></xref>.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: The source as a <xref href="System.Linq.ParallelQuery`1"></xref> to bind to ParallelEnumerable extension methods.
  overload: System.Linq.ParallelEnumerable.AsParallel``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})
  id: AsSequential``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsSequential<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsSequential<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsSequential<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Converts a <xref href="System.Linq.ParallelQuery`1"></xref> into an <xref href="System.Collections.Generic.IEnumerable`1"></xref> to force sequential evaluation of the query.
  remarks: 'For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md) and [How to: Control Ordering in a PLINQ Query](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md).'
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> AsSequential<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A <xref href="System.Linq.ParallelQuery`1"></xref> to convert to an <xref href="System.Collections.Generic.IEnumerable`1"></xref>.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: The source as an <xref href="System.Collections.Generic.IEnumerable`1"></xref> to bind to sequential extension methods.
  overload: System.Linq.ParallelEnumerable.AsSequential``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})
  id: AsUnordered``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: AsUnordered<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsUnordered<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsUnordered<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Allows an intermediate query to be treated as if no ordering is implied among the elements.
  remarks: AsUnordered may provide performance benefits when ordering is not required in a portion of a query. By default, PLINQ treats an input sequence as unordered unless OrderBy or AsOrdered is specified. However, if ordering was turned on and is no longer needed, then AsUnordered can be used to turn it off in mid-query, and this may result in performance benefits.The AsUnordered operator itself does not shuffle the source sequence; it simply removes the ordering requirement for subsequent operators. If the source is ordered, subsequent operators might keep that ordering if it is more efficient to do so. AsUnordered can be called anywhere in the query; it does not need to be called immediately after AsParallel. For more information, see [Understanding Speedup in PLINQ](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md) and [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> AsUnordered<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The input sequence.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: The source sequence with arbitrary order.
  overload: System.Linq.ParallelEnumerable.AsUnordered``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})
  id: Average(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static float Average (this System.Linq.ParallelQuery<float> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Single}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Single
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  id: Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static Nullable<double> Average (this System.Linq.ParallelQuery<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int64}}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Nullable{System.Double}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  id: Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static Nullable<double> Average (this System.Linq.ParallelQuery<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int32}}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Nullable{System.Double}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  id: Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static Nullable<double> Average (this System.Linq.ParallelQuery<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Double}}
      description: The source sequence.
    return:
      type: System.Nullable{System.Double}
      description: Returns the average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: A sequence of values that are used to calculate an average.The average of the sequence of values.<code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  id: Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static Nullable<float> Average (this System.Linq.ParallelQuery<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Single}}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Nullable{System.Single}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})
  id: Average(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static double Average (this System.Linq.ParallelQuery<long> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int64}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Double
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})
  id: Average(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static double Average (this System.Linq.ParallelQuery<int> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int32}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Double
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})
  id: Average(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static double Average (this System.Linq.ParallelQuery<double> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Double}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Double
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})
  id: Average(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static decimal Average (this System.Linq.ParallelQuery<decimal> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Decimal}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Decimal
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  id: Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values.
  syntax:
    content: public static Nullable<decimal> Average (this System.Linq.ParallelQuery<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Decimal}}
      description: A sequence of values that are used to calculate an average.
    return:
      type: System.Nullable{System.Decimal}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static float Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Single}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Single
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Double}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Double}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Double}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<float> Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Single}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static double Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Double
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static double Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Double
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum or count of the elements in the sequence is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static double Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Double}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Double
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static decimal Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Decimal
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<decimal> Average<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values that are used to calculate an average.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Decimal}
      description: The average of the sequence of values.
  overload: System.Linq.ParallelEnumerable.Average``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: (Thrown as inner exception in an <xref href="System.AggregateException"></xref>). The <code>selector</code> function returns a value greater than MaxValue for the element type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)
  commentId: M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)
  id: Cast``1(System.Linq.ParallelQuery)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Cast<TResult>(ParallelQuery)
  nameWithType: ParallelEnumerable.Cast<TResult>(ParallelQuery)
  fullName: ParallelEnumerable.Cast<TResult>(ParallelQuery)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Converts the elements of a ParallelQuery to the specified type.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Cast<TResult> (this System.Linq.ParallelQuery source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery
      description: The sequence that contains the elements to be converted.
    typeParameters:
    - id: TResult
      description: The type to convert the elements of <code>source</code> to.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that contains each element of the source sequence converted to the specified type.
  overload: System.Linq.ParallelEnumerable.Cast``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The type of the source sequence could not be converted to <code>TResult</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  id: Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Concat overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Concat with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Concat operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Concat<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Concat``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  id: Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Concatenates two parallel sequences.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Concat<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: The first sequence to concatenate.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: The sequence to concatenate to the first sequence.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the concatenated elements of the two input sequences.
  overload: System.Linq.ParallelEnumerable.Concat``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  id: Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Contains<TSource>(ParallelQuery<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines in parallel whether a sequence contains a specified element by using a specified <xref href="System.Collections.Generic.IEqualityComparer`1"></xref>.
  syntax:
    content: public static bool Contains<TSource> (this System.Linq.ParallelQuery<TSource> source, TSource value, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence in which to locate a value.
    - id: value
      type: TSource
      description: The value to locate in the sequence.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: An equality comparer to compare values.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Boolean
      description: true if the source sequence contains an element that has the specified value; otherwise, false.
  overload: System.Linq.ParallelEnumerable.Contains``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)
  commentId: M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)
  id: Contains``1(System.Linq.ParallelQuery{``0},``0)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Contains<TSource>(ParallelQuery<TSource>, TSource)
  nameWithType: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource)
  fullName: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines in parallel whether a sequence contains a specified element by using the default equality comparer.
  syntax:
    content: public static bool Contains<TSource> (this System.Linq.ParallelQuery<TSource> source, TSource value);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence in which to locate a value.
    - id: value
      type: TSource
      description: The value to locate in the sequence.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Boolean
      description: true if the source sequence contains an element that has the specified value; otherwise, false.
  overload: System.Linq.ParallelEnumerable.Contains``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})
  id: Count``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Count<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the number of elements in a parallel sequence.
  syntax:
    content: public static int Count<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements to be counted.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Int32
      description: The number of elements in the input sequence.
  overload: System.Linq.ParallelEnumerable.Count``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The number of elements in source is larger than <xref href="System.Int32.MaxValue"></xref>. (In this case the InnerException is <xref href="System.OverflowException"></xref>) -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Count<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.
  syntax:
    content: public static int Count<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements to be counted.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Int32
      description: A number that represents how many elements in the sequence satisfy the condition in the predicate function.
  overload: System.Linq.ParallelEnumerable.Count``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The number of elements in source is larger than <xref href="System.Int32.MaxValue"></xref>. (In this case the InnerException is <xref href="System.OverflowException"></xref>) -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})
  id: DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: DefaultIfEmpty<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> DefaultIfEmpty<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return a default value for if it is empty.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains default(TSource) if <code>source</code> is empty; otherwise, <code>source</code>.
  overload: System.Linq.ParallelEnumerable.DefaultIfEmpty``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)
  commentId: M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)
  id: DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource)
  nameWithType: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource)
  fullName: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> DefaultIfEmpty<TSource> (this System.Linq.ParallelQuery<TSource> source, TSource defaultValue);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the specified value for if it is empty.
    - id: defaultValue
      type: TSource
      description: The value to return if the sequence is empty.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains defaultValue if <code>source</code> is empty; otherwise, <code>source</code>.
  overload: System.Linq.ParallelEnumerable.DefaultIfEmpty``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})
  id: Distinct``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Distinct<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Distinct<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to remove duplicate elements from.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains distinct elements from the source sequence.
  overload: System.Linq.ParallelEnumerable.Distinct``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns distinct elements from a parallel sequence by using a specified <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare values.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Distinct<TSource> (this System.Linq.ParallelQuery<TSource> source, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to remove duplicate elements from.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare values.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains distinct elements from the source sequence.
  overload: System.Linq.ParallelEnumerable.Distinct``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)
  id: ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ElementAt<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.ElementAt<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.ElementAt<TSource>(ParallelQuery<TSource>, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the element at a specified index in a parallel sequence.
  syntax:
    content: public static TSource ElementAt<TSource> (this System.Linq.ParallelQuery<TSource> source, int index);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to return an element from.
    - id: index
      type: System.Int32
      description: The zero-based index of the element to retrieve.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The element at the specified position in the source sequence.
  overload: System.Linq.ParallelEnumerable.ElementAt``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than 0 or greater than or equal to the number of elements in <code>source</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)
  id: ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ElementAtOrDefault<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.ElementAtOrDefault<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.ElementAtOrDefault<TSource>(ParallelQuery<TSource>, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.
  syntax:
    content: public static TSource ElementAtOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source, int index);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to return an element from.
    - id: index
      type: System.Int32
      description: The zero-based index of the element to retrieve.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.
  overload: System.Linq.ParallelEnumerable.ElementAtOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Empty``1
  commentId: M:System.Linq.ParallelEnumerable.Empty``1
  id: Empty``1
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Empty<TResult>()
  nameWithType: ParallelEnumerable.Empty<TResult>()
  fullName: ParallelEnumerable.Empty<TResult>()
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns an empty ParallelQuery{TResult} that has the specified type argument.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Empty<TResult> ();
    parameters: []
    typeParameters:
    - id: TResult
      description: The type to assign to the type parameter of the returned generic sequence.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: An empty sequence whose type argument is <code>TResult</code>.
  overload: System.Linq.ParallelEnumerable.Empty``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  id: Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Except overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Except<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Except``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  id: Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Produces the set difference of two parallel sequences by using the default equality comparer to compare values.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Except<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements that are not also in <code>second</code> will be returned.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the set difference of the elements of two sequences.
  overload: System.Linq.ParallelEnumerable.Except``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Except overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Except<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Except``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Produces the set difference of two parallel sequences by using the specified <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare values.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Except<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements that are not also in <code>second</code> will be returned.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare values.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the set difference of the elements of two sequences.
  overload: System.Linq.ParallelEnumerable.Except``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})
  id: First``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: First<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the first element of a parallel sequence.
  remarks: If the query is not ordered, then the first element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource First<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the first element of.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The first element in the specified sequence.
  overload: System.Linq.ParallelEnumerable.First``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: First<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the first element in a parallel sequence that satisfies a specified condition.
  remarks: If the query is not ordered, then the first element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource First<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return an element from.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The first element in the sequence that passes the test in the specified predicate function.
  overload: System.Linq.ParallelEnumerable.First``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No element in <code>source</code> satisfies the condition in <code>predicate</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})
  id: FirstOrDefault``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: FirstOrDefault<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.
  remarks: If the query is not ordered, then the first element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource FirstOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the first element of.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: default(TSource) if <code>source</code> is empty; otherwise, the first element in <code>source</code>.
  overload: System.Linq.ParallelEnumerable.FirstOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.
  remarks: If the query is not ordered, then the first element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource FirstOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return an element from.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: default(TSource) if <code>source</code> is empty or if no element passes the test specified by predicate; otherwise, the first element in <code>source</code> that passes the test specified by predicate.
  overload: System.Linq.ParallelEnumerable.FirstOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})
  commentId: M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})
  id: ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ForAll<TSource>(ParallelQuery<TSource>, Action<TSource>)
  nameWithType: ParallelEnumerable.ForAll<TSource>(ParallelQuery<TSource>, Action<TSource>)
  fullName: ParallelEnumerable.ForAll<TSource>(ParallelQuery<TSource>, Action<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel the specified action for each element in the <code>source</code>.
  remarks: This is an efficient way to process the output from a parallelized query because it does not require a merge step at the end. For more information, see [Merge Options in PLINQ](~/docs/standard/parallel-programming/merge-options-in-plinq.md) or [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md). Because this method produces a side-effect, it can be used to observe the actual order of execution in a parallel query.
  syntax:
    content: public static void ForAll<TSource> (this System.Linq.ParallelQuery<TSource> source, Action<TSource> action);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The <xref href="System.Linq.ParallelQuery`1"></xref> whose elements will be processed by <code>action</code>.
    - id: action
      type: System.Action{TSource}
      description: An Action to invoke on each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
  overload: System.Linq.ParallelEnumerable.ForAll``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements to group.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract the key for each element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A function to map each source element to an element in an IGrouping{Key, TElement}.
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
      description: A function to create a result value from each group.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the elements in each IGrouping{TKey, TElement}.
    - id: TResult
      description: The type of the result value returned by <code>resultSelector</code>.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence of elements of type <code>TResult</code> where each element represents a projection over a group and its key.
  overload: System.Linq.ParallelEnumerable.GroupBy``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  id: GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements to group.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract the key for each element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A function to map each source element to an element in an IGrouping<TKey, TElement>.
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
      description: A function to create a result value from each group.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the elements in each IGrouping{TKey, TElement}.
    - id: TResult
      description: The type of the result value returned by <code>resultSelector</code>.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence of elements of type <code>TResult</code> where each element represents a projection over a group and its key.
  overload: System.Linq.ParallelEnumerable.GroupBy``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.
  syntax:
    content: public static System.Linq.ParallelQuery<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: An <xref href="System.Linq.OrderedParallelQuery`1"></xref> that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A function to map each source element to an element in an <xref href="System.Linq.IGrouping`2"></xref>.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the elements in the <xref href="System.Linq.IGrouping`2"></xref>.
    return:
      type: System.Linq.ParallelQuery{System.Linq.IGrouping{TKey,TElement}}
      description: A sequence of groups that are sorted descending according to <code>TKey</code>.
  overload: System.Linq.ParallelEnumerable.GroupBy``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.
  syntax:
    content: public static System.Linq.ParallelQuery<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: An OrderedParallelQuery{TSource}that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A function to map each source element to an element in an IGrouping.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An IComparer{TSource} to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the elements in the IGrouping
    return:
      type: System.Linq.ParallelQuery{System.Linq.IGrouping{TKey,TElement}}
      description: A sequence of groups that are sorted descending according to <code>TKey</code>.
  overload: System.Linq.ParallelEnumerable.GroupBy``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  id: GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> GroupBy<TSource,TKey,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements to group.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract the key for each element.
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}
      description: A function to create a result value from each group.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TResult
      description: The type of the result value returned by <code>resultSelector</code>.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence of elements of type <code>TResult</code> where each element represents a projection over a group and its key.
  overload: System.Linq.ParallelEnumerable.GroupBy``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> GroupBy<TSource,TKey,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements to group.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract the key for each element.
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}
      description: A function to create a result value from each group.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TResult
      description: The type of the result value returned by <code>resultSelector</code>.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence of groups.
  overload: System.Linq.ParallelEnumerable.GroupBy``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <xref href="System.Collections.Generic.IComparer`1"></xref>.
  syntax:
    content: public static System.Linq.ParallelQuery<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: An <xref href="System.Linq.OrderedParallelQuery`1"></xref> that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>>.
    return:
      type: System.Linq.ParallelQuery{System.Linq.IGrouping{TKey,TSource}}
      description: A sequence of groups that are sorted descending according to <code>TKey</code>.
  overload: System.Linq.ParallelEnumerable.GroupBy``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Groups in parallel the elements of a sequence according to a specified key selector function.
  syntax:
    content: public static System.Linq.ParallelQuery<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: An OrderedParallelQuery{TSource}that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.ParallelQuery{System.Linq.IGrouping{TKey,TSource}}
      description: A sequence of groups that are sorted descending according to <code>TKey</code>.
  overload: System.Linq.ParallelEnumerable.GroupBy``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  commentId: M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  id: GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This GroupJoin overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult> resultSelector);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: This parameter is not used.
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: This parameter is not used.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: This parameter is not used.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: This parameter is not used.
    - id: resultSelector
      type: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
      description: This parameter is not used.
    typeParameters:
    - id: TOuter
      description: This type parameter is not used.
    - id: TInner
      description: This type parameter is not used.
    - id: TKey
      description: This type parameter is not used.
    - id: TResult
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.GroupJoin``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  commentId: M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  id: GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Linq.ParallelQuery<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult> resultSelector);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: The first sequence to join.
    - id: inner
      type: System.Linq.ParallelQuery{TInner}
      description: The sequence to join to the first sequence.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: A function to extract the join key from each element of the first sequence.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: A function to extract the join key from each element of the second sequence.
    - id: resultSelector
      type: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
      description: A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.
    typeParameters:
    - id: TOuter
      description: The type of the elements of the second sequence.
    - id: TInner
      description: The type of the elements of the first sequence.
    - id: TKey
      description: The type of the keys returned by the key selector functions.
    - id: TResult
      description: The type of the result elements.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that has elements of type <code>TResult</code> that are obtained by performing a grouped join on two sequences.
  overload: System.Linq.ParallelEnumerable.GroupJoin``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  id: GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This GroupJoin overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: This parameter is not used.
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: This parameter is not used.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: This parameter is not used.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: This parameter is not used.
    - id: resultSelector
      type: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
      description: This parameter is not used.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: This parameter is not used.
    typeParameters:
    - id: TOuter
      description: This type parameter is not used.
    - id: TInner
      description: This type parameter is not used.
    - id: TKey
      description: This type parameter is not used.
    - id: TResult
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.GroupJoin``4*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  id: GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> is used to compare keys.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Linq.ParallelQuery<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: The first sequence to join.
    - id: inner
      type: System.Linq.ParallelQuery{TInner}
      description: The sequence to join to the first sequence.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: A function to extract the join key from each element of the first sequence.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: A function to extract the join key from each element of the second sequence.
    - id: resultSelector
      type: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
      description: A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to hash and compare keys.
    typeParameters:
    - id: TOuter
      description: The type of the elements of the second sequence.
    - id: TInner
      description: The type of the elements of the first sequence.
    - id: TKey
      description: The type of the keys returned by the key selector functions.
    - id: TResult
      description: The type of the result elements.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that has elements of type <code>TResult</code> that are obtained by performing a grouped join on two sequences.
  overload: System.Linq.ParallelEnumerable.GroupJoin``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Intersect overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Intersect<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Intersect``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Intersect<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements that also appear in <code>second</code> will be returned.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements that also appear in the first sequence will be returned.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare values.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements that form the set intersection of two sequences.
  overload: System.Linq.ParallelEnumerable.Intersect``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  id: Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Intersect overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Intersect<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Intersect``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  id: Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Intersect<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements that also appear in <code>second</code> will be returned.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements that also appear in the first sequence will be returned.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements that form the set intersection of two sequences.
  overload: System.Linq.ParallelEnumerable.Intersect``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  commentId: M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  id: Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Join overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when invoked.
  remarks: This overload exists to disallow usage Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,TInner,TResult> resultSelector);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: This parameter is not used.
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: This parameter is not used.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: This parameter is not used.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: This parameter is not used.
    - id: resultSelector
      type: System.Func{TOuter,TInner,TResult}
      description: This parameter is not used.
    typeParameters:
    - id: TOuter
      description: This type parameter is not used.
    - id: TInner
      description: This type parameter is not used.
    - id: TKey
      description: This type parameter is not used.
    - id: TResult
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Join``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  commentId: M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  id: Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Linq.ParallelQuery<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,TInner,TResult> resultSelector);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: The first sequence to join.
    - id: inner
      type: System.Linq.ParallelQuery{TInner}
      description: The sequence to join to the first sequence.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: A function to extract the join key from each element of the first sequence.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: A function to extract the join key from each element of the second sequence.
    - id: resultSelector
      type: System.Func{TOuter,TInner,TResult}
      description: A function to create a result element from two matching elements.
    typeParameters:
    - id: TOuter
      description: The type of the elements of the second sequence.
    - id: TInner
      description: The type of the elements of the first sequence.
    - id: TKey
      description: The type of the keys returned by the key selector functions.
    - id: TResult
      description: The type of the result elements.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that has elements of type <code>TResult</code> that are obtained by performing an inner join on two sequences.
  overload: System.Linq.ParallelEnumerable.Join``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  id: Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Join overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when invoked.
  remarks: This overload exists to disallow usage of Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,TInner,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: This parameter is not used.
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: This parameter is not used.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: This parameter is not used.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: This parameter is not used.
    - id: resultSelector
      type: System.Func{TOuter,TInner,TResult}
      description: This parameter is not used.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: This parameter is not used.
    typeParameters:
    - id: TOuter
      description: This type parameter is not used.
    - id: TInner
      description: This type parameter is not used.
    - id: TKey
      description: This type parameter is not used.
    - id: TResult
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Join``4*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  id: Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Correlates in parallel the elements of two sequences based on matching keys. A specified <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> is used to compare keys.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.ParallelQuery<TOuter> outer, System.Linq.ParallelQuery<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,TInner,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Linq.ParallelQuery{TOuter}
      description: The first sequence to join.
    - id: inner
      type: System.Linq.ParallelQuery{TInner}
      description: The sequence to join to the first sequence.
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: A function to extract the join key from each element of the first sequence.
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: A function to extract the join key from each element of the second sequence.
    - id: resultSelector
      type: System.Func{TOuter,TInner,TResult}
      description: A function to create a result element from two matching elements.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to hash and compare keys.
    typeParameters:
    - id: TOuter
      description: The type of the elements of the second sequence.
    - id: TInner
      description: The type of the elements of the first sequence.
    - id: TKey
      description: The type of the keys returned by the key selector functions.
    - id: TResult
      description: The type of the result elements.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that has elements of type <code>TResult</code> that are obtained by performing an inner join on two sequences.
  overload: System.Linq.ParallelEnumerable.Join``4*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>action</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})
  id: Last``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Last<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the last element of a parallel sequence.
  remarks: If the query is not ordered, then the last element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource Last<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the last element from.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The value at the last position in the source sequence.
  overload: System.Linq.ParallelEnumerable.Last``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Last<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the last element of a parallel sequence that satisfies a specified condition.
  remarks: If the query is not ordered, then the last element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource Last<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return an element from.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The last element in the sequence that passes the test in the specified predicate function.
  overload: System.Linq.ParallelEnumerable.Last``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No element in <code>source</code> satisfies the condition in <code>predicate</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.
  remarks: If the query is not ordered, then the last element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource LastOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return an element from.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.
  overload: System.Linq.ParallelEnumerable.LastOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})
  id: LastOrDefault``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: LastOrDefault<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.
  remarks: If the query is not ordered, then the last element is non-deterministic. For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).
  syntax:
    content: public static TSource LastOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return an element from.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: default() if the source sequence is empty; otherwise, the last element in the sequence.
  overload: System.Linq.ParallelEnumerable.LastOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})
  id: LongCount``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: LongCount<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns an Int64 that represents the total number of elements in a parallel sequence.
  syntax:
    content: public static long LongCount<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements to be counted.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Int64
      description: The number of elements in the input sequence.
  overload: System.Linq.ParallelEnumerable.LongCount``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The number of elements in source is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: The computed result is greater than <xref href="System.Int64.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: LongCount<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.
  syntax:
    content: public static long LongCount<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements to be counted.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Int64
      description: A number that represents how many elements in the sequence satisfy the condition in the predicate function.
  overload: System.Linq.ParallelEnumerable.LongCount``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The number of elements in source is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: The computed result is greater than <xref href="System.Int64.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  id: Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<float> Max (this System.Linq.ParallelQuery<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Single}}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Nullable{System.Single}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})
  id: Max(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static float Max (this System.Linq.ParallelQuery<float> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Single}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Single
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  id: Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<long> Max (this System.Linq.ParallelQuery<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int64}}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Nullable{System.Int64}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  id: Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<int> Max (this System.Linq.ParallelQuery<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int32}}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Nullable{System.Int32}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  id: Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<double> Max (this System.Linq.ParallelQuery<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Double}}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Nullable{System.Double}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})
  id: Max(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static double Max (this System.Linq.ParallelQuery<double> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Double}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Double
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})
  id: Max(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static long Max (this System.Linq.ParallelQuery<long> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int64}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Int64
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})
  id: Max(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static int Max (this System.Linq.ParallelQuery<int> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int32}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Int32
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})
  id: Max(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static decimal Max (this System.Linq.ParallelQuery<decimal> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Decimal}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Decimal
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  id: Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<decimal> Max (this System.Linq.ParallelQuery<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Decimal}}
      description: A sequence of values to determine the maximum value of.
    return:
      type: System.Nullable{System.Decimal}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  nameWithType: ParallelEnumerable.Max<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  fullName: ParallelEnumerable.Max<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static TResult Max<TSource,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TResult> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,TResult}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TResult
      description: The type of the value returned by <code>selector</code>.
    return:
      type: TResult
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static Nullable<long> Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Int64}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static float Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Single}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Single
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static Nullable<float> Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Single}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static Nullable<int> Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Int32}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static Nullable<double> Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Double}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static Nullable<decimal> Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Decimal}
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static long Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Int64
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static int Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Int32
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static double Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Double}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Double
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  id: Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the maximum value.
  syntax:
    content: public static decimal Max<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Decimal
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})
  id: Max``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Max<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the maximum value in a parallel sequence of values.
  syntax:
    content: public static TSource Max<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the maximum value of.
    typeParameters:
    - id: TSource
      description: The type of elements in the source sequence.
    return:
      type: TSource
      description: The maximum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Max``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})
  id: Min(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static float Min (this System.Linq.ParallelQuery<float> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Single}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Single
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  id: Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<float> Min (this System.Linq.ParallelQuery<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Single}}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Nullable{System.Single}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  id: Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<long> Min (this System.Linq.ParallelQuery<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int64}}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Nullable{System.Int64}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  id: Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<int> Min (this System.Linq.ParallelQuery<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int32}}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Nullable{System.Int32}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  id: Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<double> Min (this System.Linq.ParallelQuery<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Double}}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Nullable{System.Double}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  id: Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static Nullable<decimal> Min (this System.Linq.ParallelQuery<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Decimal}}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Nullable{System.Decimal}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})
  id: Min(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static long Min (this System.Linq.ParallelQuery<long> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int64}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Int64
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})
  id: Min(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static int Min (this System.Linq.ParallelQuery<int> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int32}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Int32
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})
  id: Min(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static double Min (this System.Linq.ParallelQuery<double> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Double}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Double
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})
  id: Min(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static decimal Min (this System.Linq.ParallelQuery<decimal> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Decimal}
      description: A sequence of values to determine the minimum value of.
    return:
      type: System.Decimal
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  nameWithType: ParallelEnumerable.Min<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  fullName: ParallelEnumerable.Min<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static TResult Min<TSource,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TResult> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,TResult}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TResult
      description: The type of the value returned by <code>selector</code>.
    return:
      type: TResult
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static float Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Single}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Single
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static Nullable<float> Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Single}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static Nullable<int> Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Int32}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static Nullable<double> Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Double}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static Nullable<long> Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Int64}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static long Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Int64
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static int Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Int32
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static Nullable<decimal> Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Decimal}
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static double Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Double}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Double
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  id: Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Invokes in parallel a transform function on each element of a sequence and returns the minimum value.
  syntax:
    content: public static decimal Min<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Decimal
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})
  id: Min``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Min<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the minimum value in a parallel sequence of values.
  syntax:
    content: public static TSource Min<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to determine the minimum value of.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: TSource
      description: The minimum value in the sequence.
  overload: System.Linq.ParallelEnumerable.Min``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> contains no elements and <code>TSource</code> is a non-nullable value type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)
  commentId: M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)
  id: OfType``1(System.Linq.ParallelQuery)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: OfType<TResult>(ParallelQuery)
  nameWithType: ParallelEnumerable.OfType<TResult>(ParallelQuery)
  fullName: ParallelEnumerable.OfType<TResult>(ParallelQuery)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Filters the elements of a ParallelQuery based on a specified type.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> OfType<TResult> (this System.Linq.ParallelQuery source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery
      description: The sequence whose elements to filter.
    typeParameters:
    - id: TResult
      description: The type to filter the elements of the sequence on.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that contains elements from the input sequence of type .
  overload: System.Linq.ParallelEnumerable.OfType``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sorts in parallel the elements of a sequence in ascending order according to a key.
  remarks: 'In contrast to the sequential implementation, this is not a stable sort. To achieve a stable sort, change a query of the form: var ordered = source.Select((e,i) => new { E=e, I=i }).OrderBy((v) => v.e).ThenBy(v => v.i).Select((v) => v.e);'
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> OrderBy<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to order.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} whose elements are sorted according to a key.
  overload: System.Linq.ParallelEnumerable.OrderBy``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> OrderBy<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to order.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An IComparer{TKey} to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} whose elements are sorted according to a key.
  overload: System.Linq.ParallelEnumerable.OrderBy``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sorts in parallel the elements of a sequence in descending order according to a key.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> OrderByDescending<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to order.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.
  overload: System.Linq.ParallelEnumerable.OrderByDescending``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sorts the elements of a sequence in descending order by using a specified comparer.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> OrderByDescending<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to order.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An IComparer{TKey} to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.
  overload: System.Linq.ParallelEnumerable.OrderByDescending``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>KeySelector</code> is a null reference (Nothing in Visual Basic)..
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)
  id: Range(System.Int32,System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Range(Int32, Int32)
  nameWithType: ParallelEnumerable.Range(Int32, Int32)
  fullName: ParallelEnumerable.Range(Int32, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Generates a parallel sequence of integral numbers within a specified range.
  syntax:
    content: public static System.Linq.ParallelQuery<int> Range (int start, int count);
    parameters:
    - id: start
      type: System.Int32
      description: The value of the first integer in the sequence.
    - id: count
      type: System.Int32
      description: The number of sequential integers to generate.
    return:
      type: System.Linq.ParallelQuery{System.Int32}
      description: An IEnumerable<Int32> in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.
  overload: System.Linq.ParallelEnumerable.Range*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>count</code> is less than 0 -or- <code>start</code> + <code>count</code> - 1 is larger than <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)
  id: Repeat``1(``0,System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Repeat<TResult>(TResult, Int32)
  nameWithType: ParallelEnumerable.Repeat<TResult>(TResult, Int32)
  fullName: ParallelEnumerable.Repeat<TResult>(TResult, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Generates a parallel sequence that contains one repeated value.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Repeat<TResult> (TResult element, int count);
    parameters:
    - id: element
      type: TResult
      description: The value to be repeated.
    - id: count
      type: System.Int32
      description: The number of times to repeat the value in the generated sequence.
    typeParameters:
    - id: TResult
      description: The type of the value to be repeated in the result sequence.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that contains a repeated value.
  overload: System.Linq.ParallelEnumerable.Repeat``1*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>count</code> is less than 0.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})
  id: Reverse``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Reverse<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Reverse<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Reverse<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Inverts the order of the elements in a parallel sequence.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Reverse<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to reverse.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence whose elements correspond to those of the input sequence in reverse order.
  overload: System.Linq.ParallelEnumerable.Reverse``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})
  commentId: M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})
  id: Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,TResult>)
  nameWithType: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,TResult>)
  fullName: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Projects in parallel each element of a sequence into a new form by incorporating the element's index.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Select<TSource,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int,TResult> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to invoke a transform function on.
    - id: selector
      type: System.Func{TSource,System.Int32,TResult}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TResult
      description: The type of elements resturned by selector.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence whose elements are the result of invoking the transform function on each element of <code>source</code>, based on the index supplied to <code>selector</code>.
  overload: System.Linq.ParallelEnumerable.Select``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by the query. This condition might occur in streaming scenarios.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  nameWithType: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  fullName: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Projects in parallel each element of a sequence into a new form.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Select<TSource,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TResult> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to invoke a transform function on.
    - id: selector
      type: System.Func{TSource,TResult}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TResult
      description: The type of elements resturned by selector.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence whose elements are the result of invoking the transform function on each element of <code>source</code>.
  overload: System.Linq.ParallelEnumerable.Select``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Projects each element of a sequence to an <xref href="System.Collections.Generic.IEnumerable`1"></xref>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> SelectMany<TSource,TCollection,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,System.Collections.Generic.IEnumerable<TCollection>> collectionSelector, Func<TSource,TCollection,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to project.
    - id: collectionSelector
      type: System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}
      description: A transform function to apply to each source element; the second parameter of the function represents the index of the source element.
    - id: resultSelector
      type: System.Func{TSource,TCollection,TResult}
      description: A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.
    typeParameters:
    - id: TSource
      description: The type of the intermediate elements collected by <code>collectionSelector</code>.
    - id: TCollection
      description: The type of elements of <code>source</code>.
    - id: TResult
      description: The type of elements in the result sequence.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence whose elements are the result of invoking the one-to-many transform function <code>collectionSelector</code> on each element of <code>source</code> based on the index supplied to <code>collectionSelector</code>, and then mapping each of those sequence elements and their corresponding source element to a result element.
  overload: System.Linq.ParallelEnumerable.SelectMany``3*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by the query.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Projects each element of a sequence to an <xref href="System.Collections.Generic.IEnumerable`1"></xref>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> SelectMany<TSource,TCollection,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int,System.Collections.Generic.IEnumerable<TCollection>> collectionSelector, Func<TSource,TCollection,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to project.
    - id: collectionSelector
      type: System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TCollection}}
      description: A transform function to apply to each source element; the second parameter of the function represents the index of the source element.
    - id: resultSelector
      type: System.Func{TSource,TCollection,TResult}
      description: A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.
    typeParameters:
    - id: TSource
      description: The type of the intermediate elements collected by <code>collectionSelector</code>.
    - id: TCollection
      description: The type of elements of <code>source</code>.
    - id: TResult
      description: The type of elements to return.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence whose elements are the result of invoking the one-to-many transform function <code>collectionSelector</code> on each element of <code>source</code> based on the index supplied to <code>collectionSelector</code>, and then mapping each of those sequence elements and their corresponding source element to a result element.
  overload: System.Linq.ParallelEnumerable.SelectMany``3*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by the query.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  commentId: M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  id: SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TResult>>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TResult>>)
  fullName: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TResult>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Projects in parallel each element of a sequence to an <xref href="System.Collections.Generic.IEnumerable`1"></xref> and flattens the resulting sequences into one sequence.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> SelectMany<TSource,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,System.Collections.Generic.IEnumerable<TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to project.
    - id: selector
      type: System.Func{TSource,System.Collections.Generic.IEnumerable{TResult}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TResult
      description: The type of the elements of the sequence returned by selector.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.
  overload: System.Linq.ParallelEnumerable.SelectMany``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  commentId: M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  id: SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  fullName: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Projects in parallel each element of a sequence to an <xref href="System.Collections.Generic.IEnumerable`1"></xref>, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> SelectMany<TSource,TResult> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int,System.Collections.Generic.IEnumerable<TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to project.
    - id: selector
      type: System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TResult}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TResult
      description: The type of the elements of the sequence returned by selector.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.
  overload: System.Linq.ParallelEnumerable.SelectMany``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by the query.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  id: SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This SequenceEqual overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static bool SequenceEqual<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Boolean
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.SequenceEqual``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown every time this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  id: SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.
  syntax:
    content: public static bool SequenceEqual<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence to compare to second.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence to compare to the first input sequence.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Boolean
      description: true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.
  overload: System.Linq.ParallelEnumerable.SequenceEqual``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This SequenceEqual overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static bool SequenceEqual<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Boolean
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.SequenceEqual``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown every time this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.
  syntax:
    content: public static bool SequenceEqual<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence to compare to <code>second</code>.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence to compare to the first input sequence.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to use to compare elements.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Boolean
      description: true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.
  overload: System.Linq.ParallelEnumerable.SequenceEqual``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})
  id: Single``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Single<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.
  syntax:
    content: public static TSource Single<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the single element of.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The single element of the input sequence.
  overload: System.Linq.ParallelEnumerable.Single``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The input sequence contains more than one element. -or- The input sequence is empty.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Single<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.
  syntax:
    content: public static TSource Single<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the single element of.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test an element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The single element of the input sequence that satisfies a condition.
  overload: System.Linq.ParallelEnumerable.Single``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No element satisfies the condition in <code>predicate</code>. -or- More than one element satisfies the condition in <code>predicate</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})
  id: SingleOrDefault``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SingleOrDefault<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.
  syntax:
    content: public static TSource SingleOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the single element of.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The single element of the input sequence, or default() if the sequence contains no elements.
  overload: System.Linq.ParallelEnumerable.SingleOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.
  syntax:
    content: public static TSource SingleOrDefault<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return the single element of.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test an element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource
      description: The single element of the input sequence that satisfies the condition, or default() if no such element is found.
  overload: System.Linq.ParallelEnumerable.SingleOrDefault``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>source</code> is empty or multiple elements are returned.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)
  id: Skip``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Skip<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.Skip<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.Skip<TSource>(ParallelQuery<TSource>, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.
  remarks: If count > source.Count(), no elements are returned.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Skip<TSource> (this System.Linq.ParallelQuery<TSource> source, int count);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return elements from.
    - id: count
      type: System.Int32
      description: The number of elements to skip before returning the remaining elements.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements that occur after the specified index in the input sequence.
  overload: System.Linq.ParallelEnumerable.Skip``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: Count is greater than <xref href="System.Int32.MaxValue"></xref>
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> SkipWhile<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return elements from.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.
  overload: System.Linq.ParallelEnumerable.SkipWhile``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  id: SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  fullName: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> SkipWhile<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return elements from.
    - id: predicate
      type: System.Func{TSource,System.Int32,System.Boolean}
      description: A function to test each source element for a condition; the second parameter of the function represents the index of the source element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.
  overload: System.Linq.ParallelEnumerable.SkipWhile``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by the query.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  id: Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static Nullable<float> Sum (this System.Linq.ParallelQuery<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Single}}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Nullable{System.Single}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Single.MaxValue"></xref>. -or-  One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  id: Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static Nullable<long> Sum (this System.Linq.ParallelQuery<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int64}}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Nullable{System.Int64}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  id: Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static Nullable<int> Sum (this System.Linq.ParallelQuery<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Int32}}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Nullable{System.Int32}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  id: Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static Nullable<double> Sum (this System.Linq.ParallelQuery<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Double}}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Nullable{System.Double}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Double.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})
  id: Sum(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static float Sum (this System.Linq.ParallelQuery<float> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Single}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Single
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Single.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})
  id: Sum(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static long Sum (this System.Linq.ParallelQuery<long> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int64}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Int64
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})
  id: Sum(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static int Sum (this System.Linq.ParallelQuery<int> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Int32}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Int32
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})
  id: Sum(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static double Sum (this System.Linq.ParallelQuery<double> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Double}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Double
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Double.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})
  id: Sum(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static decimal Sum (this System.Linq.ParallelQuery<decimal> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Decimal}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Decimal
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Decimal.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  id: Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of a sequence of values.
  syntax:
    content: public static Nullable<decimal> Sum (this System.Linq.ParallelQuery<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery{System.Nullable{System.Decimal}}
      description: A sequence of values to calculate the sum of.
    return:
      type: System.Nullable{System.Decimal}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Decimal.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static float Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Single}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Single
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Single.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static decimal Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Decimal
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Decimal.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static double Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Double}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Double
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Double.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static int Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements in the source sequence.
    return:
      type: System.Int32
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static long Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Int64
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<decimal> Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Decimal}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Decimal.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<double> Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Double}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Double.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<int> Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Int32}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int32.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<long> Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Int64}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Int64.MaxValue"></xref>. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  commentId: M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.
  syntax:
    content: public static Nullable<float> Sum<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence of values to calculate the sum of.
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Nullable{System.Single}
      description: The sum of the projected values in the sequence.
  overload: System.Linq.ParallelEnumerable.Sum``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>selector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: The sum is larger than <xref href="System.Single.MaxValue"></xref>. -or-  One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)
  id: Take``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Take<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.Take<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.Take<TSource>(ParallelQuery<TSource>, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns a specified number of contiguous elements from the start of a parallel sequence.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Take<TSource> (this System.Linq.ParallelQuery<TSource> source, int count);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return elements from.
    - id: count
      type: System.Int32
      description: The number of elements to return.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the specified number of elements from the start of the input sequence.
  overload: System.Linq.ParallelEnumerable.Take``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  id: TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  fullName: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> TakeWhile<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return elements from.
    - id: predicate
      type: System.Func{TSource,System.Int32,System.Boolean}
      description: A function to test each source element for a condition; the second parameter of the function represents the index of the source element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.
  overload: System.Linq.ParallelEnumerable.TakeWhile``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by this query.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Returns elements from a parallel sequence as long as a specified condition is true.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> TakeWhile<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to return elements from.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.
  overload: System.Linq.ParallelEnumerable.TakeWhile``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  id: ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> ThenBy<TSource,TKey> (this System.Linq.OrderedParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} whose elements are sorted according to a key.
  overload: System.Linq.ParallelEnumerable.ThenBy``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> ThenBy<TSource,TKey> (this System.Linq.OrderedParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An IComparer{TKey} to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} whose elements are sorted according to a key.
  overload: System.Linq.ParallelEnumerable.ThenBy``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  id: ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> ThenByDescending<TSource,TKey> (this System.Linq.OrderedParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: A sequence whose elements are sorted descending according to a key.
  overload: System.Linq.ParallelEnumerable.ThenByDescending``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.
  remarks: In contrast to the sequential implementation, this is not a stable sort. See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.
  syntax:
    content: public static System.Linq.OrderedParallelQuery<TSource> ThenByDescending<TSource,TKey> (this System.Linq.OrderedParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.OrderedParallelQuery`1
      description: An OrderedParallelQuery{TSource} that contains elements to sort.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An IComparer{TKey} to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.OrderedParallelQuery`1
      description: A sequence whose elements are sorted descending according to a key.
  overload: System.Linq.ParallelEnumerable.ThenByDescending``2*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})
  id: ToArray``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToArray<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.ToArray<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.ToArray<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates an array from a <xref href="System.Linq.ParallelQuery`1"></xref>.
  syntax:
    content: public static TSource[] ToArray<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to create an array from.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: TSource[]
      description: An array that contains the elements from the input sequence.
  overload: System.Linq.ParallelEnumerable.ToArray``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates a <xref href="System.Collections.Generic.Dictionary`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to specified key selector and element selector functions.
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TElement> ToDictionary<TSource,TKey,TElement> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to create a <xref href="System.Collections.Generic.Dictionary`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A transform function to produce a result element value from each element.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the value returned by <code>elementSelector</code>.
    return:
      type: System.Collections.Generic.Dictionary{TKey,TElement}
      description: A <xref href="System.Collections.Generic.Dictionary`2"></xref> that contains values of type <code>TElement</code> selected from the input sequence
  overload: System.Linq.ParallelEnumerable.ToDictionary``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> or <code>elementSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: <code>keySelector</code> produces a key that is a null reference (Nothing in Visual Basic). -or- <code>keySelector</code> produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates a <xref href="System.Collections.Generic.Dictionary`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to a specified key selector function, a comparer, and an element selector function.
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TElement> ToDictionary<TSource,TKey,TElement> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to create a <xref href="System.Collections.Generic.Dictionary`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A transform function to produce a result element value from each element.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the value returned by <code>elementSelector</code>.
    return:
      type: System.Collections.Generic.Dictionary{TKey,TElement}
      description: A <xref href="System.Collections.Generic.Dictionary`2"></xref> that contains values of type <code>TElement</code> selected from the input sequence
  overload: System.Linq.ParallelEnumerable.ToDictionary``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> or <code>elementSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: <code>keySelector</code> produces a key that is a null reference (Nothing in Visual Basic). -or- <code>keySelector</code> produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates a <xref href="System.Collections.Generic.Dictionary`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to a specified key selector function.
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TSource> ToDictionary<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to create a <xref href="System.Collections.Generic.Dictionary`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Collections.Generic.Dictionary{TKey,TSource}
      description: A <xref href="System.Collections.Generic.Dictionary`2"></xref> that contains keys and values.
  overload: System.Linq.ParallelEnumerable.ToDictionary``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: <code>keySelector</code> produces a key that is a null reference (Nothing in Visual Basic). -or- <code>keySelector</code> produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates a <xref href="System.Collections.Generic.Dictionary`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to a specified key selector function and key comparer.
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TSource> ToDictionary<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to create a <xref href="System.Collections.Generic.Dictionary`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Collections.Generic.Dictionary{TKey,TSource}
      description: A <xref href="System.Collections.Generic.Dictionary`2"></xref> that contains keys and values.
  overload: System.Linq.ParallelEnumerable.ToDictionary``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: <code>keySelector</code> produces a key that is a null reference (Nothing in Visual Basic). -or- <code>keySelector</code> produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})
  id: ToList``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToList<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.ToList<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.ToList<TSource>(ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates a <xref href="System.Collections.Generic.List`1"></xref> from an <xref href="System.Linq.ParallelQuery`1"></xref>.
  syntax:
    content: public static System.Collections.Generic.List<TSource> ToList<TSource> (this System.Linq.ParallelQuery<TSource> source);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to create a <xref href="System.Collections.Generic.List`1"></xref> from.
    typeParameters:
    - id: TSource
      description: The type of the elements of <code>source</code>.
    return:
      type: System.Collections.Generic.List{TSource}
      description: A <xref href="System.Collections.Generic.List`1"></xref> that contains elements from the input sequence.
  overload: System.Linq.ParallelEnumerable.ToList``1*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates an <xref href="System.Linq.ILookup`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to a specified key selector function, a comparer and an element selector function.
  syntax:
    content: public static System.Linq.ILookup<TKey,TElement> ToLookup<TSource,TKey,TElement> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to create a <xref href="System.Linq.ILookup`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A transform function to produce a result element value from each element.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the value returned by <code>elementSelector</code>.
    return:
      type: System.Linq.ILookup`2
      description: A Lookup<(Of <(TKey, TElement>)>) that contains values of type TElement selected from the input sequence.
  overload: System.Linq.ParallelEnumerable.ToLookup``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> or <code>elementSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates an <xref href="System.Linq.ILookup`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to specified key selector and element selector functions.
  syntax:
    content: public static System.Linq.ILookup<TKey,TElement> ToLookup<TSource,TKey,TElement> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to create a <xref href="System.Linq.ILookup`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: A transform function to produce a result element value from each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    - id: TElement
      description: The type of the value returned by <code>elementSelector</code>.
    return:
      type: System.Linq.ILookup`2
      description: A <xref href="System.Linq.ILookup`2"></xref> that contains values of type <code>TElement</code> selected from the input sequence.
  overload: System.Linq.ParallelEnumerable.ToLookup``3*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> or <code>elementSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates an <xref href="System.Linq.ILookup`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to a specified key selector function and key comparer.
  syntax:
    content: public static System.Linq.ILookup<TKey,TSource> ToLookup<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to create a <xref href="System.Linq.ILookup`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.ILookup{TKey,TSource}
      description: A <xref href="System.Linq.ILookup`2"></xref> that contains keys and values.
  overload: System.Linq.ParallelEnumerable.ToLookup``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> or is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  id: ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Creates an <xref href="System.Linq.ILookup`2"></xref> from a <xref href="System.Linq.ParallelQuery`1"></xref> according to a specified key selector function.
  syntax:
    content: public static System.Linq.ILookup<TKey,TSource> ToLookup<TSource,TKey> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: The sequence to create a <xref href="System.Linq.ILookup`2"></xref> from.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: A function to extract a key from each element.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Linq.ILookup{TKey,TSource}
      description: A <xref href="System.Linq.ILookup`2"></xref> that contains keys and values.
  overload: System.Linq.ParallelEnumerable.ToLookup``2*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>keySelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  id: Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Union overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Union<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Union``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  commentId: M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  id: Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Produces the set union of two parallel sequences by using the default equality comparer.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Union<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements form the first set for the union.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements form the second set for the union.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements from both input sequences, excluding duplicates.
  overload: System.Linq.ParallelEnumerable.Union``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Union overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when called.
  remarks: This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TSource> Union<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: This parameter is not used.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: This parameter is not used.
    typeParameters:
    - id: TSource
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery`1
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Union``1*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Union<TSource> (this System.Linq.ParallelQuery<TSource> first, System.Linq.ParallelQuery<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements form the first set for the union.
    - id: second
      type: System.Linq.ParallelQuery`1
      description: A sequence whose distinct elements form the second set for the union.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: An <xref href="System.Collections.Generic.IEqualityComparer`1"></xref> to compare values.
    typeParameters:
    - id: TSource
      description: The type of the elements of the input sequences.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains the elements from both input sequences, excluding duplicates.
  overload: System.Linq.ParallelEnumerable.Union``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  id: Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Where<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Filters in parallel a sequence of values based on a predicate.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Where<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to filter.
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of source.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements from the input sequence that satisfy the condition.
  overload: System.Linq.ParallelEnumerable.Where``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  commentId: M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  id: Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Where<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  fullName: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> Where<TSource> (this System.Linq.ParallelQuery<TSource> source, Func<TSource,int,bool> predicate);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A sequence to filter.
    - id: predicate
      type: System.Func{TSource,System.Int32,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TSource
      description: The type of the elements of source.
    return:
      type: System.Linq.ParallelQuery`1
      description: A sequence that contains elements from the input sequence that satisfy the condition.
  overload: System.Linq.ParallelEnumerable.Where``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> or <code>predicate</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: More than <xref href="System.Int32.MaxValue"></xref> elements are enumerated by the query.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)
  commentId: M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)
  id: WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: WithCancellation<TSource>(ParallelQuery<TSource>, CancellationToken)
  nameWithType: ParallelEnumerable.WithCancellation<TSource>(ParallelQuery<TSource>, CancellationToken)
  fullName: ParallelEnumerable.WithCancellation<TSource>(ParallelQuery<TSource>, CancellationToken)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sets the <xref href="System.Threading.CancellationToken"></xref> to associate with the query.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> WithCancellation<TSource> (this System.Linq.ParallelQuery<TSource> source, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A ParallelQuery on which to set the option.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: ParallelQuery representing the same query as source, but with the registered cancellation token.
  overload: System.Linq.ParallelEnumerable.WithCancellation``1*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Threading.CancellationTokenSource"></xref> associated with the <code>cancellationToken</code> has been disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>WithCancellation</code> is used multiple times in the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)
  commentId: M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)
  id: WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: WithDegreeOfParallelism<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.WithDegreeOfParallelism<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.WithDegreeOfParallelism<TSource>(ParallelQuery<TSource>, Int32)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> WithDegreeOfParallelism<TSource> (this System.Linq.ParallelQuery<TSource> source, int degreeOfParallelism);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A ParallelQuery on which to set the limit on the degrees of parallelism.
    - id: degreeOfParallelism
      type: System.Int32
      description: The degree of parallelism for the query. The default value is Math.Min(<xref href="System.Environment.ProcessorCount"></xref>, `MAX_SUPPORTED_DOP`) where `MAX_SUPPORTED_DOP` is 512.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.
  overload: System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>degreeOfParallelism</code> is less than 1 or greater than 511.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: WithDegreeOfParallelism is used multiple times in the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)
  commentId: M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)
  id: WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: WithExecutionMode<TSource>(ParallelQuery<TSource>, ParallelExecutionMode)
  nameWithType: ParallelEnumerable.WithExecutionMode<TSource>(ParallelQuery<TSource>, ParallelExecutionMode)
  fullName: ParallelEnumerable.WithExecutionMode<TSource>(ParallelQuery<TSource>, ParallelExecutionMode)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sets the execution mode of the query.
  remarks: 'The execution mode specifies whether PLINQ will attempt to fall back to sequential execution if it detects certain query shapes. For more information and examples, see [How to: Specify the Execution Mode in PLINQ](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md).'
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> WithExecutionMode<TSource> (this System.Linq.ParallelQuery<TSource> source, System.Linq.ParallelExecutionMode executionMode);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A ParallelQuery on which to set the option.
    - id: executionMode
      type: System.Linq.ParallelExecutionMode
      description: The mode in which to execute the query.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: ParallelQuery representing the same query as source, but with the registered execution mode.
  overload: System.Linq.ParallelEnumerable.WithExecutionMode``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>executionMode</code> is not a valid <xref href="System.Linq.ParallelExecutionMode"></xref> value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: WithExecutionMode is used multiple times in the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)
  commentId: M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)
  id: WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: WithMergeOptions<TSource>(ParallelQuery<TSource>, ParallelMergeOptions)
  nameWithType: ParallelEnumerable.WithMergeOptions<TSource>(ParallelQuery<TSource>, ParallelMergeOptions)
  fullName: ParallelEnumerable.WithMergeOptions<TSource>(ParallelQuery<TSource>, ParallelMergeOptions)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Sets the merge options for this query, which specify how the query will buffer output.
  syntax:
    content: public static System.Linq.ParallelQuery<TSource> WithMergeOptions<TSource> (this System.Linq.ParallelQuery<TSource> source, System.Linq.ParallelMergeOptions mergeOptions);
    parameters:
    - id: source
      type: System.Linq.ParallelQuery`1
      description: A ParallelQuery on which to set the option.
    - id: mergeOptions
      type: System.Linq.ParallelMergeOptions
      description: The merge options to set for this query.
    typeParameters:
    - id: TSource
      description: The type of elements of <code>source</code>.
    return:
      type: System.Linq.ParallelQuery`1
      description: ParallelQuery representing the same query as source, but with the registered merge options.
  overload: System.Linq.ParallelEnumerable.WithMergeOptions``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>mergeOptions</code> is not a valid <xref href="System.Linq.ParallelMergeOptions"></xref> value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>WithMergeOptions</code> is used multiple times in the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  id: Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  nameWithType: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  fullName: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: This Zip overload should never be called. This method is marked as obsolete and always throws <xref href="System.NotSupportedException"></xref> when invoked.
  remarks: This overload exists to disallow usage of Zip with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>. Otherwise, the Zip operator would appear to be bind to the parallel implementation, but would in reality bind to the sequential implementation.
  syntax:
    content: >-
      [System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery<T> rather than System.Collections.Generic.IEnumerable<T>. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery<T>.")]

      public static System.Linq.ParallelQuery<TResult> Zip<TFirst,TSecond,TResult> (this System.Linq.ParallelQuery<TFirst> first, System.Collections.Generic.IEnumerable<TSecond> second, Func<TFirst,TSecond,TResult> resultSelector);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery{TFirst}
      description: This parameter is not used.
    - id: second
      type: System.Collections.Generic.IEnumerable{TSecond}
      description: This parameter is not used.
    - id: resultSelector
      type: System.Func{TFirst,TSecond,TResult}
      description: This parameter is not used.
    typeParameters:
    - id: TFirst
      description: This type parameter is not used.
    - id: TSecond
      description: This type parameter is not used.
    - id: TResult
      description: This type parameter is not used.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: This overload always throws a <xref href="System.NotSupportedException"></xref>.
  overload: System.Linq.ParallelEnumerable.Zip``3*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The exception that occurs when this method is called.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})
  commentId: M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})
  id: Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  langs:
  - csharp
  name: Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst,TSecond,TResult>)
  nameWithType: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst,TSecond,TResult>)
  fullName: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst,TSecond,TResult>)
  type: Method
  assemblies:
  - System.Linq.Parallel
  - System.Core
  - netstandard
  namespace: System.Linq
  summary: Merges in parallel two sequences by using the specified predicate function.
  syntax:
    content: public static System.Linq.ParallelQuery<TResult> Zip<TFirst,TSecond,TResult> (this System.Linq.ParallelQuery<TFirst> first, System.Linq.ParallelQuery<TSecond> second, Func<TFirst,TSecond,TResult> resultSelector);
    parameters:
    - id: first
      type: System.Linq.ParallelQuery{TFirst}
      description: The first sequence to zip.
    - id: second
      type: System.Linq.ParallelQuery{TSecond}
      description: The second sequence to zip.
    - id: resultSelector
      type: System.Func{TFirst,TSecond,TResult}
      description: A function to create a result element from two matching elements.
    typeParameters:
    - id: TFirst
      description: The type of the elements of the first sequence.
    - id: TSecond
      description: The type of the elements of the second sequence.
    - id: TResult
      description: The type of the return elements.
    return:
      type: System.Linq.ParallelQuery{TResult}
      description: A sequence that has elements of type <code>TResult</code> that are obtained by performing <code>resultSelector</code> pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.
  overload: System.Linq.ParallelEnumerable.Zip``3*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>first</code> or <code>second</code> or <code>resultSelector</code> is a null reference (Nothing in Visual Basic).
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The query was canceled with the token passed in through <code>WithCancellation</code>.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: One or more exceptions occurred during the evaluation of the query.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  name: OperationCanceledException
  nameWithType: OperationCanceledException
  fullName: System.OperationCanceledException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.AggregateException
  parent: System
  isExternal: false
  name: AggregateException
  nameWithType: AggregateException
  fullName: System.AggregateException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.OverflowException
  parent: System
  isExternal: false
  name: OverflowException
  nameWithType: OverflowException
  fullName: System.OverflowException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Linq.ParallelQuery`1
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<TSource>
  nameWithType: ParallelQuery<TSource>
  fullName: System.Linq.ParallelQuery<TSource>
- uid: TAccumulate
  isExternal: true
  name: TAccumulate
  nameWithType: TAccumulate
  fullName: TAccumulate
- uid: System.Func`3
  name: Func<T1,T2,TResult>
  nameWithType: Func<T1,T2,TResult>
  fullName: System.Func<T1,T2,TResult>
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: System.Func{TAccumulate,TSource,TAccumulate}
  parent: System
  isExternal: false
  name: Func<TAccumulate,TSource,TAccumulate>
  nameWithType: Func<TAccumulate,TSource,TAccumulate>
  fullName: System.Func<TAccumulate,TSource,TAccumulate>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Func{TAccumulate,TResult}
  parent: System
  isExternal: false
  name: Func<TAccumulate,TResult>
  nameWithType: Func<TAccumulate,TResult>
  fullName: System.Func<TAccumulate,TResult>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, Func<TAccumulate>, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, Func<TAccumulate>, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, Func<TAccumulate>, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
- uid: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
- uid: System.Func{TAccumulate}
  parent: System
  isExternal: false
  name: Func<TAccumulate>
  nameWithType: Func<TAccumulate>
  fullName: System.Func<TAccumulate>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TAccumulate,TAccumulate,TAccumulate}
  parent: System
  isExternal: false
  name: Func<TAccumulate,TAccumulate,TAccumulate>
  nameWithType: Func<TAccumulate,TAccumulate,TAccumulate>
  fullName: System.Func<TAccumulate,TAccumulate,TAccumulate>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TAccumulate,TAccumulate>, Func<TAccumulate,TResult>)
- uid: System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
- uid: System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource,TSource,TSource>)
  nameWithType: ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource,TSource,TSource>)
  fullName: ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource,TSource,TSource>)
- uid: System.Func{TSource,TSource,TSource}
  parent: System
  isExternal: false
  name: Func<TSource,TSource,TSource>
  nameWithType: Func<TSource,TSource,TSource>
  fullName: System.Func<TSource,TSource,TSource>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: All<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.All<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.All<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{TSource,System.Boolean}
  parent: System
  isExternal: false
  name: Func<TSource,Boolean>
  nameWithType: Func<TSource,Boolean>
  fullName: System.Func<TSource,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Any<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Any<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsEnumerable<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsEnumerable<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsEnumerable<TSource>(ParallelQuery<TSource>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsOrdered(ParallelQuery)
  nameWithType: ParallelEnumerable.AsOrdered(ParallelQuery)
  fullName: ParallelEnumerable.AsOrdered(ParallelQuery)
- uid: System.Linq.ParallelQuery
  parent: System.Linq
  isExternal: false
  name: ParallelQuery
  nameWithType: ParallelQuery
  fullName: System.Linq.ParallelQuery
- uid: System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsOrdered<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsOrdered<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsOrdered<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel<TSource>(Partitioner<TSource>)
  nameWithType: ParallelEnumerable.AsParallel<TSource>(Partitioner<TSource>)
  fullName: ParallelEnumerable.AsParallel<TSource>(Partitioner<TSource>)
- uid: System.Collections.Concurrent.Partitioner`1
  parent: System.Collections.Concurrent
  isExternal: false
  name: Partitioner<TSource>
  nameWithType: Partitioner<TSource>
  fullName: System.Collections.Concurrent.Partitioner<TSource>
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
- uid: System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsSequential<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsSequential<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsSequential<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsUnordered<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.AsUnordered<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.AsUnordered<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Single>)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.ParallelQuery{System.Single}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Single>
  nameWithType: ParallelQuery<Single>
  fullName: System.Linq.ParallelQuery<System.Single>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Int64>>)
- uid: System.Nullable`1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
- uid: System.Double
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: false
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Int64
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.ParallelQuery{System.Nullable{System.Int64}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Nullable<Int64>>
  nameWithType: ParallelQuery<Nullable<Int64>>
  fullName: System.Linq.ParallelQuery<System.Nullable<System.Int64>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Int32>>)
- uid: System.Int32
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.ParallelQuery{System.Nullable{System.Int32}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Nullable<Int32>>
  nameWithType: ParallelQuery<Nullable<Int32>>
  fullName: System.Linq.ParallelQuery<System.Nullable<System.Int32>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Double>>)
- uid: System.Linq.ParallelQuery{System.Nullable{System.Double}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Nullable<Double>>
  nameWithType: ParallelQuery<Nullable<Double>>
  fullName: System.Linq.ParallelQuery<System.Nullable<System.Double>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Single>>)
- uid: System.Nullable{System.Single}
  parent: System
  isExternal: false
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelQuery{System.Nullable{System.Single}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Nullable<Single>>
  nameWithType: ParallelQuery<Nullable<Single>>
  fullName: System.Linq.ParallelQuery<System.Nullable<System.Single>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Int64>)
- uid: System.Linq.ParallelQuery{System.Int64}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Int64>
  nameWithType: ParallelQuery<Int64>
  fullName: System.Linq.ParallelQuery<System.Int64>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Int32>)
- uid: System.Linq.ParallelQuery{System.Int32}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Int32>
  nameWithType: ParallelQuery<Int32>
  fullName: System.Linq.ParallelQuery<System.Int32>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Double>)
- uid: System.Linq.ParallelQuery{System.Double}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Double>
  nameWithType: ParallelQuery<Double>
  fullName: System.Linq.ParallelQuery<System.Double>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Decimal>)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.ParallelQuery{System.Decimal}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Decimal>
  nameWithType: ParallelQuery<Decimal>
  fullName: System.Linq.ParallelQuery<System.Decimal>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Average(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Average(ParallelQuery<Nullable<Decimal>>)
- uid: System.Nullable{System.Decimal}
  parent: System
  isExternal: false
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelQuery{System.Nullable{System.Decimal}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<Nullable<Decimal>>
  nameWithType: ParallelQuery<Nullable<Decimal>>
  fullName: System.Linq.ParallelQuery<System.Nullable<System.Decimal>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
- uid: System.Func{TSource,System.Single}
  parent: System
  isExternal: false
  name: Func<TSource,Single>
  nameWithType: Func<TSource,Single>
  fullName: System.Func<TSource,System.Single>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Func{TSource,System.Nullable{System.Int64}}
  parent: System
  isExternal: false
  name: Func<TSource,Nullable<Int64>>
  nameWithType: Func<TSource,Nullable<Int64>>
  fullName: System.Func<TSource,System.Nullable<System.Int64>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Func{TSource,System.Nullable{System.Int32}}
  parent: System
  isExternal: false
  name: Func<TSource,Nullable<Int32>>
  nameWithType: Func<TSource,Nullable<Int32>>
  fullName: System.Func<TSource,System.Nullable<System.Int32>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Func{TSource,System.Nullable{System.Double}}
  parent: System
  isExternal: false
  name: Func<TSource,Nullable<Double>>
  nameWithType: Func<TSource,Nullable<Double>>
  fullName: System.Func<TSource,System.Nullable<System.Double>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Func{TSource,System.Nullable{System.Single}}
  parent: System
  isExternal: false
  name: Func<TSource,Nullable<Single>>
  nameWithType: Func<TSource,Nullable<Single>>
  fullName: System.Func<TSource,System.Nullable<System.Single>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
- uid: System.Func{TSource,System.Int64}
  parent: System
  isExternal: false
  name: Func<TSource,Int64>
  nameWithType: Func<TSource,Int64>
  fullName: System.Func<TSource,System.Int64>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
- uid: System.Func{TSource,System.Int32}
  parent: System
  isExternal: false
  name: Func<TSource,Int32>
  nameWithType: Func<TSource,Int32>
  fullName: System.Func<TSource,System.Int32>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
- uid: System.Func{TSource,System.Double}
  parent: System
  isExternal: false
  name: Func<TSource,Double>
  nameWithType: Func<TSource,Double>
  fullName: System.Func<TSource,System.Double>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
- uid: System.Func{TSource,System.Decimal}
  parent: System
  isExternal: false
  name: Func<TSource,Decimal>
  nameWithType: Func<TSource,Decimal>
  fullName: System.Func<TSource,System.Decimal>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Func{TSource,System.Nullable{System.Decimal}}
  parent: System
  isExternal: false
  name: Func<TSource,Nullable<Decimal>>
  nameWithType: Func<TSource,Nullable<Decimal>>
  fullName: System.Func<TSource,System.Nullable<System.Decimal>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Cast<TResult>(ParallelQuery)
  nameWithType: ParallelEnumerable.Cast<TResult>(ParallelQuery)
  fullName: ParallelEnumerable.Cast<TResult>(ParallelQuery)
- uid: System.Linq.ParallelQuery{TResult}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<TResult>
  nameWithType: ParallelQuery<TResult>
  fullName: System.Linq.ParallelQuery<TResult>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
- uid: System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Contains<TSource>(ParallelQuery<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource, IEqualityComparer<TSource>)
- uid: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.IEqualityComparer{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TSource>
  nameWithType: IEqualityComparer<TSource>
  fullName: System.Collections.Generic.IEqualityComparer<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Contains<TSource>(ParallelQuery<TSource>, TSource)
  nameWithType: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource)
  fullName: ParallelEnumerable.Contains<TSource>(ParallelQuery<TSource>, TSource)
- uid: System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Count<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Count<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource)
  nameWithType: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource)
  fullName: ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource)
- uid: System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Distinct<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ElementAt<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.ElementAt<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.ElementAt<TSource>(ParallelQuery<TSource>, Int32)
- uid: System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ElementAtOrDefault<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.ElementAtOrDefault<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.ElementAtOrDefault<TSource>(ParallelQuery<TSource>, Int32)
- uid: System.Linq.ParallelEnumerable.Empty``1
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Empty<TResult>()
  nameWithType: ParallelEnumerable.Empty<TResult>()
  fullName: ParallelEnumerable.Empty<TResult>()
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: First<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: First<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: FirstOrDefault<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ForAll<TSource>(ParallelQuery<TSource>, Action<TSource>)
  nameWithType: ParallelEnumerable.ForAll<TSource>(ParallelQuery<TSource>, Action<TSource>)
  fullName: ParallelEnumerable.ForAll<TSource>(ParallelQuery<TSource>, Action<TSource>)
- uid: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
- uid: System.Action{TSource}
  parent: System
  isExternal: false
  name: Action<TSource>
  nameWithType: Action<TSource>
  fullName: System.Action<TSource>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Func{TSource,TKey}
  parent: System
  isExternal: false
  name: Func<TSource,TKey>
  nameWithType: Func<TSource,TKey>
  fullName: System.Func<TSource,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TElement
  name: TElement
  nameWithType: TElement
  fullName: TElement
- uid: System.Func{TSource,TElement}
  parent: System
  isExternal: false
  name: Func<TSource,TElement>
  nameWithType: Func<TSource,TElement>
  fullName: System.Func<TSource,TElement>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
  parent: System
  isExternal: false
  name: Func<TKey,IEnumerable<TElement>,TResult>
  nameWithType: Func<TKey,IEnumerable<TElement>,TResult>
  fullName: System.Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEqualityComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.IGrouping`2
  name: IGrouping<TKey,TElement>
  nameWithType: IGrouping<TKey,TElement>
  fullName: System.Linq.IGrouping<TKey,TElement>
- uid: System.Linq.ParallelQuery{System.Linq.IGrouping{TKey,TElement}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<IGrouping<TKey,TElement>>
  nameWithType: ParallelQuery<IGrouping<TKey,TElement>>
  fullName: System.Linq.ParallelQuery<System.Linq.IGrouping<TKey,TElement>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    nameWithType: IGrouping
    fullName: System.Linq.IGrouping
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
- uid: System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}
  parent: System
  isExternal: false
  name: Func<TKey,IEnumerable<TSource>,TResult>
  nameWithType: Func<TKey,IEnumerable<TSource>,TResult>
  fullName: System.Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TResult>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelQuery{System.Linq.IGrouping{TKey,TSource}}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<IGrouping<TKey,TSource>>
  nameWithType: ParallelQuery<IGrouping<TKey,TSource>>
  fullName: System.Linq.ParallelQuery<System.Linq.IGrouping<TKey,TSource>>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    nameWithType: IGrouping
    fullName: System.Linq.IGrouping
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.GroupBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
- uid: TOuter
  name: TOuter
  nameWithType: TOuter
  fullName: TOuter
- uid: System.Linq.ParallelQuery{TOuter}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<TOuter>
  nameWithType: ParallelQuery<TOuter>
  fullName: System.Linq.ParallelQuery<TOuter>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOuter
    name: TOuter
    nameWithType: TOuter
    fullName: TOuter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TInner
  name: TInner
  nameWithType: TInner
  fullName: TInner
- uid: System.Collections.Generic.IEnumerable{TInner}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TInner>
  nameWithType: IEnumerable<TInner>
  fullName: System.Collections.Generic.IEnumerable<TInner>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInner
    name: TInner
    nameWithType: TInner
    fullName: TInner
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TOuter,TKey}
  parent: System
  isExternal: false
  name: Func<TOuter,TKey>
  nameWithType: Func<TOuter,TKey>
  fullName: System.Func<TOuter,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOuter
    name: TOuter
    nameWithType: TOuter
    fullName: TOuter
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TInner,TKey}
  parent: System
  isExternal: false
  name: Func<TInner,TKey>
  nameWithType: Func<TInner,TKey>
  fullName: System.Func<TInner,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInner
    name: TInner
    nameWithType: TInner
    fullName: TInner
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
  parent: System
  isExternal: false
  name: Func<TOuter,IEnumerable<TInner>,TResult>
  nameWithType: Func<TOuter,IEnumerable<TInner>,TResult>
  fullName: System.Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOuter
    name: TOuter
    nameWithType: TOuter
    fullName: TOuter
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInner
    name: TInner
    nameWithType: TInner
    fullName: TInner
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
- uid: System.Linq.ParallelQuery{TInner}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<TInner>
  nameWithType: ParallelQuery<TInner>
  fullName: System.Linq.ParallelQuery<TInner>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInner
    name: TInner
    nameWithType: TInner
    fullName: TInner
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
- uid: System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
- uid: System.Func{TOuter,TInner,TResult}
  parent: System
  isExternal: false
  name: Func<TOuter,TInner,TResult>
  nameWithType: Func<TOuter,TInner,TResult>
  fullName: System.Func<TOuter,TInner,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOuter
    name: TOuter
    nameWithType: TOuter
    fullName: TOuter
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TInner
    name: TInner
    nameWithType: TInner
    fullName: TInner
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Last<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Last<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: LastOrDefault<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: LongCount<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: LongCount<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Single>>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Single>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Int64>>)
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: false
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Int32>>)
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: false
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Double>>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Double>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Int64>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Int32>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Decimal>)
- uid: System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Max(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Max(ParallelQuery<Nullable<Decimal>>)
- uid: System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  nameWithType: ParallelEnumerable.Max<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  fullName: ParallelEnumerable.Max<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
- uid: System.Func{TSource,TResult}
  parent: System
  isExternal: false
  name: Func<TSource,TResult>
  nameWithType: Func<TSource,TResult>
  fullName: System.Func<TSource,TResult>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Single>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Single>>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Int64>>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Int32>>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Double>>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Nullable<Decimal>>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Int64>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Int32>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Double>)
- uid: System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Min(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Min(ParallelQuery<Decimal>)
- uid: System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  nameWithType: ParallelEnumerable.Min<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  fullName: ParallelEnumerable.Min<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OfType<TResult>(ParallelQuery)
  nameWithType: ParallelEnumerable.OfType<TResult>(ParallelQuery)
  fullName: ParallelEnumerable.OfType<TResult>(ParallelQuery)
- uid: System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Linq.OrderedParallelQuery`1
  parent: System.Linq
  isExternal: false
  name: OrderedParallelQuery<TSource>
  nameWithType: OrderedParallelQuery<TSource>
  fullName: System.Linq.OrderedParallelQuery<TSource>
- uid: System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.OrderBy<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
- uid: System.Collections.Generic.IComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.OrderByDescending<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Range(Int32, Int32)
  nameWithType: ParallelEnumerable.Range(Int32, Int32)
  fullName: ParallelEnumerable.Range(Int32, Int32)
- uid: System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Repeat<TResult>(TResult, Int32)
  nameWithType: ParallelEnumerable.Repeat<TResult>(TResult, Int32)
  fullName: ParallelEnumerable.Repeat<TResult>(TResult, Int32)
- uid: System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Reverse<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Reverse<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Reverse<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,TResult>)
  nameWithType: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,TResult>)
  fullName: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,TResult>)
- uid: System.Func{TSource,System.Int32,TResult}
  parent: System
  isExternal: false
  name: Func<TSource,Int32,TResult>
  nameWithType: Func<TSource,Int32,TResult>
  fullName: System.Func<TSource,System.Int32,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  nameWithType: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
  fullName: ParallelEnumerable.Select<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,TResult>)
- uid: System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: TCollection
  name: TCollection
  nameWithType: TCollection
  fullName: TCollection
- uid: System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}
  parent: System
  isExternal: false
  name: Func<TSource,IEnumerable<TCollection>>
  nameWithType: Func<TSource,IEnumerable<TCollection>>
  fullName: System.Func<TSource,System.Collections.Generic.IEnumerable<TCollection>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TCollection
    name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TSource,TCollection,TResult}
  parent: System
  isExternal: false
  name: Func<TSource,TCollection,TResult>
  nameWithType: Func<TSource,TCollection,TResult>
  fullName: System.Func<TSource,TCollection,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TCollection
    name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TCollection}}
  parent: System
  isExternal: false
  name: Func<TSource,Int32,IEnumerable<TCollection>>
  nameWithType: Func<TSource,Int32,IEnumerable<TCollection>>
  fullName: System.Func<TSource,System.Int32,System.Collections.Generic.IEnumerable<TCollection>>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TCollection
    name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TResult>>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TResult>>)
  fullName: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,IEnumerable<TResult>>)
- uid: System.Func{TSource,System.Collections.Generic.IEnumerable{TResult}}
  parent: System
  isExternal: false
  name: Func<TSource,IEnumerable<TResult>>
  nameWithType: Func<TSource,IEnumerable<TResult>>
  fullName: System.Func<TSource,System.Collections.Generic.IEnumerable<TResult>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  nameWithType: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  fullName: ParallelEnumerable.SelectMany<TSource,TResult>(ParallelQuery<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
- uid: System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TResult}}
  parent: System
  isExternal: false
  name: Func<TSource,Int32,IEnumerable<TResult>>
  nameWithType: Func<TSource,Int32,IEnumerable<TResult>>
  fullName: System.Func<TSource,System.Int32,System.Collections.Generic.IEnumerable<TResult>>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.SequenceEqual<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Single<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Single<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SingleOrDefault<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Skip<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.Skip<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.Skip<TSource>(ParallelQuery<TSource>, Int32)
- uid: System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  fullName: ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Func{TSource,System.Int32,System.Boolean}
  parent: System
  isExternal: false
  name: Func<TSource,Int32,Boolean>
  nameWithType: Func<TSource,Int32,Boolean>
  fullName: System.Func<TSource,System.Int32,System.Boolean>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Nullable<Single>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Single>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Single>>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int64>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int64>>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int32>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Int32>>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Nullable<Double>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Double>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Double>>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Single>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Single>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Single>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Int64>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Int64>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Int64>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Int32>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Int32>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Int32>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Double>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Double>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Double>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Decimal>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Decimal>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Decimal>)
- uid: System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum(ParallelQuery<Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Sum(ParallelQuery<Nullable<Decimal>>)
  fullName: ParallelEnumerable.Sum(ParallelQuery<Nullable<Decimal>>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Single>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Double>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int32>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Int64>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
  fullName: ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Take<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.Take<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.Take<TSource>(ParallelQuery<TSource>, Int32)
- uid: System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  fullName: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.ThenBy<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: ParallelEnumerable.ThenByDescending<TSource,TKey>(OrderedParallelQuery<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToArray<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.ToArray<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.ToArray<TSource>(ParallelQuery<TSource>)
- uid: TSource[]
  isExternal: true
  name: TSource[]
  nameWithType: TSource[]
  fullName: TSource[]
  spec.csharp:
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey,TValue>
  nameWithType: Dictionary<TKey,TValue>
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>
- uid: System.Collections.Generic.Dictionary{TKey,TElement}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,TElement>
  nameWithType: Dictionary<TKey,TElement>
  fullName: System.Collections.Generic.Dictionary<TKey,TElement>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Collections.Generic.Dictionary{TKey,TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,TSource>
  nameWithType: Dictionary<TKey,TSource>
  fullName: System.Collections.Generic.Dictionary<TKey,TSource>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToList<TSource>(ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.ToList<TSource>(ParallelQuery<TSource>)
  fullName: ParallelEnumerable.ToList<TSource>(ParallelQuery<TSource>)
- uid: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
- uid: System.Collections.Generic.List{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: List<TSource>
  nameWithType: List<TSource>
  fullName: System.Collections.Generic.List<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.ILookup`2
  parent: System.Linq
  isExternal: false
  name: ILookup<TKey,TElement>
  nameWithType: ILookup<TKey,TElement>
  fullName: System.Linq.ILookup<TKey,TElement>
- uid: System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey,TElement>(ParallelQuery<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.ILookup{TKey,TSource}
  parent: System.Linq
  isExternal: false
  name: ILookup<TKey,TSource>
  nameWithType: ILookup<TKey,TSource>
  fullName: System.Linq.ILookup<TKey,TSource>
  spec.csharp:
  - uid: System.Linq.ILookup`2
    name: ILookup
    nameWithType: ILookup
    fullName: System.Linq.ILookup
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
  fullName: ParallelEnumerable.ToLookup<TSource,TKey>(ParallelQuery<TSource>, Func<TSource,TKey>)
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>)
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>)
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  nameWithType: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
  fullName: ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Where<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  nameWithType: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
  fullName: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Where<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
  fullName: ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithCancellation<TSource>(ParallelQuery<TSource>, CancellationToken)
  nameWithType: ParallelEnumerable.WithCancellation<TSource>(ParallelQuery<TSource>, CancellationToken)
  fullName: ParallelEnumerable.WithCancellation<TSource>(ParallelQuery<TSource>, CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithDegreeOfParallelism<TSource>(ParallelQuery<TSource>, Int32)
  nameWithType: ParallelEnumerable.WithDegreeOfParallelism<TSource>(ParallelQuery<TSource>, Int32)
  fullName: ParallelEnumerable.WithDegreeOfParallelism<TSource>(ParallelQuery<TSource>, Int32)
- uid: System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithExecutionMode<TSource>(ParallelQuery<TSource>, ParallelExecutionMode)
  nameWithType: ParallelEnumerable.WithExecutionMode<TSource>(ParallelQuery<TSource>, ParallelExecutionMode)
  fullName: ParallelEnumerable.WithExecutionMode<TSource>(ParallelQuery<TSource>, ParallelExecutionMode)
- uid: System.Linq.ParallelExecutionMode
  parent: System.Linq
  isExternal: false
  name: ParallelExecutionMode
  nameWithType: ParallelExecutionMode
  fullName: System.Linq.ParallelExecutionMode
- uid: System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithMergeOptions<TSource>(ParallelQuery<TSource>, ParallelMergeOptions)
  nameWithType: ParallelEnumerable.WithMergeOptions<TSource>(ParallelQuery<TSource>, ParallelMergeOptions)
  fullName: ParallelEnumerable.WithMergeOptions<TSource>(ParallelQuery<TSource>, ParallelMergeOptions)
- uid: System.Linq.ParallelMergeOptions
  parent: System.Linq
  isExternal: false
  name: ParallelMergeOptions
  nameWithType: ParallelMergeOptions
  fullName: System.Linq.ParallelMergeOptions
- uid: System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  nameWithType: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  fullName: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
- uid: TFirst
  name: TFirst
  nameWithType: TFirst
  fullName: TFirst
- uid: System.Linq.ParallelQuery{TFirst}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<TFirst>
  nameWithType: ParallelQuery<TFirst>
  fullName: System.Linq.ParallelQuery<TFirst>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: TFirst
    name: TFirst
    nameWithType: TFirst
    fullName: TFirst
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TSecond
  name: TSecond
  nameWithType: TSecond
  fullName: TSecond
- uid: System.Collections.Generic.IEnumerable{TSecond}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TSecond>
  nameWithType: IEnumerable<TSecond>
  fullName: System.Collections.Generic.IEnumerable<TSecond>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSecond
    name: TSecond
    nameWithType: TSecond
    fullName: TSecond
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TFirst,TSecond,TResult}
  parent: System
  isExternal: false
  name: Func<TFirst,TSecond,TResult>
  nameWithType: Func<TFirst,TSecond,TResult>
  fullName: System.Func<TFirst,TSecond,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TFirst
    name: TFirst
    nameWithType: TFirst
    fullName: TFirst
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSecond
    name: TSecond
    nameWithType: TSecond
    fullName: TSecond
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst,TSecond,TResult>)
  nameWithType: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst,TSecond,TResult>)
  fullName: ParallelEnumerable.Zip<TFirst,TSecond,TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst,TSecond,TResult>)
- uid: System.Linq.ParallelQuery{TSecond}
  parent: System.Linq
  isExternal: false
  name: ParallelQuery<TSecond>
  nameWithType: ParallelQuery<TSecond>
  fullName: System.Linq.ParallelQuery<TSecond>
  spec.csharp:
  - uid: System.Linq.ParallelQuery`1
    name: ParallelQuery
    nameWithType: ParallelQuery
    fullName: System.Linq.ParallelQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSecond
    name: TSecond
    nameWithType: TSecond
    fullName: TSecond
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ParallelEnumerable.AsParallel*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel
  nameWithType: ParallelEnumerable.AsParallel
  fullName: ParallelEnumerable.AsParallel
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Aggregate``3*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Aggregate``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate>
  nameWithType: ParallelEnumerable.Aggregate<TSource,TAccumulate>
  fullName: ParallelEnumerable.Aggregate<TSource,TAccumulate>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Aggregate``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Aggregate<TSource>
  nameWithType: ParallelEnumerable.Aggregate<TSource>
  fullName: ParallelEnumerable.Aggregate<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.All``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: All<TSource>
  nameWithType: ParallelEnumerable.All<TSource>
  fullName: ParallelEnumerable.All<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Any``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Any<TSource>
  nameWithType: ParallelEnumerable.Any<TSource>
  fullName: ParallelEnumerable.Any<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.AsEnumerable``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsEnumerable<TSource>
  nameWithType: ParallelEnumerable.AsEnumerable<TSource>
  fullName: ParallelEnumerable.AsEnumerable<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.AsOrdered*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsOrdered
  nameWithType: ParallelEnumerable.AsOrdered
  fullName: ParallelEnumerable.AsOrdered
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.AsOrdered``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsOrdered<TSource>
  nameWithType: ParallelEnumerable.AsOrdered<TSource>
  fullName: ParallelEnumerable.AsOrdered<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.AsParallel``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel<TSource>
  nameWithType: ParallelEnumerable.AsParallel<TSource>
  fullName: ParallelEnumerable.AsParallel<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.AsSequential``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsSequential<TSource>
  nameWithType: ParallelEnumerable.AsSequential<TSource>
  fullName: ParallelEnumerable.AsSequential<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.AsUnordered``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsUnordered<TSource>
  nameWithType: ParallelEnumerable.AsUnordered<TSource>
  fullName: ParallelEnumerable.AsUnordered<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Average*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average
  nameWithType: ParallelEnumerable.Average
  fullName: ParallelEnumerable.Average
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Average``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Average<TSource>
  nameWithType: ParallelEnumerable.Average<TSource>
  fullName: ParallelEnumerable.Average<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Cast``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Cast<TResult>
  nameWithType: ParallelEnumerable.Cast<TResult>
  fullName: ParallelEnumerable.Cast<TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Concat``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Concat<TSource>
  nameWithType: ParallelEnumerable.Concat<TSource>
  fullName: ParallelEnumerable.Concat<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Contains``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Contains<TSource>
  nameWithType: ParallelEnumerable.Contains<TSource>
  fullName: ParallelEnumerable.Contains<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Count``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Count<TSource>
  nameWithType: ParallelEnumerable.Count<TSource>
  fullName: ParallelEnumerable.Count<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.DefaultIfEmpty``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>
  nameWithType: ParallelEnumerable.DefaultIfEmpty<TSource>
  fullName: ParallelEnumerable.DefaultIfEmpty<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Distinct``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Distinct<TSource>
  nameWithType: ParallelEnumerable.Distinct<TSource>
  fullName: ParallelEnumerable.Distinct<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ElementAt``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ElementAt<TSource>
  nameWithType: ParallelEnumerable.ElementAt<TSource>
  fullName: ParallelEnumerable.ElementAt<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ElementAtOrDefault``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ElementAtOrDefault<TSource>
  nameWithType: ParallelEnumerable.ElementAtOrDefault<TSource>
  fullName: ParallelEnumerable.ElementAtOrDefault<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Empty``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Empty<TResult>
  nameWithType: ParallelEnumerable.Empty<TResult>
  fullName: ParallelEnumerable.Empty<TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Except``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Except<TSource>
  nameWithType: ParallelEnumerable.Except<TSource>
  fullName: ParallelEnumerable.Except<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.First``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: First<TSource>
  nameWithType: ParallelEnumerable.First<TSource>
  fullName: ParallelEnumerable.First<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.FirstOrDefault``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: FirstOrDefault<TSource>
  nameWithType: ParallelEnumerable.FirstOrDefault<TSource>
  fullName: ParallelEnumerable.FirstOrDefault<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ForAll``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ForAll<TSource>
  nameWithType: ParallelEnumerable.ForAll<TSource>
  fullName: ParallelEnumerable.ForAll<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.GroupBy``4*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.GroupBy``3*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey,TElement>
  fullName: ParallelEnumerable.GroupBy<TSource,TKey,TElement>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.GroupBy``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupBy<TSource,TKey>
  nameWithType: ParallelEnumerable.GroupBy<TSource,TKey>
  fullName: ParallelEnumerable.GroupBy<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.GroupJoin``4*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>
  nameWithType: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>
  fullName: ParallelEnumerable.GroupJoin<TOuter,TInner,TKey,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Intersect``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Intersect<TSource>
  nameWithType: ParallelEnumerable.Intersect<TSource>
  fullName: ParallelEnumerable.Intersect<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Join``4*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>
  nameWithType: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>
  fullName: ParallelEnumerable.Join<TOuter,TInner,TKey,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Last``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Last<TSource>
  nameWithType: ParallelEnumerable.Last<TSource>
  fullName: ParallelEnumerable.Last<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.LastOrDefault``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: LastOrDefault<TSource>
  nameWithType: ParallelEnumerable.LastOrDefault<TSource>
  fullName: ParallelEnumerable.LastOrDefault<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.LongCount``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: LongCount<TSource>
  nameWithType: ParallelEnumerable.LongCount<TSource>
  fullName: ParallelEnumerable.LongCount<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Max*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max
  nameWithType: ParallelEnumerable.Max
  fullName: ParallelEnumerable.Max
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Max``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource,TResult>
  nameWithType: ParallelEnumerable.Max<TSource,TResult>
  fullName: ParallelEnumerable.Max<TSource,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Max``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Max<TSource>
  nameWithType: ParallelEnumerable.Max<TSource>
  fullName: ParallelEnumerable.Max<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Min*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min
  nameWithType: ParallelEnumerable.Min
  fullName: ParallelEnumerable.Min
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Min``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource,TResult>
  nameWithType: ParallelEnumerable.Min<TSource,TResult>
  fullName: ParallelEnumerable.Min<TSource,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Min``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Min<TSource>
  nameWithType: ParallelEnumerable.Min<TSource>
  fullName: ParallelEnumerable.Min<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.OfType``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OfType<TResult>
  nameWithType: ParallelEnumerable.OfType<TResult>
  fullName: ParallelEnumerable.OfType<TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.OrderBy``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OrderBy<TSource,TKey>
  nameWithType: ParallelEnumerable.OrderBy<TSource,TKey>
  fullName: ParallelEnumerable.OrderBy<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.OrderByDescending``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>
  nameWithType: ParallelEnumerable.OrderByDescending<TSource,TKey>
  fullName: ParallelEnumerable.OrderByDescending<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Range*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Range
  nameWithType: ParallelEnumerable.Range
  fullName: ParallelEnumerable.Range
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Repeat``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Repeat<TResult>
  nameWithType: ParallelEnumerable.Repeat<TResult>
  fullName: ParallelEnumerable.Repeat<TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Reverse``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Reverse<TSource>
  nameWithType: ParallelEnumerable.Reverse<TSource>
  fullName: ParallelEnumerable.Reverse<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Select``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Select<TSource,TResult>
  nameWithType: ParallelEnumerable.Select<TSource,TResult>
  fullName: ParallelEnumerable.Select<TSource,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.SelectMany``3*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>
  nameWithType: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>
  fullName: ParallelEnumerable.SelectMany<TSource,TCollection,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.SelectMany``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SelectMany<TSource,TResult>
  nameWithType: ParallelEnumerable.SelectMany<TSource,TResult>
  fullName: ParallelEnumerable.SelectMany<TSource,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.SequenceEqual``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SequenceEqual<TSource>
  nameWithType: ParallelEnumerable.SequenceEqual<TSource>
  fullName: ParallelEnumerable.SequenceEqual<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Single``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Single<TSource>
  nameWithType: ParallelEnumerable.Single<TSource>
  fullName: ParallelEnumerable.Single<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.SingleOrDefault``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SingleOrDefault<TSource>
  nameWithType: ParallelEnumerable.SingleOrDefault<TSource>
  fullName: ParallelEnumerable.SingleOrDefault<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Skip``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Skip<TSource>
  nameWithType: ParallelEnumerable.Skip<TSource>
  fullName: ParallelEnumerable.Skip<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.SkipWhile``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: SkipWhile<TSource>
  nameWithType: ParallelEnumerable.SkipWhile<TSource>
  fullName: ParallelEnumerable.SkipWhile<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Sum*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum
  nameWithType: ParallelEnumerable.Sum
  fullName: ParallelEnumerable.Sum
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Sum``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Sum<TSource>
  nameWithType: ParallelEnumerable.Sum<TSource>
  fullName: ParallelEnumerable.Sum<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Take``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Take<TSource>
  nameWithType: ParallelEnumerable.Take<TSource>
  fullName: ParallelEnumerable.Take<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.TakeWhile``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: TakeWhile<TSource>
  nameWithType: ParallelEnumerable.TakeWhile<TSource>
  fullName: ParallelEnumerable.TakeWhile<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ThenBy``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ThenBy<TSource,TKey>
  nameWithType: ParallelEnumerable.ThenBy<TSource,TKey>
  fullName: ParallelEnumerable.ThenBy<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ThenByDescending``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ThenByDescending<TSource,TKey>
  nameWithType: ParallelEnumerable.ThenByDescending<TSource,TKey>
  fullName: ParallelEnumerable.ThenByDescending<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ToArray``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToArray<TSource>
  nameWithType: ParallelEnumerable.ToArray<TSource>
  fullName: ParallelEnumerable.ToArray<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ToDictionary``3*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey,TElement>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ToDictionary``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>
  nameWithType: ParallelEnumerable.ToDictionary<TSource,TKey>
  fullName: ParallelEnumerable.ToDictionary<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ToList``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToList<TSource>
  nameWithType: ParallelEnumerable.ToList<TSource>
  fullName: ParallelEnumerable.ToList<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ToLookup``3*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey,TElement>
  fullName: ParallelEnumerable.ToLookup<TSource,TKey,TElement>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.ToLookup``2*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: ToLookup<TSource,TKey>
  nameWithType: ParallelEnumerable.ToLookup<TSource,TKey>
  fullName: ParallelEnumerable.ToLookup<TSource,TKey>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Union``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Union<TSource>
  nameWithType: ParallelEnumerable.Union<TSource>
  fullName: ParallelEnumerable.Union<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Where``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Where<TSource>
  nameWithType: ParallelEnumerable.Where<TSource>
  fullName: ParallelEnumerable.Where<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.WithCancellation``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithCancellation<TSource>
  nameWithType: ParallelEnumerable.WithCancellation<TSource>
  fullName: ParallelEnumerable.WithCancellation<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithDegreeOfParallelism<TSource>
  nameWithType: ParallelEnumerable.WithDegreeOfParallelism<TSource>
  fullName: ParallelEnumerable.WithDegreeOfParallelism<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.WithExecutionMode``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithExecutionMode<TSource>
  nameWithType: ParallelEnumerable.WithExecutionMode<TSource>
  fullName: ParallelEnumerable.WithExecutionMode<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.WithMergeOptions``1*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: WithMergeOptions<TSource>
  nameWithType: ParallelEnumerable.WithMergeOptions<TSource>
  fullName: ParallelEnumerable.WithMergeOptions<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Linq.ParallelEnumerable.Zip``3*
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: Zip<TFirst,TSecond,TResult>
  nameWithType: ParallelEnumerable.Zip<TFirst,TSecond,TResult>
  fullName: ParallelEnumerable.Zip<TFirst,TSecond,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelEnumerable.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
