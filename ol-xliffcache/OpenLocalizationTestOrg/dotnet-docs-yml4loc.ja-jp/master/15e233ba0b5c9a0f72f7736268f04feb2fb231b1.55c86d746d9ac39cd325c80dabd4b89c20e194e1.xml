{"nodes":[{"content":"Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.","nodes":[{"pos":[0,128],"content":"Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.","nodes":[{"content":"Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.","pos":[0,128]}]}],"pos":[496,625],"yaml":true},{"content":"In XAML, null and empty string are generally not equivalent. You use the `{x:Null}` extension usage in order to set an attribute that sets the underlying property to `null`.  For more information on how setting null values is relevant for scenarios in XAML, see [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md).  \n  \n This class is a markup extension implementation. Markup extension classes exist mainly to provide infrastructure support for how XAML processors interpret a particular extension. The members that markup extension implementation classes expose are not typically intended to be called from your code. This markup extension class supports the [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md) usage for .NET XAML Services.  \n  \n In previous versions of the .NET Framework, this class (and the `x:Null` markup extension XAML behavior support as well as the relevant xmlns mapping) existed in the WPF-specific assembly PresentationFramework. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NullExtension> is in the System.Xaml assembly. This makes the `x:Null` usage available to applications using frameworks that reference .NET XAML Services. You do not need PresentationFramework as a referenced assembly so long as you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \n  \n The System.Xaml assembly uses <xref:System.Windows.Markup.XmlnsDefinitionAttribute> to map all types in the assembly to the XAML namespace for the XAML language ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]). Typically you declare a prefix for [!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)] in a root element mapping and use the prefix `x`.  \n  \n## WPF Usage Notes  \n For WPF dependency properties, when you set a dependency property value to `null`, you are not necessarily setting the property to its default value, even if it is a reference property. The default value of a dependency property depends on its dependency property registration. An unset value is not necessarily `null` either; see <xref:System.Windows.DependencyProperty.UnsetValue>. For more information, see <xref:System.Windows.DependencyObject.ClearValue%2A> or [Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md).  \n  \n<a name=\"xamlTextUsage_NullExtension\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,347],"content":"In XAML, null and empty string are generally not equivalent. You use the `{x:Null}` extension usage in order to set an attribute that sets the underlying property to `null`.  For more information on how setting null values is relevant for scenarios in XAML, see [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md).","nodes":[{"content":"In XAML, null and empty string are generally not equivalent.","pos":[0,60]},{"content":"You use the <ph id=\"ph1\">`{x:Null}`</ph> extension usage in order to set an attribute that sets the underlying property to <ph id=\"ph2\">`null`</ph>.","pos":[61,173],"source":" You use the `{x:Null}` extension usage in order to set an attribute that sets the underlying property to `null`."},{"content":"For more information on how setting null values is relevant for scenarios in XAML, see <bpt id=\"p1\">[</bpt>x:Null Markup Extension<ept id=\"p1\">](~/docs/framework/xaml-services/x-null-markup-extension.md)</ept>.","pos":[175,347],"source":"  For more information on how setting null values is relevant for scenarios in XAML, see [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md)."}]},{"pos":[354,808],"content":"This class is a markup extension implementation. Markup extension classes exist mainly to provide infrastructure support for how XAML processors interpret a particular extension. The members that markup extension implementation classes expose are not typically intended to be called from your code. This markup extension class supports the [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md) usage for .NET XAML Services.","nodes":[{"content":"This class is a markup extension implementation.","pos":[0,48]},{"content":"Markup extension classes exist mainly to provide infrastructure support for how XAML processors interpret a particular extension.","pos":[49,178]},{"content":"The members that markup extension implementation classes expose are not typically intended to be called from your code.","pos":[179,298]},{"content":"This markup extension class supports the <bpt id=\"p1\">[</bpt>x:Null Markup Extension<ept id=\"p1\">](~/docs/framework/xaml-services/x-null-markup-extension.md)</ept> usage for .NET XAML Services.","pos":[299,454],"source":" This markup extension class supports the [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md) usage for .NET XAML Services."}]},{"pos":[815,1561],"content":"In previous versions of the .NET Framework, this class (and the `x:Null` markup extension XAML behavior support as well as the relevant xmlns mapping) existed in the WPF-specific assembly PresentationFramework. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NullExtension> is in the System.Xaml assembly. This makes the `x:Null` usage available to applications using frameworks that reference .NET XAML Services. You do not need PresentationFramework as a referenced assembly so long as you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).","nodes":[{"content":"In previous versions of the .NET Framework, this class (and the <ph id=\"ph1\">`x:Null`</ph> markup extension XAML behavior support as well as the relevant xmlns mapping) existed in the WPF-specific assembly PresentationFramework.","pos":[0,210],"source":"In previous versions of the .NET Framework, this class (and the `x:Null` markup extension XAML behavior support as well as the relevant xmlns mapping) existed in the WPF-specific assembly PresentationFramework."},{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.NullExtension&gt;</ph> is in the System.Xaml assembly.","pos":[211,345],"source":" In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NullExtension> is in the System.Xaml assembly."},{"content":"This makes the <ph id=\"ph1\">`x:Null`</ph> usage available to applications using frameworks that reference .NET XAML Services.","pos":[346,453],"source":" This makes the `x:Null` usage available to applications using frameworks that reference .NET XAML Services."},{"content":"You do not need PresentationFramework as a referenced assembly so long as you are targeting <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.","pos":[454,604],"source":" You do not need PresentationFramework as a referenced assembly so long as you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Types Migrated from WPF to System.Xaml<ept id=\"p1\">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.","pos":[605,746],"source":" For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)."}]},{"pos":[1568,1964],"content":"The System.Xaml assembly uses <xref:System.Windows.Markup.XmlnsDefinitionAttribute> to map all types in the assembly to the XAML namespace for the XAML language ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]). Typically you declare a prefix for [!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)] in a root element mapping and use the prefix `x`.","nodes":[{"content":"The System.Xaml assembly uses <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> to map all types in the assembly to the XAML namespace for the XAML language (<ph id=\"ph2\">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph>).","pos":[0,237],"source":"The System.Xaml assembly uses <xref:System.Windows.Markup.XmlnsDefinitionAttribute> to map all types in the assembly to the XAML namespace for the XAML language ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)])."},{"content":"Typically you declare a prefix for <ph id=\"ph1\">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph> in a root element mapping and use the prefix <ph id=\"ph2\">`x`</ph>.","pos":[238,396],"source":" Typically you declare a prefix for [!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)] in a root element mapping and use the prefix `x`."}]},{"pos":[1973,1988],"content":"WPF Usage Notes","linkify":"WPF Usage Notes","nodes":[{"content":"WPF Usage Notes","pos":[0,15]}]},{"pos":[1992,2556],"content":"For WPF dependency properties, when you set a dependency property value to `null`, you are not necessarily setting the property to its default value, even if it is a reference property. The default value of a dependency property depends on its dependency property registration. An unset value is not necessarily `null` either; see <xref:System.Windows.DependencyProperty.UnsetValue>. For more information, see <xref:System.Windows.DependencyObject.ClearValue%2A> or [Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md).","nodes":[{"content":"For WPF dependency properties, when you set a dependency property value to <ph id=\"ph1\">`null`</ph>, you are not necessarily setting the property to its default value, even if it is a reference property.","pos":[0,185],"source":"For WPF dependency properties, when you set a dependency property value to `null`, you are not necessarily setting the property to its default value, even if it is a reference property."},{"content":"The default value of a dependency property depends on its dependency property registration.","pos":[186,277]},{"content":"An unset value is not necessarily <ph id=\"ph1\">`null`</ph> either; see <ph id=\"ph2\">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>.","pos":[278,383],"source":" An unset value is not necessarily `null` either; see <xref:System.Windows.DependencyProperty.UnsetValue>."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> or <bpt id=\"p1\">[</bpt>Dependency Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept>.","pos":[384,564],"source":" For more information, see <xref:System.Windows.DependencyObject.ClearValue%2A> or [Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md)."}]},{"pos":[2611,2626],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[636,3279],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.NullExtension\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.NullExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.NullExtension\"></xref> class."}],"pos":[4810,4908],"yaml":true},{"content":"Provides `null` to use as a value as the output of this markup extension.","nodes":[{"pos":[0,73],"content":"Provides <ph id=\"ph1\">`null`</ph> to use as a value as the output of this markup extension.","source":"Provides `null` to use as a value as the output of this markup extension."}],"pos":[6066,6140],"yaml":true},{"content":"This method supports XAML processor implementations, and is not intended to be called directly. A XAML processor implementation uses this method when it creates object graphs that include an `x:Null` extension usage. This relies on general behavior for XAML processors when they process any <xref:System.Windows.Markup.MarkupExtension> and call its `ProvideValue` implementation.  \n  \n This implementation does not rely on services that are based on the passed `serviceProvider`. It always returns a null reference regardless of context. In the .NET Framework XAML Services implementation, the value to return is obtained by referencing the <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName> static value.","nodes":[{"pos":[0,379],"content":"This method supports XAML processor implementations, and is not intended to be called directly. A XAML processor implementation uses this method when it creates object graphs that include an `x:Null` extension usage. This relies on general behavior for XAML processors when they process any <xref:System.Windows.Markup.MarkupExtension> and call its `ProvideValue` implementation.","nodes":[{"content":"This method supports XAML processor implementations, and is not intended to be called directly.","pos":[0,95]},{"content":"A XAML processor implementation uses this method when it creates object graphs that include an <ph id=\"ph1\">`x:Null`</ph> extension usage.","pos":[96,216],"source":" A XAML processor implementation uses this method when it creates object graphs that include an `x:Null` extension usage."},{"content":"This relies on general behavior for XAML processors when they process any <ph id=\"ph1\">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> and call its <ph id=\"ph2\">`ProvideValue`</ph> implementation.","pos":[217,379],"source":" This relies on general behavior for XAML processors when they process any <xref:System.Windows.Markup.MarkupExtension> and call its `ProvideValue` implementation."}]},{"pos":[386,719],"content":"This implementation does not rely on services that are based on the passed `serviceProvider`. It always returns a null reference regardless of context. In the .NET Framework XAML Services implementation, the value to return is obtained by referencing the <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName> static value.","nodes":[{"content":"This implementation does not rely on services that are based on the passed <ph id=\"ph1\">`serviceProvider`</ph>.","pos":[0,93],"source":"This implementation does not rely on services that are based on the passed `serviceProvider`."},{"content":"It always returns a null reference regardless of context.","pos":[94,151]},{"content":"In the .NET Framework XAML Services implementation, the value to return is obtained by referencing the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName&gt;</ph> static value.","pos":[152,333],"source":" In the .NET Framework XAML Services implementation, the value to return is obtained by referencing the <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName> static value."}]}],"pos":[6151,6875],"yaml":true,"extradata":"MT"},{"content":"An object that can provide services for the markup extension implementation.","nodes":[{"pos":[0,76],"content":"An object that can provide services for the markup extension implementation.","nodes":[{"content":"An object that can provide services for the markup extension implementation.","pos":[0,76]}]}],"pos":[7067,7144],"yaml":true},{"content":"A null reference.","nodes":[{"pos":[0,17],"content":"A null reference.","nodes":[{"content":"A null reference.","pos":[0,17]}]}],"pos":[7201,7219],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.NullExtension\n  commentId: T:System.Windows.Markup.NullExtension\n  id: NullExtension\n  children:\n  - System.Windows.Markup.NullExtension.#ctor\n  - System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)\n  langs:\n  - csharp\n  name: NullExtension\n  nameWithType: NullExtension\n  fullName: System.Windows.Markup.NullExtension\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.\n  remarks: \"In XAML, null and empty string are generally not equivalent. You use the `{x:Null}` extension usage in order to set an attribute that sets the underlying property to `null`.  For more information on how setting null values is relevant for scenarios in XAML, see [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md).  \\n  \\n This class is a markup extension implementation. Markup extension classes exist mainly to provide infrastructure support for how XAML processors interpret a particular extension. The members that markup extension implementation classes expose are not typically intended to be called from your code. This markup extension class supports the [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md) usage for .NET XAML Services.  \\n  \\n In previous versions of the .NET Framework, this class (and the `x:Null` markup extension XAML behavior support as well as the relevant xmlns mapping) existed in the WPF-specific assembly PresentationFramework. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NullExtension> is in the System.Xaml assembly. This makes the `x:Null` usage available to applications using frameworks that reference .NET XAML Services. You do not need PresentationFramework as a referenced assembly so long as you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \\n  \\n The System.Xaml assembly uses <xref:System.Windows.Markup.XmlnsDefinitionAttribute> to map all types in the assembly to the XAML namespace for the XAML language ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]). Typically you declare a prefix for [!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)] in a root element mapping and use the prefix `x`.  \\n  \\n## WPF Usage Notes  \\n For WPF dependency properties, when you set a dependency property value to `null`, you are not necessarily setting the property to its default value, even if it is a reference property. The default value of a dependency property depends on its dependency property registration. An unset value is not necessarily `null` either; see <xref:System.Windows.DependencyProperty.UnsetValue>. For more information, see <xref:System.Windows.DependencyObject.ClearValue%2A> or [Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md).  \\n  \\n<a name=\\\"xamlTextUsage_NullExtension\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]\n\n      public class NullExtension : System.Windows.Markup.MarkupExtension\n  inheritance:\n  - System.Object\n  - System.Windows.Markup.MarkupExtension\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Windows.Markup.MarkupExtensionReturnTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NullExtension.#ctor\n  commentId: M:System.Windows.Markup.NullExtension.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.NullExtension\n  langs:\n  - csharp\n  name: NullExtension()\n  nameWithType: NullExtension.NullExtension()\n  fullName: NullExtension.NullExtension()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.NullExtension\"></xref> class.\n  syntax:\n    content: public NullExtension ();\n    parameters: []\n  overload: System.Windows.Markup.NullExtension.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)\n  commentId: M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)\n  id: ProvideValue(System.IServiceProvider)\n  parent: System.Windows.Markup.NullExtension\n  langs:\n  - csharp\n  name: ProvideValue(IServiceProvider)\n  nameWithType: NullExtension.ProvideValue(IServiceProvider)\n  fullName: NullExtension.ProvideValue(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Provides `null` to use as a value as the output of this markup extension.\n  remarks: \"This method supports XAML processor implementations, and is not intended to be called directly. A XAML processor implementation uses this method when it creates object graphs that include an `x:Null` extension usage. This relies on general behavior for XAML processors when they process any <xref:System.Windows.Markup.MarkupExtension> and call its `ProvideValue` implementation.  \\n  \\n This implementation does not rely on services that are based on the passed `serviceProvider`. It always returns a null reference regardless of context. In the .NET Framework XAML Services implementation, the value to return is obtained by referencing the <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName> static value.\"\n  syntax:\n    content: public override object ProvideValue (IServiceProvider serviceProvider);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that can provide services for the markup extension implementation.\n    return:\n      type: System.Object\n      description: A null reference.\n  overload: System.Windows.Markup.NullExtension.ProvideValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Windows.Markup.MarkupExtension\n  parent: System.Windows.Markup\n  isExternal: false\n  name: MarkupExtension\n  nameWithType: MarkupExtension\n  fullName: System.Windows.Markup.MarkupExtension\n- uid: System.Windows.Markup.NullExtension.#ctor\n  parent: System.Windows.Markup.NullExtension\n  isExternal: false\n  name: NullExtension()\n  nameWithType: NullExtension.NullExtension()\n  fullName: NullExtension.NullExtension()\n- uid: System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)\n  parent: System.Windows.Markup.NullExtension\n  isExternal: false\n  name: ProvideValue(IServiceProvider)\n  nameWithType: NullExtension.ProvideValue(IServiceProvider)\n  fullName: NullExtension.ProvideValue(IServiceProvider)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Windows.Markup.NullExtension.#ctor*\n  parent: System.Windows.Markup.NullExtension\n  isExternal: false\n  name: NullExtension\n  nameWithType: NullExtension.NullExtension\n  fullName: NullExtension.NullExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml\n- uid: System.Windows.Markup.NullExtension.ProvideValue*\n  parent: System.Windows.Markup.NullExtension\n  isExternal: false\n  name: ProvideValue\n  nameWithType: NullExtension.ProvideValue\n  fullName: NullExtension.ProvideValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}