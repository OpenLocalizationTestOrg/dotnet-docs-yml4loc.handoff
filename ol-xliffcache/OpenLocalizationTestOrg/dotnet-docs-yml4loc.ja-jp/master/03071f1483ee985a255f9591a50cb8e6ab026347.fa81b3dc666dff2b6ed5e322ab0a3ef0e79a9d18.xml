{"nodes":[{"content":"Represents one or multiple databases that are used by ASP.NET Dynamic Data.","nodes":[{"pos":[0,75],"content":"Represents one or multiple databases that are used by ASP.NET Dynamic Data.","nodes":[{"content":"Represents one or multiple databases that are used by ASP.NET Dynamic Data.","pos":[0,75]}]}],"pos":[2191,2267],"yaml":true},{"content":"The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.  \n  \n A data context is an object that represents a database connection. A data context has access to one data model which represents a database that is available through that connection. A data model is an object that represents a database's data entities as CLR types. Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.  \n  \n In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template. These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.","nodes":[{"pos":[0,132],"content":"The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel&gt;</ph> type lets you register one or multiple data contexts for a Dynamic Data Web application.","pos":[0,132],"source":"The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application."}]},{"pos":[139,495],"content":"A data context is an object that represents a database connection. A data context has access to one data model which represents a database that is available through that connection. A data model is an object that represents a database's data entities as CLR types. Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.","nodes":[{"content":"A data context is an object that represents a database connection. A data context has access to one data model which represents a database that is available through that connection. A data model is an object that represents a database's data entities as CLR types. Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.","pos":[0,356],"nodes":[{"content":"A data context is an object that represents a database connection.","pos":[0,66]},{"content":"A data context has access to one data model which represents a database that is available through that connection.","pos":[67,181]},{"content":"A data model is an object that represents a database's data entities as CLR types.","pos":[182,264]},{"content":"Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.","pos":[265,356]}]}]},{"pos":[502,861],"content":"In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template. These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, you can generate data-model types by using the <bpt id=\"p1\">**</bpt>LINQ to SQL Classes<ept id=\"p1\">**</ept> template or the <bpt id=\"p2\">**</bpt>ADO.NET Entity Data Model<ept id=\"p2\">**</ept> template.","pos":[0,174],"source":"In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template."},{"content":"These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.","pos":[175,359]}]}],"pos":[2278,3146],"yaml":true,"extradata":"MT"},{"content":"Instantiates a new instance of the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> class.","nodes":[{"pos":[0,95],"content":"Instantiates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaModel\"&gt;&lt;/xref&gt;</ph> class.","source":"Instantiates a new instance of the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> class."}],"pos":[6447,6543],"yaml":true},{"content":"You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.","nodes":[{"pos":[0,144],"content":"You typically call the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.%23ctor%2A&gt;</ph> constructor in the <ph id=\"ph2\">`Application_Start`</ph> method of the Global.asax file.","source":"You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file."}],"pos":[6554,6699],"yaml":true,"extradata":"MT"},{"content":"Instantiates a new instance of the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> class.","nodes":[{"pos":[0,95],"content":"Instantiates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaModel\"&gt;&lt;/xref&gt;</ph> class.","source":"Instantiates a new instance of the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> class."}],"pos":[8423,8519],"yaml":true},{"content":"This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method. It enables you to create multiple models and use the same entity types while avoiding type conflicts.  \n  \n You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.","nodes":[{"pos":[0,273],"content":"This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method. It enables you to create multiple models and use the same entity types while avoiding type conflicts.","nodes":[{"content":"This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method. It enables you to create multiple models and use the same entity types while avoiding type conflicts.","pos":[0,273],"nodes":[{"content":"This constructor determines whether the data model is registered globally so that it can be retrieved using the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.GetModel%2A&gt;</ph> method.","pos":[0,171],"source":"This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method."},{"content":"It enables you to create multiple models and use the same entity types while avoiding type conflicts.","pos":[172,273]}]}]},{"pos":[280,424],"content":"You typically call the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.%23ctor%2A&gt;</ph> constructor in the <ph id=\"ph2\">`Application_Start`</ph> method of the Global.asax file.","source":"You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file."}],"pos":[8530,8959],"yaml":true,"extradata":"MT"},{"content":"`true` to indicate that the model is registered globally; otherwise `false`. The default is `true`.","nodes":[{"pos":[0,99],"content":"`true` to indicate that the model is registered globally; otherwise `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to indicate that the model is registered globally; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` to indicate that the model is registered globally; otherwise `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[77,99],"source":" The default is `true`."}]}],"pos":[9113,9215],"yaml":true},{"content":"Instantiates a <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object.","nodes":[{"pos":[0,76],"content":"Instantiates a <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaTable\"&gt;&lt;/xref&gt;</ph> object.","source":"Instantiates a <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object."}],"pos":[10389,10466],"yaml":true},{"content":"The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.","nodes":[{"pos":[0,114],"content":"The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.CreateTable%2A&gt;</ph> method can be overridden to instantiate a derived type.","pos":[0,114],"source":"The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type."}]}],"pos":[10477,10592],"yaml":true,"extradata":"MT"},{"content":"The provider for the table.","nodes":[{"pos":[0,27],"content":"The provider for the table.","nodes":[{"content":"The provider for the table.","pos":[0,27]}]}],"pos":[10860,10888],"yaml":true},{"content":"A new instance of the table.","nodes":[{"pos":[0,28],"content":"A new instance of the table.","nodes":[{"content":"A new instance of the table.","pos":[0,28]}]}],"pos":[10964,10993],"yaml":true},{"content":"Gets the first instance of a data model that is created by the application.","nodes":[{"pos":[0,75],"content":"Gets the first instance of a data model that is created by the application.","nodes":[{"content":"Gets the first instance of a data model that is created by the application.","pos":[0,75]}]}],"pos":[11947,12023],"yaml":true},{"content":"This property provides a simple way to reference the default data-model instance. If the application uses multiple models, you must provide your own way to store references to the additional data models. To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,328],"content":"This property provides a simple way to reference the default data-model instance. If the application uses multiple models, you must provide your own way to store references to the additional data models. To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName> method.","nodes":[{"content":"This property provides a simple way to reference the default data-model instance. If the application uses multiple models, you must provide your own way to store references to the additional data models. To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName> method.","pos":[0,328],"nodes":[{"content":"This property provides a simple way to reference the default data-model instance.","pos":[0,81]},{"content":"If the application uses multiple models, you must provide your own way to store references to the additional data models.","pos":[82,203]},{"content":"To find a specific data model, call the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName&gt;</ph> method.","pos":[204,328],"source":" To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName> method."}]}]}],"pos":[12034,12363],"yaml":true,"extradata":"MT"},{"content":"The data-model instance.","nodes":[{"pos":[0,24],"content":"The data-model instance.","nodes":[{"content":"The data-model instance.","pos":[0,24]}]}],"pos":[13160,13185],"yaml":true},{"content":"Gets or sets the virtual path of the DynamicData folder in the Web site.","nodes":[{"pos":[0,72],"content":"Gets or sets the virtual path of the DynamicData folder in the Web site.","nodes":[{"content":"Gets or sets the virtual path of the DynamicData folder in the Web site.","pos":[0,72]}]}],"pos":[14261,14334],"yaml":true},{"content":"This property enables you to change the virtual path of the DynamicData folder. The default value is \"~/DynamicData\".","nodes":[{"pos":[0,117],"content":"This property enables you to change the virtual path of the DynamicData folder. The default value is \"~/DynamicData\".","nodes":[{"content":"This property enables you to change the virtual path of the DynamicData folder. The default value is \"~/DynamicData\".","pos":[0,117],"nodes":[{"content":"This property enables you to change the virtual path of the DynamicData folder.","pos":[0,79]},{"content":"The default value is \"~/DynamicData\".","pos":[80,117]}]}]}],"pos":[14345,14463],"yaml":true,"extradata":"MT"},{"content":"The virtual path of the DynamicData folder.","nodes":[{"pos":[0,43],"content":"The virtual path of the DynamicData folder.","nodes":[{"content":"The virtual path of the DynamicData folder.","pos":[0,43]}]}],"pos":[14600,14644],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Web.DynamicData.EntityTemplateFactory\"></xref> object that is associated with the model.","nodes":[{"pos":[0,124],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.EntityTemplateFactory\"&gt;&lt;/xref&gt;</ph> object that is associated with the model.","source":"Gets or sets the <xref href=\"System.Web.DynamicData.EntityTemplateFactory\"></xref> object that is associated with the model."}],"pos":[15699,15824],"yaml":true},{"content":"An instance of the <xref href=\"System.Web.DynamicData.EntityTemplateFactory\"></xref> object that is associated with the model.","nodes":[{"pos":[0,126],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.EntityTemplateFactory\"&gt;&lt;/xref&gt;</ph> object that is associated with the model.","source":"An instance of the <xref href=\"System.Web.DynamicData.EntityTemplateFactory\"></xref> object that is associated with the model."}],"pos":[16023,16150],"yaml":true},{"content":"Gets or sets a custom <xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"></xref> interface.","nodes":[{"pos":[0,98],"content":"Gets or sets a custom <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"&gt;&lt;/xref&gt;</ph> interface.","source":"Gets or sets a custom <xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"></xref> interface."}],"pos":[17192,17291],"yaml":true},{"content":"The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.","nodes":[{"pos":[0,139],"content":"The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.IFieldTemplateFactory&gt;</ph> interface lets you specify which field templates are created for the table columns.","pos":[0,139],"source":"The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns."}]}],"pos":[17302,17442],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"></xref> interface.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"&gt;&lt;/xref&gt;</ph> interface.","source":"The <xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"></xref> interface."}],"pos":[17640,17721],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> object that is associated with the model.","nodes":[{"pos":[0,116],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.FilterFactory\"&gt;&lt;/xref&gt;</ph> object that is associated with the model.","source":"Gets or sets the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> object that is associated with the model."}],"pos":[18720,18837],"yaml":true},{"content":"An instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> object that is associated with the model.","nodes":[{"pos":[0,118],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.FilterFactory\"&gt;&lt;/xref&gt;</ph> object that is associated with the model.","source":"An instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> object that is associated with the model."}],"pos":[19012,19131],"yaml":true},{"content":"Returns the action path that is associated with a specific table.","nodes":[{"pos":[0,65],"content":"Returns the action path that is associated with a specific table.","nodes":[{"content":"Returns the action path that is associated with a specific table.","pos":[0,65]}]}],"pos":[20322,20388],"yaml":true},{"content":"The route is determined by the combination of the table name and action.  \n  \n [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.","nodes":[{"pos":[0,72],"content":"The route is determined by the combination of the table name and action.","nodes":[{"content":"The route is determined by the combination of the table name and action.","pos":[0,72]}]},{"pos":[79,225],"content":"<bpt id=\"p1\">[</bpt>Run<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=120736&amp;sref=System.Web.DynamicData.MetaModel&amp;spage=PathModel.aspx)</ept> an online example of this feature.","source":"[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature."}],"pos":[20399,20629],"yaml":true,"extradata":"MT"},{"content":"The name of the table that the action applies to.","nodes":[{"pos":[0,49],"content":"The name of the table that the action applies to.","nodes":[{"content":"The name of the table that the action applies to.","pos":[0,49]}]}],"pos":[21442,21492],"yaml":true},{"content":"The action to apply to the table.","nodes":[{"pos":[0,33],"content":"The action to apply to the table.","nodes":[{"content":"The action to apply to the table.","pos":[0,33]}]}],"pos":[21554,21588],"yaml":true},{"content":"An object that represents a single row of data in a table. <code>row</code> is used to provide values for query-string parameters.","nodes":[{"pos":[0,130],"content":"An object that represents a single row of data in a table. <code>row</code> is used to provide values for query-string parameters.","nodes":[{"content":"An object that represents a single row of data in a table.","pos":[0,58]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">row</ph><ept id=\"p1\">&lt;/code&gt;</ept> is used to provide values for query-string parameters.","pos":[59,130],"source":"<code>row</code> is used to provide values for query-string parameters."}]}],"pos":[21647,21778],"yaml":true},{"content":"The URL that is associated with the route.","nodes":[{"pos":[0,42],"content":"The URL that is associated with the route.","nodes":[{"content":"The URL that is associated with the route.","pos":[0,42]}]}],"pos":[21835,21878],"yaml":true},{"content":"Returns the data-model instance for the specified context.","nodes":[{"pos":[0,58],"content":"Returns the data-model instance for the specified context.","nodes":[{"content":"Returns the data-model instance for the specified context.","pos":[0,58]}]}],"pos":[22895,22954],"yaml":true},{"content":"The type of the data context as defined in the data model.","nodes":[{"pos":[0,58],"content":"The type of the data context as defined in the data model.","nodes":[{"content":"The type of the data context as defined in the data model.","pos":[0,58]}]}],"pos":[23845,23904],"yaml":true},{"content":"The data model that is associated with the specified context type.","nodes":[{"pos":[0,66],"content":"The data model that is associated with the specified context type.","nodes":[{"content":"The data model that is associated with the specified context type.","pos":[0,66]}]}],"pos":[23980,24047],"yaml":true},{"content":"Returns the metadata that describes the specified table.","nodes":[{"pos":[0,56],"content":"Returns the metadata that describes the specified table.","nodes":[{"content":"Returns the metadata that describes the specified table.","pos":[0,56]}]}],"pos":[25125,25182],"yaml":true},{"content":"The name of the table.","nodes":[{"pos":[0,22],"content":"The name of the table.","nodes":[{"content":"The name of the table.","pos":[0,22]}]}],"pos":[25984,26007],"yaml":true},{"content":"The data context to search for the table.","nodes":[{"pos":[0,41],"content":"The data context to search for the table.","nodes":[{"content":"The data context to search for the table.","pos":[0,41]}]}],"pos":[26072,26114],"yaml":true},{"content":"The metadata that describes the specified table.","nodes":[{"pos":[0,48],"content":"The metadata that describes the specified table.","nodes":[{"content":"The metadata that describes the specified table.","pos":[0,48]}]}],"pos":[26190,26239],"yaml":true},{"content":"<code>tablename</code> or <code>contextType</code> is `null`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;tablename&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;contextType&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>tablename</code> or <code>contextType</code> is `null`."}],"pos":[26410,26472],"yaml":true},{"content":"The context is not registered or the table does not exist in the data context.","nodes":[{"pos":[0,78],"content":"The context is not registered or the table does not exist in the data context.","nodes":[{"content":"The context is not registered or the table does not exist in the data context.","pos":[0,78]}]}],"pos":[26566,26645],"yaml":true},{"content":"Returns the metadata that describes the specified table.","nodes":[{"pos":[0,56],"content":"Returns the metadata that describes the specified table.","nodes":[{"content":"Returns the metadata that describes the specified table.","pos":[0,56]}]}],"pos":[27585,27642],"yaml":true},{"content":"The type that identifies the table in the data model.","nodes":[{"pos":[0,53],"content":"The type that identifies the table in the data model.","nodes":[{"content":"The type that identifies the table in the data model.","pos":[0,53]}]}],"pos":[28408,28462],"yaml":true},{"content":"The metadata that describes the specified table.","nodes":[{"pos":[0,48],"content":"The metadata that describes the specified table.","nodes":[{"content":"The metadata that describes the specified table.","pos":[0,48]}]}],"pos":[28538,28587],"yaml":true},{"content":"The type was not found in the data model.","nodes":[{"pos":[0,41],"content":"The type was not found in the data model.","nodes":[{"content":"The type was not found in the data model.","pos":[0,41]}]}],"pos":[28758,28800],"yaml":true},{"content":"Returns the metadata that is associated with the specified table.","nodes":[{"pos":[0,65],"content":"Returns the metadata that is associated with the specified table.","nodes":[{"content":"Returns the metadata that is associated with the specified table.","pos":[0,65]}]}],"pos":[29752,29818],"yaml":true},{"content":"The name uniquely identifies a table in the data model and is used to generate the related URL for routing.","nodes":[{"pos":[0,107],"content":"The name uniquely identifies a table in the data model and is used to generate the related URL for routing.","nodes":[{"content":"The name uniquely identifies a table in the data model and is used to generate the related URL for routing.","pos":[0,107]}]}],"pos":[29829,29937],"yaml":true,"extradata":"MT"},{"content":"The name that identifies the table in the data model.","nodes":[{"pos":[0,53],"content":"The name that identifies the table in the data model.","nodes":[{"content":"The name that identifies the table in the data model.","pos":[0,53]}]}],"pos":[30705,30759],"yaml":true},{"content":"The metadata that describes the specified table.","nodes":[{"pos":[0,48],"content":"The metadata that describes the specified table.","nodes":[{"content":"The metadata that describes the specified table.","pos":[0,48]}]}],"pos":[30835,30884],"yaml":true},{"content":"The name was not found in the data model.","nodes":[{"pos":[0,41],"content":"The name was not found in the data model.","nodes":[{"content":"The name was not found in the data model.","pos":[0,41]}]}],"pos":[31047,31089],"yaml":true},{"content":"Registers the data context that is specified by a context factory.","nodes":[{"pos":[0,66],"content":"Registers the data context that is specified by a context factory.","nodes":[{"content":"Registers the data context that is specified by a context factory.","pos":[0,66]}]}],"pos":[32140,32207],"yaml":true},{"content":"This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class. It enables you to instantiate the data context by using your own constructor.","nodes":[{"pos":[0,207],"content":"This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class. It enables you to instantiate the data context by using your own constructor.","nodes":[{"content":"This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class. It enables you to instantiate the data context by using your own constructor.","pos":[0,207],"nodes":[{"content":"This method uses the default context information that is defined by the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.ContextConfiguration&gt;</ph> class.","pos":[0,129],"source":"This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class."},{"content":"It enables you to instantiate the data context by using your own constructor.","pos":[130,207]}]}]}],"pos":[32218,32426],"yaml":true,"extradata":"MT"},{"content":"The factory for instantiating the data context.","nodes":[{"pos":[0,47],"content":"The factory for instantiating the data context.","nodes":[{"content":"The factory for instantiating the data context.","pos":[0,47]}]}],"pos":[32607,32655],"yaml":true},{"content":"Registers a data-context instance.","nodes":[{"pos":[0,34],"content":"Registers a data-context instance.","nodes":[{"content":"Registers a data-context instance.","pos":[0,34]}]}],"pos":[33716,33751],"yaml":true},{"content":"This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.","nodes":[{"pos":[0,124],"content":"This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.","nodes":[{"content":"This method uses the default context information as defined by the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.ContextConfiguration&gt;</ph> class.","pos":[0,124],"source":"This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class."}]}],"pos":[33762,33887],"yaml":true,"extradata":"MT"},{"content":"The type of the data context as defined in the data model.","nodes":[{"pos":[0,58],"content":"The type of the data context as defined in the data model.","nodes":[{"content":"The type of the data context as defined in the data model.","pos":[0,58]}]}],"pos":[34039,34098],"yaml":true},{"content":"Registers a data context instance by using a data-model provider","nodes":[{"pos":[0,64],"content":"Registers a data context instance by using a data-model provider","nodes":[{"content":"Registers a data context instance by using a data-model provider","pos":[0,64]}]}],"pos":[35330,35395],"yaml":true},{"content":"A provider for the data model.","nodes":[{"pos":[0,30],"content":"A provider for the data model.","nodes":[{"content":"A provider for the data model.","pos":[0,30]}]}],"pos":[35654,35685],"yaml":true},{"content":"Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.","nodes":[{"pos":[0,116],"content":"Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.","nodes":[{"content":"Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.","pos":[0,116]}]}],"pos":[37013,37130],"yaml":true},{"content":"The context factory in this method enables you to instantiate a data model context by using a custom constructor.","nodes":[{"pos":[0,113],"content":"The context factory in this method enables you to instantiate a data model context by using a custom constructor.","nodes":[{"content":"The context factory in this method enables you to instantiate a data model context by using a custom constructor.","pos":[0,113]}]}],"pos":[37141,37255],"yaml":true,"extradata":"MT"},{"content":"A delegate that is used to instantiate the data model context.","nodes":[{"pos":[0,62],"content":"A delegate that is used to instantiate the data model context.","nodes":[{"content":"A delegate that is used to instantiate the data model context.","pos":[0,62]}]}],"pos":[37495,37558],"yaml":true},{"content":"The context information as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class.","nodes":[{"pos":[0,113],"content":"The context information as defined by the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.ContextConfiguration\"&gt;&lt;/xref&gt;</ph> class.","source":"The context information as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class."}],"pos":[37657,37771],"yaml":true},{"content":"<code>contextFactory</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;contextFactory&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>contextFactory</code> is `null`."}],"pos":[37949,37988],"yaml":true},{"content":"The <code>contextType</code> that is instantiated by <code>contextFactory</code> is not valid.","nodes":[{"pos":[0,94],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">contextType</ph><ept id=\"p1\">&lt;/code&gt;</ept> that is instantiated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contextFactory</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not valid.","source":"The <code>contextType</code> that is instantiated by <code>contextFactory</code> is not valid."}],"pos":[38082,38177],"yaml":true},{"content":"Registers a data-context instance by using the specified context configuration.","nodes":[{"pos":[0,79],"content":"Registers a data-context instance by using the specified context configuration.","nodes":[{"content":"Registers a data-context instance by using the specified context configuration.","pos":[0,79]}]}],"pos":[39357,39437],"yaml":true},{"content":"The type of the data context as defined in the data model.","nodes":[{"pos":[0,58],"content":"The type of the data context as defined in the data model.","nodes":[{"content":"The type of the data context as defined in the data model.","pos":[0,58]}]}],"pos":[40263,40322],"yaml":true},{"content":"The configuration information for the context, as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class.","nodes":[{"pos":[0,136],"content":"The configuration information for the context, as defined by the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.ContextConfiguration\"&gt;&lt;/xref&gt;</ph> class.","source":"The configuration information for the context, as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class."}],"pos":[40421,40558],"yaml":true},{"content":"<code>contextType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;contextType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>contextType</code> is `null`."}],"pos":[40736,40772],"yaml":true},{"content":"Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.","nodes":[{"pos":[0,117],"content":"Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.","nodes":[{"content":"Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.","pos":[0,117]}]}],"pos":[42123,42241],"yaml":true},{"content":"A provider for the data model.","nodes":[{"pos":[0,30],"content":"A provider for the data model.","nodes":[{"content":"A provider for the data model.","pos":[0,30]}]}],"pos":[42567,42598],"yaml":true},{"content":"The context information as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class.","nodes":[{"pos":[0,113],"content":"The context information as defined by the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.ContextConfiguration\"&gt;&lt;/xref&gt;</ph> class.","source":"The context information as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class."}],"pos":[42697,42811],"yaml":true},{"content":"<code>dataModelProvider</code> or <code>configuration</code> is `null`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;dataModelProvider&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;configuration&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>dataModelProvider</code> or <code>configuration</code> is `null`."}],"pos":[42989,43061],"yaml":true},{"content":"<code>contextType</code> is already registered.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;contextType&lt;/code&gt;</ph> is already registered.","source":"<code>contextType</code> is already registered."}],"pos":[43171,43219],"yaml":true},{"content":"Resets any previous context registration error that might have occurred.","nodes":[{"pos":[0,72],"content":"Resets any previous context registration error that might have occurred.","nodes":[{"content":"Resets any previous context registration error that might have occurred.","pos":[0,72]}]}],"pos":[44216,44289],"yaml":true},{"content":"When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations. For example, if an error occurs at application start, it is thrown on every request. Call this method to clear the error and to enable a new context registration to be performed.","nodes":[{"pos":[0,298],"content":"When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations. For example, if an error occurs at application start, it is thrown on every request. Call this method to clear the error and to enable a new context registration to be performed.","nodes":[{"content":"When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations. For example, if an error occurs at application start, it is thrown on every request. Call this method to clear the error and to enable a new context registration to be performed.","pos":[0,298],"nodes":[{"content":"When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.","pos":[0,119]},{"content":"For example, if an error occurs at application start, it is thrown on every request.","pos":[120,204]},{"content":"Call this method to clear the error and to enable a new context registration to be performed.","pos":[205,298]}]}]}],"pos":[44300,44599],"yaml":true,"extradata":"MT"},{"content":"Gets a collection of all the tables that are part of the data model.","nodes":[{"pos":[0,68],"content":"Gets a collection of all the tables that are part of the data model.","nodes":[{"content":"Gets a collection of all the tables that are part of the data model.","pos":[0,68]}]}],"pos":[45654,45723],"yaml":true},{"content":"The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).  \n  \n [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.","nodes":[{"pos":[0,148],"content":"The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).","nodes":[{"content":"The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).","pos":[0,148]}]},{"pos":[155,302],"content":"<bpt id=\"p1\">[</bpt>Run<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=120736&amp;sref=System.Web.DynamicData.MetaModel&amp;spage=TablesMenu.aspx)</ept> an online example of this feature.","source":"[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature."}],"pos":[45734,46041],"yaml":true,"extradata":"MT"},{"content":"A collection that contains the tables that belong to the data model.","nodes":[{"pos":[0,68],"content":"A collection that contains the tables that belong to the data model.","nodes":[{"content":"A collection that contains the tables that belong to the data model.","pos":[0,68]}]}],"pos":[47497,47566],"yaml":true},{"content":"Attempts to get the metadata that is associated with the specified table.","nodes":[{"pos":[0,73],"content":"Attempts to get the metadata that is associated with the specified table.","nodes":[{"content":"Attempts to get the metadata that is associated with the specified table.","pos":[0,73]}]}],"pos":[48741,48815],"yaml":true},{"content":"This method gets the metadata that is associated with the specified table. If the table is not found, this method returns `false`. This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.","nodes":[{"pos":[0,265],"content":"This method gets the metadata that is associated with the specified table. If the table is not found, this method returns `false`. This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.","nodes":[{"content":"This method gets the metadata that is associated with the specified table.","pos":[0,74]},{"content":"If the table is not found, this method returns <ph id=\"ph1\">`false`</ph>.","pos":[75,130],"source":" If the table is not found, this method returns `false`."},{"content":"This differs from the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.GetTable%2A&gt;</ph> method, which throws an exception if the table is not found.","pos":[131,265],"source":" This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found."}]}],"pos":[48826,49092],"yaml":true,"extradata":"MT"},{"content":"The name that uniquely identifies the table.","nodes":[{"pos":[0,44],"content":"The name that uniquely identifies the table.","nodes":[{"content":"The name that uniquely identifies the table.","pos":[0,44]}]}],"pos":[49296,49341],"yaml":true},{"content":"When this method returns, and if it has found the requested table, contains the metadata for that table. This parameter is passed uninitialized.","nodes":[{"pos":[0,144],"content":"When this method returns, and if it has found the requested table, contains the metadata for that table. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, and if it has found the requested table, contains the metadata for that table. This parameter is passed uninitialized.","pos":[0,144],"nodes":[{"content":"When this method returns, and if it has found the requested table, contains the metadata for that table.","pos":[0,104]},{"content":"This parameter is passed uninitialized.","pos":[105,144]}]}]}],"pos":[49421,49566],"yaml":true},{"content":"`true` if the table metadata is found; otherwise `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the table metadata is found; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the table metadata is found; otherwise `false`."}],"pos":[49624,49684],"yaml":true},{"content":"<code>uniqueTableName</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;uniqueTableName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>uniqueTableName</code> is `null`."}],"pos":[49858,49898],"yaml":true},{"content":"Attempts to get the metadata that is associated with the specified table.","nodes":[{"pos":[0,73],"content":"Attempts to get the metadata that is associated with the specified table.","nodes":[{"content":"Attempts to get the metadata that is associated with the specified table.","pos":[0,73]}]}],"pos":[50991,51065],"yaml":true},{"content":"This method gets the metadata that is associated with the specified table. If the table is not found, this method returns `false`. This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.","nodes":[{"pos":[0,265],"content":"This method gets the metadata that is associated with the specified table. If the table is not found, this method returns `false`. This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.","nodes":[{"content":"This method gets the metadata that is associated with the specified table.","pos":[0,74]},{"content":"If the table is not found, this method returns <ph id=\"ph1\">`false`</ph>.","pos":[75,130],"source":" If the table is not found, this method returns `false`."},{"content":"This differs from the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaModel.GetTable%2A&gt;</ph> method, which throws an exception if the table is not found.","pos":[131,265],"source":" This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found."}]}],"pos":[51076,51342],"yaml":true,"extradata":"MT"},{"content":"The table type.","nodes":[{"pos":[0,15],"content":"The table type.","nodes":[{"content":"The table type.","pos":[0,15]}]}],"pos":[51532,51548],"yaml":true},{"content":"When this method returns, and if the requested table has been found, contains the metadata for the specified table. This parameter is passed uninitialized.","nodes":[{"pos":[0,155],"content":"When this method returns, and if the requested table has been found, contains the metadata for the specified table. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, and if the requested table has been found, contains the metadata for the specified table. This parameter is passed uninitialized.","pos":[0,155],"nodes":[{"content":"When this method returns, and if the requested table has been found, contains the metadata for the specified table.","pos":[0,115]},{"content":"This parameter is passed uninitialized.","pos":[116,155]}]}]}],"pos":[51628,51784],"yaml":true},{"content":"`true` if the table metadata is found; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the table metadata is found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the table metadata is found; otherwise, `false`."}],"pos":[51842,51903],"yaml":true},{"content":"<code>entityType</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;entityType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>entityType</code> is `null`."}],"pos":[52077,52112],"yaml":true},{"content":"Gets a collection of the visible tables in the data model.","nodes":[{"pos":[0,58],"content":"Gets a collection of the visible tables in the data model.","nodes":[{"content":"Gets a collection of the visible tables in the data model.","pos":[0,58]}]}],"pos":[53027,53086],"yaml":true},{"content":"A visible table refers to a table that has scaffolding enabled. This means that it is a table for which a List.aspx page exists.","nodes":[{"pos":[0,128],"content":"A visible table refers to a table that has scaffolding enabled. This means that it is a table for which a List.aspx page exists.","nodes":[{"content":"A visible table refers to a table that has scaffolding enabled. This means that it is a table for which a List.aspx page exists.","pos":[0,128],"nodes":[{"content":"A visible table refers to a table that has scaffolding enabled.","pos":[0,63]},{"content":"This means that it is a table for which a List.aspx page exists.","pos":[64,128]}]}]}],"pos":[53926,54055],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.MetaModel\n  commentId: T:System.Web.DynamicData.MetaModel\n  id: MetaModel\n  children:\n  - System.Web.DynamicData.MetaModel.#ctor\n  - System.Web.DynamicData.MetaModel.#ctor(System.Boolean)\n  - System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)\n  - System.Web.DynamicData.MetaModel.Default\n  - System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath\n  - System.Web.DynamicData.MetaModel.EntityTemplateFactory\n  - System.Web.DynamicData.MetaModel.FieldTemplateFactory\n  - System.Web.DynamicData.MetaModel.FilterFactory\n  - System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)\n  - System.Web.DynamicData.MetaModel.GetModel(System.Type)\n  - System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)\n  - System.Web.DynamicData.MetaModel.GetTable(System.Type)\n  - System.Web.DynamicData.MetaModel.GetTable(System.String)\n  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})\n  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type)\n  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)\n  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)\n  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)\n  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)\n  - System.Web.DynamicData.MetaModel.ResetRegistrationException\n  - System.Web.DynamicData.MetaModel.Tables\n  - System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)\n  - System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  - System.Web.DynamicData.MetaModel.VisibleTables\n  langs:\n  - csharp\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n  type: Class\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Represents one or multiple databases that are used by ASP.NET Dynamic Data.\n  remarks: \"The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.  \\n  \\n A data context is an object that represents a database connection. A data context has access to one data model which represents a database that is available through that connection. A data model is an object that represents a database's data entities as CLR types. Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.  \\n  \\n In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template. These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.\"\n  example:\n  - \"The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:  \\n  \\n-   Get the data model for the default data context.  \\n  \\n-   Get the data model for a specified data context.  \\n  \\n-   Evaluate the routing path (determine the URL) for a specified table.  \\n  \\n The example consists of a page and its code-behind file.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]\\n <!-- TODO: review snippet reference [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]  -->\\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]\\n [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  \\n  \\n To compile the example, you need the following:  \\n  \\n-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].  \\n  \\n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).  \\n  \\n See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).\"\n  syntax:\n    content: public class MetaModel\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.#ctor\n  commentId: M:System.Web.DynamicData.MetaModel.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: MetaModel()\n  nameWithType: MetaModel.MetaModel()\n  fullName: MetaModel.MetaModel()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Instantiates a new instance of the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> class.\n  remarks: You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:  \\n  \\n-   Instantiate the <xref:System.Web.DynamicData.MetaModel> class.  \\n  \\n-   Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]\\n [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]\"\n  syntax:\n    content: public MetaModel ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaModel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)\n  commentId: M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: MetaModel(Boolean)\n  nameWithType: MetaModel.MetaModel(Boolean)\n  fullName: MetaModel.MetaModel(Boolean)\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Instantiates a new instance of the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> class.\n  remarks: \"This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method. It enables you to create multiple models and use the same entity types while avoiding type conflicts.  \\n  \\n You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.\"\n  syntax:\n    content: public MetaModel (bool registerGlobally);\n    parameters:\n    - id: registerGlobally\n      type: System.Boolean\n      description: '`true` to indicate that the model is registered globally; otherwise `false`. The default is `true`.'\n  overload: System.Web.DynamicData.MetaModel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)\n  commentId: M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)\n  id: CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: CreateTable(TableProvider)\n  nameWithType: MetaModel.CreateTable(TableProvider)\n  fullName: MetaModel.CreateTable(TableProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Instantiates a <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object.\n  remarks: The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);\n    parameters:\n    - id: provider\n      type: System.Web.DynamicData.ModelProviders.TableProvider\n      description: The provider for the table.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: A new instance of the table.\n  overload: System.Web.DynamicData.MetaModel.CreateTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.Default\n  commentId: P:System.Web.DynamicData.MetaModel.Default\n  id: Default\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: Default\n  nameWithType: MetaModel.Default\n  fullName: MetaModel.Default\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the first instance of a data model that is created by the application.\n  remarks: This property provides a simple way to reference the default data-model instance. If the application uses multiple models, you must provide your own way to store references to the additional data models. To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName> method.\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.  \\n  \\n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]\\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]\"\n  syntax:\n    content: public static System.Web.DynamicData.MetaModel Default { get; }\n    return:\n      type: System.Web.DynamicData.MetaModel\n      description: The data-model instance.\n  overload: System.Web.DynamicData.MetaModel.Default*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath\n  commentId: P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath\n  id: DynamicDataFolderVirtualPath\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: DynamicDataFolderVirtualPath\n  nameWithType: MetaModel.DynamicDataFolderVirtualPath\n  fullName: MetaModel.DynamicDataFolderVirtualPath\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the virtual path of the DynamicData folder in the Web site.\n  remarks: This property enables you to change the virtual path of the DynamicData folder. The default value is \"~/DynamicData\".\n  syntax:\n    content: public string DynamicDataFolderVirtualPath { get; set; }\n    return:\n      type: System.String\n      description: The virtual path of the DynamicData folder.\n  overload: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory\n  commentId: P:System.Web.DynamicData.MetaModel.EntityTemplateFactory\n  id: EntityTemplateFactory\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: EntityTemplateFactory\n  nameWithType: MetaModel.EntityTemplateFactory\n  fullName: MetaModel.EntityTemplateFactory\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the <xref href=\"System.Web.DynamicData.EntityTemplateFactory\"></xref> object that is associated with the model.\n  syntax:\n    content: public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }\n    return:\n      type: System.Web.DynamicData.EntityTemplateFactory\n      description: An instance of the <xref href=\"System.Web.DynamicData.EntityTemplateFactory\"></xref> object that is associated with the model.\n  overload: System.Web.DynamicData.MetaModel.EntityTemplateFactory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory\n  commentId: P:System.Web.DynamicData.MetaModel.FieldTemplateFactory\n  id: FieldTemplateFactory\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: FieldTemplateFactory\n  nameWithType: MetaModel.FieldTemplateFactory\n  fullName: MetaModel.FieldTemplateFactory\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a custom <xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"></xref> interface.\n  remarks: The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.\n  syntax:\n    content: public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }\n    return:\n      type: System.Web.DynamicData.IFieldTemplateFactory\n      description: The <xref href=\"System.Web.DynamicData.IFieldTemplateFactory\"></xref> interface.\n  overload: System.Web.DynamicData.MetaModel.FieldTemplateFactory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.FilterFactory\n  commentId: P:System.Web.DynamicData.MetaModel.FilterFactory\n  id: FilterFactory\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: FilterFactory\n  nameWithType: MetaModel.FilterFactory\n  fullName: MetaModel.FilterFactory\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> object that is associated with the model.\n  syntax:\n    content: public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }\n    return:\n      type: System.Web.DynamicData.FilterFactory\n      description: An instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> object that is associated with the model.\n  overload: System.Web.DynamicData.MetaModel.FilterFactory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)\n  commentId: M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)\n  id: GetActionPath(System.String,System.String,System.Object)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: GetActionPath(String, String, Object)\n  nameWithType: MetaModel.GetActionPath(String, String, Object)\n  fullName: MetaModel.GetActionPath(String, String, Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path that is associated with a specific table.\n  remarks: \"The route is determined by the combination of the table name and action.  \\n  \\n [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel>.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]\\n [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]\"\n  syntax:\n    content: public string GetActionPath (string tableName, string action, object row);\n    parameters:\n    - id: tableName\n      type: System.String\n      description: The name of the table that the action applies to.\n    - id: action\n      type: System.String\n      description: The action to apply to the table.\n    - id: row\n      type: System.Object\n      description: An object that represents a single row of data in a table. <code>row</code> is used to provide values for query-string parameters.\n    return:\n      type: System.String\n      description: The URL that is associated with the route.\n  overload: System.Web.DynamicData.MetaModel.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)\n  commentId: M:System.Web.DynamicData.MetaModel.GetModel(System.Type)\n  id: GetModel(System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: GetModel(Type)\n  nameWithType: MetaModel.GetModel(Type)\n  fullName: MetaModel.GetModel(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the data-model instance for the specified context.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:  \\n  \\n-   Getting the default data model.  \\n  \\n-   Getting the data model specified by the passed context type.  \\n  \\n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]\\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]\"\n  syntax:\n    content: public static System.Web.DynamicData.MetaModel GetModel (Type contextType);\n    parameters:\n    - id: contextType\n      type: System.Type\n      description: The type of the data context as defined in the data model.\n    return:\n      type: System.Web.DynamicData.MetaModel\n      description: The data model that is associated with the specified context type.\n  overload: System.Web.DynamicData.MetaModel.GetModel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)\n  commentId: M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)\n  id: GetTable(System.String,System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: GetTable(String, Type)\n  nameWithType: MetaModel.GetTable(String, Type)\n  fullName: MetaModel.GetTable(String, Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the metadata that describes the specified table.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]\\n [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]\"\n  syntax:\n    content: public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);\n    parameters:\n    - id: tableName\n      type: System.String\n      description: The name of the table.\n    - id: contextType\n      type: System.Type\n      description: The data context to search for the table.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: The metadata that describes the specified table.\n  overload: System.Web.DynamicData.MetaModel.GetTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tablename</code> or <code>contextType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The context is not registered or the table does not exist in the data context.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)\n  commentId: M:System.Web.DynamicData.MetaModel.GetTable(System.Type)\n  id: GetTable(System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: GetTable(Type)\n  nameWithType: MetaModel.GetTable(Type)\n  fullName: MetaModel.GetTable(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the metadata that describes the specified table.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]\\n [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]\"\n  syntax:\n    content: public System.Web.DynamicData.MetaTable GetTable (Type entityType);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The type that identifies the table in the data model.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: The metadata that describes the specified table.\n  overload: System.Web.DynamicData.MetaModel.GetTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The type was not found in the data model.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)\n  commentId: M:System.Web.DynamicData.MetaModel.GetTable(System.String)\n  id: GetTable(System.String)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: GetTable(String)\n  nameWithType: MetaModel.GetTable(String)\n  fullName: MetaModel.GetTable(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the metadata that is associated with the specified table.\n  remarks: The name uniquely identifies a table in the data model and is used to generate the related URL for routing.\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]\\n [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]\"\n  syntax:\n    content: public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);\n    parameters:\n    - id: uniqueTableName\n      type: System.String\n      description: The name that identifies the table in the data model.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: The metadata that describes the specified table.\n  overload: System.Web.DynamicData.MetaModel.GetTable*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The name was not found in the data model.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})\n  commentId: M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})\n  id: RegisterContext(System.Func{System.Object})\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: RegisterContext(Func<Object>)\n  nameWithType: MetaModel.RegisterContext(Func<Object>)\n  fullName: MetaModel.RegisterContext(Func<Object>)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Registers the data context that is specified by a context factory.\n  remarks: This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class. It enables you to instantiate the data context by using your own constructor.\n  syntax:\n    content: public void RegisterContext (Func<object> contextFactory);\n    parameters:\n    - id: contextFactory\n      type: System.Func{System.Object}\n      description: The factory for instantiating the data context.\n  overload: System.Web.DynamicData.MetaModel.RegisterContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)\n  commentId: M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)\n  id: RegisterContext(System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: RegisterContext(Type)\n  nameWithType: MetaModel.RegisterContext(Type)\n  fullName: MetaModel.RegisterContext(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Registers a data-context instance.\n  remarks: This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.\n  syntax:\n    content: public void RegisterContext (Type contextType);\n    parameters:\n    - id: contextType\n      type: System.Type\n      description: The type of the data context as defined in the data model.\n  overload: System.Web.DynamicData.MetaModel.RegisterContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)\n  commentId: M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)\n  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: RegisterContext(DataModelProvider)\n  nameWithType: MetaModel.RegisterContext(DataModelProvider)\n  fullName: MetaModel.RegisterContext(DataModelProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Registers a data context instance by using a data-model provider\n  syntax:\n    content: public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);\n    parameters:\n    - id: dataModelProvider\n      type: System.Web.DynamicData.ModelProviders.DataModelProvider\n      description: A provider for the data model.\n  overload: System.Web.DynamicData.MetaModel.RegisterContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)\n  commentId: M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)\n  id: RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: RegisterContext(Func<Object>, ContextConfiguration)\n  nameWithType: MetaModel.RegisterContext(Func<Object>, ContextConfiguration)\n  fullName: MetaModel.RegisterContext(Func<Object>, ContextConfiguration)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.\n  remarks: The context factory in this method enables you to instantiate a data model context by using a custom constructor.\n  syntax:\n    content: public void RegisterContext (Func<object> contextFactory, System.Web.DynamicData.ContextConfiguration configuration);\n    parameters:\n    - id: contextFactory\n      type: System.Func{System.Object}\n      description: A delegate that is used to instantiate the data model context.\n    - id: configuration\n      type: System.Web.DynamicData.ContextConfiguration\n      description: The context information as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class.\n  overload: System.Web.DynamicData.MetaModel.RegisterContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>contextFactory</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>contextType</code> that is instantiated by <code>contextFactory</code> is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)\n  commentId: M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)\n  id: RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: RegisterContext(Type, ContextConfiguration)\n  nameWithType: MetaModel.RegisterContext(Type, ContextConfiguration)\n  fullName: MetaModel.RegisterContext(Type, ContextConfiguration)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Registers a data-context instance by using the specified context configuration.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]\\n [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]\"\n  syntax:\n    content: public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);\n    parameters:\n    - id: contextType\n      type: System.Type\n      description: The type of the data context as defined in the data model.\n    - id: configuration\n      type: System.Web.DynamicData.ContextConfiguration\n      description: The configuration information for the context, as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class.\n  overload: System.Web.DynamicData.MetaModel.RegisterContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>contextType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)\n  commentId: M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)\n  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: RegisterContext(DataModelProvider, ContextConfiguration)\n  nameWithType: MetaModel.RegisterContext(DataModelProvider, ContextConfiguration)\n  fullName: MetaModel.RegisterContext(DataModelProvider, ContextConfiguration)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.\n  syntax:\n    content: public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);\n    parameters:\n    - id: dataModelProvider\n      type: System.Web.DynamicData.ModelProviders.DataModelProvider\n      description: A provider for the data model.\n    - id: configuration\n      type: System.Web.DynamicData.ContextConfiguration\n      description: The context information as defined by the <xref href=\"System.Web.DynamicData.ContextConfiguration\"></xref> class.\n  overload: System.Web.DynamicData.MetaModel.RegisterContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dataModelProvider</code> or <code>configuration</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>contextType</code> is already registered.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException\n  commentId: M:System.Web.DynamicData.MetaModel.ResetRegistrationException\n  id: ResetRegistrationException\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: ResetRegistrationException()\n  nameWithType: MetaModel.ResetRegistrationException()\n  fullName: MetaModel.ResetRegistrationException()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Resets any previous context registration error that might have occurred.\n  remarks: When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations. For example, if an error occurs at application start, it is thrown on every request. Call this method to clear the error and to enable a new context registration to be performed.\n  syntax:\n    content: public static void ResetRegistrationException ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaModel.ResetRegistrationException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.Tables\n  commentId: P:System.Web.DynamicData.MetaModel.Tables\n  id: Tables\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: Tables\n  nameWithType: MetaModel.Tables\n  fullName: MetaModel.Tables\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a collection of all the tables that are part of the data model.\n  remarks: \"The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).  \\n  \\n [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:  \\n  \\n-   Get a collection of all the tables in a data model and show them in a `GridView` control.  \\n  \\n-   Get a collection of the visible tables in a data model and show them in a `GridView` control.  \\n  \\n The example consists of a page and its code-behind file.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  -->  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]\\n [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable> Tables { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}\n      description: A collection that contains the tables that belong to the data model.\n  overload: System.Web.DynamicData.MetaModel.Tables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)\n  commentId: M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)\n  id: TryGetTable(System.String,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: TryGetTable(String, MetaTable)\n  nameWithType: MetaModel.TryGetTable(String, MetaTable)\n  fullName: MetaModel.TryGetTable(String, MetaTable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Attempts to get the metadata that is associated with the specified table.\n  remarks: This method gets the metadata that is associated with the specified table. If the table is not found, this method returns `false`. This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.\n  syntax:\n    content: public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);\n    parameters:\n    - id: uniqueTableName\n      type: System.String\n      description: The name that uniquely identifies the table.\n    - id: table\n      type: System.Web.DynamicData.MetaTable\n      description: When this method returns, and if it has found the requested table, contains the metadata for that table. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the table metadata is found; otherwise `false`.'\n  overload: System.Web.DynamicData.MetaModel.TryGetTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uniqueTableName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  commentId: M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: TryGetTable(Type, MetaTable)\n  nameWithType: MetaModel.TryGetTable(Type, MetaTable)\n  fullName: MetaModel.TryGetTable(Type, MetaTable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Attempts to get the metadata that is associated with the specified table.\n  remarks: This method gets the metadata that is associated with the specified table. If the table is not found, this method returns `false`. This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.\n  syntax:\n    content: public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The table type.\n    - id: table\n      type: System.Web.DynamicData.MetaTable\n      description: When this method returns, and if the requested table has been found, contains the metadata for the specified table. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the table metadata is found; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaModel.TryGetTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entityType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaModel.VisibleTables\n  commentId: P:System.Web.DynamicData.MetaModel.VisibleTables\n  id: VisibleTables\n  parent: System.Web.DynamicData.MetaModel\n  langs:\n  - csharp\n  name: VisibleTables\n  nameWithType: MetaModel.VisibleTables\n  fullName: MetaModel.VisibleTables\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a collection of the visible tables in the data model.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model. For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \\n  \\n [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]\\n [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]\"\n  syntax:\n    content: public System.Collections.Generic.List<System.Web.DynamicData.MetaTable> VisibleTables { get; }\n    return:\n      type: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}\n      description: A visible table refers to a table that has scaffolding enabled. This means that it is a table for which a List.aspx page exists.\n  overload: System.Web.DynamicData.MetaModel.VisibleTables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.DynamicData.MetaModel.#ctor\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: MetaModel()\n  nameWithType: MetaModel.MetaModel()\n  fullName: MetaModel.MetaModel()\n- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: MetaModel(Boolean)\n  nameWithType: MetaModel.MetaModel(Boolean)\n  fullName: MetaModel.MetaModel(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: CreateTable(TableProvider)\n  nameWithType: MetaModel.CreateTable(TableProvider)\n  fullName: MetaModel.CreateTable(TableProvider)\n- uid: System.Web.DynamicData.MetaTable\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n- uid: System.Web.DynamicData.ModelProviders.TableProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: TableProvider\n  nameWithType: TableProvider\n  fullName: System.Web.DynamicData.ModelProviders.TableProvider\n- uid: System.Web.DynamicData.MetaModel.Default\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: Default\n  nameWithType: MetaModel.Default\n  fullName: MetaModel.Default\n- uid: System.Web.DynamicData.MetaModel\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: DynamicDataFolderVirtualPath\n  nameWithType: MetaModel.DynamicDataFolderVirtualPath\n  fullName: MetaModel.DynamicDataFolderVirtualPath\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: EntityTemplateFactory\n  nameWithType: MetaModel.EntityTemplateFactory\n  fullName: MetaModel.EntityTemplateFactory\n- uid: System.Web.DynamicData.EntityTemplateFactory\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: EntityTemplateFactory\n  nameWithType: EntityTemplateFactory\n  fullName: System.Web.DynamicData.EntityTemplateFactory\n- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: FieldTemplateFactory\n  nameWithType: MetaModel.FieldTemplateFactory\n  fullName: MetaModel.FieldTemplateFactory\n- uid: System.Web.DynamicData.IFieldTemplateFactory\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: IFieldTemplateFactory\n  nameWithType: IFieldTemplateFactory\n  fullName: System.Web.DynamicData.IFieldTemplateFactory\n- uid: System.Web.DynamicData.MetaModel.FilterFactory\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: FilterFactory\n  nameWithType: MetaModel.FilterFactory\n  fullName: MetaModel.FilterFactory\n- uid: System.Web.DynamicData.FilterFactory\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: FilterFactory\n  nameWithType: FilterFactory\n  fullName: System.Web.DynamicData.FilterFactory\n- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetActionPath(String, String, Object)\n  nameWithType: MetaModel.GetActionPath(String, String, Object)\n  fullName: MetaModel.GetActionPath(String, String, Object)\n- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetModel(Type)\n  nameWithType: MetaModel.GetModel(Type)\n  fullName: MetaModel.GetModel(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetTable(String, Type)\n  nameWithType: MetaModel.GetTable(String, Type)\n  fullName: MetaModel.GetTable(String, Type)\n- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetTable(Type)\n  nameWithType: MetaModel.GetTable(Type)\n  fullName: MetaModel.GetTable(Type)\n- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetTable(String)\n  nameWithType: MetaModel.GetTable(String)\n  fullName: MetaModel.GetTable(String)\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext(Func<Object>)\n  nameWithType: MetaModel.RegisterContext(Func<Object>)\n  fullName: MetaModel.RegisterContext(Func<Object>)\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Func{System.Object}\n  parent: System\n  isExternal: false\n  name: Func<Object>\n  nameWithType: Func<Object>\n  fullName: System.Func<System.Object>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext(Type)\n  nameWithType: MetaModel.RegisterContext(Type)\n  fullName: MetaModel.RegisterContext(Type)\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext(DataModelProvider)\n  nameWithType: MetaModel.RegisterContext(DataModelProvider)\n  fullName: MetaModel.RegisterContext(DataModelProvider)\n- uid: System.Web.DynamicData.ModelProviders.DataModelProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: DataModelProvider\n  nameWithType: DataModelProvider\n  fullName: System.Web.DynamicData.ModelProviders.DataModelProvider\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext(Func<Object>, ContextConfiguration)\n  nameWithType: MetaModel.RegisterContext(Func<Object>, ContextConfiguration)\n  fullName: MetaModel.RegisterContext(Func<Object>, ContextConfiguration)\n- uid: System.Web.DynamicData.ContextConfiguration\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: ContextConfiguration\n  nameWithType: ContextConfiguration\n  fullName: System.Web.DynamicData.ContextConfiguration\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext(Type, ContextConfiguration)\n  nameWithType: MetaModel.RegisterContext(Type, ContextConfiguration)\n  fullName: MetaModel.RegisterContext(Type, ContextConfiguration)\n- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext(DataModelProvider, ContextConfiguration)\n  nameWithType: MetaModel.RegisterContext(DataModelProvider, ContextConfiguration)\n  fullName: MetaModel.RegisterContext(DataModelProvider, ContextConfiguration)\n- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: ResetRegistrationException()\n  nameWithType: MetaModel.ResetRegistrationException()\n  fullName: MetaModel.ResetRegistrationException()\n- uid: System.Web.DynamicData.MetaModel.Tables\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: Tables\n  nameWithType: MetaModel.Tables\n  fullName: MetaModel.Tables\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<MetaTable>\n  nameWithType: ReadOnlyCollection<MetaTable>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.DynamicData.MetaTable\n    name: MetaTable\n    nameWithType: MetaTable\n    fullName: System.Web.DynamicData.MetaTable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: TryGetTable(String, MetaTable)\n  nameWithType: MetaModel.TryGetTable(String, MetaTable)\n  fullName: MetaModel.TryGetTable(String, MetaTable)\n- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: TryGetTable(Type, MetaTable)\n  nameWithType: MetaModel.TryGetTable(Type, MetaTable)\n  fullName: MetaModel.TryGetTable(Type, MetaTable)\n- uid: System.Web.DynamicData.MetaModel.VisibleTables\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: VisibleTables\n  nameWithType: MetaModel.VisibleTables\n  fullName: MetaModel.VisibleTables\n- uid: System.Collections.Generic.List`1\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n- uid: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<MetaTable>\n  nameWithType: List<MetaTable>\n  fullName: System.Collections.Generic.List<System.Web.DynamicData.MetaTable>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.DynamicData.MetaTable\n    name: MetaTable\n    nameWithType: MetaTable\n    fullName: System.Web.DynamicData.MetaTable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaModel.GetTable*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetTable\n  nameWithType: MetaModel.GetTable\n  fullName: MetaModel.GetTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.RegisterContext*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: RegisterContext\n  nameWithType: MetaModel.RegisterContext\n  fullName: MetaModel.RegisterContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.#ctor*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel.MetaModel\n  fullName: MetaModel.MetaModel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.CreateTable*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: CreateTable\n  nameWithType: MetaModel.CreateTable\n  fullName: MetaModel.CreateTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.Default*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: Default\n  nameWithType: MetaModel.Default\n  fullName: MetaModel.Default\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: DynamicDataFolderVirtualPath\n  nameWithType: MetaModel.DynamicDataFolderVirtualPath\n  fullName: MetaModel.DynamicDataFolderVirtualPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: EntityTemplateFactory\n  nameWithType: MetaModel.EntityTemplateFactory\n  fullName: MetaModel.EntityTemplateFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: FieldTemplateFactory\n  nameWithType: MetaModel.FieldTemplateFactory\n  fullName: MetaModel.FieldTemplateFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.FilterFactory*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: FilterFactory\n  nameWithType: MetaModel.FilterFactory\n  fullName: MetaModel.FilterFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.GetActionPath*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetActionPath\n  nameWithType: MetaModel.GetActionPath\n  fullName: MetaModel.GetActionPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.GetModel*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: GetModel\n  nameWithType: MetaModel.GetModel\n  fullName: MetaModel.GetModel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: ResetRegistrationException\n  nameWithType: MetaModel.ResetRegistrationException\n  fullName: MetaModel.ResetRegistrationException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.Tables*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: Tables\n  nameWithType: MetaModel.Tables\n  fullName: MetaModel.Tables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.TryGetTable*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: TryGetTable\n  nameWithType: MetaModel.TryGetTable\n  fullName: MetaModel.TryGetTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Web.DynamicData.MetaModel.VisibleTables*\n  parent: System.Web.DynamicData.MetaModel\n  isExternal: false\n  name: VisibleTables\n  nameWithType: MetaModel.VisibleTables\n  fullName: MetaModel.VisibleTables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaModel.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}