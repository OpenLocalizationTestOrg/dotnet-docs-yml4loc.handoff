{"nodes":[{"content":"Provides methods to verify the machine name and path conform to a specific syntax. This class cannot be inherited.","nodes":[{"pos":[0,114],"content":"Provides methods to verify the machine name and path conform to a specific syntax. This class cannot be inherited.","nodes":[{"content":"Provides methods to verify the machine name and path conform to a specific syntax. This class cannot be inherited.","pos":[0,114],"nodes":[{"content":"Provides methods to verify the machine name and path conform to a specific syntax.","pos":[0,82]},{"content":"This class cannot be inherited.","pos":[83,114]}]}]}],"pos":[613,728],"yaml":true},{"content":"Checks the syntax of the machine name to confirm that it does not contain \"\\\\\".","nodes":[{"pos":[0,79],"content":"Checks the syntax of the machine name to confirm that it does not contain \"\\\\\".","nodes":[{"content":"Checks the syntax of the machine name to confirm that it does not contain \"<ph id=\"ph1\">\\\\</ph>\".","pos":[0,79],"source":"Checks the syntax of the machine name to confirm that it does not contain \"\\\\\"."}]}],"pos":[2415,2495],"yaml":true},{"content":"A string containing the machine name to check.","nodes":[{"pos":[0,46],"content":"A string containing the machine name to check.","nodes":[{"content":"A string containing the machine name to check.","pos":[0,46]}]}],"pos":[2647,2694],"yaml":true},{"content":"`true` if <code>value</code> matches the proper machine name format; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> matches the proper machine name format; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>value</code> matches the proper machine name format; otherwise, `false`."}],"pos":[2752,2843],"yaml":true},{"content":"Checks the syntax of the path to see whether it starts with \"\\\\\\\\\".","nodes":[{"pos":[0,67],"content":"Checks the syntax of the path to see whether it starts with \"\\\\\\\\\".","nodes":[{"content":"Checks the syntax of the path to see whether it starts with \"<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\\\</ph>\".","pos":[0,67],"source":"Checks the syntax of the path to see whether it starts with \"\\\\\\\\\"."}]}],"pos":[4170,4238],"yaml":true},{"content":"A string containing the path to check.","nodes":[{"pos":[0,38],"content":"A string containing the path to check.","nodes":[{"content":"A string containing the path to check.","pos":[0,38]}]}],"pos":[4383,4422],"yaml":true},{"content":"`true` if <code>value</code> matches the proper path format; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> matches the proper path format; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>value</code> matches the proper path format; otherwise, `false`."}],"pos":[4480,4563],"yaml":true},{"content":"Checks the syntax of the path to see if it starts with \"\\\\\" or drive letter \"C:\".","nodes":[{"pos":[0,81],"content":"Checks the syntax of the path to see if it starts with \"\\\\\" or drive letter \"C:\".","nodes":[{"content":"Checks the syntax of the path to see if it starts with \"<ph id=\"ph1\">\\\\</ph>\" or drive letter \"C:\".","pos":[0,81],"source":"Checks the syntax of the path to see if it starts with \"\\\\\" or drive letter \"C:\"."}]}],"pos":[5919,6001],"yaml":true},{"content":"A string containing the path to check.","nodes":[{"pos":[0,38],"content":"A string containing the path to check.","nodes":[{"content":"A string containing the path to check.","pos":[0,38]}]}],"pos":[6152,6191],"yaml":true},{"content":"`true` if <code>value</code> matches the proper path format; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> matches the proper path format; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>value</code> matches the proper path format; otherwise, `false`."}],"pos":[6249,6332],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.SyntaxCheck\n  commentId: T:System.ComponentModel.SyntaxCheck\n  id: SyntaxCheck\n  children:\n  - System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)\n  - System.ComponentModel.SyntaxCheck.CheckPath(System.String)\n  - System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)\n  langs:\n  - csharp\n  name: SyntaxCheck\n  nameWithType: SyntaxCheck\n  fullName: System.ComponentModel.SyntaxCheck\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Provides methods to verify the machine name and path conform to a specific syntax. This class cannot be inherited.\n  syntax:\n    content: public static class SyntaxCheck\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)\n  commentId: M:System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)\n  id: CheckMachineName(System.String)\n  parent: System.ComponentModel.SyntaxCheck\n  langs:\n  - csharp\n  name: CheckMachineName(String)\n  nameWithType: SyntaxCheck.CheckMachineName(String)\n  fullName: SyntaxCheck.CheckMachineName(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Checks the syntax of the machine name to confirm that it does not contain \"\\\\\".\n  syntax:\n    content: public static bool CheckMachineName (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A string containing the machine name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> matches the proper machine name format; otherwise, `false`.'\n  overload: System.ComponentModel.SyntaxCheck.CheckMachineName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)\n  commentId: M:System.ComponentModel.SyntaxCheck.CheckPath(System.String)\n  id: CheckPath(System.String)\n  parent: System.ComponentModel.SyntaxCheck\n  langs:\n  - csharp\n  name: CheckPath(String)\n  nameWithType: SyntaxCheck.CheckPath(String)\n  fullName: SyntaxCheck.CheckPath(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Checks the syntax of the path to see whether it starts with \"\\\\\\\\\".\n  syntax:\n    content: public static bool CheckPath (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A string containing the path to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> matches the proper path format; otherwise, `false`.'\n  overload: System.ComponentModel.SyntaxCheck.CheckPath*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)\n  commentId: M:System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)\n  id: CheckRootedPath(System.String)\n  parent: System.ComponentModel.SyntaxCheck\n  langs:\n  - csharp\n  name: CheckRootedPath(String)\n  nameWithType: SyntaxCheck.CheckRootedPath(String)\n  fullName: SyntaxCheck.CheckRootedPath(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Checks the syntax of the path to see if it starts with \"\\\\\" or drive letter \"C:\".\n  syntax:\n    content: public static bool CheckRootedPath (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A string containing the path to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> matches the proper path format; otherwise, `false`.'\n  overload: System.ComponentModel.SyntaxCheck.CheckRootedPath*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)\n  parent: System.ComponentModel.SyntaxCheck\n  isExternal: false\n  name: CheckMachineName(String)\n  nameWithType: SyntaxCheck.CheckMachineName(String)\n  fullName: SyntaxCheck.CheckMachineName(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)\n  parent: System.ComponentModel.SyntaxCheck\n  isExternal: false\n  name: CheckPath(String)\n  nameWithType: SyntaxCheck.CheckPath(String)\n  fullName: SyntaxCheck.CheckPath(String)\n- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)\n  parent: System.ComponentModel.SyntaxCheck\n  isExternal: false\n  name: CheckRootedPath(String)\n  nameWithType: SyntaxCheck.CheckRootedPath(String)\n  fullName: SyntaxCheck.CheckRootedPath(String)\n- uid: System.ComponentModel.SyntaxCheck.CheckMachineName*\n  parent: System.ComponentModel.SyntaxCheck\n  isExternal: false\n  name: CheckMachineName\n  nameWithType: SyntaxCheck.CheckMachineName\n  fullName: SyntaxCheck.CheckMachineName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n- uid: System.ComponentModel.SyntaxCheck.CheckPath*\n  parent: System.ComponentModel.SyntaxCheck\n  isExternal: false\n  name: CheckPath\n  nameWithType: SyntaxCheck.CheckPath\n  fullName: SyntaxCheck.CheckPath\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath*\n  parent: System.ComponentModel.SyntaxCheck\n  isExternal: false\n  name: CheckRootedPath\n  nameWithType: SyntaxCheck.CheckRootedPath\n  fullName: SyntaxCheck.CheckRootedPath\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/SyntaxCheck.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}