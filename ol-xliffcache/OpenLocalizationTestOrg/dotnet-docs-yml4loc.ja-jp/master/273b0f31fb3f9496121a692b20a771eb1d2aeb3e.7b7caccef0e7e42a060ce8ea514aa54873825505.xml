{"nodes":[{"content":"Represents a collection of application settings providers.","nodes":[{"pos":[0,58],"content":"Represents a collection of application settings providers.","nodes":[{"content":"Represents a collection of application settings providers.","pos":[0,58]}]}],"pos":[717,776],"yaml":true},{"content":"The <xref:System.Configuration.SettingsProviderCollection> class is a straightforward extension of the <xref:System.Configuration.Provider.ProviderCollection> class to provide for storage of <xref:System.Configuration.SettingsProvider> objects.  \n  \n The <xref:System.Configuration.ApplicationSettingsBase> class uses this collection to manage the settings providers associated with each of its application settings properties through the <xref:System.Configuration.SettingsProviderAttribute>.","nodes":[{"pos":[0,244],"content":"The <xref:System.Configuration.SettingsProviderCollection> class is a straightforward extension of the <xref:System.Configuration.Provider.ProviderCollection> class to provide for storage of <xref:System.Configuration.SettingsProvider> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderCollection&gt;</ph> class is a straightforward extension of the <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderCollection&gt;</ph> class to provide for storage of <ph id=\"ph3\">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> objects.","pos":[0,244],"source":"The <xref:System.Configuration.SettingsProviderCollection> class is a straightforward extension of the <xref:System.Configuration.Provider.ProviderCollection> class to provide for storage of <xref:System.Configuration.SettingsProvider> objects."}]},{"pos":[251,493],"content":"The <xref:System.Configuration.ApplicationSettingsBase> class uses this collection to manage the settings providers associated with each of its application settings properties through the <xref:System.Configuration.SettingsProviderAttribute>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class uses this collection to manage the settings providers associated with each of its application settings properties through the <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.","pos":[0,242],"source":"The <xref:System.Configuration.ApplicationSettingsBase> class uses this collection to manage the settings providers associated with each of its application settings properties through the <xref:System.Configuration.SettingsProviderAttribute>."}]}],"pos":[787,1285],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderCollection\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsProviderCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderCollection\"></xref> class."}],"pos":[4013,4123],"yaml":true},{"content":"This is the default constructor that is implicitly provided.","nodes":[{"pos":[0,60],"content":"This is the default constructor that is implicitly provided.","nodes":[{"content":"This is the default constructor that is implicitly provided.","pos":[0,60]}]}],"pos":[4134,4195],"yaml":true,"extradata":"MT"},{"content":"Adds a new settings provider to the collection.","nodes":[{"pos":[0,47],"content":"Adds a new settings provider to the collection.","nodes":[{"content":"Adds a new settings provider to the collection.","pos":[0,47]}]}],"pos":[5597,5645],"yaml":true},{"content":"The <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the <xref:System.Configuration.SettingsProvider> is used as the storage key.  \n  \n> [!CAUTION]\n>  Although the <xref:System.Configuration.SettingsProviderCollection.Add%2A> method has a single <xref:System.Configuration.Provider.ProviderBase> parameter to match the signature of this same method in the base class <xref:System.Configuration.Provider.ProviderCollection>, this method will throw an exception if the `provider` parameter is not of type <xref:System.Configuration.SettingsProvider>.","nodes":[{"pos":[0,150],"content":"The <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the <xref:System.Configuration.SettingsProvider> is used as the storage key.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> is used as the storage key.","pos":[0,150],"source":"The <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the <xref:System.Configuration.SettingsProvider> is used as the storage key."}]},{"pos":[158,569],"content":"[!CAUTION]\n Although the <xref:System.Configuration.SettingsProviderCollection.Add%2A> method has a single <xref:System.Configuration.Provider.ProviderBase> parameter to match the signature of this same method in the base class <xref:System.Configuration.Provider.ProviderCollection>, this method will throw an exception if the `provider` parameter is not of type <xref:System.Configuration.SettingsProvider>.","leadings":["","> "],"nodes":[{"content":"Although the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderCollection.Add%2A&gt;</ph> method has a single <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderBase&gt;</ph> parameter to match the signature of this same method in the base class <ph id=\"ph3\">&lt;xref:System.Configuration.Provider.ProviderCollection&gt;</ph>, this method will throw an exception if the <ph id=\"ph4\">`provider`</ph> parameter is not of type <ph id=\"ph5\">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>.","pos":[12,409],"source":" Although the <xref:System.Configuration.SettingsProviderCollection.Add%2A> method has a single <xref:System.Configuration.Provider.ProviderBase> parameter to match the signature of this same method in the base class <xref:System.Configuration.Provider.ProviderCollection>, this method will throw an exception if the `provider` parameter is not of type <xref:System.Configuration.SettingsProvider>."}]}],"pos":[5656,6231],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.Provider.ProviderBase\"></xref> to add to the collection.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Provider.ProviderBase\"&gt;&lt;/xref&gt;</ph> to add to the collection.","source":"A <xref href=\"System.Configuration.Provider.ProviderBase\"></xref> to add to the collection."}],"pos":[6443,6535],"yaml":true},{"content":"The <code>provider</code> parameter is not of type <xref href=\"System.Configuration.SettingsProvider\"></xref>.  \n  \n -or-  \n  \n The <xref href=\"System.Configuration.Provider.ProviderBase.Name\"></xref> property of the provider parameter is null or an empty string.  \n  \n -or-  \n  \n A settings provider with the same <xref href=\"System.Configuration.Provider.ProviderBase.Name\"></xref> already exists in the collection.","nodes":[{"pos":[0,110],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not of type <ph id=\"ph2\">&lt;xref href=\"System.Configuration.SettingsProvider\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>provider</code> parameter is not of type <xref href=\"System.Configuration.SettingsProvider\"></xref>."},{"pos":[117,121],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[128,263],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Provider.ProviderBase.Name\"&gt;&lt;/xref&gt;</ph> property of the provider parameter is null or an empty string.","source":"The <xref href=\"System.Configuration.Provider.ProviderBase.Name\"></xref> property of the provider parameter is null or an empty string."},{"pos":[270,274],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[281,417],"content":"A settings provider with the same <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Provider.ProviderBase.Name\"&gt;&lt;/xref&gt;</ph> already exists in the collection.","source":"A settings provider with the same <xref href=\"System.Configuration.Provider.ProviderBase.Name\"></xref> already exists in the collection."}],"pos":[6708,7142],"yaml":true},{"content":"The collection is read-only.","nodes":[{"pos":[0,28],"content":"The collection is read-only.","nodes":[{"content":"The collection is read-only.","pos":[0,28]}]}],"pos":[7244,7273],"yaml":true},{"content":"The <code>provider</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>provider</code> parameter is `null`."}],"pos":[7375,7422],"yaml":true},{"content":"Gets the settings provider in the collection that matches the specified name.","nodes":[{"pos":[0,77],"content":"Gets the settings provider in the collection that matches the specified name.","nodes":[{"content":"Gets the settings provider in the collection that matches the specified name.","pos":[0,77]}]}],"pos":[8563,8641],"yaml":true},{"content":"You can make a <xref:System.Configuration.SettingsProviderCollection> read-only by using the <xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A> method. However, it is invalid to methods such as <xref:System.Configuration.SettingsProviderCollection.Add%2A>, <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>, and <xref:System.Configuration.Provider.ProviderCollection.Clear%2A> on such a collection.","nodes":[{"pos":[0,434],"content":"You can make a <xref:System.Configuration.SettingsProviderCollection> read-only by using the <xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A> method. However, it is invalid to methods such as <xref:System.Configuration.SettingsProviderCollection.Add%2A>, <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>, and <xref:System.Configuration.Provider.ProviderCollection.Clear%2A> on such a collection.","nodes":[{"content":"You can make a <xref:System.Configuration.SettingsProviderCollection> read-only by using the <xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A> method. However, it is invalid to methods such as <xref:System.Configuration.SettingsProviderCollection.Add%2A>, <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>, and <xref:System.Configuration.Provider.ProviderCollection.Clear%2A> on such a collection.","pos":[0,434],"nodes":[{"content":"You can make a <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderCollection&gt;</ph> read-only by using the <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A&gt;</ph> method.","pos":[0,171],"source":"You can make a <xref:System.Configuration.SettingsProviderCollection> read-only by using the <xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A> method."},{"content":"However, it is invalid to methods such as <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderCollection.Add%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderCollection.Remove%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Configuration.Provider.ProviderCollection.Clear%2A&gt;</ph> on such a collection.","pos":[172,434],"source":" However, it is invalid to methods such as <xref:System.Configuration.SettingsProviderCollection.Add%2A>, <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>, and <xref:System.Configuration.Provider.ProviderCollection.Clear%2A> on such a collection."}]}]}],"pos":[8652,9087],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the friendly name of the settings provider.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the friendly name of the settings provider.","source":"A <xref href=\"System.String\"></xref> containing the friendly name of the settings provider."}],"pos":[9258,9350],"yaml":true},{"content":"If found, the <xref href=\"System.Configuration.SettingsProvider\"></xref> whose name matches that specified by the name parameter; otherwise, `null`.","nodes":[{"pos":[0,148],"content":"If found, the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsProvider\"&gt;&lt;/xref&gt;</ph> whose name matches that specified by the name parameter; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"If found, the <xref href=\"System.Configuration.SettingsProvider\"></xref> whose name matches that specified by the name parameter; otherwise, `null`."}],"pos":[9431,9580],"yaml":true},{"content":"The <code>name</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter is `null`."}],"pos":[9762,9805],"yaml":true},{"content":"The collection is read-only when setting this value.","nodes":[{"pos":[0,52],"content":"The collection is read-only when setting this value.","nodes":[{"content":"The collection is read-only when setting this value.","pos":[0,52]}]}],"pos":[9907,9960],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SettingsProviderCollection\n  commentId: T:System.Configuration.SettingsProviderCollection\n  id: SettingsProviderCollection\n  children:\n  - System.Configuration.SettingsProviderCollection.#ctor\n  - System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  - System.Configuration.SettingsProviderCollection.Item(System.String)\n  langs:\n  - csharp\n  name: SettingsProviderCollection\n  nameWithType: SettingsProviderCollection\n  fullName: System.Configuration.SettingsProviderCollection\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Represents a collection of application settings providers.\n  remarks: \"The <xref:System.Configuration.SettingsProviderCollection> class is a straightforward extension of the <xref:System.Configuration.Provider.ProviderCollection> class to provide for storage of <xref:System.Configuration.SettingsProvider> objects.  \\n  \\n The <xref:System.Configuration.ApplicationSettingsBase> class uses this collection to manage the settings providers associated with each of its application settings properties through the <xref:System.Configuration.SettingsProviderAttribute>.\"\n  syntax:\n    content: 'public class SettingsProviderCollection : System.Configuration.Provider.ProviderCollection'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderCollection\n  derivedClasses:\n  - System.Web.Profile.ProfileProviderCollection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderCollection.Clear\n  - System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)\n  - System.Configuration.Provider.ProviderCollection.Count\n  - System.Configuration.Provider.ProviderCollection.GetEnumerator\n  - System.Configuration.Provider.ProviderCollection.IsSynchronized\n  - System.Configuration.Provider.ProviderCollection.Remove(System.String)\n  - System.Configuration.Provider.ProviderCollection.SetReadOnly\n  - System.Configuration.Provider.ProviderCollection.SyncRoot\n  - System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsProviderCollection.#ctor\n  commentId: M:System.Configuration.SettingsProviderCollection.#ctor\n  id: '#ctor'\n  parent: System.Configuration.SettingsProviderCollection\n  langs:\n  - csharp\n  name: SettingsProviderCollection()\n  nameWithType: SettingsProviderCollection.SettingsProviderCollection()\n  fullName: SettingsProviderCollection.SettingsProviderCollection()\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderCollection\"></xref> class.\n  remarks: This is the default constructor that is implicitly provided.\n  syntax:\n    content: public SettingsProviderCollection ();\n    parameters: []\n  overload: System.Configuration.SettingsProviderCollection.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  commentId: M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  id: Add(System.Configuration.Provider.ProviderBase)\n  parent: System.Configuration.SettingsProviderCollection\n  langs:\n  - csharp\n  name: Add(ProviderBase)\n  nameWithType: SettingsProviderCollection.Add(ProviderBase)\n  fullName: SettingsProviderCollection.Add(ProviderBase)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Adds a new settings provider to the collection.\n  remarks: \"The <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the <xref:System.Configuration.SettingsProvider> is used as the storage key.  \\n  \\n> [!CAUTION]\\n>  Although the <xref:System.Configuration.SettingsProviderCollection.Add%2A> method has a single <xref:System.Configuration.Provider.ProviderBase> parameter to match the signature of this same method in the base class <xref:System.Configuration.Provider.ProviderCollection>, this method will throw an exception if the `provider` parameter is not of type <xref:System.Configuration.SettingsProvider>.\"\n  syntax:\n    content: public override void Add (System.Configuration.Provider.ProviderBase provider);\n    parameters:\n    - id: provider\n      type: System.Configuration.Provider.ProviderBase\n      description: A <xref href=\"System.Configuration.Provider.ProviderBase\"></xref> to add to the collection.\n  overload: System.Configuration.SettingsProviderCollection.Add*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>provider</code> parameter is not of type <xref href=\\\"System.Configuration.SettingsProvider\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Configuration.Provider.ProviderBase.Name\\\"></xref> property of the provider parameter is null or an empty string.  \\n  \\n -or-  \\n  \\n A settings provider with the same <xref href=\\\"System.Configuration.Provider.ProviderBase.Name\\\"></xref> already exists in the collection.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>provider</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsProviderCollection.Item(System.String)\n  commentId: P:System.Configuration.SettingsProviderCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Configuration.SettingsProviderCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: SettingsProviderCollection.Item(String)\n  fullName: SettingsProviderCollection.Item(String)\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the settings provider in the collection that matches the specified name.\n  remarks: You can make a <xref:System.Configuration.SettingsProviderCollection> read-only by using the <xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A> method. However, it is invalid to methods such as <xref:System.Configuration.SettingsProviderCollection.Add%2A>, <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>, and <xref:System.Configuration.Provider.ProviderCollection.Clear%2A> on such a collection.\n  syntax:\n    content: public System.Configuration.SettingsProvider this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the friendly name of the settings provider.\n    return:\n      type: System.Configuration.SettingsProvider\n      description: If found, the <xref href=\"System.Configuration.SettingsProvider\"></xref> whose name matches that specified by the name parameter; otherwise, `null`.\n  overload: System.Configuration.SettingsProviderCollection.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only when setting this value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Configuration.Provider.ProviderCollection\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderCollection\n  nameWithType: ProviderCollection\n  fullName: System.Configuration.Provider.ProviderCollection\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Configuration.SettingsProviderCollection.#ctor\n  parent: System.Configuration.SettingsProviderCollection\n  isExternal: false\n  name: SettingsProviderCollection()\n  nameWithType: SettingsProviderCollection.SettingsProviderCollection()\n  fullName: SettingsProviderCollection.SettingsProviderCollection()\n- uid: System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)\n  parent: System.Configuration.SettingsProviderCollection\n  isExternal: false\n  name: Add(ProviderBase)\n  nameWithType: SettingsProviderCollection.Add(ProviderBase)\n  fullName: SettingsProviderCollection.Add(ProviderBase)\n- uid: System.Configuration.Provider.ProviderBase\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderBase\n  nameWithType: ProviderBase\n  fullName: System.Configuration.Provider.ProviderBase\n- uid: System.Configuration.SettingsProviderCollection.Item(System.String)\n  parent: System.Configuration.SettingsProviderCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: SettingsProviderCollection.Item(String)\n  fullName: SettingsProviderCollection.Item(String)\n- uid: System.Configuration.SettingsProvider\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsProvider\n  nameWithType: SettingsProvider\n  fullName: System.Configuration.SettingsProvider\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.SettingsProviderCollection.#ctor*\n  parent: System.Configuration.SettingsProviderCollection\n  isExternal: false\n  name: SettingsProviderCollection\n  nameWithType: SettingsProviderCollection.SettingsProviderCollection\n  fullName: SettingsProviderCollection.SettingsProviderCollection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n- uid: System.Configuration.SettingsProviderCollection.Add*\n  parent: System.Configuration.SettingsProviderCollection\n  isExternal: false\n  name: Add\n  nameWithType: SettingsProviderCollection.Add\n  fullName: SettingsProviderCollection.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n- uid: System.Configuration.SettingsProviderCollection.Item*\n  parent: System.Configuration.SettingsProviderCollection\n  isExternal: false\n  name: Item\n  nameWithType: SettingsProviderCollection.Item\n  fullName: SettingsProviderCollection.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderCollection.Clear\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ProviderCollection.Clear()\n  fullName: ProviderCollection.Clear()\n- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: CopyTo(ProviderBase[], Int32)\n  nameWithType: ProviderCollection.CopyTo(ProviderBase[], Int32)\n  fullName: ProviderCollection.CopyTo(ProviderBase[], Int32)\n- uid: System.Configuration.Provider.ProviderCollection.Count\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Count\n  nameWithType: ProviderCollection.Count\n  fullName: ProviderCollection.Count\n- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ProviderCollection.GetEnumerator()\n  fullName: ProviderCollection.GetEnumerator()\n- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ProviderCollection.IsSynchronized\n  fullName: ProviderCollection.IsSynchronized\n- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: ProviderCollection.Remove(String)\n  fullName: ProviderCollection.Remove(String)\n- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ProviderCollection.SetReadOnly()\n  fullName: ProviderCollection.SetReadOnly()\n- uid: System.Configuration.Provider.ProviderCollection.SyncRoot\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ProviderCollection.SyncRoot\n  fullName: ProviderCollection.SyncRoot\n- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Configuration.Provider.ProviderCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ProviderCollection.ICollection.CopyTo(Array, Int32)\n  fullName: ProviderCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}