{"nodes":[{"content":"Represents the set of properties of a WMI object.","nodes":[{"pos":[0,49],"content":"Represents the set of properties of a WMI object.","nodes":[{"content":"Represents the set of properties of a WMI object.","pos":[0,49]}]}],"pos":[1327,1377],"yaml":true},{"content":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value. The value cannot be null and must be convertible to a Common Information Model (CIM) type.","nodes":[{"pos":[0,179],"content":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value. The value cannot be null and must be convertible to a Common Information Model (CIM) type.","nodes":[{"content":"Adds a new <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyData\"&gt;&lt;/xref&gt;</ph> with the specified value.","pos":[0,88],"source":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value."},{"content":"The value cannot be null and must be convertible to a Common Information Model (CIM) type.","pos":[89,179]}]}],"pos":[3838,4018],"yaml":true},{"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,207],"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.","nodes":[{"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.","pos":[0,207],"nodes":[{"content":"Properties can only be added to class definitions, not to instances.","pos":[0,68]},{"content":"This method is only valid when invoked on a <ph id=\"ph1\">&lt;xref:System.Management.PropertyDataCollection&gt;</ph> in a <ph id=\"ph2\">&lt;xref:System.Management.ManagementClass&gt;</ph>.","pos":[69,207],"source":" This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>."}]}]},{"pos":[216,239],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[243,476],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[4029,4511],"yaml":true,"extradata":"MT"},{"content":"The name of the new property.","nodes":[{"pos":[0,29],"content":"The name of the new property.","nodes":[{"content":"The name of the new property.","pos":[0,29]}]}],"pos":[4687,4717],"yaml":true},{"content":"The value of the property (cannot be null).","nodes":[{"pos":[0,43],"content":"The value of the property (cannot be null).","nodes":[{"content":"The value of the property (cannot be null).","pos":[0,43]}]}],"pos":[4786,4830],"yaml":true},{"content":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with no assigned value.","nodes":[{"pos":[0,86],"content":"Adds a new <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyData\"&gt;&lt;/xref&gt;</ph> with no assigned value.","source":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with no assigned value."}],"pos":[6031,6118],"yaml":true},{"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,207],"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.","nodes":[{"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.","pos":[0,207],"nodes":[{"content":"Properties can only be added to class definitions, not to instances.","pos":[0,68]},{"content":"This method is only valid when invoked on a <ph id=\"ph1\">&lt;xref:System.Management.PropertyDataCollection&gt;</ph> in a <ph id=\"ph2\">&lt;xref:System.Management.ManagementClass&gt;</ph>.","pos":[69,207],"source":" This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>."}]}]},{"pos":[216,239],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[243,476],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[6129,6611],"yaml":true,"extradata":"MT"},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[6811,6837],"yaml":true},{"content":"The Common Information Model (CIM) type of the property.","nodes":[{"pos":[0,56],"content":"The Common Information Model (CIM) type of the property.","nodes":[{"content":"The Common Information Model (CIM) type of the property.","pos":[0,56]}]}],"pos":[6917,6974],"yaml":true},{"content":"`true` to specify that the property is an array type; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> to specify that the property is an array type; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to specify that the property is an array type; otherwise, `false`."}],"pos":[7038,7114],"yaml":true},{"content":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value and Common Information Model (CIM) type.","nodes":[{"pos":[0,128],"content":"Adds a new <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyData\"&gt;&lt;/xref&gt;</ph> with the specified value and Common Information Model (CIM) type.","source":"Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value and Common Information Model (CIM) type."}],"pos":[8309,8438],"yaml":true},{"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,207],"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.","nodes":[{"content":"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.","pos":[0,207],"nodes":[{"content":"Properties can only be added to class definitions, not to instances.","pos":[0,68]},{"content":"This method is only valid when invoked on a <ph id=\"ph1\">&lt;xref:System.Management.PropertyDataCollection&gt;</ph> in a <ph id=\"ph2\">&lt;xref:System.Management.ManagementClass&gt;</ph>.","pos":[69,207],"source":" This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>."}]}]},{"pos":[216,239],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[243,476],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[8449,8931],"yaml":true,"extradata":"MT"},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[9139,9165],"yaml":true},{"content":"The value of the property (which can be null).","nodes":[{"pos":[0,46],"content":"The value of the property (which can be null).","nodes":[{"content":"The value of the property (which can be null).","pos":[0,46]}]}],"pos":[9234,9281],"yaml":true},{"content":"The CIM type of the property.","nodes":[{"pos":[0,29],"content":"The CIM type of the property.","nodes":[{"content":"The CIM type of the property.","pos":[0,29]}]}],"pos":[9361,9391],"yaml":true},{"content":"Copies the <xref href=\"System.Management.PropertyDataCollection\"></xref> into an array.","nodes":[{"pos":[0,87],"content":"Copies the <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph> into an array.","source":"Copies the <xref href=\"System.Management.PropertyDataCollection\"></xref> into an array."}],"pos":[10487,10575],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[10586,10853],"yaml":true,"extradata":"MT"},{"content":"The array to which to copy the <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,93],"content":"The array to which to copy the <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The array to which to copy the <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[10997,11091],"yaml":true},{"content":"The index from which to start copying.","nodes":[{"pos":[0,38],"content":"The index from which to start copying.","nodes":[{"content":"The index from which to start copying.","pos":[0,38]}]}],"pos":[11151,11190],"yaml":true},{"content":"Copies the <xref href=\"System.Management.PropertyDataCollection\"></xref> to a specialized <xref href=\"System.Management.PropertyData\"></xref> object array.","nodes":[{"pos":[0,155],"content":"Copies the <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph> to a specialized <ph id=\"ph2\">&lt;xref href=\"System.Management.PropertyData\"&gt;&lt;/xref&gt;</ph> object array.","source":"Copies the <xref href=\"System.Management.PropertyDataCollection\"></xref> to a specialized <xref href=\"System.Management.PropertyData\"></xref> object array."}],"pos":[12376,12532],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[12543,12810],"yaml":true,"extradata":"MT"},{"content":"The destination array to contain the copied <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,106],"content":"The destination array to contain the copied <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The destination array to contain the copied <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[13017,13124],"yaml":true},{"content":"The index in the destination array from which to start copying.","nodes":[{"pos":[0,63],"content":"The index in the destination array from which to start copying.","nodes":[{"content":"The index in the destination array from which to start copying.","pos":[0,63]}]}],"pos":[13184,13248],"yaml":true},{"content":"Gets the number of objects in the <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets the number of objects in the <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of objects in the <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[14220,14317],"yaml":true},{"content":"## Property Value  \n The number of objects in the collection.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,17],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[21,61],"content":"The number of objects in the collection.","nodes":[{"content":"The number of objects in the collection.","pos":[0,40]}]},{"pos":[70,93],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[97,330],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[14328,14665],"yaml":true,"extradata":"MT"},{"content":"Returns an <xref href=\"System.Int32\"></xref> value representing the number of objects in the collection.","nodes":[{"pos":[0,104],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value representing the number of objects in the collection.","source":"Returns an <xref href=\"System.Int32\"></xref> value representing the number of objects in the collection."}],"pos":[14770,14875],"yaml":true},{"content":"Returns the enumerator for this <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,94],"content":"Returns the enumerator for this <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the enumerator for this <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[15898,15993],"yaml":true},{"content":"You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time. The memory containing the instances is released by WMI so that the enumerator cannot be rewound. Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.  \n  \n Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.  \n  \n If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,372],"content":"You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time. The memory containing the instances is released by WMI so that the enumerator cannot be rewound. Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.","nodes":[{"content":"You can only iterate (as in a Visual Basic .NET <ph id=\"ph1\">`For Each`</ph> statement or a C# <ph id=\"ph2\">`For`</ph> statement) through a forward-only enumerator one time.","pos":[0,137],"source":"You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time."},{"content":"The memory containing the instances is released by WMI so that the enumerator cannot be rewound.","pos":[138,234]},{"content":"Therefore, the <ph id=\"ph1\">&lt;xref:System.Management.PropertyDataCollection.Count%2A&gt;</ph> method cannot be used since it requires rewinding the enumerator.","pos":[235,372],"source":" Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator."}]},{"pos":[379,592],"content":"Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.","nodes":[{"content":"Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <ph id=\"ph1\">&lt;xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A&gt;</ph>.","pos":[0,213],"source":"Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>."}]},{"pos":[599,710],"content":"If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.","nodes":[{"content":"If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.","pos":[0,111]}]},{"pos":[719,742],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[746,979],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[16004,16993],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection."}],"pos":[17231,17338],"yaml":true},{"content":"Gets a value indicating whether the object is synchronized.","nodes":[{"pos":[0,59],"content":"Gets a value indicating whether the object is synchronized.","nodes":[{"content":"Gets a value indicating whether the object is synchronized.","pos":[0,59]}]}],"pos":[18371,18431],"yaml":true},{"content":"## Property Value  \n `true` if the object is synchronized; otherwise, `false`.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,17],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[21,78],"content":"<ph id=\"ph1\">`true`</ph> if the object is synchronized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the object is synchronized; otherwise, `false`."},{"pos":[87,110],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[114,347],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[18442,18796],"yaml":true,"extradata":"MT"},{"content":"Returns a <xref href=\"System.Boolean\"></xref> value indicating whether the object is synchronized.","nodes":[{"pos":[0,98],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value indicating whether the object is synchronized.","source":"Returns a <xref href=\"System.Boolean\"></xref> value indicating whether the object is synchronized."}],"pos":[18913,19012],"yaml":true},{"content":"Gets the specified property from the <xref href=\"System.Management.PropertyDataCollection\"></xref>, using [] syntax. This property is the indexer for the <xref href=\"System.Management.PropertyDataCollection\"></xref> class.","nodes":[{"pos":[0,222],"content":"Gets the specified property from the <xref href=\"System.Management.PropertyDataCollection\"></xref>, using [] syntax. This property is the indexer for the <xref href=\"System.Management.PropertyDataCollection\"></xref> class.","nodes":[{"content":"Gets the specified property from the <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>, using [] syntax.","pos":[0,116],"source":"Gets the specified property from the <xref href=\"System.Management.PropertyDataCollection\"></xref>, using [] syntax."},{"content":"This property is the indexer for the <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph> class.","pos":[117,222],"source":" This property is the indexer for the <xref href=\"System.Management.PropertyDataCollection\"></xref> class."}]}],"pos":[20055,20278],"yaml":true},{"content":"## Property Value  \n A <xref:System.Management.PropertyData>, based on the name specified.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,17],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[21,90],"content":"A <xref:System.Management.PropertyData>, based on the name specified.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Management.PropertyData&gt;</ph>, based on the name specified.","pos":[0,69],"source":"A <xref:System.Management.PropertyData>, based on the name specified."}]},{"pos":[99,122],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[126,359],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[20289,20655],"yaml":true,"extradata":"MT"},{"content":"The name of the property to retrieve.","nodes":[{"pos":[0,37],"content":"The name of the property to retrieve.","nodes":[{"content":"The name of the property to retrieve.","pos":[0,37]}]}],"pos":[21328,21366],"yaml":true},{"content":"Returns a <xref href=\"System.Management.PropertyData\"></xref> containing the data for a specified property in the collection.","nodes":[{"pos":[0,125],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyData\"&gt;&lt;/xref&gt;</ph> containing the data for a specified property in the collection.","source":"Returns a <xref href=\"System.Management.PropertyData\"></xref> containing the data for a specified property in the collection."}],"pos":[21440,21566],"yaml":true},{"content":"Removes a <xref href=\"System.Management.PropertyData\"></xref> from the <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,133],"content":"Removes a <ph id=\"ph1\">&lt;xref href=\"System.Management.PropertyData\"&gt;&lt;/xref&gt;</ph> from the <ph id=\"ph2\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes a <xref href=\"System.Management.PropertyData\"></xref> from the <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[22609,22743],"yaml":true},{"content":"Properties can only be removed from class definitions, not from instances. This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,185],"content":"Properties can only be removed from class definitions, not from instances. This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.","nodes":[{"content":"Properties can only be removed from class definitions, not from instances. This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.","pos":[0,185],"nodes":[{"content":"Properties can only be removed from class definitions, not from instances.","pos":[0,74]},{"content":"This method is only valid when invoked on a property collection in a <ph id=\"ph1\">&lt;xref:System.Management.ManagementClass&gt;</ph>.","pos":[75,185],"source":" This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>."}]}]},{"pos":[194,217],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[221,454],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[22754,23214],"yaml":true,"extradata":"MT"},{"content":"The name of the property to be removed.","nodes":[{"pos":[0,39],"content":"The name of the property to be removed.","nodes":[{"content":"The name of the property to be removed.","pos":[0,39]}]}],"pos":[23371,23411],"yaml":true},{"content":"Gets the object to be used for synchronization.","nodes":[{"pos":[0,47],"content":"Gets the object to be used for synchronization.","nodes":[{"content":"Gets the object to be used for synchronization.","pos":[0,47]}]}],"pos":[24401,24449],"yaml":true},{"content":"## Property Value  \n The object to be used for synchronization.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,17],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[21,63],"content":"The object to be used for synchronization.","nodes":[{"content":"The object to be used for synchronization.","pos":[0,42]}]},{"pos":[72,95],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[99,332],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[24460,24799],"yaml":true,"extradata":"MT"},{"content":"Returns an <xref href=\"System.Object\"></xref> value containing the object to be used for synchronization.","nodes":[{"pos":[0,105],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> value containing the object to be used for synchronization.","source":"Returns an <xref href=\"System.Object\"></xref> value containing the object to be used for synchronization."}],"pos":[24911,25017],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,151],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that iterates through the <ph id=\"ph2\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[26186,26338],"yaml":true},{"content":"[Visual Basic, C#]  \n  \n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,18],"content":"[Visual Basic, C#]","nodes":[{"content":"[Visual Basic, C#]","pos":[0,18]}]},{"pos":[25,230],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[114,205],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[237,357],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[364,858],"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","pos":[0,494],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[84,180],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, calling <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[181,276],"source":" At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.","pos":[277,494],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."}]}]},{"pos":[865,1186],"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","pos":[0,321],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,196],"source":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.","pos":[197,321],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."}]}]},{"pos":[1193,1943],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,227],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[228,359],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, calling <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[360,525],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"To set <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.","pos":[526,750],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."}]},{"pos":[1950,2603],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.","pos":[0,653],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[73,376],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>."},{"content":"If the collection is modified between <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.","pos":[377,653],"source":" If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated."}]}]},{"pos":[2610,3084],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,474],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,154]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[155,292]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[293,474]}]}]},{"pos":[3091,3124],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[26349,29492],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Management.PropertyDataCollection\"></xref>.","nodes":[{"pos":[0,125],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Management.PropertyDataCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Management.PropertyDataCollection\"></xref>."}],"pos":[29669,29795],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.PropertyDataCollection\n  commentId: T:System.Management.PropertyDataCollection\n  id: PropertyDataCollection\n  children:\n  - System.Management.PropertyDataCollection.Add(System.String,System.Object)\n  - System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)\n  - System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)\n  - System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)\n  - System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)\n  - System.Management.PropertyDataCollection.Count\n  - System.Management.PropertyDataCollection.GetEnumerator\n  - System.Management.PropertyDataCollection.IsSynchronized\n  - System.Management.PropertyDataCollection.Item(System.String)\n  - System.Management.PropertyDataCollection.Remove(System.String)\n  - System.Management.PropertyDataCollection.SyncRoot\n  - System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: PropertyDataCollection\n  nameWithType: PropertyDataCollection\n  fullName: System.Management.PropertyDataCollection\n  type: Class\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Represents the set of properties of a WMI object.\n  remarks: ''\n  example:\n  - \"The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class. For more information about **Win32_OperatingSystem**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \\n  \\n [!code-csharp[wminet_PropertyDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/cs/PropertyDataCollection.cs#1)]\\n [!code-vb[wminet_PropertyDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/vb/PropertyDataCollection.vb#1)]\"\n  syntax:\n    content: 'public class PropertyDataCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)\n  commentId: M:System.Management.PropertyDataCollection.Add(System.String,System.Object)\n  id: Add(System.String,System.Object)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: Add(String, Object)\n  nameWithType: PropertyDataCollection.Add(String, Object)\n  fullName: PropertyDataCollection.Add(String, Object)\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value. The value cannot be null and must be convertible to a Common Information Model (CIM) type.\n  remarks: \"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public virtual void Add (string propertyName, object propertyValue);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the new property.\n    - id: propertyValue\n      type: System.Object\n      description: The value of the property (cannot be null).\n  overload: System.Management.PropertyDataCollection.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)\n  commentId: M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)\n  id: Add(System.String,System.Management.CimType,System.Boolean)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: Add(String, CimType, Boolean)\n  nameWithType: PropertyDataCollection.Add(String, CimType, Boolean)\n  fullName: PropertyDataCollection.Add(String, CimType, Boolean)\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Adds a new <xref href=\"System.Management.PropertyData\"></xref> with no assigned value.\n  remarks: \"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    - id: propertyType\n      type: System.Management.CimType\n      description: The Common Information Model (CIM) type of the property.\n    - id: isArray\n      type: System.Boolean\n      description: '`true` to specify that the property is an array type; otherwise, `false`.'\n  overload: System.Management.PropertyDataCollection.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)\n  commentId: M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)\n  id: Add(System.String,System.Object,System.Management.CimType)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: Add(String, Object, CimType)\n  nameWithType: PropertyDataCollection.Add(String, Object, CimType)\n  fullName: PropertyDataCollection.Add(String, Object, CimType)\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Adds a new <xref href=\"System.Management.PropertyData\"></xref> with the specified value and Common Information Model (CIM) type.\n  remarks: \"Properties can only be added to class definitions, not to instances. This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    - id: propertyValue\n      type: System.Object\n      description: The value of the property (which can be null).\n    - id: propertyType\n      type: System.Management.CimType\n      description: The CIM type of the property.\n  overload: System.Management.PropertyDataCollection.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: PropertyDataCollection.CopyTo(Array, Int32)\n  fullName: PropertyDataCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Copies the <xref href=\"System.Management.PropertyDataCollection\"></xref> into an array.\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The array to which to copy the <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The index from which to start copying.\n  overload: System.Management.PropertyDataCollection.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)\n  commentId: M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)\n  id: CopyTo(System.Management.PropertyData[],System.Int32)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: CopyTo(PropertyData[], Int32)\n  nameWithType: PropertyDataCollection.CopyTo(PropertyData[], Int32)\n  fullName: PropertyDataCollection.CopyTo(PropertyData[], Int32)\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Copies the <xref href=\"System.Management.PropertyDataCollection\"></xref> to a specialized <xref href=\"System.Management.PropertyData\"></xref> object array.\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public void CopyTo (System.Management.PropertyData[] propertyArray, int index);\n    parameters:\n    - id: propertyArray\n      type: System.Management.PropertyData[]\n      description: The destination array to contain the copied <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The index in the destination array from which to start copying.\n  overload: System.Management.PropertyDataCollection.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.Count\n  commentId: P:System.Management.PropertyDataCollection.Count\n  id: Count\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: PropertyDataCollection.Count\n  fullName: PropertyDataCollection.Count\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Gets the number of objects in the <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n  remarks: \"## Property Value  \\n The number of objects in the collection.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Returns an <xref href=\"System.Int32\"></xref> value representing the number of objects in the collection.\n  overload: System.Management.PropertyDataCollection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.GetEnumerator\n  commentId: M:System.Management.PropertyDataCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: PropertyDataCollection.GetEnumerator()\n  fullName: PropertyDataCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Returns the enumerator for this <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n  remarks: \"You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time. The memory containing the instances is released by WMI so that the enumerator cannot be rewound. Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.  \\n  \\n Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.  \\n  \\n If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Management.PropertyDataCollection+PropertyDataEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection.\n  overload: System.Management.PropertyDataCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.IsSynchronized\n  commentId: P:System.Management.PropertyDataCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: PropertyDataCollection.IsSynchronized\n  fullName: PropertyDataCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Gets a value indicating whether the object is synchronized.\n  remarks: \"## Property Value  \\n `true` if the object is synchronized; otherwise, `false`.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Returns a <xref href=\"System.Boolean\"></xref> value indicating whether the object is synchronized.\n  overload: System.Management.PropertyDataCollection.IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.Item(System.String)\n  commentId: P:System.Management.PropertyDataCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: PropertyDataCollection.Item(String)\n  fullName: PropertyDataCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Gets the specified property from the <xref href=\"System.Management.PropertyDataCollection\"></xref>, using [] syntax. This property is the indexer for the <xref href=\"System.Management.PropertyDataCollection\"></xref> class.\n  remarks: \"## Property Value  \\n A <xref:System.Management.PropertyData>, based on the name specified.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  example:\n  - \"The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.  \\n  \\n [!code-csharp[wminet_PropertyDataCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/cs/PropertyDataCollection_Item.cs#1)]\\n [!code-vb[wminet_PropertyDataCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/vb/PropertyDataCollection_Item.vb#1)]\"\n  syntax:\n    content: public virtual System.Management.PropertyData this[string propertyName] { get; }\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to retrieve.\n    return:\n      type: System.Management.PropertyData\n      description: Returns a <xref href=\"System.Management.PropertyData\"></xref> containing the data for a specified property in the collection.\n  overload: System.Management.PropertyDataCollection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.Remove(System.String)\n  commentId: M:System.Management.PropertyDataCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: PropertyDataCollection.Remove(String)\n  fullName: PropertyDataCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Removes a <xref href=\"System.Management.PropertyData\"></xref> from the <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n  remarks: \"Properties can only be removed from class definitions, not from instances. This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public virtual void Remove (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to be removed.\n  overload: System.Management.PropertyDataCollection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.SyncRoot\n  commentId: P:System.Management.PropertyDataCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: PropertyDataCollection.SyncRoot\n  fullName: PropertyDataCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Gets the object to be used for synchronization.\n  remarks: \"## Property Value  \\n The object to be used for synchronization.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Returns an <xref href=\"System.Object\"></xref> value containing the object to be used for synchronization.\n  overload: System.Management.PropertyDataCollection.SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Management.PropertyDataCollection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: PropertyDataCollection.IEnumerable.GetEnumerator()\n  fullName: PropertyDataCollection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Management\n  namespace: System.Management\n  summary: Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n  remarks: \"[Visual Basic, C#]  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Management.PropertyDataCollection\"></xref>.\n  overload: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Add(String, Object)\n  nameWithType: PropertyDataCollection.Add(String, Object)\n  fullName: PropertyDataCollection.Add(String, Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Add(String, CimType, Boolean)\n  nameWithType: PropertyDataCollection.Add(String, CimType, Boolean)\n  fullName: PropertyDataCollection.Add(String, CimType, Boolean)\n- uid: System.Management.CimType\n  parent: System.Management\n  isExternal: false\n  name: CimType\n  nameWithType: CimType\n  fullName: System.Management.CimType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Add(String, Object, CimType)\n  nameWithType: PropertyDataCollection.Add(String, Object, CimType)\n  fullName: PropertyDataCollection.Add(String, Object, CimType)\n- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: PropertyDataCollection.CopyTo(Array, Int32)\n  fullName: PropertyDataCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: CopyTo(PropertyData[], Int32)\n  nameWithType: PropertyDataCollection.CopyTo(PropertyData[], Int32)\n  fullName: PropertyDataCollection.CopyTo(PropertyData[], Int32)\n- uid: System.Management.PropertyData\n  name: PropertyData\n  nameWithType: PropertyData\n  fullName: System.Management.PropertyData\n- uid: System.Management.PropertyData[]\n  parent: System.Management\n  isExternal: false\n  name: PropertyData[]\n  nameWithType: PropertyData[]\n  fullName: System.Management.PropertyData[]\n  spec.csharp:\n  - uid: System.Management.PropertyData\n    name: PropertyData\n    nameWithType: PropertyData\n    fullName: System.Management.PropertyData\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Management.PropertyDataCollection.Count\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Count\n  nameWithType: PropertyDataCollection.Count\n  fullName: PropertyDataCollection.Count\n- uid: System.Management.PropertyDataCollection.GetEnumerator\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: PropertyDataCollection.GetEnumerator()\n  fullName: PropertyDataCollection.GetEnumerator()\n- uid: System.Management.PropertyDataCollection\n  parent: System.Management\n  isExternal: false\n  name: PropertyDataCollection\n  nameWithType: PropertyDataCollection\n  fullName: System.Management.PropertyDataCollection+PropertyDataEnumerator\n- uid: System.Management.PropertyDataCollection.IsSynchronized\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: PropertyDataCollection.IsSynchronized\n  fullName: PropertyDataCollection.IsSynchronized\n- uid: System.Management.PropertyDataCollection.Item(System.String)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: PropertyDataCollection.Item(String)\n  fullName: PropertyDataCollection.Item(String)\n- uid: System.Management.PropertyDataCollection.Remove(System.String)\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: PropertyDataCollection.Remove(String)\n  fullName: PropertyDataCollection.Remove(String)\n- uid: System.Management.PropertyDataCollection.SyncRoot\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: PropertyDataCollection.SyncRoot\n  fullName: PropertyDataCollection.SyncRoot\n- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: PropertyDataCollection.IEnumerable.GetEnumerator()\n  fullName: PropertyDataCollection.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Management.PropertyDataCollection.Add*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Add\n  nameWithType: PropertyDataCollection.Add\n  fullName: PropertyDataCollection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.CopyTo*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: PropertyDataCollection.CopyTo\n  fullName: PropertyDataCollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.Count*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Count\n  nameWithType: PropertyDataCollection.Count\n  fullName: PropertyDataCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.GetEnumerator*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: PropertyDataCollection.GetEnumerator\n  fullName: PropertyDataCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.IsSynchronized*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: PropertyDataCollection.IsSynchronized\n  fullName: PropertyDataCollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.Item*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Item\n  nameWithType: PropertyDataCollection.Item\n  fullName: PropertyDataCollection.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.Remove*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: Remove\n  nameWithType: PropertyDataCollection.Remove\n  fullName: PropertyDataCollection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.SyncRoot*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: PropertyDataCollection.SyncRoot\n  fullName: PropertyDataCollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Management.PropertyDataCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator\n  fullName: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/PropertyDataCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}