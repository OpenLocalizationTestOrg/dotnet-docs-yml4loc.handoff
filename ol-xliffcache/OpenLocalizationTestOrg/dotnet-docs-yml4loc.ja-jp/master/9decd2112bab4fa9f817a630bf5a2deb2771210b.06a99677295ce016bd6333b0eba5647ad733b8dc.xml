{"nodes":[{"content":"To implement a custom upgrade acceptor, inherited from this `abstract` base class.","nodes":[{"pos":[0,82],"content":"To implement a custom upgrade acceptor, inherited from this <ph id=\"ph1\">`abstract`</ph> base class.","source":"To implement a custom upgrade acceptor, inherited from this `abstract` base class."}],"pos":[905,988],"yaml":true},{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.  \n  \n This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.  \n  \n For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","nodes":[{"pos":[0,104],"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.","nodes":[{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.","pos":[0,104]}]},{"pos":[111,293],"content":"This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.","nodes":[{"content":"This class is used with <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph> to implement a custom stream upgrade.","pos":[0,182],"source":"This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade."}]},{"pos":[300,413],"content":"For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","nodes":[{"content":"For a detailed description of the upgrade process, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph>.","pos":[0,113],"source":"For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>."}]}],"pos":[999,1419],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref> class."}],"pos":[2951,3064],"yaml":true},{"content":"Upgrades the transport stream and returns the upgraded stream.","nodes":[{"pos":[0,62],"content":"Upgrades the transport stream and returns the upgraded stream.","nodes":[{"content":"Upgrades the transport stream and returns the upgraded stream.","pos":[0,62]}]}],"pos":[4334,4397],"yaml":true},{"content":"This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.","nodes":[{"pos":[0,134],"content":"This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.","nodes":[{"content":"This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.","pos":[0,134]}]}],"pos":[4408,4543],"yaml":true,"extradata":"MT"},{"content":"The stream to be upgraded.","nodes":[{"pos":[0,26],"content":"The stream to be upgraded.","nodes":[{"content":"The stream to be upgraded.","pos":[0,26]}]}],"pos":[4720,4747],"yaml":true},{"content":"Returns the upgraded stream.","nodes":[{"pos":[0,28],"content":"Returns the upgraded stream.","nodes":[{"content":"Returns the upgraded stream.","pos":[0,28]}]}],"pos":[4807,4836],"yaml":true},{"content":"Asynchronous version of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"></xref>.","nodes":[{"pos":[0,128],"content":"Asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"&gt;&lt;/xref&gt;</ph>.","source":"Asynchronous version of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"></xref>."}],"pos":[6240,6369],"yaml":true},{"content":"For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.","nodes":[{"pos":[0,117],"content":"For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.","nodes":[{"content":"For more information, see the remarks for <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A&gt;</ph>.","pos":[0,117],"source":"For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>."}]}],"pos":[6380,6498],"yaml":true,"extradata":"MT"},{"content":"The stream to be upgraded.","nodes":[{"pos":[0,26],"content":"The stream to be upgraded.","nodes":[{"content":"The stream to be upgraded.","pos":[0,26]}]}],"pos":[6715,6742],"yaml":true},{"content":"The method to be called when the `AcceptUpgrade` call has completed.","nodes":[{"pos":[0,68],"content":"The method to be called when the <ph id=\"ph1\">`AcceptUpgrade`</ph> call has completed.","source":"The method to be called when the `AcceptUpgrade` call has completed."}],"pos":[6813,6882],"yaml":true},{"content":"State information for the `AcceptUpgrade` call.","nodes":[{"pos":[0,47],"content":"State information for the <ph id=\"ph1\">`AcceptUpgrade`</ph> call.","source":"State information for the `AcceptUpgrade` call."}],"pos":[6943,6991],"yaml":true},{"content":"Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.","nodes":[{"pos":[0,89],"content":"Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.","nodes":[{"content":"Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.","pos":[0,89]}]}],"pos":[7054,7144],"yaml":true},{"content":"Determines whether the upgrade requested is supported by this upgrade acceptor.","nodes":[{"pos":[0,79],"content":"Determines whether the upgrade requested is supported by this upgrade acceptor.","nodes":[{"content":"Determines whether the upgrade requested is supported by this upgrade acceptor.","pos":[0,79]}]}],"pos":[8322,8402],"yaml":true},{"content":"The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor. This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator.","nodes":[{"pos":[0,231],"content":"The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor. This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator.","nodes":[{"content":"The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor.","pos":[0,139]},{"content":"This content type comes from the <ph id=\"ph1\">`GetNextUpgrade`</ph> method on the matching upgrade initiator.","pos":[140,231],"source":" This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator."}]}],"pos":[8413,8645],"yaml":true,"extradata":"MT"},{"content":"The type of content to be checked.","nodes":[{"pos":[0,34],"content":"The type of content to be checked.","nodes":[{"content":"The type of content to be checked.","pos":[0,34]}]}],"pos":[8805,8840],"yaml":true},{"content":"`true` if this kind of upgrade is supported; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if this kind of upgrade is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this kind of upgrade is supported; otherwise, `false`."}],"pos":[8898,8965],"yaml":true},{"content":"Asynchronous version of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"></xref>.","nodes":[{"pos":[0,128],"content":"Asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"&gt;&lt;/xref&gt;</ph>.","source":"Asynchronous version of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"></xref>."}],"pos":[10207,10336],"yaml":true},{"content":"For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.","nodes":[{"pos":[0,116],"content":"For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.","nodes":[{"content":"For more information, see the remarks in <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A&gt;</ph>.","pos":[0,116],"source":"For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>."}]}],"pos":[10347,10464],"yaml":true,"extradata":"MT"},{"content":"The IAsyncResult returned from `BeginAcceptUpgrade`.","nodes":[{"pos":[0,52],"content":"The IAsyncResult returned from <ph id=\"ph1\">`BeginAcceptUpgrade`</ph>.","source":"The IAsyncResult returned from `BeginAcceptUpgrade`."}],"pos":[10644,10697],"yaml":true},{"content":"Returns the upgraded stream.","nodes":[{"pos":[0,28],"content":"Returns the upgraded stream.","nodes":[{"content":"Returns the upgraded stream.","pos":[0,28]}]}],"pos":[10757,10786],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  commentId: T:System.ServiceModel.Channels.StreamUpgradeAcceptor\n  id: StreamUpgradeAcceptor\n  children:\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  langs:\n  - csharp\n  name: StreamUpgradeAcceptor\n  nameWithType: StreamUpgradeAcceptor\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: To implement a custom upgrade acceptor, inherited from this `abstract` base class.\n  remarks: \"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.  \\n  \\n This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.  \\n  \\n For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.\"\n  syntax:\n    content: public abstract class StreamUpgradeAcceptor\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: StreamUpgradeAcceptor()\n  nameWithType: StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n  fullName: StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref> class.\n  syntax:\n    content: protected StreamUpgradeAcceptor ();\n    parameters: []\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  id: AcceptUpgrade(System.IO.Stream)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: AcceptUpgrade(Stream)\n  nameWithType: StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n  fullName: StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Upgrades the transport stream and returns the upgraded stream.\n  remarks: This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.\n  syntax:\n    content: public virtual System.IO.Stream AcceptUpgrade (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be upgraded.\n    return:\n      type: System.IO.Stream\n      description: Returns the upgraded stream.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  id: BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: BeginAcceptUpgrade(Stream, AsyncCallback, Object)\n  nameWithType: StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream, AsyncCallback, Object)\n  fullName: StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Asynchronous version of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"></xref>.\n  remarks: For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.\n  syntax:\n    content: public abstract IAsyncResult BeginAcceptUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be upgraded.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the `AcceptUpgrade` call has completed.\n    - id: state\n      type: System.Object\n      description: State information for the `AcceptUpgrade` call.\n    return:\n      type: System.IAsyncResult\n      description: Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  id: CanUpgrade(System.String)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: CanUpgrade(String)\n  nameWithType: StreamUpgradeAcceptor.CanUpgrade(String)\n  fullName: StreamUpgradeAcceptor.CanUpgrade(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Determines whether the upgrade requested is supported by this upgrade acceptor.\n  remarks: The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor. This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator.\n  syntax:\n    content: public abstract bool CanUpgrade (string contentType);\n    parameters:\n    - id: contentType\n      type: System.String\n      description: The type of content to be checked.\n    return:\n      type: System.Boolean\n      description: '`true` if this kind of upgrade is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  id: EndAcceptUpgrade(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: EndAcceptUpgrade(IAsyncResult)\n  nameWithType: StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n  fullName: StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Asynchronous version of <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\"></xref>.\n  remarks: For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.\n  syntax:\n    content: public abstract System.IO.Stream EndAcceptUpgrade (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The IAsyncResult returned from `BeginAcceptUpgrade`.\n    return:\n      type: System.IO.Stream\n      description: Returns the upgraded stream.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: StreamUpgradeAcceptor()\n  nameWithType: StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n  fullName: StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: AcceptUpgrade(Stream)\n  nameWithType: StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n  fullName: StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: BeginAcceptUpgrade(Stream, AsyncCallback, Object)\n  nameWithType: StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream, AsyncCallback, Object)\n  fullName: StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: CanUpgrade(String)\n  nameWithType: StreamUpgradeAcceptor.CanUpgrade(String)\n  fullName: StreamUpgradeAcceptor.CanUpgrade(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: EndAcceptUpgrade(IAsyncResult)\n  nameWithType: StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n  fullName: StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: StreamUpgradeAcceptor\n  nameWithType: StreamUpgradeAcceptor.StreamUpgradeAcceptor\n  fullName: StreamUpgradeAcceptor.StreamUpgradeAcceptor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: AcceptUpgrade\n  nameWithType: StreamUpgradeAcceptor.AcceptUpgrade\n  fullName: StreamUpgradeAcceptor.AcceptUpgrade\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: BeginAcceptUpgrade\n  nameWithType: StreamUpgradeAcceptor.BeginAcceptUpgrade\n  fullName: StreamUpgradeAcceptor.BeginAcceptUpgrade\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: CanUpgrade\n  nameWithType: StreamUpgradeAcceptor.CanUpgrade\n  fullName: StreamUpgradeAcceptor.CanUpgrade\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: EndAcceptUpgrade\n  nameWithType: StreamUpgradeAcceptor.EndAcceptUpgrade\n  fullName: StreamUpgradeAcceptor.EndAcceptUpgrade\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/StreamUpgradeAcceptor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}